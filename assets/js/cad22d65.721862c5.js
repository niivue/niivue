"use strict";(self.webpackChunk_niivue_docs=self.webpackChunk_niivue_docs||[]).push([[584],{1184:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>r});var t=n(4041);const s={},o=t.createContext(s);function a(e){const i=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:i},e.children)}},2489:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"dicom","title":"DICOM","description":"Introduction","source":"@site/docs/dicom.mdx","sourceDirName":".","slug":"/dicom","permalink":"/docs/dicom","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":14,"frontMatter":{"title":"DICOM","sidebar_position":14},"sidebar":"tutorialSidebar","previous":{"title":"Advanced Colormaps","permalink":"/docs/colormaps2"}}');var s=n(1085),o=n(1184);const a={title:"DICOM",sidebar_position:14},r=void 0,d={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Using dcm2niix with NiiVue",id:"using-dcm2niix-with-niivue",level:2},{value:"Using daikon with NiiVue: DICOM Manifests",id:"using-daikon-with-niivue-dicom-manifests",level:2}];function l(e){const i={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(i.p,{children:"While neuroimaging researchers often prefer simpler formats like NIfTI, clinical imaging is dominated by DICOM. A key challenge with classical DICOM is that it stores each 2D slice in a separate file, resulting in hundreds or thousands of files per series\u2014though the newer enhanced DICOM standard addresses this. DICOM also supports various compression methods (transfer syntaxes), adding further complexity. NiiVue provides multiple mechanisms to handle DICOM data effectively."}),"\n",(0,s.jsx)(i.h2,{id:"using-dcm2niix-with-niivue",children:"Using dcm2niix with NiiVue"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"https://github.com/rordenlab/dcm2niix",children:"dcm2niix"})," is a widely used command-line tool for converting DICOM images to NIfTI. It can be used on the backend for preprocessing, or compiled to WebAssembly (WASM) and bundled as an ",(0,s.jsx)(i.a,{href:"https://www.npmjs.com/package/@niivue/dcm2niix",children:"npm package"})," for frontend use. This enables drag-and-drop DICOM support directly in the browser, as demonstrated in the ",(0,s.jsx)(i.a,{href:"https://github.com/niivue/niivue-dcm2niix",children:"niivue-dcm2niix"})," live demo."]}),"\n",(0,s.jsx)(i.h2,{id:"using-daikon-with-niivue-dicom-manifests",children:"Using daikon with NiiVue: DICOM Manifests"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Warning: daikon integration with NiiVue is not yet documented"})}),"\n",(0,s.jsx)(i.p,{children:"Unlike enhanced DICOM, classic DICOM stores a single 2D image per file. Therefore, 3D volumetric data is stored in multiple files. A DICOM manifest is a text file that contains a list of relative URLs of DICOM files. When a manifest file is specified in the image options using the isManifest property Niivue will use the URL as a relative URL to download DICOM files."}),"\n",(0,s.jsx)(i.p,{children:"If no file name is specified in the URL, Niivue will append niivue-manifest.txt. A custom file can be used, but it must have a .txt extension."}),"\n",(0,s.jsxs)(i.p,{children:["Check out this ",(0,s.jsx)(i.a,{href:"https://github.com/niivue/niivue-demo-images/blob/main/dicom/niivue-manifest.txt",children:"example"})," to see how DICOM files should be listed."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:'import * as niivue from "@niivue/niivue";\nvar volumeList1 = [\n  {\n    url: "https://raw.githubusercontent.com/niivue/niivue-demo-images/main/dicom/niivue-manifest.txt",\n    colormap: "gray",\n    opacity: 1,\n    visible: true,\n    isManifest: true,\n  },\n];\nvar nv1 = new Niivue();\nnv1.setRadiologicalConvention(false);\nawait nv1.attachTo("gl1");\nnv1.loadVolumes(volumeList1);\nnv1.setSliceType(nv1.sliceTypeMultiplanar);\n'})})]})}function u(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);