"use strict";(self.webpackChunk_niivue_docs=self.webpackChunk_niivue_docs||[]).push([[861],{2615:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>f,contentTitle:()=>x,default:()=>b,frontMatter:()=>w,metadata:()=>t,toc:()=>j});const t=JSON.parse('{"id":"drawing","title":"Drawing and Segmentation","description":"Niivue provides powerful tools for manual and semi-automatic segmentation of volumetric medical images. These tools allow users to create, edit, and save regions of interest (ROIs) as masks.","source":"@site/docs/drawing.mdx","sourceDirName":".","slug":"/drawing","permalink":"/docs/drawing","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Drawing and Segmentation","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Statistical Thresholding","permalink":"/docs/thresholding"}}');var a=i(1085),r=i(1184),s=i(6190),l=i(4041);const o="https://niivue.com/demos",c={url:`${o}/images/FLAIR.nii.gz`,colormap:"gray",opacity:1,visible:!0},d={url:`${o}/images/lesion.nii.gz`},u={backColor:[1,1,1,1],dragAndDropEnabled:!0,drawingEnabled:!1,multiplanarLayout:2},g=e=>{let{nvOpts:n={}}=e;const i=(0,l.useRef)(null),t=(0,l.useRef)(null),[r,o]=(0,l.useState)(-1),[g,p]=(0,l.useState)(80),[h,v]=(0,l.useState)(!0),[m,w]=(0,l.useState)(!1),[x,f]=(0,l.useState)(!1),[j,y]=(0,l.useState)(!0),[b,C]=(0,l.useState)(!0),[S,k]=(0,l.useState)(""),[D,T]=(0,l.useState)(!1),E={...u,...n},R=(0,l.useCallback)((e=>{k(e.string)}),[]),N=(0,l.useCallback)((e=>{o(parseInt(e.target.value))}),[]),A=(0,l.useCallback)((e=>{p(parseInt(e.target.value))}),[]),I=(0,l.useCallback)(((e,n,i)=>{t.current&&t.current.moveCrosshairInVox(e,n,i)}),[]),L=(0,l.useCallback)((()=>{t.current&&t.current.drawUndo()}),[]),M=(0,l.useCallback)((()=>{t.current&&t.current.saveImage({filename:"drawing.nii",isSaveDrawing:!0})}),[]);(0,l.useEffect)((()=>(t.current||(console.log("Creating Niivue instance..."),t.current=new s.FM({...E,onLocationChange:R})),()=>{console.log("Cleaning up Niivue instance..."),t.current=null})),[]);const P=(0,l.useCallback)((e=>{i.current=e,T(!!e)}),[]);return(0,l.useEffect)((()=>{if(!D||!i.current||!t.current)return;i.current&&!i.current.width&&(i.current.width=i.current.clientWidth,i.current.height=i.current.clientHeight);(async()=>{try{await new Promise((e=>setTimeout(e,100))),console.log("Attaching Niivue to canvas..."),await t.current.attachToCanvas(i.current),console.log("Niivue attached to canvas successfully"),console.log("Loading volume data..."),await t.current.loadVolumes([c]),console.log("Volume loaded in Niivue"),t.current.setSliceType(t.current.sliceTypeMultiplanar),t.current.opts.multiplanarShowRender=s.dq.ALWAYS,await t.current.loadDrawingFromUrl(d.url),console.log("Drawing loaded in Niivue"),t.current.setDrawingEnabled(r>=0),t.current.setDrawOpacity(.01*g),t.current.drawFillOverwrites=h,t.current.setRadiologicalConvention(m),t.current.setSliceMM(x),t.current.setInterpolation(!j),t.current.setHighResolutionCapable(b)}catch(e){console.error("Error initializing Niivue:",e)}})()}),[D]),(0,l.useEffect)((()=>{t.current&&(t.current.setDrawingEnabled(r>=0),r>=0&&t.current.setPenValue(7&r,r>7),12===r&&t.current.setPenValue(-0))}),[r]),(0,l.useEffect)((()=>{t.current&&t.current.setDrawOpacity(.01*g)}),[g]),(0,l.useEffect)((()=>{t.current&&(t.current.drawFillOverwrites=h)}),[h]),(0,l.useEffect)((()=>{t.current&&t.current.setRadiologicalConvention(m)}),[m]),(0,l.useEffect)((()=>{t.current&&t.current.setSliceMM(x)}),[x]),(0,l.useEffect)((()=>{t.current&&t.current.setInterpolation(!j)}),[j]),(0,l.useEffect)((()=>{t.current&&t.current.setHighResolutionCapable(b)}),[b]),(0,a.jsxs)("div",{style:{display:"flex",flexDirection:"column",alignItems:"center",gap:"15px",padding:"10px",border:"1px solid #ccc",borderRadius:"8px",marginBottom:"15px"},children:[(0,a.jsxs)("div",{style:{display:"flex",flexWrap:"wrap",justifyContent:"center",gap:"15px",alignItems:"center",width:"100%",padding:"10px",backgroundColor:"#f5f5f5",borderRadius:"4px"},children:[(0,a.jsxs)("div",{style:{display:"flex",alignItems:"center",gap:"5px"},children:[(0,a.jsx)("label",{htmlFor:"drawPen",children:"Draw color:"}),(0,a.jsxs)("select",{id:"drawPen",value:r,onChange:N,children:[(0,a.jsx)("option",{value:"-1",children:"Off"}),(0,a.jsx)("option",{value:"0",children:"Erase"}),(0,a.jsx)("option",{value:"1",children:"Red"}),(0,a.jsx)("option",{value:"2",children:"Green"}),(0,a.jsx)("option",{value:"3",children:"Blue"}),(0,a.jsx)("option",{value:"8",children:"Filled Erase"}),(0,a.jsx)("option",{value:"9",children:"Filled Red"}),(0,a.jsx)("option",{value:"10",children:"Filled Green"}),(0,a.jsx)("option",{value:"11",children:"Filled Blue"}),(0,a.jsx)("option",{value:"12",children:"Erase Selected Cluster"})]})]}),(0,a.jsxs)("div",{style:{display:"flex",alignItems:"center",gap:"5px"},children:[(0,a.jsx)("label",{htmlFor:"drawOpacity",children:"Opacity:"}),(0,a.jsx)("input",{type:"range",id:"drawOpacity",min:"0",max:"100",value:g,onChange:A}),(0,a.jsxs)("span",{children:[g,"%"]})]})]}),(0,a.jsxs)("div",{style:{display:"flex",flexWrap:"wrap",justifyContent:"center",gap:"15px",alignItems:"center",width:"100%"},children:[(0,a.jsxs)("label",{children:[(0,a.jsx)("input",{type:"checkbox",checked:h,onChange:e=>v(e.target.checked)}),"Fill overwrites"]}),(0,a.jsxs)("label",{children:[(0,a.jsx)("input",{type:"checkbox",checked:m,onChange:e=>w(e.target.checked)}),"Radiological"]}),(0,a.jsxs)("label",{children:[(0,a.jsx)("input",{type:"checkbox",checked:x,onChange:e=>f(e.target.checked)}),"World space"]}),(0,a.jsxs)("label",{children:[(0,a.jsx)("input",{type:"checkbox",checked:j,onChange:e=>y(e.target.checked)}),"Linear interpolation"]}),(0,a.jsxs)("label",{children:[(0,a.jsx)("input",{type:"checkbox",checked:b,onChange:e=>C(e.target.checked)}),"HighDPI"]})]}),(0,a.jsxs)("div",{style:{display:"flex",flexWrap:"wrap",justifyContent:"center",gap:"10px",width:"100%"},children:[(0,a.jsx)("button",{onClick:()=>I(-1,0,0),children:"Left"}),(0,a.jsx)("button",{onClick:()=>I(1,0,0),children:"Right"}),(0,a.jsx)("button",{onClick:()=>I(0,-1,0),children:"Posterior"}),(0,a.jsx)("button",{onClick:()=>I(0,1,0),children:"Anterior"}),(0,a.jsx)("button",{onClick:()=>I(0,0,-1),children:"Inferior"}),(0,a.jsx)("button",{onClick:()=>I(0,0,1),children:"Superior"})]}),(0,a.jsxs)("div",{style:{display:"flex",flexWrap:"wrap",justifyContent:"center",gap:"10px",width:"100%"},children:[(0,a.jsx)("button",{onClick:L,children:"Undo"}),(0,a.jsx)("button",{onClick:M,children:"Save Drawing"})]}),(0,a.jsx)("div",{style:{width:"100%",height:512},children:(0,a.jsx)("canvas",{ref:P,style:{width:"100%",height:"100%"}})}),(0,a.jsx)("div",{style:{fontFamily:"monospace"},children:S})]})},p={url:"https://niivue.com/demos/images/FLAIR.nii.gz",colormap:"gray",opacity:1,visible:!0},h={clickToSegmentIs2D:!0,clickToSegment:!0,clickToSegmentAutoIntensity:!0,dragAndDropEnabled:!0,logLevel:"info",backColor:[1,1,1,1]},v=e=>{let{nvOpts:n={}}=e;const i=(0,l.useRef)(null),t=(0,l.useRef)(null),[r,o]=(0,l.useState)("MultiPlanarRender"),[c,d]=(0,l.useState)(""),[u,g]=(0,l.useState)(!1),v={...h,...n},m=(0,l.useCallback)((e=>{o(e.target.value)}),[]),w=(0,l.useCallback)((e=>{d(e.string)}),[]);(0,l.useEffect)((()=>(t.current||(console.log("Creating Niivue instance..."),t.current=new s.FM({...v,onLocationChange:w})),()=>{console.log("Cleaning up Niivue instance..."),t.current=null})),[]);const x=(0,l.useCallback)((e=>{i.current=e,g(!!e)}),[]);return(0,l.useEffect)((()=>{if(!u||!i.current||!t.current)return;i.current&&!i.current.width&&(i.current.width=i.current.clientWidth,i.current.height=i.current.clientHeight);(async()=>{try{await new Promise((e=>setTimeout(e,100))),console.log("Attaching Niivue to canvas..."),await t.current.attachToCanvas(i.current),console.log("Niivue attached to canvas successfully"),console.log("Loading volume data..."),await t.current.loadVolumes([p]),console.log("Volume loaded in Niivue"),t.current.setDrawingEnabled(!0),t.current.opts.multiplanarShowRender=s.dq.ALWAYS,t.current.setSliceType(t.current.sliceTypeMultiplanar),t.current.drawOpacity=.5}catch(e){console.error("Error initializing Niivue:",e)}})()}),[u]),(0,l.useEffect)((()=>{const e=e=>{t.current&&("ArrowUp"===e.key?t.current.moveCrosshairInVox(0,0,1):"ArrowDown"===e.key&&t.current.moveCrosshairInVox(0,0,-1))};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}}),[]),(0,l.useEffect)((()=>{if(!t.current)return;const e=t.current;switch(r){case"Axial":e.setSliceType(e.sliceTypeAxial);break;case"Sagittal":e.setSliceType(e.sliceTypeSagittal);break;case"Coronal":e.setSliceType(e.sliceTypeCoronal);break;case"Render":e.setSliceType(e.sliceTypeRender);break;case"MultiPlanar":e.opts.multiplanarShowRender=s.dq.NEVER,e.setSliceType(e.sliceTypeMultiplanar);break;case"MultiPlanarRender":e.opts.multiplanarShowRender=s.dq.ALWAYS,e.setSliceType(e.sliceTypeMultiplanar)}}),[r]),(0,a.jsxs)("div",{style:{display:"flex",flexDirection:"column",alignItems:"center",gap:"15px",padding:"10px",border:"1px solid #ccc",borderRadius:"8px",marginBottom:"15px"},children:[(0,a.jsxs)("div",{style:{display:"flex",flexWrap:"wrap",justifyContent:"center",gap:"15px",alignItems:"center",width:"100%"},children:[(0,a.jsxs)("div",{style:{display:"flex",alignItems:"center",gap:"5px"},children:[(0,a.jsx)("label",{htmlFor:"viewType",children:"View:"}),(0,a.jsxs)("select",{id:"viewType",value:r,onChange:m,children:[(0,a.jsx)("option",{value:"Axial",children:"Axial"}),(0,a.jsx)("option",{value:"Sagittal",children:"Sagittal"}),(0,a.jsx)("option",{value:"Coronal",children:"Coronal"}),(0,a.jsx)("option",{value:"Render",children:"Render"}),(0,a.jsx)("option",{value:"MultiPlanar",children:"A+C+S"}),(0,a.jsx)("option",{value:"MultiPlanarRender",children:"A+C+S+R"})]})]}),(0,a.jsx)("div",{children:(0,a.jsx)("span",{style:{fontSize:"0.9rem"},children:"Use Up/Down arrow keys to change slice. Click to segment similar regions."})})]}),(0,a.jsx)("div",{style:{width:"100%",height:512},children:(0,a.jsx)("canvas",{ref:x,style:{width:"100%",height:"100%"}})}),(0,a.jsx)("div",{style:{fontFamily:"monospace"},children:c})]})};var m=i(7221);const w={title:"Drawing and Segmentation",sidebar_position:6},x=void 0,f={},j=[{value:"Basic Drawing Concepts",id:"basic-drawing-concepts",level:2},{value:"Setting Up Drawing",id:"setting-up-drawing",level:2},{value:"Drawing Controls",id:"drawing-controls",level:2},{value:"Basic Drawing Operations",id:"basic-drawing-operations",level:3},{value:"Customizing Drawing Colors",id:"customizing-drawing-colors",level:3},{value:"Drawing Options",id:"drawing-options",level:3},{value:"Advanced: Semi-Automatic Segmentation",id:"advanced-semi-automatic-segmentation",level:2},{value:"Grow Cut Algorithm",id:"grow-cut-algorithm",level:3},{value:"Magic Wand Segmentation",id:"magic-wand-segmentation",level:3},{value:"Working with Segmentation Results",id:"working-with-segmentation-results",level:2},{value:"Descriptive Statistics",id:"descriptive-statistics",level:3},{value:"Saving and Loading",id:"saving-and-loading",level:3},{value:"Erasing Clusters",id:"erasing-clusters",level:3},{value:"Practical Example: Lesion Segmentation",id:"practical-example-lesion-segmentation",level:2}];function y(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Niivue provides powerful tools for manual and semi-automatic segmentation of volumetric medical images. These tools allow users to create, edit, and save regions of interest (ROIs) as masks."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Try interacting with the drawing controls below to see their effect in real-time!"})}),"\n",(0,a.jsx)(m.A,{children:(0,a.jsx)(g,{})}),"\n",(0,a.jsx)(n.h2,{id:"basic-drawing-concepts",children:"Basic Drawing Concepts"}),"\n",(0,a.jsx)(n.p,{children:"Niivue allows you to create and modify masks by using the pen tool. The drawing layer is a separate volume that overlays the base image."}),"\n",(0,a.jsx)(n.p,{children:"Key drawing concepts include:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Pen Values"}),": Different numerical values representing different regions/colors"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Drawing Modes"}),": Regular pen (edge only) vs. filled pen (flood fill)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Drawing Opacity"}),": Control the transparency of the drawing layer"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Navigation"}),": Move through slices while drawing to segment in 3D"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"setting-up-drawing",children:"Setting Up Drawing"}),"\n",(0,a.jsx)(n.p,{children:"To enable drawing on a volume, first load your base image and then initialize the drawing layer:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Create and initialize Niivue instance\nconst nv = new Niivue({\n  backColor: [1, 1, 1, 1],\n});\nawait nv.attachToCanvas(document.getElementById('canvas'));\n\n// Load a background volume\nawait nv.loadVolumes([{ \n  url: '/path/to/image.nii.gz' \n}]);\n\n// Initialize an empty drawing layer\nnv.setDrawingEnabled(true);\n\n// Alternatively, load an existing segmentation\nawait nv.loadDrawingFromUrl('/path/to/segmentation.nii.gz');\n"})}),"\n",(0,a.jsx)(n.h2,{id:"drawing-controls",children:"Drawing Controls"}),"\n",(0,a.jsx)(n.h3,{id:"basic-drawing-operations",children:"Basic Drawing Operations"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Enable drawing mode\nnv.setDrawingEnabled(true);\n\n// Set the pen value (0-255)\n// 0 is typically used for erasing\nnv.setPenValue(1);\n\n// Set the pen to fill mode (flood fill)\nnv.setPenValue(1, true);\n\n// Set drawing opacity (0.0-1.0)\nnv.setDrawOpacity(0.8);\n\n// Undo last drawing operation\nnv.drawUndo();\n\n// Save the drawing layer\nnv.saveImage({ filename: 'segmentation.nii', isSaveDrawing: true });\n"})}),"\n",(0,a.jsx)(n.h3,{id:"customizing-drawing-colors",children:"Customizing Drawing Colors"}),"\n",(0,a.jsx)(n.p,{children:"You can customize the colors used for drawing by setting a custom colormap for the drawing layer:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'// Define a custom colormap for drawing\nconst drawingColormap = {\n  R: [0, 255, 0, 0],     // Red values for indices 0-3\n  G: [0, 0, 255, 0],     // Green values for indices 0-3\n  B: [0, 0, 0, 255],     // Blue values for indices 0-3\n  labels: ["Background", "Red", "Green", "Blue"] // Names for each value\n};\n\n// Apply the custom colormap\nnv.setDrawColormap(drawingColormap);\n'})}),"\n",(0,a.jsx)(n.h3,{id:"drawing-options",children:"Drawing Options"}),"\n",(0,a.jsx)(n.p,{children:"Niivue provides several options to control drawing behavior:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Control whether fill operations overwrite existing values\nnv.drawFillOverwrites = true;\n\n// Set radiological convention (left is right)\nnv.setRadiologicalConvention(false);\n\n// Use world space coordinates (mm) instead of voxel coordinates\nnv.setSliceMM(false);\n\n// Toggle linear interpolation (affects visual quality)\nnv.setInterpolation(true);\n\n// Enable high DPI support for retina displays\nnv.setHighResolutionCapable(true);\n"})}),"\n",(0,a.jsx)(n.h2,{id:"advanced-semi-automatic-segmentation",children:"Advanced: Semi-Automatic Segmentation"}),"\n",(0,a.jsx)(n.p,{children:"Niivue includes tools for semi-automatic segmentation to speed up the segmentation process."}),"\n",(0,a.jsx)(n.h3,{id:"grow-cut-algorithm",children:"Grow Cut Algorithm"}),"\n",(0,a.jsx)(n.p,{children:"The Grow Cut algorithm is an interactive segmentation method that expands from seed regions. It is powerful, but does require some initial manual input to define seed regions. The Grow Cut algorithm is borrowed from Slicer3D, and runs on the GPU."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// First, draw seed regions using different pen values\n// Then run the grow cut algorithm\nnv.drawGrowCut();\n"})}),"\n",(0,a.jsx)(n.h3,{id:"magic-wand-segmentation",children:"Magic Wand Segmentation"}),"\n",(0,a.jsx)(n.p,{children:"The Magic Wand tool (click-to-segment) allows automatic segmentation of regions with similar intensity:"}),"\n",(0,a.jsx)(m.A,{children:(0,a.jsx)(v,{})}),"\n",(0,a.jsx)(n.p,{children:"To enable Magic Wand segmentation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Create a Niivue instance with click-to-segment enabled\nconst nv = new Niivue({\n  clickToSegment: true,          // Enable click-to-segment\n  clickToSegmentIs2D: true,      // Confine to 2D slice (false for 3D. 3D may be slow depending on your image size)\n  clickToSegmentAutoIntensity: true, // Auto-determine intensity threshold\n});\n\n// Enable drawing mode\nnv.setDrawingEnabled(true);\n\n// Set the pen value to use for the segmentation\nnv.setPenValue(1);\n"})}),"\n",(0,a.jsx)(n.p,{children:"When enabled, clicking on a voxel will automatically segment connected voxels with similar intensity values. Use the scroll wheel to adjust the intensity threshold for segmentation."}),"\n",(0,a.jsx)(n.h2,{id:"working-with-segmentation-results",children:"Working with Segmentation Results"}),"\n",(0,a.jsx)(n.p,{children:"Once you've created a segmentation, there are several ways to work with it:"}),"\n",(0,a.jsx)(n.h3,{id:"descriptive-statistics",children:"Descriptive Statistics"}),"\n",(0,a.jsx)(n.p,{children:"You can get statistics about your drawn regions:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Get statistics for all drawing regions\nconst stats = nv.getDescriptives(0, [], true);\nconsole.log(stats); // Volume, mean intensity, etc. for each region\n"})}),"\n",(0,a.jsx)(n.h3,{id:"saving-and-loading",children:"Saving and Loading"}),"\n",(0,a.jsx)(n.p,{children:"Save your segmentation for later use:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Save the drawing as a NIfTI file\nnv.saveImage({ \n  filename: 'segmentation.nii', \n  isSaveDrawing: true \n});\n\n// Later, load the segmentation\nawait nv.loadDrawingFromUrl('segmentation.nii.gz');\n"})}),"\n",(0,a.jsx)(n.h3,{id:"erasing-clusters",children:"Erasing Clusters"}),"\n",(0,a.jsx)(n.p,{children:"You can erase entire connected clusters of voxels:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Set the pen to erase selected clusters\nnv.setPenValue(-0);\n// Now when you click on a cluster, it will erase the whole thing\n"})}),"\n",(0,a.jsx)(n.h2,{id:"practical-example-lesion-segmentation",children:"Practical Example: Lesion Segmentation"}),"\n",(0,a.jsx)(n.p,{children:"Here's a complete example showing how to set up Niivue for lesion segmentation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'// Create Niivue instance\nconst nv = new Niivue({\n  backColor: [1, 1, 1, 1],\n  dragAndDropEnabled: true,\n  clipToVolumeBox: true,\n  clipPlaneEnabled: false,\n});\nawait nv.attachToCanvas(document.getElementById(\'canvas\'));\n\n// Load FLAIR image for lesion visualization\nawait nv.loadVolumes([{ \n  url: \'/path/to/FLAIR.nii.gz\',\n  colormap: \'gray\'\n}]);\n\n// Set up multiplanar view\nnv.setSliceType(nv.sliceTypeMultiplanar);\nnv.opts.multiplanarShowRender = Niivue.SHOW_RENDER.ALWAYS;\n\n// Enable drawing with custom colormap\nnv.setDrawingEnabled(true);\nnv.setDrawOpacity(0.5);\n\nconst lesionColormap = {\n  R: [0, 255, 0, 0],\n  G: [0, 0, 255, 0],\n  B: [0, 0, 0, 255],\n  labels: ["Background", "Lesion Type 1", "Lesion Type 2", "Lesion Type 3"]\n};\nnv.setDrawColormap(lesionColormap);\n\n// Enable click-to-segment for faster segmentation\nnv.opts.clickToSegment = true;\nnv.opts.clickToSegmentIs2D = true;\n\n// Set pen to first lesion type\nnv.setPenValue(1);\n'})}),"\n",(0,a.jsx)(n.p,{children:"Drawing and segmentation tools are essential for many neuroimaging and medical imaging workflows. Niivue provides a flexible and comprehensive set of tools that can be integrated into web applications. These tools enable precise definition of regions of interest for further analysis, visualization, or quantification."})]})}function b(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(y,{...e})}):y(e)}}}]);