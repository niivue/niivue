"use strict";(self.webpackChunk_niivue_docs=self.webpackChunk_niivue_docs||[]).push([[308],{2964:(n,e,i)=>{i.d(e,{B:()=>r});var a=i(4041),s=i(6190),t=i(1085);const r=n=>{let{images:e,nvOpts:i}=n;window.location.origin;const r=a.useRef(null),o=a.useRef(null);return a.useEffect((()=>{o.current=new s.FM({logLevel:"debug",...i}),o.current.attachToCanvas(r.current),o.current.loadVolumes(e)}),[]),(0,t.jsx)("div",{style:{width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center"},children:(0,t.jsx)("canvas",{ref:r,width:640,height:480})})}},6484:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>l,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"index","title":"Getting started","description":"NiiVue is an all-in-one package for parsing, loading, and viewing medical imaging data in the browser.","source":"@site/docs/index.mdx","sourceDirName":".","slug":"/","permalink":"/docs/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Loading images","permalink":"/docs/Loading images"}}');var s=i(1085),t=i(1184),r=i(7221),o=i(2964);const l={sidebar_position:1},d="Getting started",c={},u=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic - No framework",id:"basic---no-framework",level:3},{value:"React",id:"react",level:3},{value:"Vue",id:"vue",level:3},{value:"Angular",id:"angular",level:3},{value:"Embedded canvas in your own docs",id:"embedded-canvas-in-your-own-docs",level:2}];function v(n){const e={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"getting-started",children:"Getting started"})}),"\n",(0,s.jsx)(e.p,{children:"NiiVue is an all-in-one package for parsing, loading, and viewing medical imaging data in the browser."}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Note"}),": NiiVue is not intended to be used in Node.js environments. It is designed to be used in the browser to ",(0,s.jsx)(e.em,{children:"view"})," data and a WebGL2 rendering context is required."]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(e.p,{children:"To install NiiVue, you can use your favorite package manager (npm, pnpm, yarn, etc.):"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"npm install @niivue/niivue\n"})}),"\n",(0,s.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(e.h3,{id:"basic---no-framework",children:"Basic - No framework"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <title>NiiVue</title>\n  </head>\n  <body>\n    <canvas id="gl" width="640" height="640"></canvas>\n  </body>\n  <script type="module" async>\n    import { Niivue } from "https://unpkg.com/@niivue/niivue@0.57.0/dist/index.js"\n    var volumeList = [\n      { url: "https://niivue.github.io/niivue-demo-images/mni152.nii.gz" },\n    ];\n    var nv = new Niivue({ isResizeCanvas: false });\n    await nv.attachTo("gl");\n    await nv.loadVolumes(volumeList);\n  <\/script>\n</html>\n'})}),"\n",(0,s.jsx)(e.h3,{id:"react",children:"React"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-jsx",children:'import { useRef, useEffect } from "react";\nimport { Niivue } from "@niivue/niivue";\n\nconst NiiVue = ({ imageUrl }) => {\n  const canvas = useRef();\n  const nvRef = useRef();\n  useEffect(() => {\n    const volumeList = [\n      {\n        url: imageUrl,\n      },\n    ];\n    async function setupAndLoad() {\n      const nv = new Niivue();\n      nv.attachToCanvas(canvas.current);\n      await nv.loadVolumes(volumeList);\n      const nvRef.current = nv\n    }\n    setupAndLoad()\n  }, [imageUrl]);\n\n  return <canvas ref={canvas} height={480} width={640} />;\n};\n\n// use as: <NiiVue imageUrl={someUrl}> </NiiVue>\n'})}),"\n",(0,s.jsx)(e.h3,{id:"vue",children:"Vue"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-jsx",children:'<script>\nimport {Niivue} from \'@niivue/niivue\'\nconst nv = new Niivue()\n\n\nexport default {\n  name: \'App\',\n  props: {\n\n  },\n  data(){\n    return {\n      volumeList: [\n        {\n          url: "./mni152.nii.gz",\n        }\n      ]\n\n    }\n  },\n\n  mounted() {\n    nv.attachTo(\'gl\')\n    await nv.loadVolumes(this.volumeList)\n  }\n}\n\n<\/script>\n\n<template>\n<canvas id="gl" height="480" width="640">\n</canvas>\n</template>\n'})}),"\n",(0,s.jsx)(e.h3,{id:"angular",children:"Angular"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'import { Component, OnInit, ViewChild } from "@angular/core";\n\nimport { Niivue } from "@niivue/niivue";\n\n@Component({\n  selector: "app-niivue-view",\n  templateUrl: "./niivue-view.component.html",\n  styleUrls: ["./niivue-view.component.sass"],\n})\nexport class NiivueViewComponent implements OnInit {\n  @ViewChild("gl") canvas: HTMLCanvasElement | undefined;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    const url = "/assets/mni152.nii.gz";\n    const volumeList = [\n      {\n        url,\n      },\n    ];\n    const niivue = new Niivue();\n    niivue.attachTo("gl");\n    await niivue.loadVolumes(volumeList);\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"embedded-canvas-in-your-own-docs",children:"Embedded canvas in your own docs"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Go ahead, click around in the viewer below"}),". That's NiiVue in action! In this example, we are loading a single Nifti file. This is rendered in our Docusaurus MDX page using a custom React component."]}),"\n",(0,s.jsx)(r.A,{children:(0,s.jsx)(o.B,{images:[{url:"https://niivue.github.io/niivue-demo-images/mni152.nii.gz"}]})})]})}function m(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(v,{...n})}):v(n)}}}]);