"use strict";(self.webpackChunk_niivue_docs=self.webpackChunk_niivue_docs||[]).push([[679],{9675:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>x,contentTitle:()=>h,default:()=>v,frontMatter:()=>p,metadata:()=>i,toc:()=>y});const i=JSON.parse('{"id":"layouts","title":"Layouts and Slice Types","description":"NiiVue supports many scene and slice configurations. Common layouts are provided out of the box, but custom layouts can be created too.","source":"@site/docs/layouts.mdx","sourceDirName":".","slug":"/layouts","permalink":"/docs/layouts","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Layouts and Slice Types","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Using Colormaps","permalink":"/docs/colormaps"},"next":{"title":"Synchronizing Multiple Views","permalink":"/docs/syncing"}}');var l=t(1085),s=t(1184),a=t(6190),o=t(4041);const r=[{url:"https://niivue.github.io/niivue-demo-images/mni152.nii.gz",colormap:"gray",opacity:1,visible:!0}],c={isColorbar:!1,logLevel:"info",show3Dcrosshair:!0,backColor:[0,0,0,1],multiplanarShowRender:a.dq.AUTO},u=e=>{let{images:n=r,nvOpts:t={}}=e;const i=(0,o.useRef)(null),s=(0,o.useRef)(null),[u,d]=(0,o.useState)(a.gS.MULTIPLANAR),[p,h]=(0,o.useState)(a.v6.AUTO),[x,y]=(0,o.useState)(a.dq.AUTO),[g,v]=(0,o.useState)(!1),[m,S]=(0,o.useState)(!1),[j,T]=(0,o.useState)(0),[L,A]=(0,o.useState)(!1),[w,C]=(0,o.useState)(""),[f,R]=(0,o.useState)(!1),I={...c,...t};(0,o.useEffect)((()=>((async()=>{if(!s.current&&i.current){console.log("Initializing Niivue...");const t=new a.FM(I);s.current=t;try{await t.attachToCanvas(i.current),await t.loadVolumes(n),t.setSliceType(u)}catch(e){console.error("Failed to initialize Niivue:",e)}}})(),()=>{console.log("Cleaning up Niivue instance..."),s.current=null})),[]);const N=(0,o.useCallback)((e=>{const n=parseInt(e.target.value);d(n),s.current&&(L&&(s.current.clearCustomLayout(),A(!1)),n===a.gS.MULTIPLANAR&&(s.current.opts.multiplanarShowRender=x),s.current.setSliceType(n))}),[x,L]),b=(0,o.useCallback)((e=>{const n=parseInt(e.target.value);h(n),s.current&&u===a.gS.MULTIPLANAR&&!L&&s.current.setMultiplanarLayout(n)}),[u,L]),E=(0,o.useCallback)((e=>{const n=parseInt(e.target.value);y(n),s.current&&(s.current.opts.multiplanarShowRender=n,s.current.drawScene())}),[]),O=(0,o.useCallback)((e=>{const n=e.target.checked;v(n),s.current&&(s.current.opts.multiplanarEqualSize=n,s.current.drawScene())}),[]),M=(0,o.useCallback)((e=>{const n=e.target.checked;S(n),s.current&&s.current.setCornerOrientationText(n)}),[]),k=(0,o.useCallback)((e=>{const n=parseFloat(e.target.value);T(n),s.current&&u===a.gS.MULTIPLANAR&&s.current.setHeroImage(n)}),[u]),P=(0,o.useCallback)((()=>{if(s.current)if(L)s.current.clearCustomLayout(),s.current.setSliceType(a.gS.MULTIPLANAR),A(!1),R(!1);else{const e=[{sliceType:a.gS.SAGITTAL,position:[0,0,.5,1]},{sliceType:a.gS.CORONAL,position:[.5,0,.5,.5]},{sliceType:a.gS.AXIAL,position:[.5,.5,.5,.5]}];s.current.setCustomLayout(e),A(!0),C(JSON.stringify(e,null,2))}}),[L]),U=(0,o.useCallback)((()=>{if(s.current&&w.trim())try{const n=JSON.parse(w);if(!Array.isArray(n))return void alert("Layout must be an array of layout objects");for(const e of n)if(void 0===e.sliceType||null===e.sliceType||!Array.isArray(e.position)||4!==e.position.length)return void alert("Each layout item must have sliceType and position [left, top, width, height]");try{s.current.setCustomLayout(n),A(!0)}catch(e){return void alert("Layout validation failed: "+e.message)}}catch(n){alert("Invalid JSON format: "+n.message)}}),[w]),_=(0,o.useCallback)((()=>{if(!f){const e=[{sliceType:a.gS.SAGITTAL,position:[0,0,.5,1]},{sliceType:a.gS.CORONAL,position:[.5,0,.5,.5]},{sliceType:a.gS.AXIAL,position:[.5,.5,.5,.5]}];C(JSON.stringify(e,null,2))}R(!f)}),[f]);return(0,l.jsxs)("div",{style:{display:"flex",flexDirection:"column",alignItems:"center",gap:"10px",padding:"10px",border:"1px solid #ccc",borderRadius:"8px",marginBottom:"15px"},children:[(0,l.jsx)("div",{style:{width:640,height:480},children:(0,l.jsx)("canvas",{ref:i,width:640,height:480,style:{border:"1px solid lightgray",display:"block"}})}),(0,l.jsxs)("div",{style:{display:"flex",flexWrap:"wrap",justifyContent:"center",gap:"15px",alignItems:"center"},children:[(0,l.jsxs)("div",{children:[(0,l.jsx)("label",{htmlFor:"sliceTypeSelect",style:{marginRight:"5px"},children:"Slice Type:"}),(0,l.jsxs)("select",{id:"sliceTypeSelect",value:u,onChange:N,children:[(0,l.jsx)("option",{value:a.gS.AXIAL,children:"Axial"}),(0,l.jsx)("option",{value:a.gS.CORONAL,children:"Coronal"}),(0,l.jsx)("option",{value:a.gS.SAGITTAL,children:"Sagittal"}),(0,l.jsx)("option",{value:a.gS.MULTIPLANAR,children:"Multiplanar"}),(0,l.jsx)("option",{value:a.gS.RENDER,children:"Volume Render"})]})]}),u===a.gS.MULTIPLANAR&&!L&&(0,l.jsxs)("div",{children:[(0,l.jsx)("label",{htmlFor:"layoutSelect",style:{marginRight:"5px"},children:"Layout:"}),(0,l.jsxs)("select",{id:"layoutSelect",value:p,onChange:b,children:[(0,l.jsx)("option",{value:a.v6.AUTO,children:"Auto"}),(0,l.jsx)("option",{value:a.v6.COLUMN,children:"Column"}),(0,l.jsx)("option",{value:a.v6.GRID,children:"Grid"}),(0,l.jsx)("option",{value:a.v6.ROW,children:"Row"})]})]}),u===a.gS.MULTIPLANAR&&!L&&(0,l.jsxs)("div",{children:[(0,l.jsx)("label",{htmlFor:"showRenderSelect",style:{marginRight:"5px"},children:"Show Render:"}),(0,l.jsxs)("select",{id:"showRenderSelect",value:x,onChange:E,children:[(0,l.jsx)("option",{value:a.dq.NEVER,children:"Never"}),(0,l.jsx)("option",{value:a.dq.ALWAYS,children:"Always"}),(0,l.jsx)("option",{value:a.dq.AUTO,children:"Auto"})]})]}),u===a.gS.MULTIPLANAR&&!L&&(0,l.jsxs)("div",{children:[(0,l.jsx)("input",{type:"checkbox",id:"equalSizeCheck",checked:g,onChange:O}),(0,l.jsx)("label",{htmlFor:"equalSizeCheck",style:{marginLeft:"5px"},children:"Equal Size"})]}),!L&&(0,l.jsxs)("div",{children:[(0,l.jsx)("input",{type:"checkbox",id:"cornerTextCheck",checked:m,onChange:M}),(0,l.jsx)("label",{htmlFor:"cornerTextCheck",style:{marginLeft:"5px"},children:"Corner Text"})]}),u===a.gS.MULTIPLANAR&&!L&&(0,l.jsxs)("div",{style:{display:"flex",alignItems:"center",gap:"5px"},children:[(0,l.jsx)("label",{htmlFor:"heroSlider",children:"Hero Image:"}),(0,l.jsx)("input",{type:"range",id:"heroSlider",min:"0",max:"1",step:"0.1",value:j,onChange:k}),(0,l.jsx)("span",{children:j.toFixed(1)})]}),u===a.gS.MULTIPLANAR&&(0,l.jsxs)("div",{style:{display:"flex",gap:"10px",alignItems:"center"},children:[(0,l.jsx)("button",{onClick:P,children:L?"Use Standard Layout":"Use Custom Layout"}),(0,l.jsx)("button",{onClick:_,children:f?"Hide Layout Editor":"Edit Custom Layout"})]})]}),f&&u===a.gS.MULTIPLANAR&&(0,l.jsxs)("div",{style:{width:"100%",maxWidth:"600px",margin:"10px 0",padding:"10px",border:"1px solid #ddd",borderRadius:"4px",backgroundColor:"#f9f9f9"},children:[(0,l.jsxs)("div",{style:{marginBottom:"10px"},children:[(0,l.jsx)("label",{style:{display:"block",marginBottom:"5px",fontWeight:"bold",fontSize:"14px"},children:"Custom Layout JSON:"}),(0,l.jsxs)("div",{style:{fontSize:"12px",color:"#666",marginBottom:"5px"},children:["Define an array of layout objects. Each object needs:",(0,l.jsx)("br",{}),"\u2022 ",(0,l.jsx)("code",{children:"sliceType"}),": ",a.gS.AXIAL," (Axial), ",a.gS.CORONAL," (Coronal), ",a.gS.SAGITTAL," (Sagittal), or ",a.gS.RENDER," (Volume Render)",(0,l.jsx)("br",{}),"\u2022 ",(0,l.jsx)("code",{children:"position"}),": [left, top, width, height] as fractions (0.0 to 1.0)"]})]}),(0,l.jsx)("textarea",{value:w,onChange:e=>C(e.target.value),style:{width:"100%",height:"150px",fontFamily:"monospace",fontSize:"12px",padding:"8px",border:"1px solid #ccc",borderRadius:"4px",resize:"vertical"},placeholder:"Enter custom layout JSON..."}),(0,l.jsxs)("div",{style:{marginTop:"10px",display:"flex",justifyContent:"space-between",alignItems:"center"},children:[(0,l.jsx)("button",{onClick:U,style:{padding:"6px 12px",backgroundColor:"#007bff",color:"white",border:"none",borderRadius:"4px",cursor:"pointer"},children:"Apply Layout"}),(0,l.jsx)("button",{onClick:()=>{const e=[[{sliceType:a.gS.RENDER,position:[0,0,.7,1]},{sliceType:a.gS.AXIAL,position:[.7,0,.3,1]}],[{sliceType:a.gS.SAGITTAL,position:[0,0,.5,1]},{sliceType:a.gS.AXIAL,position:[.5,0,.5,1]}],[{sliceType:a.gS.AXIAL,position:[0,0,.5,.5]},{sliceType:a.gS.CORONAL,position:[.5,0,.5,.5]},{sliceType:a.gS.SAGITTAL,position:[0,.5,.5,.5]},{sliceType:a.gS.RENDER,position:[.5,.5,.5,.5]}]],n=e[Math.floor(Math.random()*e.length)];C(JSON.stringify(n,null,2))},style:{padding:"6px 12px",backgroundColor:"#6c757d",color:"white",border:"none",borderRadius:"4px",cursor:"pointer"},children:"Load Example"})]})]}),(0,l.jsxs)("div",{style:{fontSize:"14px",color:"#666",textAlign:"center"},children:[(0,l.jsx)("strong",{children:"Current:"})," ",(e=>{switch(e){case a.gS.AXIAL:return"Axial";case a.gS.CORONAL:return"Coronal";case a.gS.SAGITTAL:return"Sagittal";case a.gS.MULTIPLANAR:return"Multiplanar";case a.gS.RENDER:return"Volume Render";default:return"Unknown"}})(u),u===a.gS.MULTIPLANAR&&(0,l.jsx)(l.Fragment,{children:L?" (Custom Layout)":` (${(e=>{switch(e){case a.v6.AUTO:return"Auto";case a.v6.COLUMN:return"Column";case a.v6.GRID:return"Grid";case a.v6.ROW:return"Row";default:return"Unknown"}})(p)} Layout)`})]})]})};var d=t(7221);const p={title:"Layouts and Slice Types",sidebar_position:4},h="Layouts",x={},y=[{value:"Slice types",id:"slice-types",level:2},{value:"Multiplanar",id:"multiplanar",level:3},{value:"Axial",id:"axial",level:3},{value:"Coronal",id:"coronal",level:3},{value:"Sagittal",id:"sagittal",level:3},{value:"Volume render",id:"volume-render",level:3},{value:"Scene layouts",id:"scene-layouts",level:2},{value:"Auto",id:"auto",level:3},{value:"Grid",id:"grid",level:3},{value:"Row",id:"row",level:3},{value:"Column",id:"column",level:3},{value:"Additional Layout Options",id:"additional-layout-options",level:2},{value:"Show Volume Render",id:"show-volume-render",level:3},{value:"Equal Size Tiles",id:"equal-size-tiles",level:3},{value:"Hero Image",id:"hero-image",level:3},{value:"Corner Orientation Text",id:"corner-orientation-text",level:3},{value:"Custom layouts",id:"custom-layouts",level:2},{value:"Custom Layout Examples",id:"custom-layout-examples",level:3}];function g(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"layouts",children:"Layouts"})}),"\n",(0,l.jsx)(n.p,{children:"NiiVue supports many scene and slice configurations. Common layouts are provided out of the box, but custom layouts can be created too."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Try the interactive demo below!"})," Use the controls to switch between different slice types, multiplanar layouts, and experiment with custom arrangements."]}),"\n",(0,l.jsx)(d.A,{children:(0,l.jsx)(u,{})}),"\n",(0,l.jsx)(n.h2,{id:"slice-types",children:"Slice types"}),"\n",(0,l.jsxs)(n.p,{children:["NiiVue refers to ",(0,l.jsx)(n.code,{children:"sliceType"})," as the value that determines which slice orientation(s) are displayed. You can set the slice type using the ",(0,l.jsx)(n.code,{children:"setSliceType()"})," method."]}),"\n",(0,l.jsx)(n.h3,{id:"multiplanar",children:"Multiplanar"}),"\n",(0,l.jsx)(n.p,{children:"The multiplanar view displays multiple slice orientations simultaneously, typically showing axial, coronal, and sagittal views together. This is the most comprehensive view for examining 3D medical images."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Set to multiplanar view\nnv.setSliceType(nv.sliceTypeMultiplanar);\n// or using the enum\nnv.setSliceType(SLICE_TYPE.MULTIPLANAR);\n"})}),"\n",(0,l.jsx)(n.h3,{id:"axial",children:"Axial"}),"\n",(0,l.jsx)(n.p,{children:'The axial view shows horizontal cross-sections through the volume, as if looking down from above. This is the traditional "slice-by-slice" view familiar from CT and MRI scans.'}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Set to axial view\nnv.setSliceType(nv.sliceTypeAxial);\n// or using the enum\nnv.setSliceType(SLICE_TYPE.AXIAL);\n"})}),"\n",(0,l.jsx)(n.h3,{id:"coronal",children:"Coronal"}),"\n",(0,l.jsx)(n.p,{children:"The coronal view shows vertical cross-sections from front to back through the volume. This provides a frontal view of the anatomy."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Set to coronal view\nnv.setSliceType(nv.sliceTypeCoronal);\n// or using the enum\nnv.setSliceType(SLICE_TYPE.CORONAL);\n"})}),"\n",(0,l.jsx)(n.h3,{id:"sagittal",children:"Sagittal"}),"\n",(0,l.jsx)(n.p,{children:"The sagittal view shows vertical cross-sections from side to side through the volume. This provides a profile view of the anatomy."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Set to sagittal view\nnv.setSliceType(nv.sliceTypeSagittal);\n// or using the enum\nnv.setSliceType(SLICE_TYPE.SAGITTAL);\n"})}),"\n",(0,l.jsx)(n.h3,{id:"volume-render",children:"Volume render"}),"\n",(0,l.jsx)(n.p,{children:"The volume render view displays a 3D rendering of the entire volume."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Set to volume render view\nnv.setSliceType(nv.sliceTypeRender);\n// or using the enum\nnv.setSliceType(SLICE_TYPE.RENDER);\n"})}),"\n",(0,l.jsx)(n.h2,{id:"scene-layouts",children:"Scene layouts"}),"\n",(0,l.jsxs)(n.p,{children:["NiiVue uses ",(0,l.jsx)(n.code,{children:"layout"})," to refer to the arrangement of slices in the canvas when more than one is displayed in multiplanar mode. You can control this using the ",(0,l.jsx)(n.code,{children:"setMultiplanarLayout()"})," method."]}),"\n",(0,l.jsx)(n.h3,{id:"auto",children:"Auto"}),"\n",(0,l.jsx)(n.p,{children:"The auto layout intelligently arranges the slice views based on the canvas dimensions and available space."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Set to auto layout\nnv.setMultiplanarLayout(0);\n// or using the enum\nnv.setMultiplanarLayout(MULTIPLANAR_TYPE.AUTO);\n"})}),"\n",(0,l.jsx)(n.h3,{id:"grid",children:"Grid"}),"\n",(0,l.jsx)(n.p,{children:"The grid layout arranges slice views in a 2x2 grid pattern, providing space for each view."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Set to grid layout\nnv.setMultiplanarLayout(2);\n// or using the enum\nnv.setMultiplanarLayout(MULTIPLANAR_TYPE.GRID);\n"})}),"\n",(0,l.jsx)(n.h3,{id:"row",children:"Row"}),"\n",(0,l.jsx)(n.p,{children:"The row layout arranges slice views horizontally in a single row."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Set to row layout\nnv.setMultiplanarLayout(3);\n// or using the enum\nnv.setMultiplanarLayout(MULTIPLANAR_TYPE.ROW);\n"})}),"\n",(0,l.jsx)(n.h3,{id:"column",children:"Column"}),"\n",(0,l.jsx)(n.p,{children:"The column layout arranges slice views vertically in a single column."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Set to column layout\nnv.setMultiplanarLayout(1);\n// or using the enum\nnv.setMultiplanarLayout(MULTIPLANAR_TYPE.COLUMN);\n"})}),"\n",(0,l.jsx)(n.h2,{id:"additional-layout-options",children:"Additional Layout Options"}),"\n",(0,l.jsx)(n.h3,{id:"show-volume-render",children:"Show Volume Render"}),"\n",(0,l.jsx)(n.p,{children:"You can control whether the volume render is shown alongside slice views in multiplanar mode:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Always show volume render with slices\nnv.opts.multiplanarShowRender = SHOW_RENDER.ALWAYS;\n\n// Never show volume render with slices\nnv.opts.multiplanarShowRender = SHOW_RENDER.NEVER;\n\n// Automatically decide based on space (default)\nnv.opts.multiplanarShowRender = SHOW_RENDER.AUTO;\n\n// Apply changes\nnv.drawScene();\n"})}),"\n",(0,l.jsx)(n.h3,{id:"equal-size-tiles",children:"Equal Size Tiles"}),"\n",(0,l.jsx)(n.p,{children:"Force all slice views to have equal space in the canvas:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Enable equal size tiles\nnv.opts.multiplanarEqualSize = true;\nnv.drawScene();\n"})}),"\n",(0,l.jsx)(n.h3,{id:"hero-image",children:"Hero Image"}),"\n",(0,l.jsx)(n.p,{children:"Designate one slice view to take up more space than others:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Set hero image fraction (0.0 to 1.0)\n// 0.0 = no hero, 1.0 = hero takes maximum space\nnv.setHeroImage(0.5);\n"})}),"\n",(0,l.jsx)(n.h3,{id:"corner-orientation-text",children:"Corner Orientation Text"}),"\n",(0,l.jsx)(n.p,{children:"Control the placement of orientation labels:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Show orientation text in corners\nnv.setCornerOrientationText(true);\n\n// Show orientation text centered (default)\nnv.setCornerOrientationText(false);\n"})}),"\n",(0,l.jsx)(n.h2,{id:"custom-layouts",children:"Custom layouts"}),"\n",(0,l.jsx)(n.p,{children:"NiiVue allows you to have full control over all layout options if you want. When using custom layouts, any other layout settings will not be applied."}),"\n",(0,l.jsxs)(n.p,{children:["Custom layouts use a position array format: ",(0,l.jsx)(n.code,{children:"[left, top, width, height]"})," where all values are relative (0-1) to the canvas size."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Important:"})," Layout tiles cannot overlap. Each tile must occupy a distinct region of the canvas."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Define a custom layout\nconst customLayout = [\n  // Left half - Sagittal view\n  { sliceType: SLICE_TYPE.SAGITTAL, position: [0, 0, 0.5, 1.0] },\n  // Top right quarter - Coronal view  \n  { sliceType: SLICE_TYPE.CORONAL, position: [0.5, 0, 0.5, 0.5] },\n  // Bottom right quarter - Axial view\n  { sliceType: SLICE_TYPE.AXIAL, position: [0.5, 0.5, 0.5, 0.5] }\n];\n\n// Apply the custom layout\nnv.setCustomLayout(customLayout);\n\n// Clear custom layout and return to standard multiplanar\nnv.clearCustomLayout();\nnv.setSliceType(SLICE_TYPE.MULTIPLANAR);\n"})}),"\n",(0,l.jsx)(n.h3,{id:"custom-layout-examples",children:"Custom Layout Examples"}),"\n",(0,l.jsx)(n.p,{children:"Here are some common custom layout patterns:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"// Large render with side axial\nconst renderWithAxial = [\n  { sliceType: SLICE_TYPE.RENDER, position: [0, 0, 0.7, 1.0] },\n  { sliceType: SLICE_TYPE.AXIAL, position: [0.7, 0, 0.3, 1.0] }\n];\n\n// Vertical split\nconst verticalSplit = [\n  { sliceType: SLICE_TYPE.SAGITTAL, position: [0, 0, 0.5, 1.0] },\n  { sliceType: SLICE_TYPE.AXIAL, position: [0.5, 0, 0.5, 1.0] }\n];\n\n// Triple view with large axial\nconst tripleView = [\n  { sliceType: SLICE_TYPE.AXIAL, position: [0, 0, 0.7, 1.0] },\n  { sliceType: SLICE_TYPE.CORONAL, position: [0.7, 0, 0.3, 0.5] },\n  { sliceType: SLICE_TYPE.SAGITTAL, position: [0.7, 0.5, 0.3, 0.5] }\n];\n"})}),"\n",(0,l.jsx)(n.p,{children:"The layout system provides powerful flexibility for creating custom medical image viewing applications tailored to specific needs."})]})}function v(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(g,{...e})}):g(e)}}}]);