name: Build and Deploy
on:
  push:
    branches:
      - main
jobs:
  build-and-publish-live-demo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Build demos and typedoc
        run: |
          npm ci
          npm run build:github
          npm run build:docs
          version=$(node -p "require('./packages/niivue/package.json').version")
          cp -r packages/niivue/dist packages/niivue/demos/dist
          cp -r packages/niivue/devdocs packages/niivue/demos/
          mkdir -p packages/niivue/demos/devdocs/$version
          cp -r packages/niivue/devdocs/* packages/niivue/demos/devdocs/$version
          # make the final ghpages directory with a demos subdirectory and copy the demos into it
          mkdir -p ghpages/demos
          cp -r packages/niivue/demos/* ghpages/demos/

      - name: Build Docusaurus docs
        env:
          PUBLIC_POSTHOG_KEY: ${{ secrets.PUBLIC_POSTHOG_KEY }}
          PUBLIC_POSTHOG_HOST: ${{ secrets.PUBLIC_POSTHOG_HOST }}
        run: |
          echo "PUBLIC_POSTHOG_KEY is set: $([ -n "$PUBLIC_POSTHOG_KEY" ] && echo 'yes' || echo 'no')"
          echo "PUBLIC_POSTHOG_HOST is set: $([ -n "$PUBLIC_POSTHOG_HOST" ] && echo 'yes' || echo 'no')"
          echo "PUBLIC_POSTHOG_HOST value: $PUBLIC_POSTHOG_HOST"
          export PUBLIC_POSTHOG_KEY="${PUBLIC_POSTHOG_KEY}"
          export PUBLIC_POSTHOG_HOST="${PUBLIC_POSTHOG_HOST}"
          npm run build:niivue
          npm run build:docusaurus
          mkdir -p packages/niivue/demos/docusaurus
          # copy the docusaurus build to the ghpages directory
          cp -r packages/docs/build/* ghpages/

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: demo # The branch the action should deploy to.
          folder: ghpages # The folder the action should deploy.
