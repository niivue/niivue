name: Build desktop app

on:
  push:
    paths:
      - 'packages/niivue-desktop/**'
      - '.github/workflows/build_desktop.yml'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version: 20

      - name: Install dependencies (workspace-aware)
        # use npm ci for reproducible installs; `--workspaces` ensures workspace symlinks are created
        run: npm ci --workspaces

      - name: Debug workspace layout (helpful if build fails)
        run: |
          node -v && npm -v
          echo "LIST packages dir"
          ls -la packages || true
          echo "LIST dicom-loader package and dist"
          ls -la packages/dicom-loader || true
          ls -la packages/dicom-loader/dist || echo "no dist folder (not built?)"
          echo "node_modules symlink:"
          ls -la node_modules/@niivue || true
          # macos 'readlink -f' not always available; fallback to perl realpath if needed
          if [ -L node_modules/@niivue/dicom-loader ]; then
            echo "node_modules/@niivue/dicom-loader -> $(readlink node_modules/@niivue/dicom-loader || true)"
          fi

      - name: Build Niivue library (root task)
        run: npm run build:niivue

      # --- ADD: ensure the local workspace package the app imports is built ---
      - name: Build dicom-loader package
        # Build the package that the desktop app expects; adjust path/name if different
        run: |
          if [ -f packages/dicom-loader/package.json ]; then
            echo "Found packages/dicom-loader/package.json â€” running its build script if present"
            npm run -w packages/dicom-loader build || echo "no build script or build failed"
          else
            echo "No packages/dicom-loader package.json found; skipping workspace build step"
          fi

      - name: build-mac
        if: matrix.os == 'macos-latest'
        run: npm run build:desktop-mac

      - name: upload artifacts mac
        uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: packages/niivue-desktop/dist/*.dmg
          retention-days: 14
