{"version":3,"sources":["../../../node_modules/array-equal/index.js","../../../node_modules/numcodecs/dist/chunk-INHXZS53.js","../../../node_modules/numcodecs/dist/blosc.js","../../../node_modules/numcodecs/dist/lz4.js","../../../node_modules/numcodecs/dist/zstd.js","../../../node_modules/gl-matrix/esm/common.js","../../../node_modules/gl-matrix/esm/mat3.js","../../../node_modules/gl-matrix/esm/mat4.js","../../../node_modules/gl-matrix/esm/vec3.js","../../../node_modules/gl-matrix/esm/vec4.js","../../../node_modules/gl-matrix/esm/vec2.js","../package.json","../src/logger.ts","../src/shader.ts","../src/shader-srcs.ts","../src/orientCube.ts","../src/niivue-object3D.ts","../../../node_modules/@lukeed/uuid/dist/index.mjs","../src/cmaps/index.js","../src/cmaps/_itksnap.json","../src/cmaps/_slicer3d.json","../src/cmaps/actc.json","../src/cmaps/batlow.json","../src/cmaps/bcgwhw_dark.json","../src/cmaps/bcgwhw.json","../src/cmaps/blue2red.json","../src/cmaps/blue2magenta.json","../src/cmaps/blue2cyan.json","../src/cmaps/bluegrn.json","../src/cmaps/blue.json","../src/cmaps/bone.json","../src/cmaps/bronze.json","../src/cmaps/cet_l17.json","../src/cmaps/cividis.json","../src/cmaps/cool.json","../src/cmaps/copper2.json","../src/cmaps/copper.json","../src/cmaps/ct_airways.json","../src/cmaps/ct_artery.json","../src/cmaps/ct_bones.json","../src/cmaps/ct_brain_gray.json","../src/cmaps/ct_brain.json","../src/cmaps/ct_cardiac.json","../src/cmaps/ct_head.json","../src/cmaps/ct_kidneys.json","../src/cmaps/ct_liver.json","../src/cmaps/ct_muscles.json","../src/cmaps/ct_scalp.json","../src/cmaps/ct_skull.json","../src/cmaps/ct_soft.json","../src/cmaps/ct_soft_tissue.json","../src/cmaps/ct_surface.json","../src/cmaps/ct_vessels.json","../src/cmaps/ct_w_contrast.json","../src/cmaps/cubehelix.json","../src/cmaps/electric_blue.json","../src/cmaps/freesurfer.json","../src/cmaps/ge_color.json","../src/cmaps/gold.json","../src/cmaps/gray.json","../src/cmaps/green.json","../src/cmaps/green2cyan.json","../src/cmaps/green2orange.json","../src/cmaps/hotiron.json","../src/cmaps/hot.json","../src/cmaps/hsv.json","../src/cmaps/inferno.json","../src/cmaps/jet.json","../src/cmaps/kry.json","../src/cmaps/linspecer.json","../src/cmaps/lipari.json","../src/cmaps/magma.json","../src/cmaps/mako.json","../src/cmaps/navia.json","../src/cmaps/nih.json","../src/cmaps/plasma.json","../src/cmaps/random.json","../src/cmaps/red.json","../src/cmaps/redyell.json","../src/cmaps/rocket.json","../src/cmaps/surface.json","../src/cmaps/thermal.json","../src/cmaps/turbo.json","../src/cmaps/violet.json","../src/cmaps/viridis.json","../src/cmaps/warm.json","../src/cmaps/winter.json","../src/cmaps/x_rain.json","../src/cmaps/afni_blues_inv.json","../src/cmaps/afni_reds_inv.json","../src/cmaps/roi_i256.json","../src/colortables.ts","../src/nvmesh-utilities.ts","../src/nvutilities.ts","../src/nvmesh-loaders.ts","../src/nvlabel.ts","../../../node_modules/@ungap/structured-clone/esm/types.js","../../../node_modules/@ungap/structured-clone/esm/deserialize.js","../../../node_modules/@ungap/structured-clone/esm/serialize.js","../../../node_modules/fflate/esm/browser.js","../../../node_modules/nifti-reader-js/src/nifti-extension.ts","../../../node_modules/nifti-reader-js/src/utilities.ts","../../../node_modules/nifti-reader-js/src/nifti1.ts","../../../node_modules/nifti-reader-js/src/nifti2.ts","../../../node_modules/nifti-reader-js/src/nifti.ts","../../../node_modules/zarrita/src/errors.ts","../../../node_modules/zarrita/src/typedarray.ts","../../../node_modules/zarrita/src/util.ts","../../../node_modules/zarrita/src/codecs/bitround.ts","../../../node_modules/zarrita/src/codecs/bytes.ts","../../../node_modules/zarrita/src/codecs/crc32c.ts","../../../node_modules/zarrita/src/codecs/gzip.ts","../../../node_modules/zarrita/src/codecs/json2.ts","../../../node_modules/zarrita/src/codecs/transpose.ts","../../../node_modules/zarrita/src/codecs/vlen-utf8.ts","../../../node_modules/zarrita/src/codecs/zlib.ts","../../../node_modules/zarrita/src/codecs.ts","../../../node_modules/zarrita/src/codecs/sharding.ts","../../../node_modules/zarrita/src/hierarchy.ts","../../../node_modules/zarrita/src/open.ts","../../../node_modules/zarrita/src/indexing/util.ts","../../../node_modules/zarrita/src/indexing/indexer.ts","../../../node_modules/zarrita/src/indexing/get.ts","../../../node_modules/zarrita/src/indexing/ops.ts","../../../node_modules/@zarrita/storage/src/util.ts","../../../node_modules/@zarrita/storage/src/fetch.ts","../src/nvimage/utils.ts","../src/nvimage/ImageWriter.ts","../src/nvimage/VolumeUtils.ts","../src/nvimage/ImageReaders/mgh.ts","../src/nvimage/ImageReaders/nii.ts","../src/nvimage/ImageReaders/nrrd.ts","../src/nvimage/index.ts","../src/nvdocument.ts","../src/nvmesh.ts","../src/fonts/Roboto-Regular.json","../src/nvconnectome.ts","../src/nvimage/RenderingUtils.ts","../src/niivue/utils.ts","../src/niivue/index.ts"],"sourcesContent":["/**\n * Compare arrays\n *\n * @param  {Array} arr1\n * @param  {Array} arr2\n * @return {Boolean} - Arrays are equals\n */\nmodule.exports = function equal(arr1, arr2) {\n  var length = arr1.length\n  if (arr1 === arr2) return true\n  if (length !== arr2.length) return false\n  for (var i = 0; i < length; i++)\n    if (arr1[i] !== arr2[i])\n      return false\n  return true\n}\n","var __toBinary = /* @__PURE__ */ (() => {\n  var table = new Uint8Array(128);\n  for (var i = 0; i < 64; i++)\n    table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;\n  return (base64) => {\n    var n = base64.length, bytes = new Uint8Array((n - (base64[n - 1] == \"=\") - (base64[n - 2] == \"=\")) * 3 / 4 | 0);\n    for (var i2 = 0, j = 0; i2 < n; ) {\n      var c0 = table[base64.charCodeAt(i2++)], c1 = table[base64.charCodeAt(i2++)];\n      var c2 = table[base64.charCodeAt(i2++)], c3 = table[base64.charCodeAt(i2++)];\n      bytes[j++] = c0 << 2 | c1 >> 4;\n      bytes[j++] = c1 << 4 | c2 >> 2;\n      bytes[j++] = c2 << 6 | c3;\n    }\n    return bytes;\n  };\n})();\n\nexport {\n  __toBinary\n};\n","import {\n  __toBinary\n} from \"./chunk-INHXZS53.js\";\n\n// codecs/blosc/blosc_codec.js\nvar blosc_codec = (() => {\n  var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : void 0;\n  return function(moduleArg = {}) {\n    var f = moduleArg, aa, q;\n    f.ready = new Promise((a, b) => {\n      aa = a;\n      q = b;\n    });\n    var ba = Object.assign({}, f), ca = \"./this.program\", ea = f.print || console.log.bind(console), t = f.printErr || console.error.bind(console);\n    Object.assign(f, ba);\n    ba = null;\n    f.thisProgram && (ca = f.thisProgram);\n    var u;\n    f.wasmBinary && (u = f.wasmBinary);\n    \"object\" != typeof WebAssembly && x(\"no native wasm support detected\");\n    var y, fa = false, A, B, D, E, F, G, ha, ia;\n    function ja() {\n      var a = y.buffer;\n      f.HEAP8 = A = new Int8Array(a);\n      f.HEAP16 = D = new Int16Array(a);\n      f.HEAPU8 = B = new Uint8Array(a);\n      f.HEAPU16 = E = new Uint16Array(a);\n      f.HEAP32 = F = new Int32Array(a);\n      f.HEAPU32 = G = new Uint32Array(a);\n      f.HEAPF32 = ha = new Float32Array(a);\n      f.HEAPF64 = ia = new Float64Array(a);\n    }\n    var ka = [], la = [], ma = [];\n    function na() {\n      var a = f.preRun.shift();\n      ka.unshift(a);\n    }\n    var H = 0, I = null, J = null;\n    function x(a) {\n      f.onAbort?.(a);\n      a = \"Aborted(\" + a + \")\";\n      t(a);\n      fa = true;\n      a = new WebAssembly.RuntimeError(a + \". Build with -sASSERTIONS for more info.\");\n      q(a);\n      throw a;\n    }\n    var oa = (a) => a.startsWith(\"data:application/octet-stream;base64,\"), pa = (a) => a.startsWith(\"file://\"), L;\n    L = \"blosc_codec.wasm\";\n    if (!oa(L)) {\n      var qa = L;\n      L = f.locateFile ? f.locateFile(qa, \"\") : \"\" + qa;\n    }\n    function ra(a) {\n      return Promise.resolve().then(() => {\n        if (a == L && u)\n          var b = new Uint8Array(u);\n        else\n          throw \"both async and sync fetching of the wasm failed\";\n        return b;\n      });\n    }\n    function sa(a, b, c) {\n      return ra(a).then((d) => WebAssembly.instantiate(d, b)).then((d) => d).then(c, (d) => {\n        t(`failed to asynchronously prepare wasm: ${d}`);\n        x(d);\n      });\n    }\n    function ta(a, b) {\n      var c = L;\n      return u || \"function\" != typeof WebAssembly.instantiateStreaming || oa(c) || pa(c) || \"function\" != typeof fetch ? sa(c, a, b) : fetch(c, { credentials: \"same-origin\" }).then((d) => WebAssembly.instantiateStreaming(d, a).then(b, function(e) {\n        t(`wasm streaming compile failed: ${e}`);\n        t(\"falling back to ArrayBuffer instantiation\");\n        return sa(c, a, b);\n      }));\n    }\n    var M = (a) => {\n      for (; 0 < a.length; )\n        a.shift()(f);\n    };\n    function ua(a) {\n      this.H = a - 24;\n      this.N = function(b) {\n        G[this.H + 4 >> 2] = b;\n      };\n      this.M = function(b) {\n        G[this.H + 8 >> 2] = b;\n      };\n      this.I = function(b, c) {\n        this.J();\n        this.N(b);\n        this.M(c);\n      };\n      this.J = function() {\n        G[this.H + 16 >> 2] = 0;\n      };\n    }\n    var va = 0, wa = 0, xa, N = (a) => {\n      for (var b = \"\"; B[a]; )\n        b += xa[B[a++]];\n      return b;\n    }, O = {}, P = {}, Q = {}, R, ya = (a) => {\n      throw new R(a);\n    }, S, za = (a, b) => {\n      function c(l) {\n        l = b(l);\n        if (l.length !== d.length)\n          throw new S(\"Mismatched type converter count\");\n        for (var g = 0; g < d.length; ++g)\n          T(d[g], l[g]);\n      }\n      var d = [];\n      d.forEach(function(l) {\n        Q[l] = a;\n      });\n      var e = Array(a.length), h = [], k = 0;\n      a.forEach((l, g) => {\n        P.hasOwnProperty(l) ? e[g] = P[l] : (h.push(l), O.hasOwnProperty(l) || (O[l] = []), O[l].push(() => {\n          e[g] = P[l];\n          ++k;\n          k === h.length && c(e);\n        }));\n      });\n      0 === h.length && c(e);\n    };\n    function Aa(a, b, c = {}) {\n      var d = b.name;\n      if (!a)\n        throw new R(`type \"${d}\" must have a positive integer typeid pointer`);\n      if (P.hasOwnProperty(a)) {\n        if (c.P)\n          return;\n        throw new R(`Cannot register type '${d}' twice`);\n      }\n      P[a] = b;\n      delete Q[a];\n      O.hasOwnProperty(a) && (b = O[a], delete O[a], b.forEach((e) => e()));\n    }\n    function T(a, b, c = {}) {\n      if (!(\"argPackAdvance\" in b))\n        throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n      Aa(a, b, c);\n    }\n    function Ba() {\n      this.F = [void 0];\n      this.K = [];\n    }\n    var U = new Ba(), Ca = (a) => {\n      a >= U.H && 0 === --U.get(a).L && U.J(a);\n    }, Da = (a) => {\n      switch (a) {\n        case void 0:\n          return 1;\n        case null:\n          return 2;\n        case true:\n          return 3;\n        case false:\n          return 4;\n        default:\n          return U.I({ L: 1, value: a });\n      }\n    };\n    function Ea(a) {\n      return this.fromWireType(F[a >> 2]);\n    }\n    var Fa = (a, b) => {\n      switch (b) {\n        case 4:\n          return function(c) {\n            return this.fromWireType(ha[c >> 2]);\n          };\n        case 8:\n          return function(c) {\n            return this.fromWireType(ia[c >> 3]);\n          };\n        default:\n          throw new TypeError(`invalid float width (${b}): ${a}`);\n      }\n    }, V = (a, b) => Object.defineProperty(b, \"name\", { value: a }), Ga = (a) => {\n      for (; a.length; ) {\n        var b = a.pop();\n        a.pop()(b);\n      }\n    };\n    function Ha(a) {\n      for (var b = 1; b < a.length; ++b)\n        if (null !== a[b] && void 0 === a[b].G)\n          return true;\n      return false;\n    }\n    function La(a) {\n      var b = Function;\n      if (!(b instanceof Function))\n        throw new TypeError(`new_ called with constructor type ${typeof b} which is not a function`);\n      var c = V(b.name || \"unknownFunctionName\", function() {\n      });\n      c.prototype = b.prototype;\n      c = new c();\n      a = b.apply(c, a);\n      return a instanceof Object ? a : c;\n    }\n    var Ma = (a, b) => {\n      if (void 0 === f[a].C) {\n        var c = f[a];\n        f[a] = function() {\n          if (!f[a].C.hasOwnProperty(arguments.length))\n            throw new R(`Function '${b}' called with an invalid number of arguments (${arguments.length}) - expects one of (${f[a].C})!`);\n          return f[a].C[arguments.length].apply(this, arguments);\n        };\n        f[a].C = [];\n        f[a].C[c.O] = c;\n      }\n    }, Na = (a, b, c) => {\n      if (f.hasOwnProperty(a)) {\n        if (void 0 === c || void 0 !== f[a].C && void 0 !== f[a].C[c])\n          throw new R(`Cannot register public name '${a}' twice`);\n        Ma(a, a);\n        if (f.hasOwnProperty(c))\n          throw new R(`Cannot register multiple overloads of a function with the same number of arguments (${c})!`);\n        f[a].C[c] = b;\n      } else\n        f[a] = b, void 0 !== c && (f[a].S = c);\n    }, Oa = (a, b) => {\n      for (var c = [], d = 0; d < a; d++)\n        c.push(G[b + 4 * d >> 2]);\n      return c;\n    }, Pa, Qa = (a, b) => {\n      var c = [];\n      return function() {\n        c.length = 0;\n        Object.assign(c, arguments);\n        if (a.includes(\"j\")) {\n          var d = f[\"dynCall_\" + a];\n          d = c && c.length ? d.apply(null, [b].concat(c)) : d.call(null, b);\n        } else\n          d = Pa.get(b).apply(null, c);\n        return d;\n      };\n    }, Ra = (a, b) => {\n      a = N(a);\n      var c = a.includes(\"j\") ? Qa(a, b) : Pa.get(b);\n      if (\"function\" != typeof c)\n        throw new R(`unknown function pointer with signature ${a}: ${b}`);\n      return c;\n    }, Sa, Ua = (a) => {\n      a = Ta(a);\n      var b = N(a);\n      W(a);\n      return b;\n    }, Va = (a, b) => {\n      function c(h) {\n        e[h] || P[h] || (Q[h] ? Q[h].forEach(c) : (d.push(h), e[h] = true));\n      }\n      var d = [], e = {};\n      b.forEach(c);\n      throw new Sa(`${a}: ` + d.map(Ua).join([\", \"]));\n    }, Wa = (a) => {\n      a = a.trim();\n      const b = a.indexOf(\"(\");\n      return -1 !== b ? a.substr(0, b) : a;\n    }, Xa = (a, b, c) => {\n      switch (b) {\n        case 1:\n          return c ? (d) => A[d >> 0] : (d) => B[d >> 0];\n        case 2:\n          return c ? (d) => D[d >> 1] : (d) => E[d >> 1];\n        case 4:\n          return c ? (d) => F[d >> 2] : (d) => G[d >> 2];\n        default:\n          throw new TypeError(`invalid integer width (${b}): ${a}`);\n      }\n    };\n    function Ya(a) {\n      return this.fromWireType(G[a >> 2]);\n    }\n    for (var Za = \"undefined\" != typeof TextDecoder ? new TextDecoder(\"utf8\") : void 0, $a = (a, b, c) => {\n      var d = b + c;\n      for (c = b; a[c] && !(c >= d); )\n        ++c;\n      if (16 < c - b && a.buffer && Za)\n        return Za.decode(a.subarray(b, c));\n      for (d = \"\"; b < c; ) {\n        var e = a[b++];\n        if (e & 128) {\n          var h = a[b++] & 63;\n          if (192 == (e & 224))\n            d += String.fromCharCode((e & 31) << 6 | h);\n          else {\n            var k = a[b++] & 63;\n            e = 224 == (e & 240) ? (e & 15) << 12 | h << 6 | k : (e & 7) << 18 | h << 12 | k << 6 | a[b++] & 63;\n            65536 > e ? d += String.fromCharCode(e) : (e -= 65536, d += String.fromCharCode(55296 | e >> 10, 56320 | e & 1023));\n          }\n        } else\n          d += String.fromCharCode(e);\n      }\n      return d;\n    }, ab = \"undefined\" != typeof TextDecoder ? new TextDecoder(\"utf-16le\") : void 0, bb = (a, b) => {\n      var c = a >> 1;\n      for (var d = c + b / 2; !(c >= d) && E[c]; )\n        ++c;\n      c <<= 1;\n      if (32 < c - a && ab)\n        return ab.decode(B.subarray(a, c));\n      c = \"\";\n      for (d = 0; !(d >= b / 2); ++d) {\n        var e = D[a + 2 * d >> 1];\n        if (0 == e)\n          break;\n        c += String.fromCharCode(e);\n      }\n      return c;\n    }, cb = (a, b, c) => {\n      c ??= 2147483647;\n      if (2 > c)\n        return 0;\n      c -= 2;\n      var d = b;\n      c = c < 2 * a.length ? c / 2 : a.length;\n      for (var e = 0; e < c; ++e)\n        D[b >> 1] = a.charCodeAt(e), b += 2;\n      D[b >> 1] = 0;\n      return b - d;\n    }, db = (a) => 2 * a.length, eb = (a, b) => {\n      for (var c = 0, d = \"\"; !(c >= b / 4); ) {\n        var e = F[a + 4 * c >> 2];\n        if (0 == e)\n          break;\n        ++c;\n        65536 <= e ? (e -= 65536, d += String.fromCharCode(55296 | e >> 10, 56320 | e & 1023)) : d += String.fromCharCode(e);\n      }\n      return d;\n    }, fb = (a, b, c) => {\n      c ??= 2147483647;\n      if (4 > c)\n        return 0;\n      var d = b;\n      c = d + c - 4;\n      for (var e = 0; e < a.length; ++e) {\n        var h = a.charCodeAt(e);\n        if (55296 <= h && 57343 >= h) {\n          var k = a.charCodeAt(++e);\n          h = 65536 + ((h & 1023) << 10) | k & 1023;\n        }\n        F[b >> 2] = h;\n        b += 4;\n        if (b + 4 > c)\n          break;\n      }\n      F[b >> 2] = 0;\n      return b - d;\n    }, gb = (a) => {\n      for (var b = 0, c = 0; c < a.length; ++c) {\n        var d = a.charCodeAt(c);\n        55296 <= d && 57343 >= d && ++c;\n        b += 4;\n      }\n      return b;\n    }, hb = {}, jb = () => {\n      if (!ib) {\n        var a = {\n          USER: \"web_user\",\n          LOGNAME: \"web_user\",\n          PATH: \"/\",\n          PWD: \"/\",\n          HOME: \"/home/web_user\",\n          LANG: (\"object\" == typeof navigator && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\",\n          _: ca || \"./this.program\"\n        }, b;\n        for (b in hb)\n          void 0 === hb[b] ? delete a[b] : a[b] = hb[b];\n        var c = [];\n        for (b in a)\n          c.push(`${b}=${a[b]}`);\n        ib = c;\n      }\n      return ib;\n    }, ib, kb = [null, [], []], lb = Array(256), X = 0; 256 > X; ++X)\n      lb[X] = String.fromCharCode(X);\n    xa = lb;\n    R = f.BindingError = class extends Error {\n      constructor(a) {\n        super(a);\n        this.name = \"BindingError\";\n      }\n    };\n    S = f.InternalError = class extends Error {\n      constructor(a) {\n        super(a);\n        this.name = \"InternalError\";\n      }\n    };\n    Object.assign(Ba.prototype, { get(a) {\n      return this.F[a];\n    }, has(a) {\n      return void 0 !== this.F[a];\n    }, I(a) {\n      var b = this.K.pop() || this.F.length;\n      this.F[b] = a;\n      return b;\n    }, J(a) {\n      this.F[a] = void 0;\n      this.K.push(a);\n    } });\n    U.F.push({ value: void 0 }, { value: null }, { value: true }, { value: false });\n    U.H = U.F.length;\n    f.count_emval_handles = () => {\n      for (var a = 0, b = U.H; b < U.F.length; ++b)\n        void 0 !== U.F[b] && ++a;\n      return a;\n    };\n    Sa = f.UnboundTypeError = ((a, b) => {\n      var c = V(b, function(d) {\n        this.name = b;\n        this.message = d;\n        d = Error(d).stack;\n        void 0 !== d && (this.stack = this.toString() + \"\\n\" + d.replace(/^Error(:[^\\n]*)?\\n/, \"\"));\n      });\n      c.prototype = Object.create(a.prototype);\n      c.prototype.constructor = c;\n      c.prototype.toString = function() {\n        return void 0 === this.message ? this.name : `${this.name}: ${this.message}`;\n      };\n      return c;\n    })(Error, \"UnboundTypeError\");\n    var nb = {\n      p: (a, b, c) => {\n        new ua(a).I(b, c);\n        va = a;\n        wa++;\n        throw va;\n      },\n      o: () => {\n      },\n      l: (a, b, c, d) => {\n        b = N(b);\n        T(a, { name: b, fromWireType: function(e) {\n          return !!e;\n        }, toWireType: function(e, h) {\n          return h ? c : d;\n        }, argPackAdvance: 8, readValueFromPointer: function(e) {\n          return this.fromWireType(B[e]);\n        }, G: null });\n      },\n      k: (a, b) => {\n        b = N(b);\n        T(a, { name: b, fromWireType: (c) => {\n          if (!c)\n            throw new R(\"Cannot use deleted val. handle = \" + c);\n          var d = U.get(c).value;\n          Ca(c);\n          return d;\n        }, toWireType: (c, d) => Da(d), argPackAdvance: 8, readValueFromPointer: Ea, G: null });\n      },\n      i: (a, b, c) => {\n        b = N(b);\n        T(a, { name: b, fromWireType: (d) => d, toWireType: (d, e) => e, argPackAdvance: 8, readValueFromPointer: Fa(b, c), G: null });\n      },\n      d: (a, b, c, d, e, h, k) => {\n        var l = Oa(b, c);\n        a = N(a);\n        a = Wa(a);\n        e = Ra(d, e);\n        Na(a, function() {\n          Va(`Cannot call ${a} due to unbound types`, l);\n        }, b - 1);\n        za(l, function(g) {\n          var m = a;\n          var p = a;\n          g = [g[0], null].concat(g.slice(1));\n          var r = e, n = g.length;\n          if (2 > n)\n            throw new R(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n          var v = null !== g[1] && false, C = Ha(g), Ia = \"void\" !== g[0].name;\n          r = [ya, r, h, Ga, g[0], g[1]];\n          for (var w = 0; w < n - 2; ++w)\n            r.push(g[w + 2]);\n          if (!C)\n            for (w = v ? 1 : 2; w < g.length; ++w)\n              null !== g[w].G && r.push(g[w].G);\n          C = Ha(g);\n          w = g.length;\n          var z = \"\", K = \"\";\n          for (n = 0; n < w - 2; ++n)\n            z += (0 !== n ? \", \" : \"\") + \"arg\" + n, K += (0 !== n ? \", \" : \"\") + \"arg\" + n + \"Wired\";\n          z = `\n        return function (${z}) {\n        if (arguments.length !== ${w - 2}) {\n          throwBindingError('function ${p} called with ' + arguments.length + ' arguments, expected ${w - 2}');\n        }`;\n          C && (z += \"var destructors = [];\\n\");\n          var Ja = C ? \"destructors\" : \"null\", da = \"throwBindingError invoker fn runDestructors retType classParam\".split(\" \");\n          v && (z += \"var thisWired = classParam['toWireType'](\" + Ja + \", this);\\n\");\n          for (n = 0; n < w - 2; ++n)\n            z += \"var arg\" + n + \"Wired = argType\" + n + \"['toWireType'](\" + Ja + \", arg\" + n + \"); // \" + g[n + 2].name + \"\\n\", da.push(\"argType\" + n);\n          v && (K = \"thisWired\" + (0 < K.length ? \", \" : \"\") + K);\n          z += (Ia || k ? \"var rv = \" : \"\") + \"invoker(fn\" + (0 < K.length ? \", \" : \"\") + K + \");\\n\";\n          if (C)\n            z += \"runDestructors(destructors);\\n\";\n          else\n            for (n = v ? 1 : 2; n < g.length; ++n)\n              v = 1 === n ? \"thisWired\" : \"arg\" + (n - 2) + \"Wired\", null !== g[n].G && (z += v + \"_dtor(\" + v + \"); // \" + g[n].name + \"\\n\", da.push(v + \"_dtor\"));\n          Ia && (z += \"var ret = retType['fromWireType'](rv);\\nreturn ret;\\n\");\n          let [Ka, ob] = [da, z + \"}\\n\"];\n          Ka.push(ob);\n          g = La(Ka).apply(null, r);\n          p = V(p, g);\n          g = b - 1;\n          if (!f.hasOwnProperty(m))\n            throw new S(\"Replacing nonexistant public symbol\");\n          void 0 !== f[m].C && void 0 !== g ? f[m].C[g] = p : (f[m] = p, f[m].O = g);\n          return [];\n        });\n      },\n      b: (a, b, c, d, e) => {\n        b = N(b);\n        -1 === e && (e = 4294967295);\n        e = (l) => l;\n        if (0 === d) {\n          var h = 32 - 8 * c;\n          e = (l) => l << h >>> h;\n        }\n        var k = b.includes(\"unsigned\") ? function(l, g) {\n          return g >>> 0;\n        } : function(l, g) {\n          return g;\n        };\n        T(a, {\n          name: b,\n          fromWireType: e,\n          toWireType: k,\n          argPackAdvance: 8,\n          readValueFromPointer: Xa(b, c, 0 !== d),\n          G: null\n        });\n      },\n      a: (a, b, c) => {\n        function d(h) {\n          return new e(A.buffer, G[h + 4 >> 2], G[h >> 2]);\n        }\n        var e = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array][b];\n        c = N(c);\n        T(a, { name: c, fromWireType: d, argPackAdvance: 8, readValueFromPointer: d }, { P: true });\n      },\n      e: (a, b) => {\n        b = N(b);\n        var c = \"std::string\" === b;\n        T(a, { name: b, fromWireType: function(d) {\n          var e = G[d >> 2], h = d + 4;\n          if (c)\n            for (var k = h, l = 0; l <= e; ++l) {\n              var g = h + l;\n              if (l == e || 0 == B[g]) {\n                k = k ? $a(B, k, g - k) : \"\";\n                if (void 0 === m)\n                  var m = k;\n                else\n                  m += String.fromCharCode(0), m += k;\n                k = g + 1;\n              }\n            }\n          else {\n            m = Array(e);\n            for (l = 0; l < e; ++l)\n              m[l] = String.fromCharCode(B[h + l]);\n            m = m.join(\"\");\n          }\n          W(d);\n          return m;\n        }, toWireType: function(d, e) {\n          e instanceof ArrayBuffer && (e = new Uint8Array(e));\n          var h, k = \"string\" == typeof e;\n          if (!(k || e instanceof Uint8Array || e instanceof Uint8ClampedArray || e instanceof Int8Array))\n            throw new R(\"Cannot pass non-string to std::string\");\n          var l;\n          if (c && k)\n            for (h = l = 0; h < e.length; ++h) {\n              var g = e.charCodeAt(h);\n              127 >= g ? l++ : 2047 >= g ? l += 2 : 55296 <= g && 57343 >= g ? (l += 4, ++h) : l += 3;\n            }\n          else\n            l = e.length;\n          h = l;\n          l = mb(4 + h + 1);\n          g = l + 4;\n          G[l >> 2] = h;\n          if (c && k) {\n            if (k = g, g = h + 1, h = B, 0 < g) {\n              g = k + g - 1;\n              for (var m = 0; m < e.length; ++m) {\n                var p = e.charCodeAt(m);\n                if (55296 <= p && 57343 >= p) {\n                  var r = e.charCodeAt(++m);\n                  p = 65536 + ((p & 1023) << 10) | r & 1023;\n                }\n                if (127 >= p) {\n                  if (k >= g)\n                    break;\n                  h[k++] = p;\n                } else {\n                  if (2047 >= p) {\n                    if (k + 1 >= g)\n                      break;\n                    h[k++] = 192 | p >> 6;\n                  } else {\n                    if (65535 >= p) {\n                      if (k + 2 >= g)\n                        break;\n                      h[k++] = 224 | p >> 12;\n                    } else {\n                      if (k + 3 >= g)\n                        break;\n                      h[k++] = 240 | p >> 18;\n                      h[k++] = 128 | p >> 12 & 63;\n                    }\n                    h[k++] = 128 | p >> 6 & 63;\n                  }\n                  h[k++] = 128 | p & 63;\n                }\n              }\n              h[k] = 0;\n            }\n          } else if (k)\n            for (k = 0; k < h; ++k) {\n              m = e.charCodeAt(k);\n              if (255 < m)\n                throw W(g), new R(\"String has UTF-16 code units that do not fit in 8 bits\");\n              B[g + k] = m;\n            }\n          else\n            for (k = 0; k < h; ++k)\n              B[g + k] = e[k];\n          null !== d && d.push(W, l);\n          return l;\n        }, argPackAdvance: 8, readValueFromPointer: Ya, G(d) {\n          W(d);\n        } });\n      },\n      c: (a, b, c) => {\n        c = N(c);\n        if (2 === b) {\n          var d = bb;\n          var e = cb;\n          var h = db;\n          var k = () => E;\n          var l = 1;\n        } else\n          4 === b && (d = eb, e = fb, h = gb, k = () => G, l = 2);\n        T(a, { name: c, fromWireType: (g) => {\n          for (var m = G[g >> 2], p = k(), r, n = g + 4, v = 0; v <= m; ++v) {\n            var C = g + 4 + v * b;\n            if (v == m || 0 == p[C >> l])\n              n = d(n, C - n), void 0 === r ? r = n : (r += String.fromCharCode(0), r += n), n = C + b;\n          }\n          W(g);\n          return r;\n        }, toWireType: (g, m) => {\n          if (\"string\" != typeof m)\n            throw new R(`Cannot pass non-string to C++ string type ${c}`);\n          var p = h(m), r = mb(4 + p + b);\n          G[r >> 2] = p >> l;\n          e(m, r + 4, p + b);\n          null !== g && g.push(W, r);\n          return r;\n        }, argPackAdvance: 8, readValueFromPointer: Ea, G(g) {\n          W(g);\n        } });\n      },\n      m: (a, b) => {\n        b = N(b);\n        T(a, { R: true, name: b, argPackAdvance: 0, fromWireType: () => {\n        }, toWireType: () => {\n        } });\n      },\n      g: Ca,\n      j: (a) => {\n        4 < a && (U.get(a).L += 1);\n      },\n      f: (a, b) => {\n        var c = P[a];\n        if (void 0 === c)\n          throw a = \"_emval_take_value has unknown type \" + Ua(a), new R(a);\n        a = c;\n        a = a.readValueFromPointer(b);\n        return Da(a);\n      },\n      h: () => {\n        x(\"\");\n      },\n      v: (a, b, c) => B.copyWithin(a, b, b + c),\n      q: (a) => {\n        var b = B.length;\n        a >>>= 0;\n        if (2147483648 < a)\n          return false;\n        for (var c = 1; 4 >= c; c *= 2) {\n          var d = b * (1 + 0.2 / c);\n          d = Math.min(d, a + 100663296);\n          var e = Math;\n          d = Math.max(a, d);\n          a: {\n            e = (e.min.call(e, 2147483648, d + (65536 - d % 65536) % 65536) - y.buffer.byteLength + 65535) / 65536;\n            try {\n              y.grow(e);\n              ja();\n              var h = 1;\n              break a;\n            } catch (k) {\n            }\n            h = void 0;\n          }\n          if (h)\n            return true;\n        }\n        return false;\n      },\n      t: (a, b) => {\n        var c = 0;\n        jb().forEach((d, e) => {\n          var h = b + c;\n          e = G[a + 4 * e >> 2] = h;\n          for (h = 0; h < d.length; ++h)\n            A[e++ >> 0] = d.charCodeAt(h);\n          A[e >> 0] = 0;\n          c += d.length + 1;\n        });\n        return 0;\n      },\n      u: (a, b) => {\n        var c = jb();\n        G[a >> 2] = c.length;\n        var d = 0;\n        c.forEach((e) => d += e.length + 1);\n        G[b >> 2] = d;\n        return 0;\n      },\n      s: () => 52,\n      n: function() {\n        return 70;\n      },\n      r: (a, b, c, d) => {\n        for (var e = 0, h = 0; h < c; h++) {\n          var k = G[b >> 2], l = G[b + 4 >> 2];\n          b += 8;\n          for (var g = 0; g < l; g++) {\n            var m = B[k + g], p = kb[a];\n            0 === m || 10 === m ? ((1 === a ? ea : t)($a(p, 0)), p.length = 0) : p.push(m);\n          }\n          e += l;\n        }\n        G[d >> 2] = e;\n        return 0;\n      }\n    }, Y = function() {\n      function a(c) {\n        Y = c.exports;\n        y = Y.w;\n        ja();\n        Pa = Y.A;\n        la.unshift(Y.x);\n        H--;\n        f.monitorRunDependencies?.(H);\n        0 == H && (null !== I && (clearInterval(I), I = null), J && (c = J, J = null, c()));\n        return Y;\n      }\n      var b = { a: nb };\n      H++;\n      f.monitorRunDependencies?.(H);\n      if (f.instantiateWasm)\n        try {\n          return f.instantiateWasm(\n            b,\n            a\n          );\n        } catch (c) {\n          t(`Module.instantiateWasm callback failed with error: ${c}`), q(c);\n        }\n      ta(b, function(c) {\n        a(c.instance);\n      }).catch(q);\n      return {};\n    }(), mb = (a) => (mb = Y.y)(a), W = (a) => (W = Y.z)(a), Ta = (a) => (Ta = Y.B)(a);\n    f.dynCall_jiji = (a, b, c, d, e) => (f.dynCall_jiji = Y.D)(a, b, c, d, e);\n    var Z;\n    J = function pb() {\n      Z || qb();\n      Z || (J = pb);\n    };\n    function qb() {\n      function a() {\n        if (!Z && (Z = true, f.calledRun = true, !fa)) {\n          M(la);\n          aa(f);\n          if (f.onRuntimeInitialized)\n            f.onRuntimeInitialized();\n          if (f.postRun)\n            for (\"function\" == typeof f.postRun && (f.postRun = [f.postRun]); f.postRun.length; ) {\n              var b = f.postRun.shift();\n              ma.unshift(b);\n            }\n          M(ma);\n        }\n      }\n      if (!(0 < H)) {\n        if (f.preRun)\n          for (\"function\" == typeof f.preRun && (f.preRun = [f.preRun]); f.preRun.length; )\n            na();\n        M(ka);\n        0 < H || (f.setStatus ? (f.setStatus(\"Running...\"), setTimeout(function() {\n          setTimeout(function() {\n            f.setStatus(\"\");\n          }, 1);\n          a();\n        }, 1)) : a());\n      }\n    }\n    if (f.preInit)\n      for (\"function\" == typeof f.preInit && (f.preInit = [f.preInit]); 0 < f.preInit.length; )\n        f.preInit.pop()();\n    qb();\n    return moduleArg.ready;\n  };\n})();\nvar blosc_codec_default = blosc_codec;\n\n// codecs/blosc/blosc_codec.wasm\nvar blosc_codec_default2 = __toBinary(\"\");\n\n// src/blosc.ts\nvar COMPRESSORS = /* @__PURE__ */ new Set([\"blosclz\", \"lz4\", \"lz4hc\", \"snappy\", \"zlib\", \"zstd\"]);\nvar emscriptenModule;\nvar init = () => blosc_codec_default({ noInitialRun: true, wasmBinary: blosc_codec_default2 });\nvar Blosc = class Blosc2 {\n  static codecId = \"blosc\";\n  static COMPRESSORS = [...COMPRESSORS];\n  static NOSHUFFLE = 0 /* NOSHUFFLE */;\n  static SHUFFLE = 1 /* SHUFFLE */;\n  static BITSHUFFLE = 2 /* BITSHUFFLE */;\n  static AUTOSHUFFLE = -1 /* AUTOSHUFFLE */;\n  clevel;\n  cname;\n  shuffle;\n  blocksize;\n  constructor(clevel = 5, cname = \"lz4\", shuffle = 1 /* SHUFFLE */, blocksize = 0) {\n    if (clevel < 0 || clevel > 9) {\n      throw new Error(`Invalid compression level: '${clevel}'. It should be between 0 and 9`);\n    }\n    if (!COMPRESSORS.has(cname)) {\n      throw new Error(\n        `Invalid compressor '${cname}'. Valid compressors include\n        'blosclz', 'lz4', 'lz4hc','snappy', 'zlib', 'zstd'.`\n      );\n    }\n    if (shuffle < -1 || shuffle > 2) {\n      throw new Error(\n        `Invalid shuffle ${shuffle}. Must be one of 0 (NOSHUFFLE),\n        1 (SHUFFLE), 2 (BITSHUFFLE), -1 (AUTOSHUFFLE).`\n      );\n    }\n    this.blocksize = blocksize;\n    this.clevel = clevel;\n    this.cname = cname;\n    this.shuffle = shuffle;\n  }\n  static fromConfig({ blocksize, clevel, cname, shuffle }) {\n    return new Blosc2(clevel, cname, shuffle, blocksize);\n  }\n  async encode(data) {\n    if (!emscriptenModule) {\n      emscriptenModule = init();\n    }\n    const module = await emscriptenModule;\n    const view = module.compress(data, this.cname, this.clevel, this.shuffle, this.blocksize);\n    const result = new Uint8Array(view);\n    module.free_result();\n    return result;\n  }\n  async decode(data, out) {\n    if (!emscriptenModule) {\n      emscriptenModule = init();\n    }\n    const module = await emscriptenModule;\n    const view = module.decompress(data);\n    const result = new Uint8Array(view);\n    module.free_result();\n    if (out !== void 0) {\n      out.set(result);\n      return out;\n    }\n    return result;\n  }\n};\nvar blosc_default = Blosc;\nexport {\n  blosc_default as default\n};\n","import {\n  __toBinary\n} from \"./chunk-INHXZS53.js\";\n\n// codecs/lz4/lz4_codec.js\nvar lz4_codec = (() => {\n  var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : void 0;\n  return function(moduleArg = {}) {\n    var f = moduleArg, aa, t;\n    f.ready = new Promise((a, b) => {\n      aa = a;\n      t = b;\n    });\n    var ba = Object.assign({}, f), u = f.printErr || console.error.bind(console);\n    Object.assign(f, ba);\n    ba = null;\n    var v;\n    f.wasmBinary && (v = f.wasmBinary);\n    \"object\" != typeof WebAssembly && x(\"no native wasm support detected\");\n    var z, da = false, C, D, E, F, G, H, ea, fa;\n    function ha() {\n      var a = z.buffer;\n      f.HEAP8 = C = new Int8Array(a);\n      f.HEAP16 = E = new Int16Array(a);\n      f.HEAPU8 = D = new Uint8Array(a);\n      f.HEAPU16 = F = new Uint16Array(a);\n      f.HEAP32 = G = new Int32Array(a);\n      f.HEAPU32 = H = new Uint32Array(a);\n      f.HEAPF32 = ea = new Float32Array(a);\n      f.HEAPF64 = fa = new Float64Array(a);\n    }\n    var ia = [], ja = [], ka = [];\n    function la() {\n      var a = f.preRun.shift();\n      ia.unshift(a);\n    }\n    var I = 0, J = null, L = null;\n    function x(a) {\n      f.onAbort?.(a);\n      a = \"Aborted(\" + a + \")\";\n      u(a);\n      da = true;\n      a = new WebAssembly.RuntimeError(a + \". Build with -sASSERTIONS for more info.\");\n      t(a);\n      throw a;\n    }\n    var ma = (a) => a.startsWith(\"data:application/octet-stream;base64,\"), na = (a) => a.startsWith(\"file://\"), M;\n    M = \"lz4_codec.wasm\";\n    if (!ma(M)) {\n      var oa = M;\n      M = f.locateFile ? f.locateFile(oa, \"\") : \"\" + oa;\n    }\n    function pa(a) {\n      return Promise.resolve().then(() => {\n        if (a == M && v)\n          var b = new Uint8Array(v);\n        else\n          throw \"both async and sync fetching of the wasm failed\";\n        return b;\n      });\n    }\n    function qa(a, b, c) {\n      return pa(a).then((d) => WebAssembly.instantiate(d, b)).then((d) => d).then(c, (d) => {\n        u(`failed to asynchronously prepare wasm: ${d}`);\n        x(d);\n      });\n    }\n    function ra(a, b) {\n      var c = M;\n      return v || \"function\" != typeof WebAssembly.instantiateStreaming || ma(c) || na(c) || \"function\" != typeof fetch ? qa(c, a, b) : fetch(c, { credentials: \"same-origin\" }).then((d) => WebAssembly.instantiateStreaming(d, a).then(b, function(e) {\n        u(`wasm streaming compile failed: ${e}`);\n        u(\"falling back to ArrayBuffer instantiation\");\n        return qa(c, a, b);\n      }));\n    }\n    var N = (a) => {\n      for (; 0 < a.length; )\n        a.shift()(f);\n    };\n    function sa(a) {\n      this.D = a - 24;\n      this.K = function(b) {\n        H[this.D + 4 >> 2] = b;\n      };\n      this.J = function(b) {\n        H[this.D + 8 >> 2] = b;\n      };\n      this.F = function(b, c) {\n        this.G();\n        this.K(b);\n        this.J(c);\n      };\n      this.G = function() {\n        H[this.D + 16 >> 2] = 0;\n      };\n    }\n    var ta = 0, ua = 0, va, O = (a) => {\n      for (var b = \"\"; D[a]; )\n        b += va[D[a++]];\n      return b;\n    }, P = {}, Q = {}, R = {}, S, wa = (a) => {\n      throw new S(a);\n    }, T, xa = (a, b) => {\n      function c(l) {\n        l = b(l);\n        if (l.length !== d.length)\n          throw new T(\"Mismatched type converter count\");\n        for (var g = 0; g < d.length; ++g)\n          U(d[g], l[g]);\n      }\n      var d = [];\n      d.forEach(function(l) {\n        R[l] = a;\n      });\n      var e = Array(a.length), h = [], k = 0;\n      a.forEach((l, g) => {\n        Q.hasOwnProperty(l) ? e[g] = Q[l] : (h.push(l), P.hasOwnProperty(l) || (P[l] = []), P[l].push(() => {\n          e[g] = Q[l];\n          ++k;\n          k === h.length && c(e);\n        }));\n      });\n      0 === h.length && c(e);\n    };\n    function ya(a, b, c = {}) {\n      var d = b.name;\n      if (!a)\n        throw new S(`type \"${d}\" must have a positive integer typeid pointer`);\n      if (Q.hasOwnProperty(a)) {\n        if (c.M)\n          return;\n        throw new S(`Cannot register type '${d}' twice`);\n      }\n      Q[a] = b;\n      delete R[a];\n      P.hasOwnProperty(a) && (b = P[a], delete P[a], b.forEach((e) => e()));\n    }\n    function U(a, b, c = {}) {\n      if (!(\"argPackAdvance\" in b))\n        throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n      ya(a, b, c);\n    }\n    function za() {\n      this.B = [void 0];\n      this.H = [];\n    }\n    var V = new za(), Aa = (a) => {\n      a >= V.D && 0 === --V.get(a).I && V.G(a);\n    }, Ba = (a) => {\n      switch (a) {\n        case void 0:\n          return 1;\n        case null:\n          return 2;\n        case true:\n          return 3;\n        case false:\n          return 4;\n        default:\n          return V.F({ I: 1, value: a });\n      }\n    };\n    function Ca(a) {\n      return this.fromWireType(G[a >> 2]);\n    }\n    var Da = (a, b) => {\n      switch (b) {\n        case 4:\n          return function(c) {\n            return this.fromWireType(ea[c >> 2]);\n          };\n        case 8:\n          return function(c) {\n            return this.fromWireType(fa[c >> 3]);\n          };\n        default:\n          throw new TypeError(`invalid float width (${b}): ${a}`);\n      }\n    }, Ga = (a, b) => Object.defineProperty(b, \"name\", { value: a }), Ha = (a) => {\n      for (; a.length; ) {\n        var b = a.pop();\n        a.pop()(b);\n      }\n    };\n    function Ia(a) {\n      for (var b = 1; b < a.length; ++b)\n        if (null !== a[b] && void 0 === a[b].C)\n          return true;\n      return false;\n    }\n    function Ja(a) {\n      var b = Function;\n      if (!(b instanceof Function))\n        throw new TypeError(`new_ called with constructor type ${typeof b} which is not a function`);\n      var c = Ga(b.name || \"unknownFunctionName\", function() {\n      });\n      c.prototype = b.prototype;\n      c = new c();\n      a = b.apply(c, a);\n      return a instanceof Object ? a : c;\n    }\n    var Ka = (a, b) => {\n      if (void 0 === f[a].A) {\n        var c = f[a];\n        f[a] = function() {\n          if (!f[a].A.hasOwnProperty(arguments.length))\n            throw new S(`Function '${b}' called with an invalid number of arguments (${arguments.length}) - expects one of (${f[a].A})!`);\n          return f[a].A[arguments.length].apply(this, arguments);\n        };\n        f[a].A = [];\n        f[a].A[c.L] = c;\n      }\n    }, La = (a, b, c) => {\n      if (f.hasOwnProperty(a)) {\n        if (void 0 === c || void 0 !== f[a].A && void 0 !== f[a].A[c])\n          throw new S(`Cannot register public name '${a}' twice`);\n        Ka(a, a);\n        if (f.hasOwnProperty(c))\n          throw new S(`Cannot register multiple overloads of a function with the same number of arguments (${c})!`);\n        f[a].A[c] = b;\n      } else\n        f[a] = b, void 0 !== c && (f[a].O = c);\n    }, Ma = (a, b) => {\n      for (var c = [], d = 0; d < a; d++)\n        c.push(H[b + 4 * d >> 2]);\n      return c;\n    }, Na, Oa = (a, b) => {\n      var c = [];\n      return function() {\n        c.length = 0;\n        Object.assign(c, arguments);\n        if (a.includes(\"j\")) {\n          var d = f[\"dynCall_\" + a];\n          d = c && c.length ? d.apply(null, [b].concat(c)) : d.call(null, b);\n        } else\n          d = Na.get(b).apply(null, c);\n        return d;\n      };\n    }, Pa = (a, b) => {\n      a = O(a);\n      var c = a.includes(\"j\") ? Oa(a, b) : Na.get(b);\n      if (\"function\" != typeof c)\n        throw new S(`unknown function pointer with signature ${a}: ${b}`);\n      return c;\n    }, Qa, Sa = (a) => {\n      a = Ra(a);\n      var b = O(a);\n      W(a);\n      return b;\n    }, Ta = (a, b) => {\n      function c(h) {\n        e[h] || Q[h] || (R[h] ? R[h].forEach(c) : (d.push(h), e[h] = true));\n      }\n      var d = [], e = {};\n      b.forEach(c);\n      throw new Qa(`${a}: ` + d.map(Sa).join([\", \"]));\n    }, Ua = (a) => {\n      a = a.trim();\n      const b = a.indexOf(\"(\");\n      return -1 !== b ? a.substr(0, b) : a;\n    }, Va = (a, b, c) => {\n      switch (b) {\n        case 1:\n          return c ? (d) => C[d >> 0] : (d) => D[d >> 0];\n        case 2:\n          return c ? (d) => E[d >> 1] : (d) => F[d >> 1];\n        case 4:\n          return c ? (d) => G[d >> 2] : (d) => H[d >> 2];\n        default:\n          throw new TypeError(`invalid integer width (${b}): ${a}`);\n      }\n    };\n    function Wa(a) {\n      return this.fromWireType(H[a >> 2]);\n    }\n    for (var Xa = \"undefined\" != typeof TextDecoder ? new TextDecoder(\"utf8\") : void 0, Ya = \"undefined\" != typeof TextDecoder ? new TextDecoder(\"utf-16le\") : void 0, Za = (a, b) => {\n      var c = a >> 1;\n      for (var d = c + b / 2; !(c >= d) && F[c]; )\n        ++c;\n      c <<= 1;\n      if (32 < c - a && Ya)\n        return Ya.decode(D.subarray(a, c));\n      c = \"\";\n      for (d = 0; !(d >= b / 2); ++d) {\n        var e = E[a + 2 * d >> 1];\n        if (0 == e)\n          break;\n        c += String.fromCharCode(e);\n      }\n      return c;\n    }, $a = (a, b, c) => {\n      c ??= 2147483647;\n      if (2 > c)\n        return 0;\n      c -= 2;\n      var d = b;\n      c = c < 2 * a.length ? c / 2 : a.length;\n      for (var e = 0; e < c; ++e)\n        E[b >> 1] = a.charCodeAt(e), b += 2;\n      E[b >> 1] = 0;\n      return b - d;\n    }, ab = (a) => 2 * a.length, bb = (a, b) => {\n      for (var c = 0, d = \"\"; !(c >= b / 4); ) {\n        var e = G[a + 4 * c >> 2];\n        if (0 == e)\n          break;\n        ++c;\n        65536 <= e ? (e -= 65536, d += String.fromCharCode(55296 | e >> 10, 56320 | e & 1023)) : d += String.fromCharCode(e);\n      }\n      return d;\n    }, cb = (a, b, c) => {\n      c ??= 2147483647;\n      if (4 > c)\n        return 0;\n      var d = b;\n      c = d + c - 4;\n      for (var e = 0; e < a.length; ++e) {\n        var h = a.charCodeAt(e);\n        if (55296 <= h && 57343 >= h) {\n          var k = a.charCodeAt(++e);\n          h = 65536 + ((h & 1023) << 10) | k & 1023;\n        }\n        G[b >> 2] = h;\n        b += 4;\n        if (b + 4 > c)\n          break;\n      }\n      G[b >> 2] = 0;\n      return b - d;\n    }, db = (a) => {\n      for (var b = 0, c = 0; c < a.length; ++c) {\n        var d = a.charCodeAt(c);\n        55296 <= d && 57343 >= d && ++c;\n        b += 4;\n      }\n      return b;\n    }, eb = Array(256), X = 0; 256 > X; ++X)\n      eb[X] = String.fromCharCode(X);\n    va = eb;\n    S = f.BindingError = class extends Error {\n      constructor(a) {\n        super(a);\n        this.name = \"BindingError\";\n      }\n    };\n    T = f.InternalError = class extends Error {\n      constructor(a) {\n        super(a);\n        this.name = \"InternalError\";\n      }\n    };\n    Object.assign(za.prototype, { get(a) {\n      return this.B[a];\n    }, has(a) {\n      return void 0 !== this.B[a];\n    }, F(a) {\n      var b = this.H.pop() || this.B.length;\n      this.B[b] = a;\n      return b;\n    }, G(a) {\n      this.B[a] = void 0;\n      this.H.push(a);\n    } });\n    V.B.push({ value: void 0 }, { value: null }, { value: true }, { value: false });\n    V.D = V.B.length;\n    f.count_emval_handles = () => {\n      for (var a = 0, b = V.D; b < V.B.length; ++b)\n        void 0 !== V.B[b] && ++a;\n      return a;\n    };\n    Qa = f.UnboundTypeError = ((a, b) => {\n      var c = Ga(b, function(d) {\n        this.name = b;\n        this.message = d;\n        d = Error(d).stack;\n        void 0 !== d && (this.stack = this.toString() + \"\\n\" + d.replace(/^Error(:[^\\n]*)?\\n/, \"\"));\n      });\n      c.prototype = Object.create(a.prototype);\n      c.prototype.constructor = c;\n      c.prototype.toString = function() {\n        return void 0 === this.message ? this.name : `${this.name}: ${this.message}`;\n      };\n      return c;\n    })(Error, \"UnboundTypeError\");\n    var gb = { n: (a, b, c) => {\n      new sa(a).F(b, c);\n      ta = a;\n      ua++;\n      throw ta;\n    }, o: () => {\n    }, l: (a, b, c, d) => {\n      b = O(b);\n      U(a, { name: b, fromWireType: function(e) {\n        return !!e;\n      }, toWireType: function(e, h) {\n        return h ? c : d;\n      }, argPackAdvance: 8, readValueFromPointer: function(e) {\n        return this.fromWireType(D[e]);\n      }, C: null });\n    }, k: (a, b) => {\n      b = O(b);\n      U(a, { name: b, fromWireType: (c) => {\n        if (!c)\n          throw new S(\"Cannot use deleted val. handle = \" + c);\n        var d = V.get(c).value;\n        Aa(c);\n        return d;\n      }, toWireType: (c, d) => Ba(d), argPackAdvance: 8, readValueFromPointer: Ca, C: null });\n    }, i: (a, b, c) => {\n      b = O(b);\n      U(a, { name: b, fromWireType: (d) => d, toWireType: (d, e) => e, argPackAdvance: 8, readValueFromPointer: Da(b, c), C: null });\n    }, d: (a, b, c, d, e, h, k) => {\n      var l = Ma(b, c);\n      a = O(a);\n      a = Ua(a);\n      e = Pa(d, e);\n      La(a, function() {\n        Ta(`Cannot call ${a} due to unbound types`, l);\n      }, b - 1);\n      xa(l, function(g) {\n        var n = a;\n        var p = a;\n        g = [g[0], null].concat(g.slice(1));\n        var q = e, m = g.length;\n        if (2 > m)\n          throw new S(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n        var r = null !== g[1] && false, y = Ia(g), A = \"void\" !== g[0].name;\n        q = [wa, q, h, Ha, g[0], g[1]];\n        for (var w = 0; w < m - 2; ++w)\n          q.push(g[w + 2]);\n        if (!y)\n          for (w = r ? 1 : 2; w < g.length; ++w)\n            null !== g[w].C && q.push(g[w].C);\n        y = Ia(g);\n        w = g.length;\n        var B = \"\", K = \"\";\n        for (m = 0; m < w - 2; ++m)\n          B += (0 !== m ? \", \" : \"\") + \"arg\" + m, K += (0 !== m ? \", \" : \"\") + \"arg\" + m + \"Wired\";\n        B = `\n        return function (${B}) {\n        if (arguments.length !== ${w - 2}) {\n          throwBindingError('function ${p} called with ' + arguments.length + ' arguments, expected ${w - 2}');\n        }`;\n        y && (B += \"var destructors = [];\\n\");\n        var Ea = y ? \"destructors\" : \"null\", ca = \"throwBindingError invoker fn runDestructors retType classParam\".split(\" \");\n        r && (B += \"var thisWired = classParam['toWireType'](\" + Ea + \", this);\\n\");\n        for (m = 0; m < w - 2; ++m)\n          B += \"var arg\" + m + \"Wired = argType\" + m + \"['toWireType'](\" + Ea + \", arg\" + m + \"); // \" + g[m + 2].name + \"\\n\", ca.push(\"argType\" + m);\n        r && (K = \"thisWired\" + (0 < K.length ? \", \" : \"\") + K);\n        B += (A || k ? \"var rv = \" : \"\") + \"invoker(fn\" + (0 < K.length ? \", \" : \"\") + K + \");\\n\";\n        if (y)\n          B += \"runDestructors(destructors);\\n\";\n        else\n          for (m = r ? 1 : 2; m < g.length; ++m)\n            r = 1 === m ? \"thisWired\" : \"arg\" + (m - 2) + \"Wired\", null !== g[m].C && (B += r + \"_dtor(\" + r + \"); // \" + g[m].name + \"\\n\", ca.push(r + \"_dtor\"));\n        A && (B += \"var ret = retType['fromWireType'](rv);\\nreturn ret;\\n\");\n        let [Fa, hb] = [ca, B + \"}\\n\"];\n        Fa.push(hb);\n        g = Ja(Fa).apply(null, q);\n        p = Ga(p, g);\n        g = b - 1;\n        if (!f.hasOwnProperty(n))\n          throw new T(\"Replacing nonexistant public symbol\");\n        void 0 !== f[n].A && void 0 !== g ? f[n].A[g] = p : (f[n] = p, f[n].L = g);\n        return [];\n      });\n    }, b: (a, b, c, d, e) => {\n      b = O(b);\n      -1 === e && (e = 4294967295);\n      e = (l) => l;\n      if (0 === d) {\n        var h = 32 - 8 * c;\n        e = (l) => l << h >>> h;\n      }\n      var k = b.includes(\"unsigned\") ? function(l, g) {\n        return g >>> 0;\n      } : function(l, g) {\n        return g;\n      };\n      U(a, {\n        name: b,\n        fromWireType: e,\n        toWireType: k,\n        argPackAdvance: 8,\n        readValueFromPointer: Va(b, c, 0 !== d),\n        C: null\n      });\n    }, a: (a, b, c) => {\n      function d(h) {\n        return new e(C.buffer, H[h + 4 >> 2], H[h >> 2]);\n      }\n      var e = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array][b];\n      c = O(c);\n      U(a, { name: c, fromWireType: d, argPackAdvance: 8, readValueFromPointer: d }, { M: true });\n    }, e: (a, b) => {\n      b = O(b);\n      var c = \"std::string\" === b;\n      U(a, { name: b, fromWireType: function(d) {\n        var e = H[d >> 2], h = d + 4;\n        if (c)\n          for (var k = h, l = 0; l <= e; ++l) {\n            var g = h + l;\n            if (l == e || 0 == D[g]) {\n              if (k) {\n                var n = k;\n                var p = D, q = n + (g - k);\n                for (k = n; p[k] && !(k >= q); )\n                  ++k;\n                if (16 < k - n && p.buffer && Xa)\n                  n = Xa.decode(p.subarray(n, k));\n                else {\n                  for (q = \"\"; n < k; ) {\n                    var m = p[n++];\n                    if (m & 128) {\n                      var r = p[n++] & 63;\n                      if (192 == (m & 224))\n                        q += String.fromCharCode((m & 31) << 6 | r);\n                      else {\n                        var y = p[n++] & 63;\n                        m = 224 == (m & 240) ? (m & 15) << 12 | r << 6 | y : (m & 7) << 18 | r << 12 | y << 6 | p[n++] & 63;\n                        65536 > m ? q += String.fromCharCode(m) : (m -= 65536, q += String.fromCharCode(55296 | m >> 10, 56320 | m & 1023));\n                      }\n                    } else\n                      q += String.fromCharCode(m);\n                  }\n                  n = q;\n                }\n              } else\n                n = \"\";\n              if (void 0 === A)\n                var A = n;\n              else\n                A += String.fromCharCode(0), A += n;\n              k = g + 1;\n            }\n          }\n        else {\n          A = Array(e);\n          for (l = 0; l < e; ++l)\n            A[l] = String.fromCharCode(D[h + l]);\n          A = A.join(\"\");\n        }\n        W(d);\n        return A;\n      }, toWireType: function(d, e) {\n        e instanceof ArrayBuffer && (e = new Uint8Array(e));\n        var h, k = \"string\" == typeof e;\n        if (!(k || e instanceof Uint8Array || e instanceof Uint8ClampedArray || e instanceof Int8Array))\n          throw new S(\"Cannot pass non-string to std::string\");\n        var l;\n        if (c && k)\n          for (h = l = 0; h < e.length; ++h) {\n            var g = e.charCodeAt(h);\n            127 >= g ? l++ : 2047 >= g ? l += 2 : 55296 <= g && 57343 >= g ? (l += 4, ++h) : l += 3;\n          }\n        else\n          l = e.length;\n        h = l;\n        l = fb(4 + h + 1);\n        g = l + 4;\n        H[l >> 2] = h;\n        if (c && k) {\n          if (k = g, g = h + 1, h = D, 0 < g) {\n            g = k + g - 1;\n            for (var n = 0; n < e.length; ++n) {\n              var p = e.charCodeAt(n);\n              if (55296 <= p && 57343 >= p) {\n                var q = e.charCodeAt(++n);\n                p = 65536 + ((p & 1023) << 10) | q & 1023;\n              }\n              if (127 >= p) {\n                if (k >= g)\n                  break;\n                h[k++] = p;\n              } else {\n                if (2047 >= p) {\n                  if (k + 1 >= g)\n                    break;\n                  h[k++] = 192 | p >> 6;\n                } else {\n                  if (65535 >= p) {\n                    if (k + 2 >= g)\n                      break;\n                    h[k++] = 224 | p >> 12;\n                  } else {\n                    if (k + 3 >= g)\n                      break;\n                    h[k++] = 240 | p >> 18;\n                    h[k++] = 128 | p >> 12 & 63;\n                  }\n                  h[k++] = 128 | p >> 6 & 63;\n                }\n                h[k++] = 128 | p & 63;\n              }\n            }\n            h[k] = 0;\n          }\n        } else if (k)\n          for (k = 0; k < h; ++k) {\n            n = e.charCodeAt(k);\n            if (255 < n)\n              throw W(g), new S(\"String has UTF-16 code units that do not fit in 8 bits\");\n            D[g + k] = n;\n          }\n        else\n          for (k = 0; k < h; ++k)\n            D[g + k] = e[k];\n        null !== d && d.push(W, l);\n        return l;\n      }, argPackAdvance: 8, readValueFromPointer: Wa, C(d) {\n        W(d);\n      } });\n    }, c: (a, b, c) => {\n      c = O(c);\n      if (2 === b) {\n        var d = Za;\n        var e = $a;\n        var h = ab;\n        var k = () => F;\n        var l = 1;\n      } else\n        4 === b && (d = bb, e = cb, h = db, k = () => H, l = 2);\n      U(a, { name: c, fromWireType: (g) => {\n        for (var n = H[g >> 2], p = k(), q, m = g + 4, r = 0; r <= n; ++r) {\n          var y = g + 4 + r * b;\n          if (r == n || 0 == p[y >> l])\n            m = d(m, y - m), void 0 === q ? q = m : (q += String.fromCharCode(0), q += m), m = y + b;\n        }\n        W(g);\n        return q;\n      }, toWireType: (g, n) => {\n        if (\"string\" != typeof n)\n          throw new S(`Cannot pass non-string to C++ string type ${c}`);\n        var p = h(n), q = fb(4 + p + b);\n        H[q >> 2] = p >> l;\n        e(n, q + 4, p + b);\n        null !== g && g.push(W, q);\n        return q;\n      }, argPackAdvance: 8, readValueFromPointer: Ca, C(g) {\n        W(g);\n      } });\n    }, m: (a, b) => {\n      b = O(b);\n      U(a, { N: true, name: b, argPackAdvance: 0, fromWireType: () => {\n      }, toWireType: () => {\n      } });\n    }, g: Aa, j: (a) => {\n      4 < a && (V.get(a).I += 1);\n    }, f: (a, b) => {\n      var c = Q[a];\n      if (void 0 === c)\n        throw a = \"_emval_take_value has unknown type \" + Sa(a), new S(a);\n      a = c;\n      a = a.readValueFromPointer(b);\n      return Ba(a);\n    }, h: () => {\n      x(\"\");\n    }, q: (a, b, c) => D.copyWithin(a, b, b + c), p: (a) => {\n      var b = D.length;\n      a >>>= 0;\n      if (2147483648 < a)\n        return false;\n      for (var c = 1; 4 >= c; c *= 2) {\n        var d = b * (1 + 0.2 / c);\n        d = Math.min(d, a + 100663296);\n        var e = Math;\n        d = Math.max(a, d);\n        a: {\n          e = (e.min.call(e, 2147483648, d + (65536 - d % 65536) % 65536) - z.buffer.byteLength + 65535) / 65536;\n          try {\n            z.grow(e);\n            ha();\n            var h = 1;\n            break a;\n          } catch (k) {\n          }\n          h = void 0;\n        }\n        if (h)\n          return true;\n      }\n      return false;\n    } }, Y = function() {\n      function a(c) {\n        Y = c.exports;\n        z = Y.r;\n        ha();\n        Na = Y.w;\n        ja.unshift(Y.s);\n        I--;\n        f.monitorRunDependencies?.(I);\n        0 == I && (null !== J && (clearInterval(J), J = null), L && (c = L, L = null, c()));\n        return Y;\n      }\n      var b = { a: gb };\n      I++;\n      f.monitorRunDependencies?.(I);\n      if (f.instantiateWasm)\n        try {\n          return f.instantiateWasm(\n            b,\n            a\n          );\n        } catch (c) {\n          u(`Module.instantiateWasm callback failed with error: ${c}`), t(c);\n        }\n      ra(b, function(c) {\n        a(c.instance);\n      }).catch(t);\n      return {};\n    }(), fb = (a) => (fb = Y.t)(a), W = (a) => (W = Y.u)(a), Ra = (a) => (Ra = Y.v)(a), Z;\n    L = function ib() {\n      Z || jb();\n      Z || (L = ib);\n    };\n    function jb() {\n      function a() {\n        if (!Z && (Z = true, f.calledRun = true, !da)) {\n          N(ja);\n          aa(f);\n          if (f.onRuntimeInitialized)\n            f.onRuntimeInitialized();\n          if (f.postRun)\n            for (\"function\" == typeof f.postRun && (f.postRun = [f.postRun]); f.postRun.length; ) {\n              var b = f.postRun.shift();\n              ka.unshift(b);\n            }\n          N(ka);\n        }\n      }\n      if (!(0 < I)) {\n        if (f.preRun)\n          for (\"function\" == typeof f.preRun && (f.preRun = [f.preRun]); f.preRun.length; )\n            la();\n        N(ia);\n        0 < I || (f.setStatus ? (f.setStatus(\"Running...\"), setTimeout(function() {\n          setTimeout(function() {\n            f.setStatus(\"\");\n          }, 1);\n          a();\n        }, 1)) : a());\n      }\n    }\n    if (f.preInit)\n      for (\"function\" == typeof f.preInit && (f.preInit = [f.preInit]); 0 < f.preInit.length; )\n        f.preInit.pop()();\n    jb();\n    return moduleArg.ready;\n  };\n})();\nvar lz4_codec_default = lz4_codec;\n\n// codecs/lz4/lz4_codec.wasm\nvar lz4_codec_default2 = __toBinary(\"\");\n\n// src/lz4.ts\nvar DEFAULT_ACCELERATION = 1;\nvar MAX_BUFFER_SIZE = 2113929216;\nvar emscriptenModule;\nvar init = () => lz4_codec_default({ noInitialRun: true, wasmBinary: lz4_codec_default2 });\nvar LZ4 = class LZ42 {\n  static codecId = \"lz4\";\n  static DEFAULT_ACCELERATION = DEFAULT_ACCELERATION;\n  static max_buffer_size = MAX_BUFFER_SIZE;\n  max_buffer_size = MAX_BUFFER_SIZE;\n  acceleration;\n  constructor(acceleration = DEFAULT_ACCELERATION) {\n    if (!Number.isInteger(acceleration)) {\n      throw Error(`Invalid acceleration \"${acceleration}\". Must be a positive integer.`);\n    }\n    this.acceleration = acceleration <= 0 ? DEFAULT_ACCELERATION : acceleration;\n  }\n  static fromConfig({ acceleration }) {\n    return new LZ42(acceleration);\n  }\n  async encode(data) {\n    if (!emscriptenModule) {\n      emscriptenModule = init();\n    }\n    if (data.length > MAX_BUFFER_SIZE) {\n      throw Error(`Codec does not support buffers of > ${MAX_BUFFER_SIZE} bytes.`);\n    }\n    const module = await emscriptenModule;\n    const view = module.compress(data, this.acceleration);\n    const result = new Uint8Array(view);\n    module.free_result();\n    return result;\n  }\n  async decode(data, out) {\n    if (!emscriptenModule) {\n      emscriptenModule = init();\n    }\n    if (data.length > MAX_BUFFER_SIZE) {\n      throw Error(`Codec does not support buffers of > ${MAX_BUFFER_SIZE} bytes.`);\n    }\n    const module = await emscriptenModule;\n    const view = module.decompress(data);\n    const result = new Uint8Array(view);\n    module.free_result();\n    if (out !== void 0) {\n      out.set(result);\n      return out;\n    }\n    return result;\n  }\n};\nvar lz4_default = LZ4;\nexport {\n  lz4_default as default\n};\n","import {\n  __toBinary\n} from \"./chunk-INHXZS53.js\";\n\n// codecs/zstd/zstd_codec.js\nvar zstd_codec = (() => {\n  var _scriptName = typeof document != \"undefined\" ? document.currentScript?.src : void 0;\n  return function(moduleArg = {}) {\n    var moduleRtn;\n    var f = moduleArg, aa, q, ba = new Promise((a, b) => {\n      aa = a;\n      q = b;\n    }), ca = Object.assign({}, f), r = f.printErr || console.error.bind(console);\n    Object.assign(f, ca);\n    ca = null;\n    var t;\n    f.wasmBinary && (t = f.wasmBinary);\n    var u, da = false, x, z, A, B, D, E, ea, ha;\n    function ia() {\n      var a = u.buffer;\n      f.HEAP8 = x = new Int8Array(a);\n      f.HEAP16 = A = new Int16Array(a);\n      f.HEAPU8 = z = new Uint8Array(a);\n      f.HEAPU16 = B = new Uint16Array(a);\n      f.HEAP32 = D = new Int32Array(a);\n      f.HEAPU32 = E = new Uint32Array(a);\n      f.HEAPF32 = ea = new Float32Array(a);\n      f.HEAPF64 = ha = new Float64Array(a);\n    }\n    var ja = [], ka = [], la = [], ma = false;\n    function na() {\n      var a = f.preRun.shift();\n      ja.unshift(a);\n    }\n    var F = 0, H = null, I = null;\n    function oa(a) {\n      f.onAbort?.(a);\n      a = \"Aborted(\" + a + \")\";\n      r(a);\n      da = true;\n      a += \". Build with -sASSERTIONS for more info.\";\n      ma && pa();\n      a = new WebAssembly.RuntimeError(a);\n      q(a);\n      throw a;\n    }\n    var qa = (a) => a.startsWith(\"data:application/octet-stream;base64,\"), ra = (a) => a.startsWith(\"file://\"), J;\n    function sa(a) {\n      if (a == J && t)\n        return new Uint8Array(t);\n      throw \"both async and sync fetching of the wasm failed\";\n    }\n    function ta(a) {\n      return t ? Promise.resolve().then(() => sa(a)) : (void 0)(a).then((b) => new Uint8Array(b), () => sa(a));\n    }\n    function ua(a, b, c) {\n      return ta(a).then((d) => WebAssembly.instantiate(d, b)).then(c, (d) => {\n        r(`failed to asynchronously prepare wasm: ${d}`);\n        oa(d);\n      });\n    }\n    function va(a, b) {\n      var c = J;\n      return t || \"function\" != typeof WebAssembly.instantiateStreaming || qa(c) || ra(c) || \"function\" != typeof fetch ? ua(c, a, b) : fetch(c, { credentials: \"same-origin\" }).then((d) => WebAssembly.instantiateStreaming(d, a).then(b, function(e) {\n        r(`wasm streaming compile failed: ${e}`);\n        r(\"falling back to ArrayBuffer instantiation\");\n        return ua(c, a, b);\n      }));\n    }\n    var K = (a) => {\n      for (; 0 < a.length; )\n        a.shift()(f);\n    }, wa, L = (a) => {\n      for (var b = \"\"; z[a]; )\n        b += wa[z[a++]];\n      return b;\n    }, N = {}, O = {}, P = {}, Q, xa = (a) => {\n      throw new Q(a);\n    }, R, ya = (a, b) => {\n      function c(k) {\n        k = b(k);\n        if (k.length !== d.length)\n          throw new R(\"Mismatched type converter count\");\n        for (var g = 0; g < d.length; ++g)\n          S(d[g], k[g]);\n      }\n      var d = [];\n      d.forEach(function(k) {\n        P[k] = a;\n      });\n      var e = Array(a.length), h = [], l = 0;\n      a.forEach((k, g) => {\n        O.hasOwnProperty(k) ? e[g] = O[k] : (h.push(k), N.hasOwnProperty(k) || (N[k] = []), N[k].push(() => {\n          e[g] = O[k];\n          ++l;\n          l === h.length && c(e);\n        }));\n      });\n      0 === h.length && c(e);\n    };\n    function za(a, b, c = {}) {\n      var d = b.name;\n      if (!a)\n        throw new Q(`type \"${d}\" must have a positive integer typeid pointer`);\n      if (O.hasOwnProperty(a)) {\n        if (c.H)\n          return;\n        throw new Q(`Cannot register type '${d}' twice`);\n      }\n      O[a] = b;\n      delete P[a];\n      N.hasOwnProperty(a) && (b = N[a], delete N[a], b.forEach((e) => e()));\n    }\n    function S(a, b, c = {}) {\n      if (!(\"argPackAdvance\" in b))\n        throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n      return za(a, b, c);\n    }\n    var T = [], U = [], Aa = (a) => {\n      switch (a) {\n        case void 0:\n          return 2;\n        case null:\n          return 4;\n        case true:\n          return 6;\n        case false:\n          return 8;\n        default:\n          const b = T.pop() || U.length;\n          U[b] = a;\n          U[b + 1] = 1;\n          return b;\n      }\n    };\n    function V(a) {\n      return this.fromWireType(E[a >> 2]);\n    }\n    var Ba = { name: \"emscripten::val\", fromWireType: (a) => {\n      if (!a)\n        throw new Q(\"Cannot use deleted val. handle = \" + a);\n      var b = U[a];\n      9 < a && 0 === --U[a + 1] && (U[a] = void 0, T.push(a));\n      return b;\n    }, toWireType: (a, b) => Aa(b), argPackAdvance: 8, readValueFromPointer: V, F: null }, Ca = (a, b) => {\n      switch (b) {\n        case 4:\n          return function(c) {\n            return this.fromWireType(ea[c >> 2]);\n          };\n        case 8:\n          return function(c) {\n            return this.fromWireType(ha[c >> 3]);\n          };\n        default:\n          throw new TypeError(`invalid float width (${b}): ${a}`);\n      }\n    }, Da = (a, b) => Object.defineProperty(b, \"name\", { value: a }), Ea = (a) => {\n      for (; a.length; ) {\n        var b = a.pop();\n        a.pop()(b);\n      }\n    };\n    function Fa(a) {\n      for (var b = 1; b < a.length; ++b)\n        if (null !== a[b] && void 0 === a[b].F)\n          return true;\n      return false;\n    }\n    function Ga(a) {\n      var b = Function;\n      if (!(b instanceof Function))\n        throw new TypeError(`new_ called with constructor type ${typeof b} which is not a function`);\n      var c = Da(b.name || \"unknownFunctionName\", function() {\n      });\n      c.prototype = b.prototype;\n      c = new c();\n      a = b.apply(c, a);\n      return a instanceof Object ? a : c;\n    }\n    var Ha = (a, b) => {\n      if (void 0 === f[a].D) {\n        var c = f[a];\n        f[a] = function(...d) {\n          if (!f[a].D.hasOwnProperty(d.length))\n            throw new Q(`Function '${b}' called with an invalid number of arguments (${d.length}) - expects one of (${f[a].D})!`);\n          return f[a].D[d.length].apply(this, d);\n        };\n        f[a].D = [];\n        f[a].D[c.G] = c;\n      }\n    }, Ia = (a, b, c) => {\n      if (f.hasOwnProperty(a)) {\n        if (void 0 === c || void 0 !== f[a].D && void 0 !== f[a].D[c])\n          throw new Q(`Cannot register public name '${a}' twice`);\n        Ha(a, a);\n        if (f.hasOwnProperty(c))\n          throw new Q(`Cannot register multiple overloads of a function with the same number of arguments (${c})!`);\n        f[a].D[c] = b;\n      } else\n        f[a] = b, void 0 !== c && (f[a].J = c);\n    }, Ja = (a, b) => {\n      for (var c = [], d = 0; d < a; d++)\n        c.push(E[b + 4 * d >> 2]);\n      return c;\n    }, Ka, La = (a, b, c = []) => {\n      a.includes(\"j\") ? (a = a.replace(/p/g, \"i\"), b = (0, f[\"dynCall_\" + a])(b, ...c)) : b = Ka.get(b)(...c);\n      return b;\n    }, Pa = (a, b) => (...c) => La(a, b, c), Qa = (a, b) => {\n      a = L(a);\n      var c = a.includes(\"j\") ? Pa(a, b) : Ka.get(b);\n      if (\"function\" != typeof c)\n        throw new Q(`unknown function pointer with signature ${a}: ${b}`);\n      return c;\n    }, Ra, Ta = (a) => {\n      a = Sa(a);\n      var b = L(a);\n      W(a);\n      return b;\n    }, Ua = (a, b) => {\n      function c(h) {\n        e[h] || O[h] || (P[h] ? P[h].forEach(c) : (d.push(h), e[h] = true));\n      }\n      var d = [], e = {};\n      b.forEach(c);\n      throw new Ra(`${a}: ` + d.map(Ta).join([\", \"]));\n    }, Va = (a) => {\n      a = a.trim();\n      const b = a.indexOf(\"(\");\n      return -1 !== b ? a.substr(0, b) : a;\n    }, Wa = (a, b, c) => {\n      switch (b) {\n        case 1:\n          return c ? (d) => x[d] : (d) => z[d];\n        case 2:\n          return c ? (d) => A[d >> 1] : (d) => B[d >> 1];\n        case 4:\n          return c ? (d) => D[d >> 2] : (d) => E[d >> 2];\n        default:\n          throw new TypeError(`invalid integer width (${b}): ${a}`);\n      }\n    }, Xa = \"undefined\" != typeof TextDecoder ? new TextDecoder() : void 0, Ya = (a, b) => {\n      var c = z, d = a + b;\n      for (b = a; c[b] && !(b >= d); )\n        ++b;\n      if (16 < b - a && c.buffer && Xa)\n        return Xa.decode(c.subarray(a, b));\n      for (d = \"\"; a < b; ) {\n        var e = c[a++];\n        if (e & 128) {\n          var h = c[a++] & 63;\n          if (192 == (e & 224))\n            d += String.fromCharCode((e & 31) << 6 | h);\n          else {\n            var l = c[a++] & 63;\n            e = 224 == (e & 240) ? (e & 15) << 12 | h << 6 | l : (e & 7) << 18 | h << 12 | l << 6 | c[a++] & 63;\n            65536 > e ? d += String.fromCharCode(e) : (e -= 65536, d += String.fromCharCode(55296 | e >> 10, 56320 | e & 1023));\n          }\n        } else\n          d += String.fromCharCode(e);\n      }\n      return d;\n    }, Za = \"undefined\" != typeof TextDecoder ? new TextDecoder(\"utf-16le\") : void 0, $a = (a, b) => {\n      var c = a >> 1;\n      for (var d = c + b / 2; !(c >= d) && B[c]; )\n        ++c;\n      c <<= 1;\n      if (32 < c - a && Za)\n        return Za.decode(z.subarray(a, c));\n      c = \"\";\n      for (d = 0; !(d >= b / 2); ++d) {\n        var e = A[a + 2 * d >> 1];\n        if (0 == e)\n          break;\n        c += String.fromCharCode(e);\n      }\n      return c;\n    }, ab = (a, b, c) => {\n      c ??= 2147483647;\n      if (2 > c)\n        return 0;\n      c -= 2;\n      var d = b;\n      c = c < 2 * a.length ? c / 2 : a.length;\n      for (var e = 0; e < c; ++e)\n        A[b >> 1] = a.charCodeAt(e), b += 2;\n      A[b >> 1] = 0;\n      return b - d;\n    }, bb = (a) => 2 * a.length, cb = (a, b) => {\n      for (var c = 0, d = \"\"; !(c >= b / 4); ) {\n        var e = D[a + 4 * c >> 2];\n        if (0 == e)\n          break;\n        ++c;\n        65536 <= e ? (e -= 65536, d += String.fromCharCode(55296 | e >> 10, 56320 | e & 1023)) : d += String.fromCharCode(e);\n      }\n      return d;\n    }, db = (a, b, c) => {\n      c ??= 2147483647;\n      if (4 > c)\n        return 0;\n      var d = b;\n      c = d + c - 4;\n      for (var e = 0; e < a.length; ++e) {\n        var h = a.charCodeAt(e);\n        if (55296 <= h && 57343 >= h) {\n          var l = a.charCodeAt(++e);\n          h = 65536 + ((h & 1023) << 10) | l & 1023;\n        }\n        D[b >> 2] = h;\n        b += 4;\n        if (b + 4 > c)\n          break;\n      }\n      D[b >> 2] = 0;\n      return b - d;\n    }, eb = (a) => {\n      for (var b = 0, c = 0; c < a.length; ++c) {\n        var d = a.charCodeAt(c);\n        55296 <= d && 57343 >= d && ++c;\n        b += 4;\n      }\n      return b;\n    }, gb = (a) => {\n      a = a.getArg(X.C, 0);\n      return fb(a);\n    };\n    f.incrementExceptionRefcount = (a) => {\n      a = gb(a);\n      hb(a);\n    };\n    f.decrementExceptionRefcount = (a) => {\n      a = gb(a);\n      ib(a);\n    };\n    f.getExceptionMessage = (a) => {\n      var b = gb(a);\n      a = jb();\n      var c = kb(4), d = kb(4);\n      lb(b, c, d);\n      b = E[c >> 2];\n      d = E[d >> 2];\n      c = b ? Ya(b) : \"\";\n      W(b);\n      if (d) {\n        var e = d ? Ya(d) : \"\";\n        W(d);\n      }\n      mb(a);\n      return [c, e];\n    };\n    for (var nb = Array(256), Y = 0; 256 > Y; ++Y)\n      nb[Y] = String.fromCharCode(Y);\n    wa = nb;\n    Q = f.BindingError = class extends Error {\n      constructor(a) {\n        super(a);\n        this.name = \"BindingError\";\n      }\n    };\n    R = f.InternalError = class extends Error {\n      constructor(a) {\n        super(a);\n        this.name = \"InternalError\";\n      }\n    };\n    U.push(0, 1, void 0, 1, null, 1, true, 1, false, 1);\n    f.count_emval_handles = () => U.length / 2 - 5 - T.length;\n    Ra = f.UnboundTypeError = ((a, b) => {\n      var c = Da(b, function(d) {\n        this.name = b;\n        this.message = d;\n        d = Error(d).stack;\n        void 0 !== d && (this.stack = this.toString() + \"\\n\" + d.replace(/^Error(:[^\\n]*)?\\n/, \"\"));\n      });\n      c.prototype = Object.create(a.prototype);\n      c.prototype.constructor = c;\n      c.prototype.toString = function() {\n        return void 0 === this.message ? this.name : `${this.name}: ${this.message}`;\n      };\n      return c;\n    })(Error, \"UnboundTypeError\");\n    var pb = { l: () => {\n      oa(\"\");\n    }, k: () => {\n    }, i: (a, b, c, d) => {\n      b = L(b);\n      S(a, { name: b, fromWireType: function(e) {\n        return !!e;\n      }, toWireType: function(e, h) {\n        return h ? c : d;\n      }, argPackAdvance: 8, readValueFromPointer: function(e) {\n        return this.fromWireType(z[e]);\n      }, F: null });\n    }, h: (a) => S(a, Ba), e: (a, b, c) => {\n      b = L(b);\n      S(a, { name: b, fromWireType: (d) => d, toWireType: (d, e) => e, argPackAdvance: 8, readValueFromPointer: Ca(b, c), F: null });\n    }, d: (a, b, c, d, e, h, l) => {\n      var k = Ja(b, c);\n      a = L(a);\n      a = Va(a);\n      e = Qa(d, e);\n      Ia(a, function() {\n        Ua(`Cannot call ${a} due to unbound types`, k);\n      }, b - 1);\n      ya(\n        k,\n        (g) => {\n          var m = a;\n          var n = a;\n          g = [g[0], null].concat(g.slice(1));\n          var w = e, p = g.length;\n          if (2 > p)\n            throw new Q(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n          var C = null !== g[1] && false, M = Fa(g), Ma = \"void\" !== g[0].name;\n          w = [n, xa, w, h, Ea, g[0], g[1]];\n          for (var v = 0; v < p - 2; ++v)\n            w.push(g[v + 2]);\n          if (!M)\n            for (v = C ? 1 : 2; v < g.length; ++v)\n              null !== g[v].F && w.push(g[v].F);\n          M = Fa(g);\n          v = g.length;\n          var y = \"\", G = \"\";\n          for (p = 0; p < v - 2; ++p)\n            y += (0 !== p ? \", \" : \"\") + \"arg\" + p, G += (0 !== p ? \", \" : \"\") + \"arg\" + p + \"Wired\";\n          y = `\n        return function (${y}) {\n        if (arguments.length !== ${v - 2}) {\n          throwBindingError('function ' + humanName + ' called with ' + arguments.length + ' arguments, expected ${v - 2}');\n        }`;\n          M && (y += \"var destructors = [];\\n\");\n          var Na = M ? \"destructors\" : \"null\", fa = \"humanName throwBindingError invoker fn runDestructors retType classParam\".split(\" \");\n          C && (y += \"var thisWired = classParam['toWireType'](\" + Na + \", this);\\n\");\n          for (p = 0; p < v - 2; ++p)\n            y += \"var arg\" + p + \"Wired = argType\" + p + \"['toWireType'](\" + Na + \", arg\" + p + \");\\n\", fa.push(\"argType\" + p);\n          C && (G = \"thisWired\" + (0 < G.length ? \", \" : \"\") + G);\n          y += (Ma || l ? \"var rv = \" : \"\") + \"invoker(fn\" + (0 < G.length ? \", \" : \"\") + G + \");\\n\";\n          if (M)\n            y += \"runDestructors(destructors);\\n\";\n          else\n            for (p = C ? 1 : 2; p < g.length; ++p)\n              C = 1 === p ? \"thisWired\" : \"arg\" + (p - 2) + \"Wired\", null !== g[p].F && (y += `${C}_dtor(${C});\n`, fa.push(`${C}_dtor`));\n          Ma && (y += \"var ret = retType['fromWireType'](rv);\\nreturn ret;\\n\");\n          let [Oa, qb] = [fa, y + \"}\\n\"];\n          Oa.push(qb);\n          g = Ga(Oa)(...w);\n          n = Da(n, g);\n          g = b - 1;\n          if (!f.hasOwnProperty(m))\n            throw new R(\"Replacing nonexistent public symbol\");\n          void 0 !== f[m].D && void 0 !== g ? f[m].D[g] = n : (f[m] = n, f[m].G = g);\n          return [];\n        }\n      );\n    }, b: (a, b, c, d, e) => {\n      b = L(b);\n      -1 === e && (e = 4294967295);\n      e = (k) => k;\n      if (0 === d) {\n        var h = 32 - 8 * c;\n        e = (k) => k << h >>> h;\n      }\n      var l = b.includes(\"unsigned\") ? function(k, g) {\n        return g >>> 0;\n      } : function(k, g) {\n        return g;\n      };\n      S(a, { name: b, fromWireType: e, toWireType: l, argPackAdvance: 8, readValueFromPointer: Wa(b, c, 0 !== d), F: null });\n    }, a: (a, b, c) => {\n      function d(h) {\n        return new e(x.buffer, E[h + 4 >> 2], E[h >> 2]);\n      }\n      var e = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array][b];\n      c = L(c);\n      S(a, {\n        name: c,\n        fromWireType: d,\n        argPackAdvance: 8,\n        readValueFromPointer: d\n      }, { H: true });\n    }, f: (a, b) => {\n      b = L(b);\n      var c = \"std::string\" === b;\n      S(a, { name: b, fromWireType: function(d) {\n        var e = E[d >> 2], h = d + 4;\n        if (c)\n          for (var l = h, k = 0; k <= e; ++k) {\n            var g = h + k;\n            if (k == e || 0 == z[g]) {\n              l = l ? Ya(l, g - l) : \"\";\n              if (void 0 === m)\n                var m = l;\n              else\n                m += String.fromCharCode(0), m += l;\n              l = g + 1;\n            }\n          }\n        else {\n          m = Array(e);\n          for (k = 0; k < e; ++k)\n            m[k] = String.fromCharCode(z[h + k]);\n          m = m.join(\"\");\n        }\n        W(d);\n        return m;\n      }, toWireType: function(d, e) {\n        e instanceof ArrayBuffer && (e = new Uint8Array(e));\n        var h, l = \"string\" == typeof e;\n        if (!(l || e instanceof Uint8Array || e instanceof Uint8ClampedArray || e instanceof Int8Array))\n          throw new Q(\"Cannot pass non-string to std::string\");\n        var k;\n        if (c && l)\n          for (h = k = 0; h < e.length; ++h) {\n            var g = e.charCodeAt(h);\n            127 >= g ? k++ : 2047 >= g ? k += 2 : 55296 <= g && 57343 >= g ? (k += 4, ++h) : k += 3;\n          }\n        else\n          k = e.length;\n        h = k;\n        k = ob(4 + h + 1);\n        g = k + 4;\n        E[k >> 2] = h;\n        if (c && l) {\n          if (l = g, g = h + 1, h = z, 0 < g) {\n            g = l + g - 1;\n            for (var m = 0; m < e.length; ++m) {\n              var n = e.charCodeAt(m);\n              if (55296 <= n && 57343 >= n) {\n                var w = e.charCodeAt(++m);\n                n = 65536 + ((n & 1023) << 10) | w & 1023;\n              }\n              if (127 >= n) {\n                if (l >= g)\n                  break;\n                h[l++] = n;\n              } else {\n                if (2047 >= n) {\n                  if (l + 1 >= g)\n                    break;\n                  h[l++] = 192 | n >> 6;\n                } else {\n                  if (65535 >= n) {\n                    if (l + 2 >= g)\n                      break;\n                    h[l++] = 224 | n >> 12;\n                  } else {\n                    if (l + 3 >= g)\n                      break;\n                    h[l++] = 240 | n >> 18;\n                    h[l++] = 128 | n >> 12 & 63;\n                  }\n                  h[l++] = 128 | n >> 6 & 63;\n                }\n                h[l++] = 128 | n & 63;\n              }\n            }\n            h[l] = 0;\n          }\n        } else if (l)\n          for (l = 0; l < h; ++l) {\n            m = e.charCodeAt(l);\n            if (255 < m)\n              throw W(g), new Q(\"String has UTF-16 code units that do not fit in 8 bits\");\n            z[g + l] = m;\n          }\n        else\n          for (l = 0; l < h; ++l)\n            z[g + l] = e[l];\n        null !== d && d.push(W, k);\n        return k;\n      }, argPackAdvance: 8, readValueFromPointer: V, F(d) {\n        W(d);\n      } });\n    }, c: (a, b, c) => {\n      c = L(c);\n      if (2 === b) {\n        var d = $a;\n        var e = ab;\n        var h = bb;\n        var l = (k) => B[k >> 1];\n      } else\n        4 === b && (d = cb, e = db, h = eb, l = (k) => E[k >> 2]);\n      S(a, { name: c, fromWireType: (k) => {\n        for (var g = E[k >> 2], m, n = k + 4, w = 0; w <= g; ++w) {\n          var p = k + 4 + w * b;\n          if (w == g || 0 == l(p))\n            n = d(n, p - n), void 0 === m ? m = n : (m += String.fromCharCode(0), m += n), n = p + b;\n        }\n        W(k);\n        return m;\n      }, toWireType: (k, g) => {\n        if (\"string\" != typeof g)\n          throw new Q(`Cannot pass non-string to C++ string type ${c}`);\n        var m = h(g), n = ob(4 + m + b);\n        E[n >> 2] = m / b;\n        e(g, n + 4, m + b);\n        null !== k && k.push(W, n);\n        return n;\n      }, argPackAdvance: 8, readValueFromPointer: V, F(k) {\n        W(k);\n      } });\n    }, j: (a, b) => {\n      b = L(b);\n      S(a, {\n        I: true,\n        name: b,\n        argPackAdvance: 0,\n        fromWireType: () => {\n        },\n        toWireType: () => {\n        }\n      });\n    }, n: (a, b, c) => z.copyWithin(a, b, b + c), g: (a, b) => {\n      var c = O[a];\n      if (void 0 === c)\n        throw a = `${\"_emval_take_value\"} has unknown type ${Ta(a)}`, new Q(a);\n      a = c;\n      a = a.readValueFromPointer(b);\n      return Aa(a);\n    }, m: (a) => {\n      var b = z.length;\n      a >>>= 0;\n      if (2147483648 < a)\n        return false;\n      for (var c = 1; 4 >= c; c *= 2) {\n        var d = b * (1 + 0.2 / c);\n        d = Math.min(d, a + 100663296);\n        var e = Math;\n        d = Math.max(a, d);\n        a: {\n          e = (e.min.call(e, 2147483648, d + (65536 - d % 65536) % 65536) - u.buffer.byteLength + 65535) / 65536;\n          try {\n            u.grow(e);\n            ia();\n            var h = 1;\n            break a;\n          } catch (l) {\n          }\n          h = void 0;\n        }\n        if (h)\n          return true;\n      }\n      return false;\n    } }, X = function() {\n      function a(c) {\n        X = c.exports;\n        u = X.o;\n        ia();\n        Ka = X.t;\n        ka.unshift(X.p);\n        F--;\n        f.monitorRunDependencies?.(F);\n        0 == F && (null !== H && (clearInterval(H), H = null), I && (c = I, I = null, c()));\n        return X;\n      }\n      var b = { a: pb };\n      F++;\n      f.monitorRunDependencies?.(F);\n      if (f.instantiateWasm)\n        try {\n          return f.instantiateWasm(b, a);\n        } catch (c) {\n          r(`Module.instantiateWasm callback failed with error: ${c}`), q(c);\n        }\n      J ||= qa(\"zstd_codec.wasm\") ? \"zstd_codec.wasm\" : f.locateFile ? f.locateFile(\"zstd_codec.wasm\", \"\") : \"zstd_codec.wasm\";\n      va(b, function(c) {\n        a(c.instance);\n      }).catch(q);\n      return {};\n    }(), ob = (a) => (ob = X.q)(a), W = (a) => (W = X.r)(a), Sa = (a) => (Sa = X.s)(a), pa = () => (pa = X.u)(), mb = (a) => (mb = X.v)(a), kb = (a) => (kb = X.w)(a), jb = () => (jb = X.x)(), ib = (a) => (ib = X.y)(a), hb = (a) => (hb = X.z)(a), fb = (a) => (fb = X.A)(a), lb = (a, b, c) => (lb = X.B)(a, b, c), Z;\n    I = function rb() {\n      Z || sb();\n      Z || (I = rb);\n    };\n    function sb() {\n      function a() {\n        if (!Z && (Z = true, f.calledRun = true, !da)) {\n          ma = true;\n          K(ka);\n          aa(f);\n          f.onRuntimeInitialized?.();\n          if (f.postRun)\n            for (\"function\" == typeof f.postRun && (f.postRun = [f.postRun]); f.postRun.length; ) {\n              var b = f.postRun.shift();\n              la.unshift(b);\n            }\n          K(la);\n        }\n      }\n      if (!(0 < F)) {\n        if (f.preRun)\n          for (\"function\" == typeof f.preRun && (f.preRun = [f.preRun]); f.preRun.length; )\n            na();\n        K(ja);\n        0 < F || (f.setStatus ? (f.setStatus(\"Running...\"), setTimeout(function() {\n          setTimeout(function() {\n            f.setStatus(\"\");\n          }, 1);\n          a();\n        }, 1)) : a());\n      }\n    }\n    if (f.preInit)\n      for (\"function\" == typeof f.preInit && (f.preInit = [f.preInit]); 0 < f.preInit.length; )\n        f.preInit.pop()();\n    sb();\n    moduleRtn = ba;\n    return moduleRtn;\n  };\n})();\nvar zstd_codec_default = zstd_codec;\n\n// codecs/zstd/zstd_codec.wasm\nvar zstd_codec_default2 = __toBinary(\"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IAdBgBNyIgg7AAULIAIhBANAIAQgBUYiB0UEQCAEKAIAIARBBGohBC8ABUGAGHFBgAhGDQELCyAHBEAgBiAIQf9ncUGACHIiCDsABQsDQCACIAVGIgRFBEAgAigCACACQQRqIQIvAAVBwAFxQcAARg0BCwsgBARAIAYgCEG//gNxQcAAcjsABQsgAyAGNgIUCyAMIANBFGoQHwwBCyADIAAQTCICNgIMIAJFDQMgCiADQQxqEB8LIABB0QAQEUUNAAsgAyAAEJkBIgE2AhxBACECIAFFDQIgAEHFABARRQ0CCyADQQxqIAAgCxAnIABBmANqQRQQEiADKQIMIQ4gAygCHCEBQStBAEEBQQFBARAWIgIgATYCECACIA43AgggAkGs0AE2AgAMAQtBACECCyADQSBqJAAgAgsTACAAQZgDakEQEBIgASkCABBICyIAIABBCEEAQQFBAUEBEBYiACABNwIIIABBqJgBNgIAIAALzQEBBH8jAEEwayIBJAAgAUEANgIsAkAgACABQSxqEK8BDQAgASgCLCICQQFrIAAoAgAiBCAAKAIEEDpPDQAgAUEgaiAEIAIQKiEDIAAgACgCACACajYCACABIAMpAwA3AxggAUEQakHbGhAOIQIgASABKQMYNwMIIAEgAikCADcDACABQQhqIAEQmgEEQCMAQRBrIgIkACAAQZgDakEQEBIgAkEIakHfJBAOKQMAEEggAkEQaiQAIQMMAQsgACADEEchAwsgAUEwaiQAIAMLPwAgAEGYA2pBEBASIAEoAgAhASACKAIAIQJBLUEAQQFBAUEBEBYiACACNgIMIAAgATYCCCAAQZjRATYCACAACwsAIABCADcCACAAC60DAgV/AX4jAEEQayIDJAACQAJAAkACQAJAAkAgACgCACIBIAAoAgQiBEEAEBlBygBrQR93DggBAgQEBAMEAAQLIAAgAUEBajYCACAAEB0iAUUNBCABQQAgAEHFABARGyECDAQLIAAgAUEBajYCACAAQQhqIQEgACgCCCAAKAIMEB4hBANAIABBxQAQEUUEQCADIAAQTCIFNgIIIAVFDQUgASADQQhqEB8MAQsLIANBCGoiAiAAIAQQJyAAQZgDakEQEBIgAikCACEGQSlBAEEBQQFBARAWIgAgBjcCCCAAQYzSATYCACAAIQIMAwsgASAEQQEQGUHa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IgRB/wFxIgJrdjYAACABIAJBA3ZqIgUgByADIAtqLQAAQQJ0aigCACIGIAcgAyAKai0AAEECdGooAgAiAXYgAXIgByADIAhqLQAAQQJ0aigCACICdiAQIAIgASAGamoiAXZyIAJyIgZBICABIARBB3FqIgFB/wFxIgJrdjYAACABQQdxIQQgBSACQQN2aiEBIANBBksgA0EGayEDDQALCyABIAZBAXZBgICAgHhyQSAgBEH/////B2siAkEPcSIDa3Y2AAAgCSABIANBA3ZqIgEgASAJSxsiASAJTw0AIAJBB3FBAEcgAGsgAWohDAsgDAsEAEEBCw0AIAAgAUECdGooAgALGwAgASgCEEF/RgRAIAFBADYCDCABIAA2AhALCzABAX8gAC8ABSICQcABcUGAAUcEQCACQf8BcUHAAEkPCyAAIAEgACgCACgCABEBAAv6AQEFfyABIAIoAgQiBUYEfyACKAIAIQIjAEEQayIEJAAgBCABNgIMIAQgBTYCCAJAAn8CQAJAIARBCGoiAyAEQQxqIgYgAygCACAGKAIAELYBGygCACIDQQRPBEAgACACckEDcQ0BA0AgACgCACACKAIARw0CIAJBBGohAiAAQQRqIQAgA0EEayIDQQNLDQALCyADRQ0BCwNAIAAtAAAiBiACLQAAIgdGBEAgAkEBaiECIABBAWohACADQQFrIgMNAQwCCwsgBiAHawwBC0EACyIADQBBACEAIAEgBUYNAEF/QQEgASAFSRshAAsgBEEQaiQAIAAFQQELRQsNACAAKAIAIABBDGpGC+8DAQZ/AkAgAEUNACAAKAKQ6wENACAAKAKE6wEhBCAAKAKA6wEhAwJAIAAoApTrASIBRQ0AIAEoArjVASEFIAEoArTVASECAkACQCABKAIAIgYEQCACRQ0BIAUgBiACEQAAIAUgASACEQAADAMLIAJFDQEgBSABIAIRAAAMAgsgBhAVCyABEBULIABBADYCpOsBIABCADcClOsBAkAgACgCuOsBIgFFDQAgAwRAIAQgASADEQAADAELIAEQFQsgAEEANgK46wECQCAAKALc6wEiAUUNAAJAAkACQCAAKALg6wFBBWsOAwABAgMLIAEoAgAQFSABKAIwEBUgASgCPBAVIAEQFQwCCyABKAIAEBUgASgCHBAVIAEoAigQFSABEBUMAQsgASgC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NwMIIAAgAUEIahAaGiABIABBABC6AiIDNgIcIANFDQAgAyECIAAoAgAgACgCBEEAEBlByQBHDQAgASAAQQAQRiICNgIYIAIEfyAAIAFBHGogAUEYahBKBUEACyECCyABQTBqJAAgAguGAQECfyMAQRBrIgIkAAJAAkAgACgCACAAKAIEQQAQGSIBQcQARwRAIAFB/wFxQdQARw0BIAIgABCYASIBNgIMIAFFDQIgAEGUAWogAkEMahAfDAILIAIgABDmASIBNgIIIAFFDQEgAEGUAWogAkEIahAfDAELIAAQ4gEhAQsgAkEQaiQAIAELDwAgACAAKAIAIAFyNgIACzEBAX8gAEIANwIMIAAgAEEcajYCCCAAIABBDGoiATYCBCAAIAE2AgAgAEIANwIUIAALPwAgAEGYA2pBEBASIAEoAgAhASACKAIAIQJBGkEAQQFBAUEBEBYiACACNgIMIAAgATYCCCAAQdjOATYCACAACyIAIABBKkEAQQFBAUEBEBYiACABNgIIIABBrLgBNgIAIAALPwEBfwJAIAAgAUYNAANAIAAgAUEBayIBTw0BIAAtAAAhAiAAIAEtAAA6AAAgASACOgAAIABBAWohAAwACwALCxcAIABBMGtBCkkgAEEgckHhAGtBBklyCwkAIAAgARCjAgsEACAACykAIABBBUEAQQFBAUEBEBYiACACNwIMIAAgATYCCCAAQfzeATYCACAACxwAIAAgACgCACABajYCACAAIAAoAgQgAWs2AgQLRQEDfyMAIQEGQBBTIgIQuQEiAEHUkwE2AgAgAEEEakGKFBDwASAAQZiUATYCABkgASQAIAIQUgkACyAAQbiUAUELEFAACxYAIAAgASgCCCIAIAAoAgAoAhgRAAAL9wMBBn8jAEEQayIGJAACQCAAQcDpAWogASACIAAoAuzqARCbASIBQYh/Sw0AIAEEQEG4fyEBDAELAkAgACgCrOsBQQFHDQAgACgCqOsBIgNFDQAgACgCmOsBRQ0AIAYgACgC3OkBIgQ2AgwgAygCBEEBayIFIAZBDGpBBBDlAadxIQEgAygCACEDA0AgAyABQQJ0aigCACIHRQ0BIAQgBygCqNUBIghHBEAgASAFcUEBaiEBIAgNAQsLAkAgACgClOsBIgFFDQAgASgCuNUBIQQgASgCtNUBIQMCQAJAIAEoAgAiBQRAIANFDQEgBCAFIAMRAAAgBCABIAMRAAAMAwsgA0UNASAEIAEgAxEAAAwCCyAFEBULIAEQFQsgAEEANgKU6wEgAEF/NgKk6wEgACAHNgKY6wEgACAAKALc6QE2ApzrAQsCQCAAKALc6QEiAUUNACAAKAKc6wEgAUYNAEFgIQEMAQsCQCAAKALg6QEEQCAAIAAoAvDqASIBRTYC9OoBIAENASAAQZDqAWpBAEHYABAYGiAAQvnq0NDnyaHk4QA3A7DqASAAQs/W077Sx6vZQjcDoOoBIABC1uuC7ur9ifXgADcDmOoBDAELIABBADYC9OoBCyAAIAApA/DpASACrXw3A/DpAUEAIQELIAZBEGokACABCwIAC0ABAX8jAEEQayICJAAgACgCCCABEBcgASACQQhqQYsjEA4iASgCACABKAIEEBAhASAAKAIMIAEQFyACQRBqJAALBABBAAsoAQF/IAAoAgAiAiAAKAIEEB4gAUkEQBAxAAsgACACIAFBAnRqNgIEC4QDAQR/IwBBEGsiASQAAkACQCAAQdMAEBFFDQAgACgCACIDIAAoAgRBABAZIgRB4QBrQf8BcUEZTQRAAkACQAJAAkACQAJAAkACQCAEQf8BcSIEQeEAaw4JAQIKAwoKCgoEAAsgBEHvAGsOBQQJCQkFCQsgAUEANgIMDAULIAFBATYCDAwECyABQQU2AgwMAwsgAUEDNgIMDAILIAFBBDYCDAwBCyABQQI2AgwLIAAgA0EBajYCACAAQZgDakEMEBIgASgCDEEwELECIgJB4McBNgIAIAEgACACEL4CIgM2AgggAiADRg0CIABBlAFqIAFBCGoQHyADIQIMAgsgAEHfABARBEAgACgClAEiAiAAKAKYASIAELIBDQEgAiAAQQAQOCgCACECDAILIAFBADYCBCAAIAFBBGoQvQINASABKAIEIABB3wAQEUUNAUEBaiIDIAAoApQBIgQgACgCmAEiABAeTw0BIAQgACADEDgoAgAhAgwBC0EAIQILIAFBEGokACACC9sBAQZ/AkAgACgCACIEIAAoAgQQOkECSQ0AQT0hAgNAIAIgA0cEQCACIAIgA2pBAXYiBQJ/IAVBA3QiAUHwmgFqLQAAIQYgAUHxmgFqLQAAIQJBASAELAAAIgEgBsBKDQAaQQAgAUH/AXEgBkcNABogBCwAASACwEoLIgEbIQIgBUEBaiADIAEbIQMMAQsLIANBA3QhAUEAIQMgAUHxmgFqLQAAIQIgAUHwmgFqIgEtAAAgBC0AAEYEfyAELQABIAJGBUEAC0EBcw0AIAAgBEECajYCACABIQMLIAML7AQCB38BfiMAQdAAayICJAACQAJAIABB1QAQEQRAIAJByABqIAAQsAEgAigCTEUNAiACIAIpA0giCDcDQCACQThqQeUPEA4hASACIAIpA0A3AwggAiABKQIANwMAIAJBCGogAhCaAQRAIAJBMGogCKdBCWogCEIgiKdBCWsQKiEBIAJBKGoQSyEDIAJBIGoiBSAAIAEoAgAQRSABKAIAIQQgASgCBCEHIwBBEGsiASQAIAFBDGogBCAHEKMCEOoBKAIAIQQgAUEQaiQAIAJBGGogAEEEaiAEEEUgAkEQaiAAELABIAMgAikDEDcDABAwEDBBACEBIAMoAgRFDQMgAiAAEOQBIgE2AiAgAUUNAiAAQZgDakEUEBIgBSgCACEBIAMpAgAhCEELQQBBAUEBQQEQFiIAIAg3AgwgACABNgIIIABB/NkBNgIAIAAhAQwDCyACQQA2AjAgACgCACAAKAIEQQAQGUHJAEYEQEEAIQEgAiAAQQAQRiIDNgIwIANFDQMLIAIgABDkASIBNgIoIAEEfyAAQZgDakEYEBIgAigCKCEBIAIpAkghCCACKAIwIQNBAkEAQQFBAUEBEBYiACADNgIUIAAgCDcCDCAAIAE2AgggAEHo2gE2AgAgAAVBAAshAQwCCyACIAAQlwEiAzYCSCACIAAQGyIBNgIwIAFFDQAgA0UNASAAQZgDakEQEBIgAigCSCEBQQMgAigCMCIDLwAFIgBBwAFxQQZ2IABBCHZBA3EgAEEKdkEDcRA1IgAgAzYCDCAAIAE2AgggAEHY2wE2AgAgACEBDAELQQAhAQsgAkHQAGokACABC7wNAgh+An8CQCAAQQdxRQRAQsXP2bLx5brqJyECIAFBIE8EfiAAIAFqQR9rIQtC+erQ0OfJoeThACECQtbrgu7q/Yn14AAhBELP1tO+0ser2UIhBQNAIAApAxhCz9bTvtLHq9lCfiACfEIfiSIGQoeVr6+Ytt6bnn9+IQIgACkDEELP1tO+0ser2UJ+IAN8Qh+JIgdCh5Wvr5i23puef34hAyAAKQMIQs/W077Sx6vZQn4gBXxCH4kiCEKHla+vmLbem55/fiEFIAApAwBCz9bTvtLHq9lCfiAEfEIfiSIJQoeVr6+Ytt6bnn9+IQQgAEEgaiIAIAtJDQALIAVCB4kgBEIBiXwgA0IMiXwgAkISiXwgCUKp2eX7kODW+V5+Qh+JQoeVr6+Ytt6bnn9+hUKHla+vmLbem55/fkKdo7Xqg7GNivoAfSAIQqnZ5fuQ4Nb5Xn5CH4lCh5Wvr5i23puef36FQoeVr6+Ytt6bnn9+Qp2jteqDsY2K+gB9IAdCqdnl+5Dg1vlefkIfiUKHla+vmLbem55/foVCh5Wvr5i23puef35CnaO16oOxjYr6AH0gBkKp2eX7kODW+V5+Qh+JQoeVr6+Ytt6bnn9+hUKHla+vmLbem55/fkKdo7Xqg7GNivoAfQUgAgsgAa18IQICQCABQR9xIgpBCEkEQCAAIQEMAQsDQCAAKQAAQs/W077Sx6vZQn5CH4lCh5Wvr5i23puef34gAoVCG4lCh5Wvr5i23puef35CnaO16oOxjYr6AH0hAiAAQQhqIgEhACAKQQhrIgpBB0sNAAsLIApBBEkEfyABBSAKQQRrIQogATUAAEKHla+vmLbem55/fiAChUIXiULP1tO+0ser2UJ+Qvnz3fGZ9pmrFnwhAiABQQRqCyELIApFDQECfyAKQQFxRQRAIAohASALDAELIApBAWshASALMQAAQsXP2bLx5brqJ34gAoVCC4lCh5Wvr5i23puef34hAiALQQFqCyEAIApBAUYNAQNAIAAxAAFCxc/ZsvHluuonfiAAMQAAQsXP2bLx5brqJ34gAoVCC4lCh5Wvr5i23puef36FQguJQoeVr6+Ytt6bnn9+IQIgAEECaiEAIAFBAmsiAQ0ACwwBC0LFz9my8eW66ichAiABQSBPBH4gACABakEfayELQvnq0NDnyaHk4QAhAkLW64Lu6v2J9eAAIQRCz9bTvtLHq9lCIQUDQCAAKQAYQs/W077Sx6vZQn4gAnxCH4kiBkKHla+vmLbem55/fiECIAApABBCz9bTvtLHq9lCfiADfEIfiSIHQoeVr6+Ytt6bnn9+IQMgACkACELP1tO+0ser2UJ+IAV8Qh+JIghCh5Wvr5i23puef34hBSAAKQAAQs/W077Sx6vZQn4gBHxCH4kiCUKHla+vmLbem55/fiEEIABBIGoiACALSQ0ACyAFQgeJIARCAYl8IANCDIl8IAJCEol8IAlCqdnl+5Dg1vlefkIfiUKHla+vmLbem55/foVCh5Wvr5i23puef35CnaO16oOxjYr6AH0gCEKp2eX7kODW+V5+Qh+JQoeVr6+Ytt6bnn9+hUKHla+vmLbem55/fkKdo7Xqg7GNivoAfSAHQqnZ5fuQ4Nb5Xn5CH4lCh5Wvr5i23puef36FQoeVr6+Ytt6bnn9+Qp2jteqDsY2K+gB9IAZCqdnl+5Dg1vlefkIfiUKHla+vmLbem55/foVCh5Wvr5i23puef35CnaO16oOxjYr6AH0FIAILIAGtfCECAkAgAUEfcSIKQQhJBEAgACEBDAELA0AgACkAAELP1tO+0ser2UJ+Qh+JQoeVr6+Ytt6bnn9+IAKFQhuJQoeVr6+Ytt6bnn9+Qp2jteqDsY2K+gB9IQIgAEEIaiIBIQAgCkEIayIKQQdLDQALCyAKQQRJBH8gAQUgCkEEayEKIAE1AABCh5Wvr5i23puef34gAoVCF4lCz9bTvtLHq9lCfkL5893xmfaZqxZ8IQIgAUEEagshCyAKRQ0AAn8gCkEBcUUEQCAKIQEgCwwBCyAKQQFrIQEgCzEAAELFz9my8eW66id+IAKFQguJQoeVr6+Ytt6bnn9+IQIgC0EBagshACAKQQFGDQADQCAAMQABQsXP2bLx5brqJ34gADEAAELFz9my8eW66id+IAKFQguJQoeVr6+Ytt6bnn9+hUILiUKHla+vmLbem55/fiECIABBAmohACABQQJrIgENAAsLIAJCIYggAoVCz9bTvtLHq9lCfiICQh2IIAKFQvnz3fGZ9pmrFn4iAkIgiCAChQuFAQEDfyMAQRBrIgIkAAJAIABBxAAQEUUNACAAQfQAEBFFBEAgAEHUABARRQ0BCyACIAAQHSIBNgIMIAFFDQAgAEHFABARRQ0AIwBBEGsiASQAIABBmANqQRwQEiABQQhqQckVEA4pAwAgAigCDEEAEKQBIAFBEGokACEDCyACQRBqJAAgAwsRACAAQZDwAWtBAnZB//8DcQsMACAAQQJ0QZDwAWoL0QQBB38jAEFAaiIEJABBASEIAkAgACABQQAQPw0AIAFFBEBBACEIDAELQQAhCCMAQRBrIgUkACAFIAEoAgAiBkEIaygCACIDNgIMIAUgASADajYCBCAFIAZBBGsoAgA2AgggBSgCBCEHAkAgBSgCCCIGQdSQAUEAED8EQEEAIAcgBSgCDBshAwwBCyMAQUBqIgMkACABIAdOBEAgA0HUkAE2AgwgAyAGNgIEIAMgATYCCCADQRBqQQBBJBAYGiADQQA2AjwgA0KBgICAgICAgAE3AjQgBiADQQRqIAcgB0EBQQAgBigCACgCFBENACABQQAgAygCHBshCQsgA0FAayQAIAkiAw0AIwBBQGoiAyQAIANBpJABNgIMIAMgATYCCCADQdSQATYCBEEAIQEgA0EQakEAQSsQGBogA0EANgI8IANBAToAOyAGIANBBGogB0EBQQAgBigCACgCGBEMAAJAAkACQCADKAIoDgIAAQILIAMoAhhBACADKAIkQQFGG0EAIAMoAiBBAUYbQQAgAygCLEEBRhshAQwBCyADKAIcQQFHBEAgAygCLA0BIAMoAiBBAUcNASADKAIkQQFHDQELIAMoAhQhAQsgA0FAayQAIAEhAwsgBUEQaiQAIANFDQAgBEEIakEAQTgQGBogBEEBOgA7IARBfzYCECAEIAA2AgwgBCADNgIEIARBATYCNCADIARBBGogAigCAEEBIAMoAgAoAhwRCwAgBCgCHCIAQQFGBEAgAiAEKAIUNgIACyAAQQFGIQgLIARBQGskACAICwsAIAAgATYCACAACwUAEAsAC5wBAQF/IwAhAQZAIAARCQAHACEAIAEkACAAKQMAEO4BIQEgABDtASEAAkAgAQRAIAAgACgCFCIBIAFBH3UiAXMgAWtBAWo2AhRBgPABKAIAIgEgAEcEQCAAIAE2AhBBgPABIAA2AgALQYTwAUGE8AEoAgBBAWs2AgAMAQtBgPABKAIARQRAQYDwASAANgIADAELEFQACxAxAAsQMQALCQAgAEEgahBgCxQAIABCgH6DQoDWrJn0yJOmwwBRC8ADAQV/IwBBEGsiCCQAIAggAzYCDCMAQaABayIFJAAgBSAANgKUASAFIAFBAWsiB0EAIAEgB08bNgKYASAFQQBBkAEQGCIBQX82AkwgAUEeNgIkIAFBfzYCUCABIAFBnwFqNgIsIAEgAUGUAWo2AlQgAEEAOgAAQQAhBSMAQdABayIEJAAgBCADNgLMASAEQaABaiIAQQBBKBAYGiAEIAQoAswBNgLIAQJAQQAgAiAEQcgBaiAEQdAAaiAAEO4CQQBIBEBBfyEADAELIAEoAkxBAEggASABKAIAIgNBX3E2AgACQAJAAkAgASgCMEUEQCABQdAANgIwIAFBADYCHCABQgA3AxAgASgCLCEFIAEgBDYCLAwBCyABKAIQDQELQX8hBiABEJ8CDQELIAEgAiAEQcgBaiAEQdAAaiAEQaABahDuAiEGCyAFBEAgAUEAQQAgASgCJBEFABogAUEANgIwIAEgBTYCLCABQQA2AhwgASgCFCEAIAFCADcDECAGQX8gABshBgsgASABKAIAIgAgA0EgcXI2AgBBfyAGIABBIHEbIQANAAsgBEHQAWokACABQaABaiQAIAhBEGokACAACzgBAn8gARBNIgJBDWoQqAEiA0EANgIIIAMgAjYCBCADIAI2AgAgACADQQxqIAEgAkEBahAUNgIACxIAIAAoAgAgACAALQALELcBGwv9BAIIfwF+Qbp/IQkCQCADKAIEIgwgAygCACILaiIPIAEgAGtLDQAgBSAEKAIAIgFrIAtJBEBBbA8LIAMoAgghDSAAIAFLIAEgC2oiECAAS3ENACAAIAtqIQUCQAJAIAtBCE4EQCAAIAFrIgNBeUgNAQsgC0EATA0BA0AgACABLQAAOgAAIAFBAWohASAAQQFqIgAgBUkNAAsMAQsCQCAAIAVBIGsiCksEQCAAIQoMAQsgA0FvSwRAIAAhCgwBCyABKQAAIREgACABKQAINwAIIAAgETcAACAKIABrIg5BEU4EQCAAQRBqIQMgASEJA0AgCSkAECERIAMgCSkAGDcACCADIBE3AAAgCSkAICERIAMgCSkAKDcAGCADIBE3ABAgCUEgaiEJIANBIGoiAyAKSQ0ACwsgASAOaiEBCwJAIAAgC2oiCSAKayILQQdxIg5FBEAgCiEADAELQQAhAyAKIQADQCAAIAEtAAA6AAAgAEEBaiEAIAFBAWohASADQQFqIgMgDkcNAAsLIAogCWtBeEsNACAKIAtqIQMDQCAAIAEtAAA6AAAgACABLQABOgABIAAgAS0AAjoAAiAAIAEtAAM6AAMgACABLQAEOgAEIAAgAS0ABToABSAAIAEtAAY6AAYgACABLQAHOgAHIAFBCGohASAAQQhqIgAgA0cNAAsLIAUgDWshACAEIBA2AgACQAJAIAUgBmsgDU8EQCAAIQYMAQtBbCEJIA0gBSAHa0sNAiAIIAggACAGayIAaiIBIAxqTwRAIAUgASAMEBwaDAILIAAgDGohDCAFIAFBACAAaxAcIABrIQULIAUgAiAGIAwQ+wILIA8hCQsgCQvtAgEBfyMAQYABayIOJAAgDiADNgJ8AkACQAJAAkACQCACQQFrDgMAAwIBCyAGRQRAQbh/IQoMBAsgAyAFLQAAIgJJBEBBbCEKDAQLIAIgCGotAAAhAyAHIAJBAnRqKAIAIQIgAEEAOgALIABCADcCACAAIAI2AgwgACADOgAKIABBADsBCCABIAA2AgBBASEKDAMLIAEgCTYCAEEAIQoMAgsgCkUEQEFsIQoMAgtBACEKIAtFIAxBGUhyDQFBCCAEdEEGdkEBaiIAQfj//x9xIQFBACEDQQAhAgNAIANBgARqIQMgAkEIaiICIAFHDQALIABBB3EiAEUNAUEAIQIDQCADQUBrIQMgAkEBaiICIABHDQALDAELQWwhCiAOIA5B/ABqIA5B+ABqIAUgBhBXIgJBiH9LDQAgDigCeCIDIARLDQAgACAOIA4oAnwgByAIIAMgDRC9ASABIAA2AgAgAiEKCyAOQYABaiQAIAoLrwMBCH8CQCAAKAIMIgcEQCAAKAIEIgMgB0kNAQsgAEJ/NwIUDwsCQAJAAkACQCACIAAoAgAiCSADQQxsaiIEKAIEIgUgACgCCCIGayIIQQAgBSAITxsiCE0EQCAAQn83AhQCQCACIAZqIgJFDQADQCADIAdGDQEgAiAJIANBDGxqIgEoAgggASgCBGoiAUkNAyAAIANBAWoiAzYCBCACIAFrIgINAAsLDAQLIAQoAgghCiAAIAQoAgA2AhwgACABIAhqIgQ2AhQgACAEIAogBiAFayIFQQAgBSAGTRtrIgVqIgQ2AhggASACaiIBIARJBEAgACABNgIYAkAgAiAGaiICRQ0AA0AgAyAHRg0BIAIgCSADQQxsaiIBKAIIIAEoAgRqIgFJDQQgACADQQFqIgM2AgQgAiABayICDQALCwwECwJAIAYgCGogBWoiAkUNAANAIAMgB0YNASACIAkgA0EMbGoiASgCCCABKAIEaiIBSQ0EIAAgA0EBaiIDNgIEIAIgAWsiAg0ACwsMAwsgACACNgIIDwsgACACNgIIDwsgACACNgIIDwsgAEEANgIIC8smAix/AX4jAEHQAGsiByQAIAAoAsgBIQYgACgCDCAAKAIEIAdBDzYCTCAHQRA2AkggB0ERNgJEIAdBEjYCQCAHQRM2AjwgB0EUNgI4IAdBFTYCNCAHQRY2AjAgB0EXNgIsIAdBGDYCKCAHQRk2AiQgB0EaNgIgIAdBIGogBUEEdGpBAyAGQQNrIAZBBk8bQQAgBkEDTxtBAnRqKAIAISIgACgCzAEhCCAHIAAoAhw2AhwgACgCgAEhEiAAKAKEASEOIAdBADYCGCAHQgA3AxAgAEHwAGohI2ohCiADIARqIhZBCGshHQJAIAAoAtQBIgUEQCAHIAUoAhA2AjAgByAFKQIINwMoIAcgBSkCADcDIAwBCyAHQQA2AjAgB0IANwMoIAdCADcDIAsgB0IANwI0IAdBADYCPCAHQSBqQQAgBBD0ASAjIAMgBEEAEIcDIB0gAyADIApGaiIPSwRAQf8fIAggCEH/H08bIR4gEkEIayEtIBJBBGshJCAOQcQBaiElIA5BqAFqISYgDkGMAWohJyAOQfAAaiEoIA5B1ABqISkgDkE4aiEqIA5BHGohKyAWQSBrIRlBA0EEIAZBA0YbIhVBAWtBB3EhLiADIQUDQCAHIBIgACAHQRxqIA8gFiACIAUgD0YgFSAiEQgANgIAIAdBIGogEiAHIA8gA2sgFiAPaxC+AQJAAkACQAJAAkAgBygCACIKBEAgDiACKAIANgIQIA4gAigCBDYCFCACKAIIIQQgDiAPIAVrIg02AgwgDkEANgIIIA4gBDYCGAJAIAAoAqgBIhNBAUcEQCAOAn8gDUGAgAhGBEAgACgCnAEiBiAAKAJ0IgQoAowBQQFqZ0EIdGpBgBxrDAELIAAoApwBIgYgDUHAAE8Ef0EyIA1nawUgDUHA5ABqLQAACyIJQZDkAGotAAAgACgCdCIEIAlBAnRqKAIAQQFqZ2pBCHRqQYA+awsiCDYCACAkIApBA3RqKAIAIgkgHksNASAGIAQoAgBBAWpnQQh0akGAPmshCwwDCyAOQYA+IA1BAWpnQQh0ayIINgIAQQAhCyAkIApBA3RqKAIAIgkgHk0NAgsgLSAKQQN0aigCACEIQQAhBgwCCyAPQQFqIQ8MBAtBACEEQQEhBgNAIA4gBkEcbGpBgICAgAQ2AgAgBkEBaiEGIARBAWoiBCAuRw0ACyAIIAtqIQxBACEIIBUhBgNAAkAgBiASIAhBA3RqIgQoAgQiEUsNAEEfIAQoAgAiEGdrIQQgE0EBRgRAA0AgDiAGQRxsaiIJIA02AgwgCSAQNgIEIAkgBjYCCCAJIAQgBkECa2drQQh0IAxqQYDeAGo2AgAgBkEBaiIGIBFNDQAMAgsACyAAKAKgASAAKAKkAUGzhH8gBEEJdEHNxwFrIARBE00bamohGiAAKAJ8IARBAnRqIRsgACgCeCEcA0AgGygCAEEBamchFCAcAn8gBkEDayIJQYABTwRAQcMAIAlnawwBCyAJQcDlAGotAAALIglBAnRqKAIAIRcgDiAGQRxsaiILIA02AgwgCyAQNgIEIAsgBjYCCCALIAwgGiAXQQFqZyAJQYDlAGotAAAgBCAUampqQQh0amo2AgAgBkEBaiIGIBFNDQALCyAIQQFqIgggCkcNAAtBASEMQQAhE0EAIQQCfwJAAkAgBkEBayIGRQ0AA0AgDiAMQRxsaiIIQRxrQQEhCSAIQRRrKAIARQRAIAhBEGsoAgBBAWohCQsgDCAPaiEQIAAoAqgBIQooAgAhBAJ/AkACQCAAKAKwAUECRwRAIApBAUYEQCAEQYAMaiELDAMLIARBgAIgACgCmAEiBEGAPiAAKAJwIBBBAWstAABBAnRqKAIAQQFqZ0EIdGsiCmsgCiAEQYACa0sbaiELDAELIARBgBBqIQsgCkEBRg0BCwJ/AkACQCAJQYCACEYEQCALIAAoApwBIhFqIAAoAnQiBCgCjAFBAWpnQQh0akGAHGshC0H//wchDQwBCyALIAAoApwBIhFqIAlBwABPBH9BMiAJZ2sFIAlBwOQAai0AAAsiDUGQ5ABqLQAAIAAoAnQiBCANQQJ0aigCAEEBamdqQQh0akGAPmshCyAJQQFrIg1BgIAIRgRAIBEgBCgCjAFBAWpnQQh0akGAHGsMBQsgDUHAAEkNAQtBMiANZ2sMAQsgDUHA5ABqLQAACyINQZDkAGotAAAgBCANQQJ0aigCAEEBamdqQQh0IBFqQYA+awwBCyALIAlBAWpnQQh0a0GAPmohC0GAPiAJZ0EIdGsLIQ0CfwJAIAsgDWsiBCAIKAIAIgtMBEAgCEEANgIIIAggCTYCDCAIQQA2AgQgCCAENgIAIAQhCwwBCyAIKAIIIgpFDQAgCCgCDCEJIAgoAgQhBCAHQQhqIg0gDiAMIAprQRxsaiIKKAIYNgIAIAcgCikCEDcDAAJAAkAgBEEETwRAIAcgBykDADcCBCAEQQNrIQkMAQsCfwJAAkAgBCAJRWpBAWsiBA4EBAEBAAELIAcoAgAiCkEBawwBCyAHKAIAIQogByAEQQJ0aigCAAshCSAHIAdBBHIgDSAEQQFLGygCADYCCCAHIAo2AgQLIAcgCTYCAAsgCCAHKQMANwIQIAggDSgCADYCGEEBIQlBAAwBCyAIIAhBDGsiBCkCADcCECAIIAQoAgg2AhhBACEJQQELIQQCQCAQIB1LDQAgBiAMRgRAIAwhBAwDCyAIKAIcIAtBgAFqTA0AQQAhCkEAIQ0gBARAIAgoAgwhDQsgACgCqAFBAUcEQCAAKAKcASAAKAJ0KAIAQQFqZ0EIdGpBgD5rIQoLIAcgEiAAIAdBHGogECAWIAhBEGogCSAVICIRCAA2AgAgB0EgaiASIAcgECADayAWIBBrEL4BIAcoAgAiGkUNACASIBpBA3RqIgRBBGsoAgAiCSAeSyAJIAxqQYAgT3INAyAKIAtqIRtBACEJA0AgFSEKAkAgEiAJQQN0aiIEKAIEIgsgCQRAIARBBGsoAgBBAWohCgsgCkkNAEEfIAQoAgAiHGdrIQggACgCqAFBAUYEQCALIBNqIRcgCyAMaiEfQQAhEQNAIAggC0ECa2drQQh0IBtqQYDeAGohFAJAIAYgCyAMaiIQSQRAIBcgBiARaiIYa0EAIQQgHyAYa0EHcSIYBEADQCAOIAZBAWoiBkEcbGpBgICAgAQ2AgAgBEEBaiIEIBhHDQALC0EHSQ0BA0AgKyAGQRxsIgRqQYCAgIAENgIAIAQgKmpBgICAgAQ2AgAgBCApakGAgICABDYCACAEIChqQYCAgIAENgIAIAQgJ2pBgICAgAQ2AgAgBCAmakGAgICABDYCACAEICVqQYCAgIAENgIAIAQgDmpBgICAgAQ2AuABIAZBCGoiBiAQSQ0ACwwBCyAUIA4gEEEcbGooAgBODQMLIA4gEEEcbGoiBCANNgIMIAQgHDYCBCAEIAs2AgggBCAUNgIAIBFBAWohESALQQFrIgsgCk8NAAsMAQsgACgCoAEgACgCpAFBs4R/IAhBCXRBzccBayAIQRNNG2pqIRcgCyATaiEfIAsgDGohGCAAKAJ8IAhBAnRqISAgACgCeCEvQQAhEQNAICAoAgBBAWpnIRAgGyAXIC8CfyALQQNrIgRBgAFPBEBBwwAgBGdrDAELIARBwOUAai0AAAsiBEECdGooAgBBAWpnIARBgOUAai0AACAIIBBqampBCHRqaiEUAkAgBiALIAxqIhBJBEAgHyAGIBFqIiFrQQAhBCAYICFrQQdxIiEEQANAIA4gBkEBaiIGQRxsakGAgICABDYCACAEQQFqIgQgIUcNAAsLQQdJDQEDQCArIAZBHGwiBGpBgICAgAQ2AgAgBCAqakGAgICABDYCACAEIClqQYCAgIAENgIAIAQgKGpBgICAgAQ2AgAgBCAnakGAgICABDYCACAEICZqQYCAgIAENgIAIAQgJWpBgICAgAQ2AgAgBCAOakGAgICABDYC4AEgBkEIaiIGIBBJDQALDAELIBQgDiAQQRxsaigCAE4NAgsgDiAQQRxsaiIEIA02AgwgBCAcNgIEIAQgCzYCCCAEIBQ2AgAgEUEBaiERIAtBAWsiCyAKTw0ACwsgCUEBaiIJIBpHDQALCyATQQFqIRMgBiIEIAxBAWoiDE8NAAsLIA4gBEEcbGoiBigCBCEIIAYoAgAhLCAGKAIMIQ0gBigCCCEJIAcgBigCGDYCGCAHIAYpAhA3AxAgBCAJIA1qayIGQQAgBCAGTxsMAQtBACEGIAgoAghFBEAgCCgCDCEGCyAEQQhrKAIAIQggDCAGayIEQQAgBEGAIE0bCyEGIAlFDQELIAdBCGoiCiAOIAZBHGxqIgQoAhg2AgAgByAEKQIQNwMAAkACQCAIQQRPBEAgByAHKQMANwIEIAhBA2shCwwBCwJ/AkACQCAIIA1FakEBayIMDgQEAQEAAQsgBygCACIEQQFrDAELIAcoAgAhBCAHIAxBAnRqKAIACyELIAcgB0EEciAKIAxBAUsbKAIANgIIIAcgBDYCBAsgByALNgIACyACIAcpAwA3AgAgAiAKKAIANgIIDAELIAIgDiAGQRxsaiIEKQIQNwIAIAIgBCgCGDYCCEEAIQkLQQEhCiAOIAZBAWoiC0EcbGoiBCANNgIMIAQgCTYCCCAEIAg2AgQgBCAsNgIAIAQgBykDEDcCECAEIAcoAhg2AhggCyEIAkAgBgRAA0AgDiAGQRxsaiIEKAIMIQkgBCgCCCEMIA4gCEEBayIIQRxsaiIKIAQoAhg2AhggCiAEKQIQNwIQIAogBCkCCDcCCCAKIAQpAgA3AgAgBiAJIAxqIgRLIAYgBGsiBEEAIAQgBk0bIQYNAAsgCCEKIAggC0sNAQsDQCAOIApBHGxqIgQoAgwhDCAEKAIIIhEEfyAEKAIEIRAgACgCsAFBAkcEQAJAIAxFDQAgIygCACEEQQAhCEEAIQYgDEEETwRAIAxBfHEhDQNAIAQgBSAGaiIJLQAAQQJ0aiIPIA8oAgBBAmo2AgAgBCAJLQABQQJ0aiIPIA8oAgBBAmo2AgAgBCAJLQACQQJ0aiIPIA8oAgBBAmo2AgAgBCAJLQADQQJ0aiIJIAkoAgBBAmo2AgAgBkEEaiIGIA1HDQALCyAMQQNxIglFDQADQCAEIAUgBmotAABBAnRqIg0gDSgCAEECajYCACAGQQFqIQYgCEEBaiIIIAlHDQALCyAAIAAoAogBIAxBAXRqNgKIAQsgACgCdCAMQcAATwR/QTIgDGdrBSAMQcDkAGotAAALQQJ0aiIEIAQoAgBBAWo2AgAgACAAKAKMAUEBajYCjAEgACgCfEEfIBBna0ECdGoiBCAEKAIAQQFqNgIAIAAgACgClAFBAWo2ApQBIAAoAngCfyARQQNrIg1BgAFPBEBBwwAgDWdrDAELIA1BwOUAai0AAAtBAnRqIgQgBCgCAEEBajYCACAAIAAoApABQQFqNgKQASABKAIMIQgCQAJAIBkgBSAMaiIPTwRAIAUpAAAhMiAIIAUpAAg3AAggCCAyNwAAIAEoAgwhBCAMQRBNBEAgASAEIAxqNgIMIAEoAgQhBgwDCyAFKQAQITIgBCAFKQAYNwAYIAQgMjcAECAMQSFIDQEgBCAMaiEIIAVBEGohBiAEQSBqIQQDQCAGKQAQITIgBCAGKQAYNwAIIAQgMjcAACAGKQAgITIgBCAGKQAoNwAYIAQgMjcAECAGQSBqIQYgBEEgaiIEIAhJDQALDAELIA8CfyAFIBlLBEAgCCEGIAUMAQsgBSkAACEyIAggBSkACDcACCAIIDI3AAAgCCAZIAVrIgRqIQYgBEERTgRAIAhBEGohBCAFIQkDQCAJKQAQITIgBCAJKQAYNwAIIAQgMjcAACAJKQAgITIgBCAJKQAoNwAYIAQgMjcAECAJQSBqIQkgBEEgaiIEIAZJDQALCyAZCyIETQ0AIARBf3MgD2pBACEJIA8gBGtBB3EiEwRAA0AgBiAELQAAOgAAIAZBAWohBiAEQQFqIQQgCUEBaiIJIBNHDQALC0EHSQ0AA0AgBiAELQAAOgAAIAYgBC0AAToAASAGIAQtAAI6AAIgBiAELQADOgADIAYgBC0ABDoABCAGIAQtAAU6AAUgBiAELQAGOgAGIAYgBC0ABzoAByAGQQhqIQYgBEEIaiIEIA9HDQALCyABIAEoAgwgDGo2AgwgASgCBCEGIAxBgIAESQ0AIAFBATYCJCABIAYgASgCAGtBA3U2AigLIAYgEDYCACAGIAw7AQQgDUGAgARPBEAgAUECNgIkIAEgBiABKAIAa0EDdTYCKAsgBiANOwEGIAEgBkEIajYCBCAMIBFqIAVqIgUFIAUgDGoLIQ8gCkEBaiIKIAtNDQALCyAAKAKwAUECRwRAIABBgD4gACgCiAFBAWpnQQh0azYCmAELIABBgD4gACgClAFBAWpnQQh0azYCpAEgAEGAPiAAKAKQAUEBamdBCHRrNgKgASAAQYA+IAAoAowBQQFqZ0EIdGs2ApwBCyAPIB1JDQALIAUhAwsgB0HQAGokACAWIANrC+wCAgl/AX4gASAAKAIEIgggACgCHCIFaiIETwR/AkAgBSABIAhrIgxPDQBBfyAAKAK8AUEBa3RBf3MhBiAAKAJkIQkgACgCXCEKIAVBf3MgAWpBwAAgACgCwAFrrSENIAEgBGtBAXEEQCAKIAQpAABCgIDs/Mub741PfiANiKdBAnRqIgQoAgAhCyAEIAU2AgAgCSAFIAZxQQN0aiIEQQE2AgQgBCALNgIAIAVBAWohBQsgCEYNAANAIAogBSAIaikAAEKAgOz8y5vvjU9+IA2Ip0ECdGoiBCgCACEHIAQgBTYCACAJIAUgBnFBA3RqIgRBATYCBCAEIAc2AgAgCiAIIAVBAWoiBGopAABCgIDs/Mub741PfiANiKdBAnRqIgcoAgAhCyAHIAQ2AgAgCSAEIAZxQQN0aiIEQQE2AgQgBCALNgIAIAVBAmoiBSAMSQ0ACwsgACAMNgIcIAAgASACIANBBkEBEEEFIAYLC+wCAgl/AX4gASAAKAIEIgggACgCHCIFaiIETwR/AkAgBSABIAhrIgxPDQBBfyAAKAK8AUEBa3RBf3MhBiAAKAJkIQkgACgCXCEKIAVBf3MgAWpBwAAgACgCwAFrrSENIAEgBGtBAXEEQCAKIAQpAABCgICA2Mub741PfiANiKdBAnRqIgQoAgAhCyAEIAU2AgAgCSAFIAZxQQN0aiIEQQE2AgQgBCALNgIAIAVBAWohBQsgCEYNAANAIAogBSAIaikAAEKAgIDYy5vvjU9+IA2Ip0ECdGoiBCgCACEHIAQgBTYCACAJIAUgBnFBA3RqIgRBATYCBCAEIAc2AgAgCiAIIAVBAWoiBGopAABCgICA2Mub741PfiANiKdBAnRqIgcoAgAhCyAHIAQ2AgAgCSAEIAZxQQN0aiIEQQE2AgQgBCALNgIAIAVBAmoiBSAMSQ0ACwsgACAMNgIcIAAgASACIANBBUEBEEEFIAYLC9kCAQp/IAEgACgCBCIIIAAoAhwiBWoiBE8EfwJAIAUgASAIayINTw0AQX8gACgCvAFBAWt0QX9zIQYgACgCZCEJIAAoAlwhCiAFQX9zIAFqQSAgACgCwAFrIQsgASAEa0EBcQRAIAogBCgAAEGx893xeWwgC3ZBAnRqIgQoAgAhDCAEIAU2AgAgCSAFIAZxQQN0aiIEQQE2AgQgBCAMNgIAIAVBAWohBQsgCEYNAANAIAogBSAIaigAAEGx893xeWwgC3ZBAnRqIgQoAgAhByAEIAU2AgAgCSAFIAZxQQN0aiIEQQE2AgQgBCAHNgIAIAogCCAFQQFqIgRqKAAAQbHz3fF5bCALdkECdGoiBygCACEMIAcgBDYCACAJIAQgBnFBA3RqIgRBATYCBCAEIAw2AgAgBUECaiIFIA1JDQALCyAAIA02AhwgACABIAIgA0EEQQEQQQUgBgsL4QUBCX8CfyAARQRAQQggARCTAQwBCyABRQRAIAAQFUEADAELAkAgAUFHSw0AIAACf0EIIAFBA2pBfHEgAUEITRsiB0EIaiEBAkACfwJAIABBBGsiCiIEKAIAIgUgBGoiAigCACIJIAIgCWoiCEEEaygCAEcEQCAIIAEgBGoiA0EQak8EQCACKAIEIgUgAigCCCICNgIIIAIgBTYCBCADIAggA2siAjYCACADIAJBfHFqQQRrIAJBAXI2AgAgAwJ/IAMoAgBBCGsiAkH/AE0EQCACQQN2QQFrDAELIAJBHSACZyIFa3ZBBHMgBUECdGtB7gBqIAJB/x9NDQAaQT8gAkEeIAVrdkECcyAFQQF0a0HHAGoiAiACQT9PGwsiAkEEdCIFQaDnAWo2AgQgAyAFQajnAWoiBSgCADYCCCAFIAM2AgAgAygCCCADNgIEQajvAUGo7wEpAwBCASACrYaENwMAIAQgATYCAAwECyADIAhLDQEgAigCBCIBIAIoAggiAzYCCCADIAE2AgQgBCAFIAlqIgE2AgAMAwsgBSABQRBqTwRAIAQgATYCACAEIAFBfHFqQQRrIAE2AgAgASAEaiIDIAUgAWsiATYCACADIAFBfHFqQQRrIAFBAXI2AgAgAwJ/IAMoAgBBCGsiAUH/AE0EQCABQQN2QQFrDAELIAFBHSABZyIEa3ZBBHMgBEECdGtB7gBqIAFB/x9NDQAaQT8gAUEeIARrdkECcyAEQQF0a0HHAGoiASABQT9PGwsiAUEEdCIEQaDnAWo2AgQgAyAEQajnAWoiBCgCADYCCCAEIAM2AgAgAygCCCADNgIEQajvAUGo7wEpAwBCASABrYaENwMAQQEMBAtBASABIAVNDQEaC0EACwwBCyAEIAFBfHFqQQRrIAE2AgBBAQsNARpBCCAHEJMBIgFFDQAgASAAIAcgCigCAEEIayIGIAYgB0sbEBQaIAAQFSABIQYLIAYLC+wCAgl/AX4gASAAKAIEIgggACgCHCIFaiIETwR/AkAgBSABIAhrIgxPDQBBfyAAKAK8AUEBa3RBf3MhBiAAKAJkIQkgACgCXCEKIAVBf3MgAWpBwAAgACgCwAFrrSENIAEgBGtBAXEEQCAKIAQpAABCgIDs/Mub741PfiANiKdBAnRqIgQoAgAhCyAEIAU2AgAgCSAFIAZxQQN0aiIEQQE2AgQgBCALNgIAIAVBAWohBQsgCEYNAANAIAogBSAIaikAAEKAgOz8y5vvjU9+IA2Ip0ECdGoiBCgCACEHIAQgBTYCACAJIAUgBnFBA3RqIgRBATYCBCAEIAc2AgAgCiAIIAVBAWoiBGopAABCgIDs/Mub741PfiANiKdBAnRqIgcoAgAhCyAHIAQ2AgAgCSAEIAZxQQN0aiIEQQE2AgQgBCALNgIAIAVBAmoiBSAMSQ0ACwsgACAMNgIcIAAgASACIANBBkECEEEFIAYLC+wCAgl/AX4gASAAKAIEIgggACgCHCIFaiIETwR/AkAgBSABIAhrIgxPDQBBfyAAKAK8AUEBa3RBf3MhBiAAKAJkIQkgACgCXCEKIAVBf3MgAWpBwAAgACgCwAFrrSENIAEgBGtBAXEEQCAKIAQpAABCgICA2Mub741PfiANiKdBAnRqIgQoAgAhCyAEIAU2AgAgCSAFIAZxQQN0aiIEQQE2AgQgBCALNgIAIAVBAWohBQsgCEYNAANAIAogBSAIaikAAEKAgIDYy5vvjU9+IA2Ip0ECdGoiBCgCACEHIAQgBTYCACAJIAUgBnFBA3RqIgRBATYCBCAEIAc2AgAgCiAIIAVBAWoiBGopAABCgICA2Mub741PfiANiKdBAnRqIgcoAgAhCyAHIAQ2AgAgCSAEIAZxQQN0aiIEQQE2AgQgBCALNgIAIAVBAmoiBSAMSQ0ACwsgACAMNgIcIAAgASACIANBBUECEEEFIAYLC9kCAQp/IAEgACgCBCIIIAAoAhwiBWoiBE8EfwJAIAUgASAIayINTw0AQX8gACgCvAFBAWt0QX9zIQYgACgCZCEJIAAoAlwhCiAFQX9zIAFqQSAgACgCwAFrIQsgASAEa0EBcQRAIAogBCgAAEGx893xeWwgC3ZBAnRqIgQoAgAhDCAEIAU2AgAgCSAFIAZxQQN0aiIEQQE2AgQgBCAMNgIAIAVBAWohBQsgCEYNAANAIAogBSAIaigAAEGx893xeWwgC3ZBAnRqIgQoAgAhByAEIAU2AgAgCSAFIAZxQQN0aiIEQQE2AgQgBCAHNgIAIAogCCAFQQFqIgRqKAAAQbHz3fF5bCALdkECdGoiBygCACEMIAcgBDYCACAJIAQgBnFBA3RqIgRBATYCBCAEIAw2AgAgBUECaiIFIA1JDQALCyAAIA02AhwgACABIAIgA0EEQQIQQQUgBgsLmgEBA38DQCAAQQR0IgFBpOcBaiABQaDnAWoiAjYCACABQajnAWogAjYCACAAQQFqIgBBwABHDQALQTAQjAIaQbTvAUEBNgIAQbjvAUEANgIAEIgDQbjvAUG87wEoAgA2AgBBvO8BQbTvATYCAEHA7wFBDDYCAEHE7wFBADYCABCqAkHE7wFBvO8BKAIANgIAQbzvAUHA7wE2AgALuoABAh1/An4gACgCXCEOIAAoAsgBIQoCQAJAAkACQAJAIAAoAswBIgtBAk8EQEEAIAIoAgAiFSAVIAMgACgCBCIPIAAoAgwiBSADIA9rIARqIghBASAAKAK4AXQiCWsgBSAIIAVrIAlLGyAAKAIYIgwbIhhqIh4gA0ZqIgYgD2siCCAFIAggCWsgBSAIIAVrIAlLGyAMG2siBUsiGxshB0EAIAIoAgQiHSAFIB1JIh8bIQwgBiALQQFqIhJqIhBBAWohBSAPQQJqIRogAyAEaiIUQQhrIRcCQCAKQQVrDgMEAwIACwJAIAUgF08NACAUQSBrIRMgFEEBayEgIBRBA2shHEEgIAAoAsABayERA0BBACAHayEhIAZBgAFqIRYgBkEBaiEJIA4gBigAAEGx893xeWwgEXYiAEECdGooAgAhCiAGKAABIRkgEiENAkADQAJAIAUhBCAQIgggIWoiBSgAACELIA4gAEECdGogBiAPayIQNgIAIBlBsfPd8XlsIBF2IQACfwJAIAdBACALIAgoAAAiC0YbRQRAAkACQAJAAkAgCiAYSQ0AIAYoAAAgCiAPaigAAEcNACAJIQggBiEJDAELIA4gAEECdGoiACgCACEKIAAgCSAPayIQNgIAIAtBsfPd8XlsIBF2IQAgCiAYSQ0CIAkoAAAgCiAPaigAAEcNAiANQQVPDQELIA4gAEECdGogCCAPazYCAAsgCSAKIA9qIg1rIghBA2ohC0EEIQAgCiAYSg0EIAchDAwGCyAOIABBAnRqIQogCCANaiIQIBZPDQEgDQwCCyAFQQFrLQAAIQQgCEEBay0AACEKIA4gAEECdGogCSAPazYCAEEFQQQgBCAKRiIEGyEAIAUgBGshDSAIIARrIQlBASELIAchCAwECyAWQYABaiEWIA1BAWoLIAQgDWohBSAKKAIAIQogBCgAACEZIQ0gBCEJIAghBiAFIBdJDQEMBAsLIAMgCU8EQCAHIQwMAQsDQCAJQQFrIgQtAAAgDUEBayIFLQAARwRAIAchDAwCCyAAQQFqIQAgAyAESQRAIAQhCSAFIg0gHksNAQsLIAchDCAFIQ0gBCEJCyAAIA1qIQYCfwJAIAAgCWoiBCAcTwRAIAQhBQwBCyAEIgUoAAAiCiAGKAAAIgdHBEAgByAKc2hBA3YMAgsDQCAGQQRqIQYgBUEEaiIFIBxPDQEgBSgAACIKIAYoAAAiB0YNAAsgBSAHIApzaEEDdmogBGsMAQsCQCAFICBPDQAgBi8AACAFLwAARw0AIAZBAmohBiAFQQJqIQULIAUgFEkEfyAFIAYtAAAgBS0AAEZqBSAFCyAEawshBSAJIANrIQQgACAFaiEKIAEoAgwhBQJAAkAgCSATTQRAIAMpAAAhIiAFIAMpAAg3AAggBSAiNwAAIAEoAgwhACAEQRBNBEAgASAAIARqNgIMIAEoAgQhAwwDCyADKQAQISIgACADKQAYNwAYIAAgIjcAECAEQSFIDQEgACAEaiEHIANBEGohAyAAQSBqIQUDQCADKQAQISIgBSADKQAYNwAIIAUgIjcAACADKQAgISIgBSADKQAoNwAYIAUgIjcAECADQSBqIQMgBUEgaiIFIAdJDQALDAELIAMgE00EQCADKQAAISIgBSADKQAINwAIIAUgIjcAACAFIBMgA2siB2ohACAHQRFOBEAgBUEQaiEFA0AgAykAECEiIAUgAykAGDcACCAFICI3AAAgAykAICEiIAUgAykAKDcAGCAFICI3ABAgA0EgaiEDIAVBIGoiBSAASQ0ACwsgACEFIBMhAwsgAyAJTw0AQQAhByADIQYgCSADa0EHcSIABEADQCAFIAYtAAA6AAAgBUEBaiEFIAZBAWohBiAHQQFqIgcgAEcNAAsLIAMgCWtBeEsNAANAIAUgBi0AADoAACAFIAYtAAE6AAEgBSAGLQACOgACIAUgBi0AAzoAAyAFIAYtAAQ6AAQgBSAGLQAFOgAFIAUgBi0ABjoABiAFIAYtAAc6AAcgBUEIaiEFIAZBCGoiBiAJRw0ACwsgASABKAIMIARqNgIMIAEoAgQhAyAEQYCABEkNACABQQE2AiQgASADIAEoAgBrQQN1NgIoCyADIAs2AgAgAyAEOwEEIApBA2siAEGAgARPBEAgAUECNgIkIAEgAyABKAIAa0EDdTYCKAsgAyAAOwEGIAEgA0EIaiIANgIEAkAgFyAJIApqIgNJBEAgCCEHDAELIA4gECAaaigAAEGx893xeWwgEXZBAnRqIBBBAmo2AgAgDiADQQJrIgQoAABBsfPd8XlsIBF2QQJ0aiAEIA9rNgIAIAwEQCAMIQUDQCAIIQwgAygAACIJIAMgBSIIaygAAEcEQCAMIQcgBSEMDAMLIANBBGoiBCAIayEGAn8CQCAEIBxPBEAgBCEFDAELIAQiBSgAACIKIAYoAAAiB0cEQCAHIApzaEEDdgwCCwNAIAZBBGohBiAFQQRqIgUgHE8NASAFKAAAIgogBigAACIHRg0ACyAFIAcgCnNoQQN2aiAEawwBCwJAIAUgIE8NACAGLwAAIAUvAABHDQAgBkECaiEGIAVBAmohBQsgBSAUSQR/IAUgBi0AACAFLQAARmoFIAULIARrCyEFIA4gCUGx893xeWwgEXZBAnRqIAMgD2s2AgAgAyATTQRAIAMpAAAhIiABKAIMIgAgAykACDcACCAAICI3AAAgASgCBCEACyADIAVqQQRqIQMgAEEBNgIAIABBADsBBCAFQQFqIgRBgIAETwRAIAFBAjYCJCABIAAgASgCAGtBA3U2AigLIAAgBDsBBiABIABBCGoiADYCBCAMIQUgCCEHIAMgF00NAAsMAQtBACEMIAghBwsgAyEGIAMgEmoiEEEBaiIFIBdJDQALCwwEC0EAIAIoAgAiFyAXIAMgACgCBCISIAAoAgwiCSADIBJrIARqIgVBASAAKAK4AXQiCGsgCSAFIAlrIAhLGyAAKAIYIgcbIhRqIh0gA0ZqIgUgEmsiDCAJIAwgCGsgCSAMIAlrIAhLGyAHG2siCUsiGBshB0EAIAIoAgQiGyAJIBtJIh4bIQkgBUEDaiEGIBJBAmohHyADIARqIhFBCGshDwJAAkACQAJAIApBBWsOAwMCAQALAkAgBiAPTw0AIBFBIGshECARQQFrIRwgEUEDayEaQSAgACgCwAFrIRUDQEEAIAdrISAgBUGAAWohFiAFQQFqIQsgBUECaiETIA4gBSgAAEGx893xeWwgFXYiBEECdGooAgAhACAFKAABIRlBAiEIAkADQAJAIAYhDCATIgogIGoiBigAACEhIA4gBEECdGogBSASayITNgIAIBlBsfPd8XlsIBV2IQQCfwJAIAdBACAKKAAAIg0gIUYbRQRAAkACQAJAAkAgACAUSQ0AIAUoAAAgACASaigAAEcNACALIQogBSELDAELIA4gBEECdGoiBCgCACEAIAQgCyASayITNgIAIA1BsfPd8XlsIBV2IQQgACAUSQ0CIAsoAAAgACASaigAAEcNAiAIQQVPDQELIA4gBEECdGogCiASazYCAAsgCyAAIBJqIghrIgpBA2ohDUEEIQQgACAUSg0EIAchCQwGCyAOIARBAnRqIQAgCCAKaiITIBZPDQEgCAwCCyAGQQFrLQAAIQAgCkEBay0AACEFIA4gBEECdGogCyASazYCAEEFQQQgACAFRiIAGyEEIAYgAGshCCAKIABrIQtBASENIAchCgwECyAWQYABaiEWIAhBAWoLIAggDGohBiAAKAIAIQAgDCgAACEZIQggDCELIAohBSAGIA9JDQEMBAsLIAMgC08EQCAHIQkMAQsDQCALQQFrIgAtAAAgCEEBayIFLQAARwRAIAchCQwCCyAEQQFqIQQgACADSwRAIAAhCyAFIgggHUsNAQsLIAchCSAFIQggACELCyAEIAhqIQYCfwJAIAQgC2oiACAaTwRAIAAhBQwBCyAAIgUoAAAiCCAGKAAAIgxHBEAgCCAMc2hBA3YMAgsDQCAGQQRqIQYgBUEEaiIFIBpPDQEgBSgAACIIIAYoAAAiDEYNAAsgBSAIIAxzaEEDdmogAGsMAQsCQCAFIBxPDQAgBi8AACAFLwAARw0AIAZBAmohBiAFQQJqIQULIAUgEUkEfyAFIAYtAAAgBS0AAEZqBSAFCyAAawshBSALIANrIQggBCAFaiEMIAEoAgwhBQJAAkAgCyAQTQRAIAMpAAAhIiAFIAMpAAg3AAggBSAiNwAAIAEoAgwhACAIQRBNBEAgASAAIAhqNgIMIAEoAgQhAwwDCyADKQAQISIgACADKQAYNwAYIAAgIjcAECAIQSFIDQEgACAIaiEEIANBEGohAyAAQSBqIQUDQCADKQAQISIgBSADKQAYNwAIIAUgIjcAACADKQAgISIgBSADKQAoNwAYIAUgIjcAECADQSBqIQMgBUEgaiIFIARJDQALDAELIAMgEE0EQCADKQAAISIgBSADKQAINwAIIAUgIjcAACAFIBAgA2siBGohACAEQRFOBEAgBUEQaiEFA0AgAykAECEiIAUgAykAGDcACCAFICI3AAAgAykAICEiIAUgAykAKDcAGCAFICI3ABAgA0EgaiEDIAVBIGoiBSAASQ0ACwsgACEFIBAhAwsgAyALTw0AQQAhByADIQYgCyADa0EHcSIABEADQCAFIAYtAAA6AAAgBUEBaiEFIAZBAWohBiAHQQFqIgcgAEcNAAsLIAMgC2tBeEsNAANAIAUgBi0AADoAACAFIAYtAAE6AAEgBSAGLQACOgACIAUgBi0AAzoAAyAFIAYtAAQ6AAQgBSAGLQAFOgAFIAUgBi0ABjoABiAFIAYtAAc6AAcgBUEIaiEFIAZBCGoiBiALRw0ACwsgASABKAIMIAhqNgIMIAEoAgQhAyAIQYCABEkNACABQQE2AiQgASADIAEoAgBrQQN1NgIoCyADIA02AgAgAyAIOwEEIAxBA2siAEGAgARPBEAgAUECNgIkIAEgAyABKAIAa0EDdTYCKAsgAyAAOwEGIAEgA0EIaiIENgIEAkAgDyALIAxqIgNJBEAgCiEHDAELIA4gEyAfaigAAEGx893xeWwgFXZBAnRqIBNBAmo2AgAgDiADQQJrIgAoAABBsfPd8XlsIBV2QQJ0aiAAIBJrNgIAIAkEQCAJIQUDQCAKIQkgAygAACIIIAMgBSIKaygAAEcEQCAJIQcgBSEJDAMLIANBBGoiACAKayEGAn8CQCAAIBpPBEAgACEFDAELIAAiBSgAACIMIAYoAAAiB0cEQCAHIAxzaEEDdgwCCwNAIAZBBGohBiAFQQRqIgUgGk8NASAFKAAAIgwgBigAACIHRg0ACyAFIAcgDHNoQQN2aiAAawwBCwJAIAUgHE8NACAGLwAAIAUvAABHDQAgBkECaiEGIAVBAmohBQsgBSARSQR/IAUgBi0AACAFLQAARmoFIAULIABrCyEFIA4gCEGx893xeWwgFXZBAnRqIAMgEms2AgAgAyAQTQRAIAMpAAAhIiABKAIMIgAgAykACDcACCAAICI3AAAgASgCBCEECyADIAVqQQRqIQMgBEEBNgIAIARBADsBBCAFQQFqIgBBgIAETwRAIAFBAjYCJCABIAQgASgCAGtBA3U2AigLIAQgADsBBiABIARBCGoiBDYCBCAJIQUgCiEHIAMgD00NAAsMAQtBACEJIAohBwsgAyIFQQNqIgYgD0kNAAsLDAcLAkAgBiAPTw0AIBFBIGshECARQQFrIRYgEUEDayEVQcAAIAAoAsABa60hIwNAQQAgB2shGSAFQYABaiETIAVBAWohCyAFQQJqIQwgDiAFKQAAQoDGlf3Lm++NT34gI4inIgRBAnRqKAIAIQAgBSkAASEiQQIhCAJAA0ACQCAGIQ0gDCIKIBlqIgYoAAAhGiAOIARBAnRqIAUgEmsiDDYCACAiQoDGlf3Lm++NT34gI4inIQQCfwJAAkAgBwRAIAooAAAgGkYNAQsCQAJAAkACQCAAIBRJDQAgBSgAACAAIBJqKAAARw0AIAshCiAFIQsMAQsgDiAEQQJ0aiIEKAIAIQAgCikAACAEIAsgEmsiDDYCAEKAxpX9y5vvjU9+ICOIpyEEIAAgFEkNAiALKAAAIAAgEmooAABHDQIgCEEFTw0BCyAOIARBAnRqIAogEms2AgALIAsgACASaiIIayIKQQNqIQ1BBCEEIAAgFEoNBCAHIQkMBgsgDiAEQQJ0aiEAIAggCmoiDCATTw0BIAgMAgsgBkEBay0AACEAIApBAWstAAAhBSAOIARBAnRqIAsgEms2AgBBBUEEIAAgBUYiABshBCAGIABrIQggCiAAayELQQEhDSAHIQoMBAsgE0GAAWohEyAIQQFqCyAIIA1qIQYgACgCACEAIA0pAAAhIiEIIA0hCyAKIQUgBiAPSQ0BDAQLCyADIAtPBEAgByEJDAELA0AgC0EBayIALQAAIAhBAWsiBS0AAEcEQCAHIQkMAgsgBEEBaiEEIAAgA0sEQCAAIQsgBSIIIB1LDQELCyAHIQkgBSEIIAAhCwsgBCAIaiEGAn8CQCAEIAtqIgAgFU8EQCAAIQUMAQsgACIFKAAAIgggBigAACIHRwRAIAcgCHNoQQN2DAILA0AgBkEEaiEGIAVBBGoiBSAVTw0BIAUoAAAiCCAGKAAAIgdGDQALIAUgByAIc2hBA3ZqIABrDAELAkAgBSAWTw0AIAYvAAAgBS8AAEcNACAGQQJqIQYgBUECaiEFCyAFIBFJBH8gBSAGLQAAIAUtAABGagUgBQsgAGsLIQUgCyADayEIIAQgBWohEyABKAIMIQUCQAJAIAsgEE0EQCADKQAAISIgBSADKQAINwAIIAUgIjcAACABKAIMIQAgCEEQTQRAIAEgACAIajYCDCABKAIEIQMMAwsgAykAECEiIAAgAykAGDcAGCAAICI3ABAgCEEhSA0BIAAgCGohBCADQRBqIQMgAEEgaiEFA0AgAykAECEiIAUgAykAGDcACCAFICI3AAAgAykAICEiIAUgAykAKDcAGCAFICI3ABAgA0EgaiEDIAVBIGoiBSAESQ0ACwwBCyADIBBNBEAgAykAACEiIAUgAykACDcACCAFICI3AAAgBSAQIANrIgRqIQAgBEERTgRAIAVBEGohBQNAIAMpABAhIiAFIAMpABg3AAggBSAiNwAAIAMpACAhIiAFIAMpACg3ABggBSAiNwAQIANBIGohAyAFQSBqIgUgAEkNAAsLIAAhBSAQIQMLIAMgC08NAEEAIQcgAyEGIAsgA2tBB3EiAARAA0AgBSAGLQAAOgAAIAVBAWohBSAGQQFqIQYgB0EBaiIHIABHDQALCyADIAtrQXhLDQADQCAFIAYtAAA6AAAgBSAGLQABOgABIAUgBi0AAjoAAiAFIAYtAAM6AAMgBSAGLQAEOgAEIAUgBi0ABToABSAFIAYtAAY6AAYgBSAGLQAHOgAHIAVBCGohBSAGQQhqIgYgC0cNAAsLIAEgASgCDCAIajYCDCABKAIEIQMgCEGAgARJDQAgAUEBNgIkIAEgAyABKAIAa0EDdTYCKAsgAyANNgIAIAMgCDsBBCATQQNrIgBBgIAETwRAIAFBAjYCJCABIAMgASgCAGtBA3U2AigLIAMgADsBBiABIANBCGoiBDYCBAJAIA8gCyATaiIDSQRAIAohBwwBCyAOIAwgH2opAABCgMaV/cub741PfiAjiKdBAnRqIAxBAmo2AgAgDiADQQJrIgApAABCgMaV/cub741PfiAjiKdBAnRqIAAgEms2AgAgCQRAIAkhBQNAIAohCSADKAAAIAMgBSIKaygAAEcEQCAJIQcgBSEJDAMLIANBBGoiACAKayEGAn8CQCAAIBVPBEAgACEFDAELIAAiBSgAACIIIAYoAAAiDEcEQCAIIAxzaEEDdgwCCwNAIAZBBGohBiAFQQRqIgUgFU8NASAFKAAAIgggBigAACIMRg0ACyAFIAggDHNoQQN2aiAAawwBCwJAIAUgFk8NACAGLwAAIAUvAABHDQAgBkECaiEGIAVBAmohBQsgBSARSQR/IAUgBi0AACAFLQAARmoFIAULIABrCyEFIA4gAykAAEKAxpX9y5vvjU9+ICOIp0ECdGogAyASazYCACADIBBNBEAgAykAACEiIAEoAgwiACADKQAINwAIIAAgIjcAACABKAIEIQQLIAMgBWpBBGohAyAEQQE2AgAgBEEAOwEEIAVBAWoiAEGAgARPBEAgAUECNgIkIAEgBCABKAIAa0EDdTYCKAsgBCAAOwEGIAEgBEEIaiIENgIEIAkhBSAKIQcgAyAPTQ0ACwwBC0EAIQkgCiEHCyADIgVBA2oiBiAPSQ0ACwsMBgsCQCAGIA9PDQAgEUEgayEQIBFBAWshFiARQQNrIRVBwAAgACgCwAFrrSEjA0BBACAHayEZIAVBgAFqIRMgBUEBaiELIAVBAmohDCAOIAUpAABCgIDs/Mub741PfiAjiKciBEECdGooAgAhACAFKQABISJBAiEIAkADQAJAIAYhDSAMIgogGWoiBigAACEaIA4gBEECdGogBSASayIMNgIAICJCgIDs/Mub741PfiAjiKchBAJ/AkACQCAHBEAgCigAACAaRg0BCwJAAkACQAJAIAAgFEkNACAFKAAAIAAgEmooAABHDQAgCyEKIAUhCwwBCyAOIARBAnRqIgQoAgAhACAKKQAAIAQgCyASayIMNgIAQoCA7PzLm++NT34gI4inIQQgACAUSQ0CIAsoAAAgACASaigAAEcNAiAIQQVPDQELIA4gBEECdGogCiASazYCAAsgCyAAIBJqIghrIgpBA2ohDUEEIQQgACAUSg0EIAchCQwGCyAOIARBAnRqIQAgCCAKaiIMIBNPDQEgCAwCCyAGQQFrLQAAIQAgCkEBay0AACEFIA4gBEECdGogCyASazYCAEEFQQQgACAFRiIAGyEEIAYgAGshCCAKIABrIQtBASENIAchCgwECyATQYABaiETIAhBAWoLIAggDWohBiAAKAIAIQAgDSkAACEiIQggDSELIAohBSAGIA9JDQEMBAsLIAMgC08EQCAHIQkMAQsDQCALQQFrIgAtAAAgCEEBayIFLQAARwRAIAchCQwCCyAEQQFqIQQgACADSwRAIAAhCyAFIgggHUsNAQsLIAchCSAFIQggACELCyAEIAhqIQYCfwJAIAQgC2oiACAVTwRAIAAhBQwBCyAAIgUoAAAiCCAGKAAAIgdHBEAgByAIc2hBA3YMAgsDQCAGQQRqIQYgBUEEaiIFIBVPDQEgBSgAACIIIAYoAAAiB0YNAAsgBSAHIAhzaEEDdmogAGsMAQsCQCAFIBZPDQAgBi8AACAFLwAARw0AIAZBAmohBiAFQQJqIQULIAUgEUkEfyAFIAYtAAAgBS0AAEZqBSAFCyAAawshBSALIANrIQggBCAFaiETIAEoAgwhBQJAAkAgCyAQTQRAIAMpAAAhIiAFIAMpAAg3AAggBSAiNwAAIAEoAgwhACAIQRBNBEAgASAAIAhqNgIMIAEoAgQhAwwDCyADKQAQISIgACADKQAYNwAYIAAgIjcAECAIQSFIDQEgACAIaiEEIANBEGohAyAAQSBqIQUDQCADKQAQISIgBSADKQAYNwAIIAUgIjcAACADKQAgISIgBSADKQAoNwAYIAUgIjcAECADQSBqIQMgBUEgaiIFIARJDQALDAELIAMgEE0EQCADKQAAISIgBSADKQAINwAIIAUgIjcAACAFIBAgA2siBGohACAEQRFOBEAgBUEQaiEFA0AgAykAECEiIAUgAykAGDcACCAFICI3AAAgAykAICEiIAUgAykAKDcAGCAFICI3ABAgA0EgaiEDIAVBIGoiBSAASQ0ACwsgACEFIBAhAwsgAyALTw0AQQAhByADIQYgCyADa0EHcSIABEADQCAFIAYtAAA6AAAgBUEBaiEFIAZBAWohBiAHQQFqIgcgAEcNAAsLIAMgC2tBeEsNAANAIAUgBi0AADoAACAFIAYtAAE6AAEgBSAGLQACOgACIAUgBi0AAzoAAyAFIAYtAAQ6AAQgBSAGLQAFOgAFIAUgBi0ABjoABiAFIAYtAAc6AAcgBUEIaiEFIAZBCGoiBiALRw0ACwsgASABKAIMIAhqNgIMIAEoAgQhAyAIQYCABEkNACABQQE2AiQgASADIAEoAgBrQQN1NgIoCyADIA02AgAgAyAIOwEEIBNBA2siAEGAgARPBEAgAUECNgIkIAEgAyABKAIAa0EDdTYCKAsgAyAAOwEGIAEgA0EIaiIENgIEAkAgDyALIBNqIgNJBEAgCiEHDAELIA4gDCAfaikAAEKAgOz8y5vvjU9+ICOIp0ECdGogDEECajYCACAOIANBAmsiACkAAEKAgOz8y5vvjU9+ICOIp0ECdGogACASazYCACAJBEAgCSEFA0AgCiEJIAMoAAAgAyAFIgprKAAARwRAIAkhByAFIQkMAwsgA0EEaiIAIAprIQYCfwJAIAAgFU8EQCAAIQUMAQsgACIFKAAAIgggBigAACIMRwRAIAggDHNoQQN2DAILA0AgBkEEaiEGIAVBBGoiBSAVTw0BIAUoAAAiCCAGKAAAIgxGDQALIAUgCCAMc2hBA3ZqIABrDAELAkAgBSAWTw0AIAYvAAAgBS8AAEcNACAGQQJqIQYgBUECaiEFCyAFIBFJBH8gBSAGLQAAIAUtAABGagUgBQsgAGsLIQUgDiADKQAAQoCA7PzLm++NT34gI4inQQJ0aiADIBJrNgIAIAMgEE0EQCADKQAAISIgASgCDCIAIAMpAAg3AAggACAiNwAAIAEoAgQhBAsgAyAFakEEaiEDIARBATYCACAEQQA7AQQgBUEBaiIAQYCABE8EQCABQQI2AiQgASAEIAEoAgBrQQN1NgIoCyAEIAA7AQYgASAEQQhqIgQ2AgQgCSEFIAohByADIA9NDQALDAELQQAhCSAKIQcLIAMiBUEDaiIGIA9JDQALCwwFCwJAIAYgD08NACARQSBrIRAgEUEBayEWIBFBA2shFUHAACAAKALAAWutISMDQEEAIAdrIRkgBUGAAWohEyAFQQFqIQsgBUECaiEMIA4gBSkAAEKAgIDYy5vvjU9+ICOIpyIEQQJ0aigCACEAIAUpAAEhIkECIQgCQANAAkAgBiENIAwiCiAZaiIGKAAAIRogDiAEQQJ0aiAFIBJrIgw2AgAgIkKAgIDYy5vvjU9+ICOIpyEEAn8CQAJAIAcEQCAKKAAAIBpGDQELAkACQAJAAkAgACAUSQ0AIAUoAAAgACASaigAAEcNACALIQogBSELDAELIA4gBEECdGoiBCgCACEAIAopAAAgBCALIBJrIgw2AgBCgICA2Mub741PfiAjiKchBCAAIBRJDQIgCygAACAAIBJqKAAARw0CIAhBBU8NAQsgDiAEQQJ0aiAKIBJrNgIACyALIAAgEmoiCGsiCkEDaiENQQQhBCAAIBRKDQQgByEJDAYLIA4gBEECdGohACAIIApqIgwgE08NASAIDAILIAZBAWstAAAhACAKQQFrLQAAIQUgDiAEQQJ0aiALIBJrNgIAQQVBBCAAIAVGIgAbIQQgBiAAayEIIAogAGshC0EBIQ0gByEKDAQLIBNBgAFqIRMgCEEBagsgCCANaiEGIAAoAgAhACANKQAAISIhCCANIQsgCiEFIAYgD0kNAQwECwsgAyALTwRAIAchCQwBCwNAIAtBAWsiAC0AACAIQQFrIgUtAABHBEAgByEJDAILIARBAWohBCAAIANLBEAgACELIAUiCCAdSw0BCwsgByEJIAUhCCAAIQsLIAQgCGohBgJ/AkAgBCALaiIAIBVPBEAgACEFDAELIAAiBSgAACIIIAYoAAAiB0cEQCAHIAhzaEEDdgwCCwNAIAZBBGohBiAFQQRqIgUgFU8NASAFKAAAIgggBigAACIHRg0ACyAFIAcgCHNoQQN2aiAAawwBCwJAIAUgFk8NACAGLwAAIAUvAABHDQAgBkECaiEGIAVBAmohBQsgBSARSQR/IAUgBi0AACAFLQAARmoFIAULIABrCyEFIAsgA2shCCAEIAVqIRMgASgCDCEFAkACQCALIBBNBEAgAykAACEiIAUgAykACDcACCAFICI3AAAgASgCDCEAIAhBEE0EQCABIAAgCGo2AgwgASgCBCEDDAMLIAMpABAhIiAAIAMpABg3ABggACAiNwAQIAhBIUgNASAAIAhqIQQgA0EQaiEDIABBIGohBQNAIAMpABAhIiAFIAMpABg3AAggBSAiNwAAIAMpACAhIiAFIAMpACg3ABggBSAiNwAQIANBIGohAyAFQSBqIgUgBEkNAAsMAQsgAyAQTQRAIAMpAAAhIiAFIAMpAAg3AAggBSAiNwAAIAUgECADayIEaiEAIARBEU4EQCAFQRBqIQUDQCADKQAQISIgBSADKQAYNwAIIAUgIjcAACADKQAgISIgBSADKQAoNwAYIAUgIjcAECADQSBqIQMgBUEgaiIFIABJDQALCyAAIQUgECEDCyADIAtPDQBBACEHIAMhBiALIANrQQdxIgAEQANAIAUgBi0AADoAACAFQQFqIQUgBkEBaiEGIAdBAWoiByAARw0ACwsgAyALa0F4Sw0AA0AgBSAGLQAAOgAAIAUgBi0AAToAASAFIAYtAAI6AAIgBSAGLQADOgADIAUgBi0ABDoABCAFIAYtAAU6AAUgBSAGLQAGOgAGIAUgBi0ABzoAByAFQQhqIQUgBkEIaiIGIAtHDQALCyABIAEoAgwgCGo2AgwgASgCBCEDIAhBgIAESQ0AIAFBATYCJCABIAMgASgCAGtBA3U2AigLIAMgDTYCACADIAg7AQQgE0EDayIAQYCABE8EQCABQQI2AiQgASADIAEoAgBrQQN1NgIoCyADIAA7AQYgASADQQhqIgQ2AgQCQCAPIAsgE2oiA0kEQCAKIQcMAQsgDiAMIB9qKQAAQoCAgNjLm++NT34gI4inQQJ0aiAMQQJqNgIAIA4gA0ECayIAKQAAQoCAgNjLm++NT34gI4inQQJ0aiAAIBJrNgIAIAkEQCAJIQUDQCAKIQkgAygAACADIAUiCmsoAABHBEAgCSEHIAUhCQwDCyADQQRqIgAgCmshBgJ/AkAgACAVTwRAIAAhBQwBCyAAIgUoAAAiCCAGKAAAIgxHBEAgCCAMc2hBA3YMAgsDQCAGQQRqIQYgBUEEaiIFIBVPDQEgBSgAACIIIAYoAAAiDEYNAAsgBSAIIAxzaEEDdmogAGsMAQsCQCAFIBZPDQAgBi8AACAFLwAARw0AIAZBAmohBiAFQQJqIQULIAUgEUkEfyAFIAYtAAAgBS0AAEZqBSAFCyAAawshBSAOIAMpAABCgICA2Mub741PfiAjiKdBAnRqIAMgEms2AgAgAyAQTQRAIAMpAAAhIiABKAIMIgAgAykACDcACCAAICI3AAAgASgCBCEECyADIAVqQQRqIQMgBEEBNgIAIARBADsBBCAFQQFqIgBBgIAETwRAIAFBAjYCJCABIAQgASgCAGtBA3U2AigLIAQgADsBBiABIARBCGoiBDYCBCAJIQUgCiEHIAMgD00NAAsMAQtBACEJIAohBwsgAyIFQQNqIgYgD0kNAAsLDAQLAkAgBSAXTw0AIBRBIGshESAUQQFrIRkgFEEDayEWQcAAIAAoAsABa60hIwNAQQAgB2shCyAGQYABaiETIAZBAWohCSAOIAYpAABCgMaV/cub741PfiAjiKciAEECdGooAgAhCiAGKQABISIgEiENAkADQAJAIAUhBCAQIgggC2oiBSgAACEcIA4gAEECdGogBiAPayIQNgIAICJCgMaV/cub741PfiAjiKchAAJ/AkACQCAHBEAgCCgAACAcRg0BCwJAAkACQAJAIAogGEkNACAGKAAAIAogD2ooAABHDQAgCSEIIAYhCQwBCyAOIABBAnRqIgAoAgAhCiAIKQAAIAAgCSAPayIQNgIAQoDGlf3Lm++NT34gI4inIQAgCiAYSQ0CIAkoAAAgCiAPaigAAEcNAiANQQVPDQELIA4gAEECdGogCCAPazYCAAsgCSAKIA9qIg1rIghBA2ohC0EEIQAgCiAYSg0EIAchDAwGCyAOIABBAnRqIQogCCANaiIQIBNPDQEgDQwCCyAFQQFrLQAAIQQgCEEBay0AACEKIA4gAEECdGogCSAPazYCAEEFQQQgBCAKRiIEGyEAIAUgBGshDSAIIARrIQlBASELIAchCAwECyATQYABaiETIA1BAWoLIAQgDWohBSAKKAIAIQogBCkAACEiIQ0gBCEJIAghBiAFIBdJDQEMBAsLIAMgCU8EQCAHIQwMAQsDQCAJQQFrIgQtAAAgDUEBayIFLQAARwRAIAchDAwCCyAAQQFqIQAgAyAESQRAIAQhCSAFIg0gHksNAQsLIAchDCAFIQ0gBCEJCyAAIA1qIQYCfwJAIAAgCWoiBCAWTwRAIAQhBQwBCyAEIgUoAAAiCiAGKAAAIgdHBEAgByAKc2hBA3YMAgsDQCAGQQRqIQYgBUEEaiIFIBZPDQEgBSgAACIKIAYoAAAiB0YNAAsgBSAHIApzaEEDdmogBGsMAQsCQCAFIBlPDQAgBi8AACAFLwAARw0AIAZBAmohBiAFQQJqIQULIAUgFEkEfyAFIAYtAAAgBS0AAEZqBSAFCyAEawshBSAJIANrIQQgACAFaiEKIAEoAgwhBQJAAkAgCSARTQRAIAMpAAAhIiAFIAMpAAg3AAggBSAiNwAAIAEoAgwhACAEQRBNBEAgASAAIARqNgIMIAEoAgQhAwwDCyADKQAQISIgACADKQAYNwAYIAAgIjcAECAEQSFIDQEgACAEaiEHIANBEGohAyAAQSBqIQUDQCADKQAQISIgBSADKQAYNwAIIAUgIjcAACADKQAgISIgBSADKQAoNwAYIAUgIjcAECADQSBqIQMgBUEgaiIFIAdJDQALDAELIAMgEU0EQCADKQAAISIgBSADKQAINwAIIAUgIjcAACAFIBEgA2siB2ohACAHQRFOBEAgBUEQaiEFA0AgAykAECEiIAUgAykAGDcACCAFICI3AAAgAykAICEiIAUgAykAKDcAGCAFICI3ABAgA0EgaiEDIAVBIGoiBSAASQ0ACwsgACEFIBEhAwsgAyAJTw0AQQAhByADIQYgCSADa0EHcSIABEADQCAFIAYtAAA6AAAgBUEBaiEFIAZBAWohBiAHQQFqIgcgAEcNAAsLIAMgCWtBeEsNAANAIAUgBi0AADoAACAFIAYtAAE6AAEgBSAGLQACOgACIAUgBi0AAzoAAyAFIAYtAAQ6AAQgBSAGLQAFOgAFIAUgBi0ABjoABiAFIAYtAAc6AAcgBUEIaiEFIAZBCGoiBiAJRw0ACwsgASABKAIMIARqNgIMIAEoAgQhAyAEQYCABEkNACABQQE2AiQgASADIAEoAgBrQQN1NgIoCyADIAs2AgAgAyAEOwEEIApBA2siAEGAgARPBEAgAUECNgIkIAEgAyABKAIAa0EDdTYCKAsgAyAAOwEGIAEgA0EIaiIANgIEAkAgFyAJIApqIgNJBEAgCCEHDAELIA4gECAaaikAAEKAxpX9y5vvjU9+ICOIp0ECdGogEEECajYCACAOIANBAmsiBCkAAEKAxpX9y5vvjU9+ICOIp0ECdGogBCAPazYCACAMBEAgDCEFA0AgCCEMIAMoAAAgAyAFIghrKAAARwRAIAwhByAFIQwMAwsgA0EEaiIEIAhrIQYCfwJAIAQgFk8EQCAEIQUMAQsgBCIFKAAAIgkgBigAACIKRwRAIAkgCnNoQQN2DAILA0AgBkEEaiEGIAVBBGoiBSAWTw0BIAUoAAAiCSAGKAAAIgpGDQALIAUgCSAKc2hBA3ZqIARrDAELAkAgBSAZTw0AIAYvAAAgBS8AAEcNACAGQQJqIQYgBUECaiEFCyAFIBRJBH8gBSAGLQAAIAUtAABGagUgBQsgBGsLIQUgDiADKQAAQoDGlf3Lm++NT34gI4inQQJ0aiADIA9rNgIAIAMgEU0EQCADKQAAISIgASgCDCIAIAMpAAg3AAggACAiNwAAIAEoAgQhAAsgAyAFakEEaiEDIABBATYCACAAQQA7AQQgBUEBaiIEQYCABE8EQCABQQI2AiQgASAAIAEoAgBrQQN1NgIoCyAAIAQ7AQYgASAAQQhqIgA2AgQgDCEFIAghByADIBdNDQALDAELQQAhDCAIIQcLIAMhBiADIBJqIhBBAWoiBSAXSQ0ACwsMAgsCQCAFIBdPDQAgFEEgayERIBRBAWshGSAUQQNrIRZBwAAgACgCwAFrrSEjA0BBACAHayELIAZBgAFqIRMgBkEBaiEJIA4gBikAAEKAgOz8y5vvjU9+ICOIpyIAQQJ0aigCACEKIAYpAAEhIiASIQ0CQANAAkAgBSEEIBAiCCALaiIFKAAAIRwgDiAAQQJ0aiAGIA9rIhA2AgAgIkKAgOz8y5vvjU9+ICOIpyEAAn8CQAJAIAcEQCAIKAAAIBxGDQELAkACQAJAAkAgCiAYSQ0AIAYoAAAgCiAPaigAAEcNACAJIQggBiEJDAELIA4gAEECdGoiACgCACEKIAgpAAAgACAJIA9rIhA2AgBCgIDs/Mub741PfiAjiKchACAKIBhJDQIgCSgAACAKIA9qKAAARw0CIA1BBU8NAQsgDiAAQQJ0aiAIIA9rNgIACyAJIAogD2oiDWsiCEEDaiELQQQhACAKIBhKDQQgByEMDAYLIA4gAEECdGohCiAIIA1qIhAgE08NASANDAILIAVBAWstAAAhBCAIQQFrLQAAIQogDiAAQQJ0aiAJIA9rNgIAQQVBBCAEIApGIgQbIQAgBSAEayENIAggBGshCUEBIQsgByEIDAQLIBNBgAFqIRMgDUEBagsgBCANaiEFIAooAgAhCiAEKQAAISIhDSAEIQkgCCEGIAUgF0kNAQwECwsgAyAJTwRAIAchDAwBCwNAIAlBAWsiBC0AACANQQFrIgUtAABHBEAgByEMDAILIABBAWohACADIARJBEAgBCEJIAUiDSAeSw0BCwsgByEMIAUhDSAEIQkLIAAgDWohBgJ/AkAgACAJaiIEIBZPBEAgBCEFDAELIAQiBSgAACIKIAYoAAAiB0cEQCAHIApzaEEDdgwCCwNAIAZBBGohBiAFQQRqIgUgFk8NASAFKAAAIgogBigAACIHRg0ACyAFIAcgCnNoQQN2aiAEawwBCwJAIAUgGU8NACAGLwAAIAUvAABHDQAgBkECaiEGIAVBAmohBQsgBSAUSQR/IAUgBi0AACAFLQAARmoFIAULIARrCyEFIAkgA2shBCAAIAVqIQogASgCDCEFAkACQCAJIBFNBEAgAykAACEiIAUgAykACDcACCAFICI3AAAgASgCDCEAIARBEE0EQCABIAAgBGo2AgwgASgCBCEDDAMLIAMpABAhIiAAIAMpABg3ABggACAiNwAQIARBIUgNASAAIARqIQcgA0EQaiEDIABBIGohBQNAIAMpABAhIiAFIAMpABg3AAggBSAiNwAAIAMpACAhIiAFIAMpACg3ABggBSAiNwAQIANBIGohAyAFQSBqIgUgB0kNAAsMAQsgAyARTQRAIAMpAAAhIiAFIAMpAAg3AAggBSAiNwAAIAUgESADayIHaiEAIAdBEU4EQCAFQRBqIQUDQCADKQAQISIgBSADKQAYNwAIIAUgIjcAACADKQAgISIgBSADKQAoNwAYIAUgIjcAECADQSBqIQMgBUEgaiIFIABJDQALCyAAIQUgESEDCyADIAlPDQBBACEHIAMhBiAJIANrQQdxIgAEQANAIAUgBi0AADoAACAFQQFqIQUgBkEBaiEGIAdBAWoiByAARw0ACwsgAyAJa0F4Sw0AA0AgBSAGLQAAOgAAIAUgBi0AAToAASAFIAYtAAI6AAIgBSAGLQADOgADIAUgBi0ABDoABCAFIAYtAAU6AAUgBSAGLQAGOgAGIAUgBi0ABzoAByAFQQhqIQUgBkEIaiIGIAlHDQALCyABIAEoAgwgBGo2AgwgASgCBCEDIARBgIAESQ0AIAFBATYCJCABIAMgASgCAGtBA3U2AigLIAMgCzYCACADIAQ7AQQgCkEDayIAQYCABE8EQCABQQI2AiQgASADIAEoAgBrQQN1NgIoCyADIAA7AQYgASADQQhqIgA2AgQCQCAXIAkgCmoiA0kEQCAIIQcMAQsgDiAQIBpqKQAAQoCA7PzLm++NT34gI4inQQJ0aiAQQQJqNgIAIA4gA0ECayIEKQAAQoCA7PzLm++NT34gI4inQQJ0aiAEIA9rNgIAIAwEQCAMIQUDQCAIIQwgAygAACADIAUiCGsoAABHBEAgDCEHIAUhDAwDCyADQQRqIgQgCGshBgJ/AkAgBCAWTwRAIAQhBQwBCyAEIgUoAAAiCSAGKAAAIgpHBEAgCSAKc2hBA3YMAgsDQCAGQQRqIQYgBUEEaiIFIBZPDQEgBSgAACIJIAYoAAAiCkYNAAsgBSAJIApzaEEDdmogBGsMAQsCQCAFIBlPDQAgBi8AACAFLwAARw0AIAZBAmohBiAFQQJqIQULIAUgFEkEfyAFIAYtAAAgBS0AAEZqBSAFCyAEawshBSAOIAMpAABCgIDs/Mub741PfiAjiKdBAnRqIAMgD2s2AgAgAyARTQRAIAMpAAAhIiABKAIMIgAgAykACDcACCAAICI3AAAgASgCBCEACyADIAVqQQRqIQMgAEEBNgIAIABBADsBBCAFQQFqIgRBgIAETwRAIAFBAjYCJCABIAAgASgCAGtBA3U2AigLIAAgBDsBBiABIABBCGoiADYCBCAMIQUgCCEHIAMgF00NAAsMAQtBACEMIAghBwsgAyEGIAMgEmoiEEEBaiIFIBdJDQALCwwBCwJAIAUgF08NACAUQSBrIREgFEEBayEZIBRBA2shFkHAACAAKALAAWutISMDQEEAIAdrIQsgBkGAAWohEyAGQQFqIQkgDiAGKQAAQoCAgNjLm++NT34gI4inIgBBAnRqKAIAIQogBikAASEiIBIhDQJAA0ACQCAFIQQgECIIIAtqIgUoAAAhHCAOIABBAnRqIAYgD2siEDYCACAiQoCAgNjLm++NT34gI4inIQACfwJAAkAgBwRAIAgoAAAgHEYNAQsCQAJAAkACQCAKIBhJDQAgBigAACAKIA9qKAAARw0AIAkhCCAGIQkMAQsgDiAAQQJ0aiIAKAIAIQogCCkAACAAIAkgD2siEDYCAEKAgIDYy5vvjU9+ICOIpyEAIAogGEkNAiAJKAAAIAogD2ooAABHDQIgDUEFTw0BCyAOIABBAnRqIAggD2s2AgALIAkgCiAPaiINayIIQQNqIQtBBCEAIAogGEoNBCAHIQwMBgsgDiAAQQJ0aiEKIAggDWoiECATTw0BIA0MAgsgBUEBay0AACEEIAhBAWstAAAhCiAOIABBAnRqIAkgD2s2AgBBBUEEIAQgCkYiBBshACAFIARrIQ0gCCAEayEJQQEhCyAHIQgMBAsgE0GAAWohEyANQQFqCyAEIA1qIQUgCigCACEKIAQpAAAhIiENIAQhCSAIIQYgBSAXSQ0BDAQLCyADIAlPBEAgByEMDAELA0AgCUEBayIELQAAIA1BAWsiBS0AAEcEQCAHIQwMAgsgAEEBaiEAIAMgBEkEQCAEIQkgBSINIB5LDQELCyAHIQwgBSENIAQhCQsgACANaiEGAn8CQCAAIAlqIgQgFk8EQCAEIQUMAQsgBCIFKAAAIgogBigAACIHRwRAIAcgCnNoQQN2DAILA0AgBkEEaiEGIAVBBGoiBSAWTw0BIAUoAAAiCiAGKAAAIgdGDQALIAUgByAKc2hBA3ZqIARrDAELAkAgBSAZTw0AIAYvAAAgBS8AAEcNACAGQQJqIQYgBUECaiEFCyAFIBRJBH8gBSAGLQAAIAUtAABGagUgBQsgBGsLIQUgCSADayEEIAAgBWohCiABKAIMIQUCQAJAIAkgEU0EQCADKQAAISIgBSADKQAINwAIIAUgIjcAACABKAIMIQAgBEEQTQRAIAEgACAEajYCDCABKAIEIQMMAwsgAykAECEiIAAgAykAGDcAGCAAICI3ABAgBEEhSA0BIAAgBGohByADQRBqIQMgAEEgaiEFA0AgAykAECEiIAUgAykAGDcACCAFICI3AAAgAykAICEiIAUgAykAKDcAGCAFICI3ABAgA0EgaiEDIAVBIGoiBSAHSQ0ACwwBCyADIBFNBEAgAykAACEiIAUgAykACDcACCAFICI3AAAgBSARIANrIgdqIQAgB0ERTgRAIAVBEGohBQNAIAMpABAhIiAFIAMpABg3AAggBSAiNwAAIAMpACAhIiAFIAMpACg3ABggBSAiNwAQIANBIGohAyAFQSBqIgUgAEkNAAsLIAAhBSARIQMLIAMgCU8NAEEAIQcgAyEGIAkgA2tBB3EiAARAA0AgBSAGLQAAOgAAIAVBAWohBSAGQQFqIQYgB0EBaiIHIABHDQALCyADIAlrQXhLDQADQCAFIAYtAAA6AAAgBSAGLQABOgABIAUgBi0AAjoAAiAFIAYtAAM6AAMgBSAGLQAEOgAEIAUgBi0ABToABSAFIAYtAAY6AAYgBSAGLQAHOgAHIAVBCGohBSAGQQhqIgYgCUcNAAsLIAEgASgCDCAEajYCDCABKAIEIQMgBEGAgARJDQAgAUEBNgIkIAEgAyABKAIAa0EDdTYCKAsgAyALNgIAIAMgBDsBBCAKQQNrIgBBgIAETwRAIAFBAjYCJCABIAMgASgCAGtBA3U2AigLIAMgADsBBiABIANBCGoiADYCBAJAIBcgCSAKaiIDSQRAIAghBwwBCyAOIBAgGmopAABCgICA2Mub741PfiAjiKdBAnRqIBBBAmo2AgAgDiADQQJrIgQpAABCgICA2Mub741PfiAjiKdBAnRqIAQgD2s2AgAgDARAIAwhBQNAIAghDCADKAAAIAMgBSIIaygAAEcEQCAMIQcgBSEMDAMLIANBBGoiBCAIayEGAn8CQCAEIBZPBEAgBCEFDAELIAQiBSgAACIJIAYoAAAiCkcEQCAJIApzaEEDdgwCCwNAIAZBBGohBiAFQQRqIgUgFk8NASAFKAAAIgkgBigAACIKRg0ACyAFIAkgCnNoQQN2aiAEawwBCwJAIAUgGU8NACAGLwAAIAUvAABHDQAgBkECaiEGIAVBAmohBQsgBSAUSQR/IAUgBi0AACAFLQAARmoFIAULIARrCyEFIA4gAykAAEKAgIDYy5vvjU9+ICOIp0ECdGogAyAPazYCACADIBFNBEAgAykAACEiIAEoAgwiACADKQAINwAIIAAgIjcAACABKAIEIQALIAMgBWpBBGohAyAAQQE2AgAgAEEAOwEEIAVBAWoiBEGAgARPBEAgAUECNgIkIAEgACABKAIAa0EDdTYCKAsgACAEOwEGIAEgAEEIaiIANgIEIAwhBSAIIQcgAyAXTQ0ACwwBC0EAIQwgCCEHCyADIQYgAyASaiIQQQFqIgUgF0kNAAsLIAIgByAVQQAgGxsgBxs2AgAgAiAMIBUgHUEAIB8bIgAgBxsgACAbGyAMGzYCBCAUIANrDwsgAiAHIBVBACAbGyAHGzYCACACIAwgFSAdQQAgHxsiACAHGyAAIBsbIAwbNgIEIBQgA2sPCyACIAcgF0EAIBgbIAcbNgIAIAIgCSAXIBtBACAeGyIAIAcbIAAgGBsgCRs2AgQgESADawvlAgIGfwF+AkAgACgCBCIEIAAoAhxqIgJBA2oiAyABQQZrIgVPDQAgACgCXCEGQSAgACgCwAEiB2shAUHAACAHa60hCAJAAkACQAJAAkAgACgCyAFBBWsOBAECAwAECwNAIAYgAikAAELjyJW9y5vvjU9+IAiIp0ECdGogAiAEazYCACADIgJBA2oiAyAFSQ0ACwwECwNAIAYgAikAAEKAgIDYy5vvjU9+IAiIp0ECdGogAiAEazYCACADIgJBA2oiAyAFSQ0ACwwDCwNAIAYgAikAAEKAgOz8y5vvjU9+IAiIp0ECdGogAiAEazYCACADIgJBA2oiAyAFSQ0ACwwCCwNAIAYgAikAAEKAxpX9y5vvjU9+IAiIp0ECdGogAiAEazYCACADIgJBA2oiAyAFSQ0ACwwBCwNAIAYgAigAAEGx893xeWwgAXZBAnRqIAIgBGs2AgAgAyICQQNqIgMgBUkNAAsLC7xwAht/BH5BACACKAIAIhwgHCADIAAoAgQiDiAAKAIMIg8gAyAOayAEaiIGQQEgACgCuAF0IgdrIA8gBiAPayAHSxsgACgCGCIFGyIZaiIWIANGaiIGIA5rIgwgDyAMIAdrIA8gDCAPayAHSxsgBRtrIgVLIh0bIQxBACACKAIEIh4gBSAeSSIfGyEHIAZBAWohBSADIARqIhRBCGshFyAAKAJkIRogACgCXCETAkACQAJAAkACQCAAKALIAUEFaw4DAwIBAAsgBSAXSw0DIBRBIGshESAUQQFrIRIgFEEDayEbQSAgACgCvAFrIRhBwAAgACgCwAFrrSEiA0AgBkGAAmohCCAOIBMgBikAACIgQuPIlb3Lm++NT34gIoinIgBBAnRqKAIAIgpqIQsgIKchDwJAAkACfwJAAkACQAJAIAxFBEBBASEQA0AgGiAPQbHz3fF5bCAYdkECdGoiBCgCACEJIAQgBiAOayIPNgIAIBMgAEECdGogDzYCACAFKQAAIiFC48iVvcub741PfiAiiKchACAKIBlLBEAgCykAACAGKQAAUQ0ECyAOIBMgAEECdGooAgAiCmohCyAJIBlLBEAgCSAOaiIVKAAAIAYoAABGDQMLIAUgCE8EQCAQQQFqIRAgCEGAAmohCAsgIachDyAFIQYgBSAQaiIEIQUgBCAXTQ0AC0EAIQwMDAtBACAMayENQQEhEANAIBogD0Gx893xeWwgGHZBAnRqIgQoAgAhCSAEIAYgDmsiDzYCACATIABBAnRqIA82AgAgBkEBaiIEIA1qKAAAIAYoAAFGBEAgBkEFaiIIIA1qIQAgCCAbTwRAIAghBQwGCyAIIgUoAAAiDSAAKAAAIglHBEAgCSANc2hBA3YMBwsDQCAAQQRqIQAgBUEEaiIFIBtPDQYgBSgAACINIAAoAAAiCUYNAAsgBSAJIA1zaEEDdmogCGsMBgsgBSkAACIhQuPIlb3Lm++NT34gIoinIQAgCiAZSwRAIAspAAAgBikAAFENAwsgDiATIABBAnRqKAIAIgpqIQsgCSAZSwRAIAkgDmoiFSgAACAGKAAARg0CCyAFIAhPBEAgEEEBaiEQIAhBgAJqIQgLICGnIQ8gBSEGIAUgEGoiBCEFIAQgF00NAAsMCwsCfwJAAkAgCiAZTQ0AIAspAAAgIVINACALQQhqIQcgBUEIaiIEIBtPBEAgBCEGDAILIAQiBigAACIJIAcoAAAiCEcEQCAIIAlzaEEDdgwDCwNAIAdBBGohByAGQQRqIgYgG08NAiAGKAAAIgkgBygAACIIRg0ACyAGIAggCXNoQQN2aiAEawwCCyAVQQRqIQsCfwJAIAZBBGoiBCAbTwRAIAQhBwwBCyAEIgcoAAAiCSALKAAAIghHBEAgCCAJc2hBA3YMAgsDQCALQQRqIQsgB0EEaiIHIBtPDQEgBygAACIJIAsoAAAiCEYNAAsgByAIIAlzaEEDdmogBGsMAQsCQCAHIBJPDQAgCy8AACAHLwAARw0AIAtBAmohCyAHQQJqIQcLIAcgFEkEfyAHIAstAAAgBy0AAEZqBSAHCyAEawsgBiAVayEIQQRqIQogAyAGTwRAIAYhBAwECyAVIBZNBEAgBiEEDAQLA0AgBkEBayIELQAAIBVBAWsiFS0AAEcEQCAGIQQMBQsgCkEBaiEKIAMgBE8NBCAEIQYgFSAWSw0ACwwDCwJAIAYgEk8NACAHLwAAIAYvAABHDQAgB0ECaiEHIAZBAmohBgsgBiAUSQR/IAYgBy0AACAGLQAARmoFIAYLIARrCyAFIAtrIQhBCGohCiALIBZNBEAgBSEEDAILIAUhBCADIAVPDQEDQCAEQQFrIgYtAAAgC0EBayILLQAARw0CIApBAWohCiADIAZPBEAgBiEEDAMLIAYhBCALIBZLDQALDAELIAtBCGohCgJ/AkAgBkEIaiIEIBtPBEAgBCEHDAELIAQiBygAACIJIAooAAAiCEcEQCAIIAlzaEEDdgwCCwNAIApBBGohCiAHQQRqIgcgG08NASAHKAAAIgkgCigAACIIRg0ACyAHIAggCXNoQQN2aiAEawwBCwJAIAcgEk8NACAKLwAAIAcvAABHDQAgCkECaiEKIAdBAmohBwsgByAUSQR/IAcgCi0AACAHLQAARmoFIAcLIARrCyAGIAtrIQhBCGohCiALIBZNBEAgBiEEDAELIAMgBk8EQCAGIQQMAQsDQCAGQQFrIgQtAAAgC0EBayILLQAARwRAIAYhBAwCCyAKQQFqIQogAyAETw0BIAQhBiALIBZLDQALCyAQQQNNBEAgEyAAQQJ0aiAFIA5rNgIACyAIQQNqIQkgBCADayENIAEoAgwhBQJAAkAgBCARTQRAIAMpAAAhICAFIAMpAAg3AAggBSAgNwAAIAEoAgwhBiANQRBNBEAgASAGIA1qNgIMIAEoAgQhAwwDCyADKQAQISAgBiADKQAYNwAYIAYgIDcAECANQSFIDQEgBiANaiEAIANBEGohAyAGQSBqIQUDQCADKQAQISAgBSADKQAYNwAIIAUgIDcAACADKQAgISAgBSADKQAoNwAYIAUgIDcAECADQSBqIQMgBUEgaiIFIABJDQALDAELIAMgEU0EQCADKQAAISAgBSADKQAINwAIIAUgIDcAACAFIBEgA2siBmohACAGQRFOBEAgBUEQaiEFA0AgAykAECEgIAUgAykAGDcACCAFICA3AAAgAykAICEgIAUgAykAKDcAGCAFICA3ABAgA0EgaiEDIAVBIGoiBSAASQ0ACwsgACEFIBEhAwsgAyAETw0AQQAhACADIQYgBCADa0EHcSIHBEADQCAFIAYtAAA6AAAgBUEBaiEFIAZBAWohBiAAQQFqIgAgB0cNAAsLIAMgBGtBeEsNAANAIAUgBi0AADoAACAFIAYtAAE6AAEgBSAGLQACOgACIAUgBi0AAzoAAyAFIAYtAAQ6AAQgBSAGLQAFOgAFIAUgBi0ABjoABiAFIAYtAAc6AAcgBUEIaiEFIAZBCGoiBiAERw0ACwsgASABKAIMIA1qNgIMIAEoAgQhAyANQYCABEkNACABQQE2AiQgASADIAEoAgBrQQN1NgIoCyADIAk2AgAgAyANOwEEIAwhByAIIQwgCkEDayIFQYCABEkNAwwCCwJAIAUgEk8NACAALwAAIAUvAABHDQAgAEECaiEAIAVBAmohBQsgBSAUSQR/IAUgAC0AACAFLQAARmoFIAULIAhrCyEQIAQgA2shCSABKAIMIQUCQAJAIAQgEU0EQCADKQAAISAgBSADKQAINwAIIAUgIDcAACABKAIMIQYgCUEQTQRAIAEgBiAJajYCDCABKAIEIQMMAwsgAykAECEgIAYgAykAGDcAGCAGICA3ABAgCUEhSA0BIAYgCWohACADQRBqIQMgBkEgaiEFA0AgAykAECEgIAUgAykAGDcACCAFICA3AAAgAykAICEgIAUgAykAKDcAGCAFICA3ABAgA0EgaiEDIAVBIGoiBSAASQ0ACwwBCyADIBFNBEAgAykAACEgIAUgAykACDcACCAFICA3AAAgBSARIANrIghqIQAgCEERTgRAIAVBEGohBQNAIAMpABAhICAFIAMpABg3AAggBSAgNwAAIAMpACAhICAFIAMpACg3ABggBSAgNwAQIANBIGohAyAFQSBqIgUgAEkNAAsLIAAhBSARIQMLIAMgBE8NACAGIANrQQAhBiAEIANrQQdxIgAEQANAIAUgAy0AADoAACAFQQFqIQUgA0EBaiEDIAZBAWoiBiAARw0ACwtBB0kNAANAIAUgAy0AADoAACAFIAMtAAE6AAEgBSADLQACOgACIAUgAy0AAzoAAyAFIAMtAAQ6AAQgBSADLQAFOgAFIAUgAy0ABjoABiAFIAMtAAc6AAcgBUEIaiEFIANBCGoiAyAERw0ACwsgASABKAIMIAlqNgIMIAEoAgQhAyAJQYCABEkNACABQQE2AiQgASADIAEoAgBrQQN1NgIoCyAQQQRqIQogA0EBNgIAIAMgCTsBBCAMIQggEEEBaiIFQf//A00NAQsgAUECNgIkIAEgAyABKAIAa0EDdTYCKCAIIQwLIAMgBTsBBiABIANBCGoiADYCBAJAIAQgCmoiAyAXSw0AIBMgDiAPQQJqIgVqIgYpAABC48iVvcub741PfiAiiKdBAnRqIAU2AgAgEyADQQJrIgQpAABC48iVvcub741PfiAiiKdBAnRqIAQgDms2AgAgGiAGKAAAQbHz3fF5bCAYdkECdGogBTYCACAaIANBAWsiBCgAAEGx893xeWwgGHZBAnRqIAQgDms2AgAgDCEFIAchDwNAAkAgDyEMIAUhDyAMRQ0AIAMoAAAiCSADIAxrKAAARw0AIANBBGoiBCAMayEGAn8CQCAEIBtPBEAgBCEFDAELIAQiBSgAACIIIAYoAAAiB0cEQCAHIAhzaEEDdgwCCwNAIAZBBGohBiAFQQRqIgUgG08NASAFKAAAIgggBigAACIHRg0ACyAFIAcgCHNoQQN2aiAEawwBCwJAIAUgEk8NACAGLwAAIAUvAABHDQAgBkECaiEGIAVBAmohBQsgBSAUSQR/IAUgBi0AACAFLQAARmoFIAULIARrCyEFIBogCUGx893xeWwgGHZBAnRqIAMgDmsiBDYCACATIAMpAABC48iVvcub741PfiAiiKdBAnRqIAQ2AgAgAyARTQRAIAMpAAAhICABKAIMIgAgAykACDcACCAAICA3AAAgASgCBCEACyAAQQE2AgAgAEEAOwEEIAVBAWoiBkGAgARPBEAgAUECNgIkIAEgACABKAIAa0EDdTYCKAsgBUEEaiEEIAAgBjsBBiABIABBCGoiADYCBCAMIQUgDyEHIAMgBGoiAyAXTQ0BDAILCyAMIQcgDyEMCyADIQYgA0EBaiIFIBdNDQALDAMLIAUgF0sNAiAUQSBrIREgFEEBayEYIBRBA2shEkHAACAAKAK8AWutISJBwAAgACgCwAFrrSEjA0AgBkGAAmohCCAOIBMgBikAACIhQuPIlb3Lm++NT34gI4inIgBBAnRqKAIAIgpqIQsCQAJAAn8CQAJAAkACQCAMRQRAQQEhEANAIBogIUKAxpX9y5vvjU9+ICKIp0ECdGoiBCgCACEJIAQgBiAOayIPNgIAIBMgAEECdGogDzYCACAFKQAAIiBC48iVvcub741PfiAjiKchACAKIBlLBEAgCykAACAhUQ0ECyAOIBMgAEECdGooAgAiCmohCyAJIBlLBEAgCSAOaiIVKAAAIAYoAABGDQMLIAUgCE8EQCAQQQFqIRAgCEGAAmohCAsgICEhIAUhBiAFIBBqIgQhBSAEIBdNDQALQQAhDAwLC0EAIAxrIQ1BASEQA0AgGiAhQoDGlf3Lm++NT34gIoinQQJ0aiIEKAIAIQkgBCAGIA5rIg82AgAgEyAAQQJ0aiAPNgIAIAZBAWoiBCANaigAACAGKAABRgRAIAZBBWoiCCANaiEAIAggEk8EQCAIIQUMBgsgCCIFKAAAIg0gACgAACIJRwRAIAkgDXNoQQN2DAcLA0AgAEEEaiEAIAVBBGoiBSASTw0GIAUoAAAiDSAAKAAAIglGDQALIAUgCSANc2hBA3ZqIAhrDAYLIAUpAAAiIELjyJW9y5vvjU9+ICOIpyEAIAogGUsEQCALKQAAICFRDQMLIA4gEyAAQQJ0aigCACIKaiELIAkgGUsEQCAJIA5qIhUoAAAgBigAAEYNAgsgBSAITwRAIBBBAWohECAIQYACaiEICyAgISEgBSEGIAUgEGoiBCEFIAQgF00NAAsMCgsCfwJAAkAgCiAZTQ0AIAspAAAgIFINACALQQhqIQcgBUEIaiIEIBJPBEAgBCEGDAILIAQiBigAACIJIAcoAAAiCEcEQCAIIAlzaEEDdgwDCwNAIAdBBGohByAGQQRqIgYgEk8NAiAGKAAAIgkgBygAACIIRg0ACyAGIAggCXNoQQN2aiAEawwCCyAVQQRqIQsCfwJAIAZBBGoiBCASTwRAIAQhBwwBCyAEIgcoAAAiCSALKAAAIghHBEAgCCAJc2hBA3YMAgsDQCALQQRqIQsgB0EEaiIHIBJPDQEgBygAACIJIAsoAAAiCEYNAAsgByAIIAlzaEEDdmogBGsMAQsCQCAHIBhPDQAgCy8AACAHLwAARw0AIAtBAmohCyAHQQJqIQcLIAcgFEkEfyAHIAstAAAgBy0AAEZqBSAHCyAEawsgBiAVayEIQQRqIQogAyAGTwRAIAYhBAwECyAVIBZNBEAgBiEEDAQLA0AgBkEBayIELQAAIBVBAWsiFS0AAEcEQCAGIQQMBQsgCkEBaiEKIAMgBE8NBCAEIQYgFSAWSw0ACwwDCwJAIAYgGE8NACAHLwAAIAYvAABHDQAgB0ECaiEHIAZBAmohBgsgBiAUSQR/IAYgBy0AACAGLQAARmoFIAYLIARrCyAFIAtrIQhBCGohCiALIBZNBEAgBSEEDAILIAUhBCADIAVPDQEDQCAEQQFrIgYtAAAgC0EBayILLQAARw0CIApBAWohCiADIAZPBEAgBiEEDAMLIAYhBCALIBZLDQALDAELIAtBCGohCgJ/AkAgBkEIaiIEIBJPBEAgBCEHDAELIAQiBygAACIJIAooAAAiCEcEQCAIIAlzaEEDdgwCCwNAIApBBGohCiAHQQRqIgcgEk8NASAHKAAAIgkgCigAACIIRg0ACyAHIAggCXNoQQN2aiAEawwBCwJAIAcgGE8NACAKLwAAIAcvAABHDQAgCkECaiEKIAdBAmohBwsgByAUSQR/IAcgCi0AACAHLQAARmoFIAcLIARrCyAGIAtrIQhBCGohCiALIBZNBEAgBiEEDAELIAMgBk8EQCAGIQQMAQsDQCAGQQFrIgQtAAAgC0EBayILLQAARwRAIAYhBAwCCyAKQQFqIQogAyAETw0BIAQhBiALIBZLDQALCyAQQQNNBEAgEyAAQQJ0aiAFIA5rNgIACyAIQQNqIQkgBCADayENIAEoAgwhBQJAAkAgBCARTQRAIAMpAAAhICAFIAMpAAg3AAggBSAgNwAAIAEoAgwhBiANQRBNBEAgASAGIA1qNgIMIAEoAgQhAwwDCyADKQAQISAgBiADKQAYNwAYIAYgIDcAECANQSFIDQEgBiANaiEAIANBEGohAyAGQSBqIQUDQCADKQAQISAgBSADKQAYNwAIIAUgIDcAACADKQAgISAgBSADKQAoNwAYIAUgIDcAECADQSBqIQMgBUEgaiIFIABJDQALDAELIAMgEU0EQCADKQAAISAgBSADKQAINwAIIAUgIDcAACAFIBEgA2siBmohACAGQRFOBEAgBUEQaiEFA0AgAykAECEgIAUgAykAGDcACCAFICA3AAAgAykAICEgIAUgAykAKDcAGCAFICA3ABAgA0EgaiEDIAVBIGoiBSAASQ0ACwsgACEFIBEhAwsgAyAETw0AQQAhACADIQYgBCADa0EHcSIHBEADQCAFIAYtAAA6AAAgBUEBaiEFIAZBAWohBiAAQQFqIgAgB0cNAAsLIAMgBGtBeEsNAANAIAUgBi0AADoAACAFIAYtAAE6AAEgBSAGLQACOgACIAUgBi0AAzoAAyAFIAYtAAQ6AAQgBSAGLQAFOgAFIAUgBi0ABjoABiAFIAYtAAc6AAcgBUEIaiEFIAZBCGoiBiAERw0ACwsgASABKAIMIA1qNgIMIAEoAgQhAyANQYCABEkNACABQQE2AiQgASADIAEoAgBrQQN1NgIoCyADIAk2AgAgAyANOwEEIAwhByAIIQwgCkEDayIFQYCABEkNAwwCCwJAIAUgGE8NACAALwAAIAUvAABHDQAgAEECaiEAIAVBAmohBQsgBSAUSQR/IAUgAC0AACAFLQAARmoFIAULIAhrCyEQIAQgA2shCSABKAIMIQUCQAJAIAQgEU0EQCADKQAAISAgBSADKQAINwAIIAUgIDcAACABKAIMIQYgCUEQTQRAIAEgBiAJajYCDCABKAIEIQMMAwsgAykAECEgIAYgAykAGDcAGCAGICA3ABAgCUEhSA0BIAYgCWohACADQRBqIQMgBkEgaiEFA0AgAykAECEgIAUgAykAGDcACCAFICA3AAAgAykAICEgIAUgAykAKDcAGCAFICA3ABAgA0EgaiEDIAVBIGoiBSAASQ0ACwwBCyADIBFNBEAgAykAACEgIAUgAykACDcACCAFICA3AAAgBSARIANrIghqIQAgCEERTgRAIAVBEGohBQNAIAMpABAhICAFIAMpABg3AAggBSAgNwAAIAMpACAhICAFIAMpACg3ABggBSAgNwAQIANBIGohAyAFQSBqIgUgAEkNAAsLIAAhBSARIQMLIAMgBE8NACAGIANrQQAhBiAEIANrQQdxIgAEQANAIAUgAy0AADoAACAFQQFqIQUgA0EBaiEDIAZBAWoiBiAARw0ACwtBB0kNAANAIAUgAy0AADoAACAFIAMtAAE6AAEgBSADLQACOgACIAUgAy0AAzoAAyAFIAMtAAQ6AAQgBSADLQAFOgAFIAUgAy0ABjoABiAFIAMtAAc6AAcgBUEIaiEFIANBCGoiAyAERw0ACwsgASABKAIMIAlqNgIMIAEoAgQhAyAJQYCABEkNACABQQE2AiQgASADIAEoAgBrQQN1NgIoCyAQQQRqIQogA0EBNgIAIAMgCTsBBCAMIQggEEEBaiIFQf//A00NAQsgAUECNgIkIAEgAyABKAIAa0EDdTYCKCAIIQwLIAMgBTsBBiABIANBCGoiADYCBAJAIAQgCmoiAyAXSw0AIBMgDiAPQQJqIgZqKQAAIiBC48iVvcub741PfiAjiKdBAnRqIAY2AgAgEyADQQJrIgQpAABC48iVvcub741PfiAj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IABB3wAQEUUNASAAIAIQlgIhAwwBCyABIAFBIGpB7RoQDikCADcDCCAAIAFBCGoQGkUNACABQShqIgIgAEEAECggASgCLEUNACAAQfAAEBFFDQAgABCXARogAiAAQQAQKCAAQd8AEBFFDQAgACACEJYCIQMLIAFBQGskACADC88OAgZ/AX4jAEGwAmsiASQAAkAgAEHMABARRQ0AAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIAAoAgAiAyAAKAIEIgRBABAZQf8BcUHBAGsOORMWFhQWFhYWFhYWFhYWFhYWFhYYFRYWFhYWFhYWFhIWAwECEBEPFgQHCBYJCg0OFhYWBQYWFgALDBYLIAAgA0EBajYCACABIAFBqAJqQYkMEA4pAgA3AwAgACABEDQhAgwXCyABIAFBoAJqQZEbEA4pAgA3AxAgACABQRBqEBoEQCABQQA2ApQBIAAgAUGUAWoQpQIhAgwXCyABIAFBmAJqQY0bEA4pAgA3AwggACABQQhqEBpFDRYgAUEBNgKUASAAIAFBlAFqEKUCIQIMFgsgACADQQFqNgIAIAEgAUGQAmpBzg8QDikCADcDGCAAIAFBGGoQNCECDBULIAAgA0EBajYCACABIAFBiAJqQccPEA4pAgA3AyAgACABQSBqEDQhAgwUCyAAIANBAWo2AgAgASABQYACakHFDxAOKQIANwMoIAAgAUEoahA0IQIMEwsgACADQQFqNgIAIAEgAUH4AWpB9woQDikCADcDMCAAIAFBMGoQNCECDBILIAAgA0EBajYCACABIAFB8AFqQe4KEA4pAgA3AzggACABQThqEDQhAgwRCyAAIANBAWo2AgAgASABQegBakHPKRAOKQIANwNAIAAgAUFAaxA0IQIMEAsgACADQQFqNgIAIAEgAUHgAWpBkwoQDikCADcDSCAAIAFByABqEDQhAgwPCyAAIANBAWo2AgAgASABQdgBakHIqAEQDikCADcDUCAAIAFB0ABqEDQhAgwOCyAAIANBAWo2AgAgASABQdABakGrERAOKQIANwNYIAAgAUHYAGoQNCECDA0LIAAgA0EBajYCACABIAFByAFqQckSEA4pAgA3A2AgACABQeAAahA0IQIMDAsgACADQQFqNgIAIAEgAUHAAWpBghIQDikC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AkEBayICDQALC0EAC38CAX8BfiAAvSIDQjSIp0H/D3EiAkH/D0cEfCACRQRAIAEgAEQAAAAAAAAAAGEEf0EABSAARAAAAAAAAPBDoiABEOcCIQAgASgCAEFAags2AgAgAA8LIAEgAkH+B2s2AgAgA0L/////////h4B/g0KAgICAgICA8D+EvwUgAAsLpAUCBn4EfyABIAEoAgBBB2pBeHEiAUEQajYCACAAIAEpAwAhAiABKQMIIQcjAEEgayIIJAAgB0L///////8/gyEEAn4gB0IwiEL//wGDIgOnIgpBgfgAa0H9D00EQCAEQgSGIAJCPIiEIQMgCkGA+ABrrSEEAkAgAkL//////////w+DIgJCgYCAgICAgIAIWgRAIANCAXwhAwwBCyACQoCAgICAgICACFINACADQgGDIAN8IQMLQgAgAyADQv////////8HViIAGyECIACtIAR8DAELIAIgBIRQIANC//8BUnJFBEAgBEIEhiACQjyIhEKAgICAgICABIQhAkL/DwwBCyAKQf6HAUsEQEIAIQJC/w8MAQtBgPgAQYH4ACADUCIBGyIAIAprIglB8ABKBEBCACECQgAMAQsgAiEDIAQgBEKAgICAgIDAAIQgARsiBSEGAkBBgAEgCWsiAUHAAHEEQCACIAFBQGqthiEGQgAhAwwBCyABRQ0AIAYgAa0iBIYgA0HAACABa62IhCEGIAMgBIYhAwsgCCADNwMQIAggBjcDGAJAIAlBwABxBEAgBSAJQUBqrYghAkIAIQUMAQsgCUUNACAFQcAAIAlrrYYgAiAJrSIDiIQhAiAFIAOIIQULIAggAjcDACAIIAU3AwggCCkDCEIEhiAIKQMAIgNCPIiEIQICQCAAIApHIAgpAxAgCCkDGIRCAFJxrSADQv//////////D4OEIgNCgYCAgICAgIAIWgRAIAJCAXwhAgwBCyADQoCAgICAgICACFINACACQgGDIAJ8IQILIAJCgICAgICAgAiFIAIgAkL/////////B1YiABshAiAArQshAyAIQSBqJAAgB0KAgICAgICAgIB/gyADQjSGhCAChL85AwAL+RcDEn8BfAN+IwBBsARrIgwkACAMQQA2AiwCQCABvSIZQgBTBEBBASERQboJIRMgAZoiAb0hGQwBCyAEQYAQcQRAQQEhEUG9CSETDAELQcAJ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QCAIIQ0MAQsgCCANTw0AIA0gCGshBAJAIAtFDQBBACEBIAtBBE8EQCALQXxxIQoDQCABIAdqIgIgBEEAIAItAAAiDBsgDGo6AAAgAiAEQQAgAi0AASIMGyAMajoAASACIARBACACLQACIgwbIAxqOgACIAIgBEEAIAItAAMiAhsgAmo6AAMgAUEEaiIBIApHDQALCyALQQNxIgJFDQADQCABIAdqIgogBEEAIAotAAAiChsgCmo6AAAgAUEBaiEBIAVBAWoiBSACRw0ACwsCQCAEIA1PDQAgDSEBIAhBA3EiBQRAQQAhAgNAIAMgAUECdGogAyABIARrQQJ0aigCADYCACABQQFrIQEgAkEBaiICIAVHDQALCyAIQQFrQQNJDQADQCADIAFBAnRqIAMgASAEa0ECdGooAgA2AgAgAyABQQFrIgJBAnRqIAMgAiAEa0ECdGooAgA2AgAgAyABQQJrIgJBAnRqIAMgAiAEa0ECdGooAgA2AgAgAyABQQNrIgJBAnRqIAMgAiAEa0ECdGooAgA2AgAgAUEEayIBIARLDQALCyADQQRqQQAgBEECdBAYGgtBVCANIAZBAWpLDQEaIAAgCUH/gYB4cSANQRB0QYCA/AdxcjYCACANQQFqIhFBA3EhB0EAIQVBACECQQAhASANQQNPBEAgEUF8cSEGIANBNGohCANAIAMgAkECdCIEaigCACEJIAQgCGogATYCACADIARBBHIiCmooAgAhDCAIIApqIAEgCWoiATYCACADIARBCHIiCWooAgAhCiAIIAlqIAEgDGoiATYCACADIARBDHIiBGooAgAhCSAEIAhqIAEgCmoiATYCACABIAlqIQEgAkEEaiICIAZHDQALCyAHBEADQCADIAJBAnRqIgggATYCNCACQQFqIQIgCCgCACABaiEBIAVBAWoiBSAHRw0ACwtBACECIAtBA0oEQCALQQNrIQQgA0E0aiEBIANB1AlqIQggA0HUB2ohBQNAIAEgAiAIai0AAEECdGoiByAHKAIAIgdBAWo2AgAgBSAHaiACOgAAIAEgCCACQQFyIgdqLQAAQQJ0aiIGIAYoAgAiBkEBajYCACAFIAZqIAc6AAAgASAIIAJBAnIiB2otAABBAnRqIgYgBigCACIGQQFqNgIAIAUgBmogBzoAACABIAggAkEDciIHai0AAEECdGoi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Sw0AIANBIGogFyACa00NAQsgCCAIKAJ4NgIQIAggCCkDcDcDCCACIBcgCEEIaiAIQewAaiALIBAgFSATEFYhAwwBCyACIAdqIQEgBSkAACEoIAIgBSkACDcACCACICg3AAACQCAHQRFJDQAgBSkAECEoIAIgBSkAGDcAGCACICg3ABAgB0EQa0ERSA0AIAVBEGohByACQSBqIQUDQCAHKQAQISggBSAHKQAYNwAIIAUgKDcAACAHKQAgISggBSAHKQAoNwAYIAUgKDcAECAHQSBqIQcgBUEgaiIFIAFJDQALCyABIABrIQcgCCAGNgJsIAEgEGsgAEkEQCABIBVrIABJBEBBbCEDDAYLIBMgEyAHIBBrIgVqIgYgBGpPBEAgASAGIAQQHBoMAgsgASAGQQAgBWsQHCAIIAQgBWoiBDYCdCAQIQcgBWshAQsgAEEQTwRAIAcpAAAhKCABIAcpAAg3AAggASAoNwAAIARBEUgNASABIARqIQAgAUEQaiEBA0AgBykAECEoIAEgBykAGDcACCABICg3AAAgBykAICEoIAEgBykAKDcAGCABICg3ABAgB0EgaiEHIAFBIGoiASAASQ0ACwwBCwJAIABBB00EQCABIActAAA6AAAgASAHLQABOgABIAEgBy0AAjoAAiABIActAAM6AAMgASAHIABBAnQiAEHgiwFqKAIAaiIEKAAANgAEIAQgAEGAjAFqKAIAayEHDAELIAEgBykAADcAAAsgCCgCdCIAQQlJDQAgACABaiEFIAFBCGoiBCAHQQhqIgdrQQ9MBEADQCAEIAcpAAA3AAAgB0EIaiEHIARBCGoiBCAFSQ0ADAILAAsgBykAACEoIAQgBykACDcACCAEICg3AAAgAEEZSA0AIAFBGGohAQNAIAcpABAhKCABIAcpABg3AAggASAoNwAAIAcpACAhKCABIAcpACg3ABggASAoNwAQIAdBIGohByABQSBqIgEgBUkNAAsLIANBiH9LDQMgAiADaiECIA9BAWsiD0UNASAIKAI4IgFBIEsNACAIKAI8IgMgCCgCRE8EQCAIIAFBB3EiADYCOCAIIAMgAUEDdmsiATYCPCAIIAEoAAA2AjQgACEBDAELIAMgCCgCQCIARg0AIAggASADIABrIAFBA3YiASADIAFrIABJGyIAQQN0ayIBNgI4IAggAyAAayIA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IApBjAJqIBcgDiAYIBYQViEGDAELIAQgGWohCyAEIAlqIQMgEygCCCECIBkpAAAhKCAJIBkpAAg3AAggCSAoNwAAAkAgBEERSQ0AIAwpAAAhKCAJIAwpAAg3ABggCSAoNwAQIARBEGtBEUgNACAJQSBqIQQgDCEVA0AgFSkAECEoIAQgFSkAGDcACCAEICg3AAAgFSkAICEoIAQgFSkAKDcAGCAEICg3ABAgFUEgaiEVIARBIGoiBCADSQ0ACwsgAyACayEEIAogCzYCjAIgAyAOayACSQRAIAIgAyAYa0sNCSAWIBYgBCAOayIEaiILIBJqTwRAIAMgCyASEBwaDAILIAQgEmohEiADIAtBACAEaxAcIARrIQMgDiEECyACQRBPBEAgBCkAACEoIAMgBCkACDcACCADICg3AAAgEkERSA0BIAMgEmohAiADQRBqIQMDQCAEKQAQISggAyAEKQAYNwAIIAMgKDcAACAEKQAgISggAyAEKQAoNwAYIAMgKDcAECAEQSBqIQQgA0EgaiIDIAJJDQALDAELAkAgAkEHTQRAIAMgBC0AADoAACADIAQtAAE6AAEgAyAELQACOgACIAMgBC0AAzoAAyADIAQgAkECdCICQeCLAWooAgBqIgQoAAA2AAQgBCACQYCMAWooAgBrIQQMAQsgAyAEKQAANwAACyASQQlJDQAgAyASaiELIANBCGoiAiAEQQhqIgRrQQ9MBEADQCACIAQpAAA3AAAgBEEIaiEEIAJBCGoiAiALSQ0ADAILAAsgBCkAACEoIAIgBCkACDcACCACICg3AAAgEkEZSA0AIANBGGohAwNAIAQpABAhKCADIAQpABg3AAggAyAoNwAAIAQpACAhKCADIAQpACg3ABggAyAoNwAQIARBIGohBCADQSBqIgMgC0kNAAsLIAZBiH9LBEAgBiENDAgLIBMgBzYCCCATIBQ2AgQgEyAPNgIAIA8gHWohBCAXIQggBiAJagwDCyAVQSBrIQYCQAJAIAggFUkNACACIBMoAgQiCyAEaiIJaiAGSw0AIAlBIGogGiACa00NAQsgCiATKAIINgJQIAogEykCADcDSCACIBogBiAKQcgAaiAKQYwCaiAIIA4gGCAWEPIBIQkMAgsgAiAEaiESIBMoAgghBiADKQAAISggAiADKQAINwAIIAIgKDcAAAJAIARB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IAEoAmAgASgCXCIGIAEoAlgiBSABKAJUIgcgASgCUCIIIAEoAkwiCSABKAJIIgogASgCRCILIAEoAkAiDCABKAI8Ig0gASgCOCIOIAEoAjQiDyABKAIwIhAgASgCLCIRIAEoAigiEiABKAIkIhMgASgCICIUIAEoAhwiFSABKAIYIhYgASgCFCIXIAEoAhAiGCABKAIMIAEoAgggASgCBCABKAIAampqampqampqampqampqampqampqampqampqampqampqamoiBEGAIE8EfyABIAEoAgAgBEELdmdBH3MiAnZBAWoiBDYCACABIAEoAgQgAnZBAWoiGTYCBCABIAEoAgggAnZBAWoiGjYCCCABIAEoAgwgAnZBAWoiGzYCDCABIAYgAnZBAWoiBjYCXCABIAUgAnZBAWoiBTYCWCABIAcgAnZBAWoiBzYCVCABIAggAnZBAWoiCDYCUCABIAkgAnZBAWoiCTYCTCABIAogAnZBAWoiCjYCSCABIAsgAnZBAWoiCzYCRCABIAwgAnZBAWoiDDYCQCABIA0gAnZBAWoiDTYCPCABIA4gAnZBAWoiDjYCOCABIA8gAnZBAWoiDzYCNCABIBAgAnZBAWoiEDYCMCABIBEgAnZBAWoiETYCLCABIBIgAnZBAWoiEjYCKCABIBMgAnZBAWoiEzYCJCABIBQgAnZBAWoiFDYCICABIBUgAnZBAWoiFTYCHCABIBYgAnZBAWoiFjYCGCABIBcgAnZBAWoiFzYCFCABIBggAnZBAWoiGDYCECABIAEoAmAgAnZBAWoiHDYCYCABIAEoAmQgAnZBAWoiHjYCZCABIAEoAmggAnZBAWoiHzYCaCABIAEoAmwgAnZBAWoiIDYCbCABIAEoAnAgAnZBAWoiITYCcCABIAEoAnQgAnZBAWoiIjYCdCABIAEoAnggAnZBAWoiIzYCeCABIAEoAnwgAnZBAWoiJDYCfCABIAEoAoABIAJ2QQFqIiU2AoABIAEgASgChAEgAnZBAWoiJjYChAEgASABKAKIASACdkEBaiInNgKIASABIAEoAowBIAJ2QQFqIgE2AowBIAEgJyAmICUgJCAjICIgISAgIB8gHiAcIAYgBSAHIAggCSAKIAsgDCANIA4gDyAQIBEgEiATIBQgFSAWIBcgGCAbIBogBCAZampqampqampqampqampqampqampqampqampqampqampqamoFIAQLNgIcAkAgACgCCCICKALQASACKALMASACKALIASACKALEASACKALAASACKAK8ASACKAK4ASACKAK0ASACKAKwASACKAKsASACKAKoASACKAKkASACKAKgASACKAKcASACKAKYASACKAKUASACKAKQASACKAKMASACKAKIASACKAKEASACKAKAASACKAJ8IAIoAnggAigCdCACKAJwIAIoAmwgAigCaCACKAJkIAIoAmAgAigCXCACKAJYIAIoAlQgAigCUCACKAJMIAIoAkggAigCRCACKAJAIAIoAjwgAigCOCACKAI0IAIoAjAgAigCLCACKAIoIAIoAiQgAigCICACKAIcIAIoAhggAigCFCACKAIQIAIoAgwgAigCCCACKAIEIAIoAgBqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqampqIgRBgCBJDQAgBEELdmdBH3MhBUEAIQFBACEEA0AgAiABQQJ0aiIGIAYoAgAgBXZBAWoiBzYCACAEIAdqIQQgAUE0Rg0BIAYgBigCBCAFdkEBaiIHNgIEIAYgBigCCCAFdkEBaiIINgIIIAYgBigCDCAFdkEBaiIGNgIMIAYgCCAEIAdqamohBCABQQRqIQEMAAsACyAAIAQ2AiAgACgCDCIBKAJ8IAEoAnggASgCdCABKAJwIAEoAmwgASgCaCABKAJkIAEoAmAiAiABKAJcIgYgASgCWCIFIAEoAlQiByABKAJQIgggASgCTCIJIAEoAkgiCiABKAJEIgsgASgCQCIMIAEoAjwiDSABKAI4Ig4gASgCNCIPIAEoAjAiECABKAIsIhEgASgCKCISIAEoAiQiEyABKAIgIhQgASgCHCIVIAEoAhgiFiABKAIUIhcgASgCECIYIAEoAgwiGSABKAIIIhogASgCBCIbIAEoAgAiHGpqampqampqampqampqampqampqampqampqampqamoiBEGAIEkNACABIAIgBEELdmdBH3MiAnZBAWoiBDYCYCABIAYgAnZBAWoiBjYCXCABIAUgAnZBAWoiBTYCWCABIAcgAnZBAWoiBzYCVCABIAggAnZBAWoiCDYCUCABIAkgAnZBAWoiCTYCTCABIAogAnZBAWoiCjYCSCABIAsgAnZBAWoiCzYCRCABIAwgAnZBAWoiDDYCQCABIA0gAnZBAWoiDTYCPCABIA4gAnZBAWoiDjYCOCABIA8gAnZBAWoiDzYCNCABIBAgAnZBAWoiEDYCMCABIBEgAnZBAWoiETYCLCABIBIgAnZBAWoiEjYCKCABIBMgAnZBAWoiEzYCJCABIBQgAnZBAWoiFDYCICABIBUgAnZBAWoiFTYCHCABIBYgAnZBAWoiFjYCGCABIBcgAnZBAWoiFzYCFCABIBggAnZBAWoiGDYCECABIBkgAnZBAWoiGTYCDCABIBogAnZBAWoiGjYCCCABIBsgAnZBAWoiGzYCBCABIBwgAnZBAWoiHDYCACABIAEoAmQgAnZBAWoiHjYCZCABIAEoAmggAnZBAWoiHzYCaCABIAEoAmwgAnZBAWoiIDYCbCABIAEoAnAgAnZBAWoiITYCcCABIAEoAnQgAnZBAWoiIjYCdCABIAEoAnggAnZBAWoiIzYCeCABIAEoAnwgAnZBAWoiATYCfCABICMgIiAhICAgHyAeIAQgBiAFIAcgCCAJIAogCyAMIA0gDiAPIBAgESASIBMgFCAVIBYgFyAYIBkgGiAbIBxqampqampqampqampqampqampqampqampqampqampqIQQLIAAgBDYCJAsgAEFAaygCAEECRwRAIAAoAhhBAWoiAmchASAAAn8gAwRAQR8gAWsiAUEIdCACQQh0IAF2agwBC0GAPiABQQh0aws2AigLIAAoAhxBAWoiAmchAQJ/IAMEQEEfIAFrIgFBCHQgAkEIdCABdmohAkEfIARBAWoiAWdrIgNBCHQgAUEIdCADdmohBEEfIAAoAiBBAWoiAWdrIgNBCHQgAUEIdCADdmoMAQtBgD4gAUEIdGshAkGAPiAEQQFqZ0EIdGshBEGAPiAAKAIgQQFqZ0EIdGsLIQEgACAENgI0IAAgATYCMCAAIAI2AiwgHUEQaiQACzsAQb0MQQJB0ClB2ClBAkEDQQAQA0G/DEEDQdwpQegpQQRBBUEAEANBnAtBAUHwKUH0KUEGQQdBABADCxsBAX9BCCAAEJMBIgEEQCABQQAgABAYGgsgAQuiFQIYfwF+IwBBEGsiDSQAIAIoAgQhFyACKAIAIRUgAEEANgLcAUEAIBUgFSADIAAoAgQiCCAAKAIMIgpqIhogA0ZqIgUgCGsiByAKIAdBASAAKAK4AXQiCGsgCiAHIAprIAhLGyAAKAIYG2siCEsiGxshCkEAIBcgCCAXSSIcGyEOIAMgBGoiDEEIayISIAVLBEAgDEEgayETIAxBAWshFiAMQQNrIRBBBEEGIAAoAsgBIgQgBEEGTxsiBCAEQQRNG0EEayEYA0BBACEGQQAgCmshFCAFQQFqIQsCQCAKRQ0AIAsgCmsoAAAgBSgAAUcNACAFQQVqIgggFGohBAJ/AkAgCCAQTwRAIAghBgwBCyAIIgYoAAAiCSAEKAAAIgdHBEAgByAJc2hBA3YMAgsDQCAEQQRqIQQgBkEEaiIGIBBPDQEgBigAACIJIAQoAAAiB0YNAAsgBiAHIAlzaEEDdmogCGsMAQsCQCAGIBZPDQAgBC8AACAGLwAARw0AIARBAmohBCAGQQJqIQYLIAYgDEkEfyAGIAQtAAAgBi0AAEZqBSAGCyAIawtBBGohBgsgDUH/k+vcAzYCDAJAAn8CQAJAAkAgGEEBaw4CAQIACyAAIAUgDCANQQxqEMEBDAILIAAgBSAMIA1BDGoQwAEMAQsgACAFIAwgDUEMahC/AQsiBCAGIAQgBksiBBsiD0EETwRAIAUgCyAEGyEIIA0oAgxBASAEGyEEAkAgBSASTw0AA0AgBUEBaiELAkAgBEUEQEEAIQQMAQsgCkUNACALKAAAIAsgFGooAABHDQAgBUEFaiIJIBRqIQcgBGcgD0EDbGpBHmsCfwJAAkAgCSAQTwRAIAkhBgwBCyAJIgYoAAAiGSAHKAAAIhFHBEAgESAZc2hBA3ZBBHIMAwsDQCAHQQRqIQcgBkEEaiIGIBBPDQEgBigAACIZIAcoAAAiEUYNAAsgBiARIBlzaEEDdmohBgwBCwJAIAYgFk8NACAHLwAAIAYvAABHDQAgB0ECaiEHIAZBAmohBgsgBiAMTw0AIAYgBy0AACAGLQAARmohBgsgBiAJayIHQXtLDQEgB0EEagsiBkEDbE4NAEEBIQQgCyEIIAYhDwsgDUH/k+vcAzYCCAJ/AkACfwJAAkACQCAYQQFrDgIBAgALIAAgCyAMIA1BCGoQwQEMAgsgACALIAwgDUEIahDAAQwBCyAAIAsgDCANQQhqEL8BCyIGQQRJDQAgDSgCCCIHZyAGQQJ0akEfayAEZyAPQQJ0akEba0wNACALIQUgBiEPIAcMAQsgCyASTw0CIAVBAmohCQJAIARFBEBBACEEDAELIApFDQAgCSgAACAJIBRqKAAARw0AIAVBBmoiByAUaiEGIARnIA9BAnRqQR5rAn8CQAJAIAcgEE8EQCAHIQUMAQsgByIFKAAAIhEgBigAACILRwRAIAsgEXNoQQN2QQRyDAMLA0AgBkEEaiEGIAVBBGoiBSAQTw0BIAUoAAAiESAGKAAAIgtGDQALIAUgCyARc2hBA3ZqIQUMAQsCQCAFIBZPDQAgBi8AACAFLwAARw0AIAZBAmohBiAFQQJqIQULIAUgDE8NACAFIAYtAAAgBS0AAEZqIQULIAUgB2siBUF7Sw0BIAVBBGoLIgVBAnRODQBBASEEIAkhCCAFIQ8LIA1B/5Pr3AM2AgQCfwJAAkACQCAYQQFrDgIBAgALIAAgCSAMIA1BBGoQwQEMAgsgACAJIAwgDUEEahDAAQwBCyAAIAkgDCANQQRqEL8BCyIGQQRJDQIgDSgCBCIHZyAGQQJ0akEfayAEZyAPQQJ0akEYa0wNAiAJIQUgBiEPIAcLIQQgBSEIIAUgEkkNAAsLAn8gBEEESQRAIAghCSAOIQcgCgwBCwJAIAMgCE8EQCAIIQkMAQtBAyAEayIHIAgiCWogGk0NAANAIAhBAWsiCS0AACAHIAlqIgUtAABHBEAgCCEJDAILIA9BAWohDyADIAlPDQEgCSEIIAUgGksNAAsLIAohByAEQQNrCyEIIAkgA2shCyABKAIMIQUCQAJAIAkgE00EQCADKQAAIR0gBSADKQAINwAIIAUgHTcAACABKAIMIQYgC0EQTQRAIAEgBiALajYCDCABKAIEIQUMAwsgAykAECEdIAYgAykAGDcAGCAGIB03ABAgC0EhSA0BIAYgC2ohCiADQRBqIQUgBkEgaiEGA0AgBSkAECEdIAYgBSkAGDcACCAGIB03AAAgBSkAICEdIAYgBSkAKDcAGCAGIB03ABAgBUEgaiEFIAZBIGoiBiAKSQ0ACwwBCyADIBNNBEAgAykAACEdIAUgAykACDcACCAFIB03AAAgBSATIANrIgZqIQogBkERTgRAIAVBEGohBQNAIAMpABAhHSAFIAMpABg3AAggBSAdNwAAIAMpACAhHSAFIAMpACg3ABggBSAdNwAQIANBIGohAyAFQSBqIgUgCkkNAAsLIAohBSATIQMLIAMgCU8NAEEAIQogCSADIgZrQQdxIg4EQANAIAUgBi0AADoAACAFQQFqIQUgBkEBaiEGIApBAWoiCiAORw0ACwsgAyAJa0F4Sw0AA0AgBSAGLQAAOgAAIAUgBi0AAToAASAFIAYtAAI6AAIgBSAGLQADOgADIAUgBi0ABDoABCAFIAYtAAU6AAUgBSAGLQAGOgAGIAUgBi0ABzoAByAFQQhqIQUgBkEIaiIGIAlHDQALCyABIAEoAgwgC2o2AgwgASgCBCEFIAtBgIAESQ0AIAFBATYCJCABIAUgASgCAGtBA3U2AigLIAUgBDYCACAFIAs7AQQgD0EDayIDQYCABE8EQCABQQI2AiQgASAFIAEoAgBrQQN1NgIoCyAFIAM7AQYgASAFQQhqIgQ2AgQgACgC3AEEQCAAQQA2AtwBCyAJIA9qIQMgB0UEQCAHIQ4gCCEKIAMhBQwCCyAHIQ4gCCEKIBIgAyIFSQ0BA0AgByEKIAghByADKAAAIAMgCmsoAABHBEAgCiEOIAchCiADIQUMAwsgA0EEaiIIIAprIQYCfwJAIAggEE8EQCAIIQUMAQsgCCIFKAAAIgkgBigAACIORwRAIAkgDnNoQQN2DAILA0AgBkEEaiEGIAVBBGoiBSAQTw0BIAUoAAAiCSAGKAAAIg5GDQALIAUgCSAOc2hBA3ZqIAhrDAELAkAgBSAWTw0AIAYvAAAgBS8AAEcNACAGQQJqIQYgBUECaiEFCyAFIAxJBH8gBSAGLQAAIAUtAABGagUgBQsgCGsLIQUgAyATTQRAIAMpAAAhHSABKAIMIgQgAykACDcACCAEIB03AAAgASgCBCEECyAEQQE2AgAgBEEAOwEEIAVBAWoiCEGAgARPBEAgAUECNgIkIAEgBCABKAIAa0EDdTYCKAsgBCAIOwEGIAEgBEEIaiIENgIEIAVBBGogA2ohAyAHRQRAIAchDiADIQUMAwsgCiEIIAchDiASIAMiBU8NAAsMAQsgACAFIANrIgRB/w9LNgLcASAEQQh2IAVqQQFqIQULIAUgEkkNAAsLIAIgCiAVQQAgGxsgChs2AgAgAiAOIBUgF0EAIBwbIgAgChsgACAbGyAOGzYCBCANQRBqJAAgDCADawuKFgIifwJ+IAAoAhAiBiADIAAoAgQiC2siBSAEaiIJQQEgACgCuAF0IgdrIAYgCSAGayAHSxsgACgCGBsiFCAAKAIMIhxPBEAgACABIAIgAyAEEP4BDwsgAigCACIGQQAgBiAFIBRrIglJIgcbIQVBACAGIAcbIR0gAigCBCIGQQAgBiAJSSIJGyEOQQAgBiAJGyEgAkAgAyAAKALMASIGIAZFakEBaiIhaiIPQQFqIgggAyAEaiISQQhrIhlPDQAgACgCCCIVIBwgFCAUIBxJGyIQaiEeIAsgEGohHyAUIBVqISMgACgCXCEMIAtBAmohJCASQSBrIRdBICAAKALAASIEayETQcAAIARrrSEnQQQgACgCyAEiACAAQQVrQQNPG0EFayEYA0AgA0GAAWohFiADQQFqIQkgFSALIAwCfwJAAkACQAJAAkAgGA4EAAECAwQLIAMpAAFCgICA2Mub741PfiAniKchESADKQAAQoCAgNjLm++NT34gJ4inDAQLIAMpAAFCgIDs/Mub741PfiAniKchESADKQAAQoCA7PzLm++NT34gJ4inDAMLIAMpAAFCgMaV/cub741PfiAniKchESADKQAAQoDGlf3Lm++NT34gJ4inDAILIAMpAAFC48iVvcub741PfiAniKchESADKQAAQuPIlb3Lm++NT34gJ4inDAELIAMoAAFBsfPd8XlsIBN2IREgAygAAEGx893xeWwgE3YLIgpBAnRqKAIAIgAgEEkbIRogBSALaiElICEhBiADIQcCfwNAIAghDSAVIAsgECAPIgQgJWsiCEsiJhshIgJ/IAVFIBAgCGtBBElyRQRAIAggImooAAAMAQsgBCgAAEEBcwsgDCAKQQJ0aiAHIAtrIg82AgAgBCgAACIKRgRAQQVBBCAEQQFrLQAAIAggImoiBkEBay0AAEYiABshCiAGIABrIQggBCAAayEHIB4gEiAmGyEbQQEhFiAFIQ0gDgwCCwJAAkAgACAUSQ0AIAcoAAAgACAaaigAAEcNACAJIQQMAQsgDCARQQJ0aiIHKAIAIQACfwJAAkACQAJAAkAgGA4EAQIDBAALIApBsfPd8XlsIBN2DAQLIAQpAABCgICA2Mub741PfiAniKcMAwsgBCkAAEKAgOz8y5vvjU9+ICeIpwwCCyAEKQAAQoDGlf3Lm++NT34gJ4inDAELIAQpAABC48iVvcub741PfiAniKcLIQogByAJIAtrIg82AgACQCAAIBRJDQAgCSgAACAVIAsgACAQSRsiGiAAaigAAEcNACAKIREgCSEHDAELIAwgCkECdGooAgAhAAJ/AkACQAJAAkACQCAYDgQBAgMEAAsgDSgAAEGx893xeWwgE3YMBAsgDSkAAEKAgIDYy5vvjU9+ICeIpwwDCyANKQAAQoCA7PzLm++NT34gJ4inDAILIA0pAABCgMaV/cub741PfiAniKcMAQsgDSkAAELjyJW9y5vvjU9+ICeIpwshESAVIAsgACAQSRshGiAGIA1qIQggBCAGaiIPIBZPBEAgFkGAAWohFiAGQQFqIQYLIA0hCSAEIQcgCCAZSQ0BDAQLCyAeIBIgACAcSSIGGyEbIA8gAGsiDUEDaiEWQQQhCgJ/AkAgACAaaiIIICMgHyAGGyIJTSADIAdPcg0AA0AgB0EBayIGLQAAIAhBAWsiAC0AAEcNASAKQQFqIQogACAJSwRAIAAhCCAGIgcgA0sNAQsLIAAhCCAGIQcgBAwBCyAECyEJIAULIQYgByAKaiAIIApqIBIgGyAfEA8gCmohDiAHIANrIQUgASgCDCEAAkACQCAHIBdNBEAgAykAACEoIAAgAykACDcACCAAICg3AAAgASgCDCEEIAVBEE0EQCABIAQgBWo2AgwgASgCBCEADAMLIAMpABAhKCAEIAMpABg3ABggBCAoNwAQIAVBIUgNASAEIAVqIQggA0EQaiEAIARBIGohAwNAIAApABAhKCADIAApABg3AAggAyAoNwAAIAApACAhKCADIAApACg3ABggAyAoNwAQIABBIGohACADQSBqIgMgCEkNAAsMAQsgAyAXTQRAIAMpAAAhKCAAIAMpAAg3AAggACAoNwAAIAAgFyADayIIaiEEIAhBEU4EQCAAQRBqIQADQCADKQAQISggACADKQAYNwAIIAAgKDcAACADKQAgISggACADKQAoNwAYIAAgKDcAECADQSBqIQMgAEEgaiIAIARJDQALCyAXIQMgBCEACyADIAdPDQBBACEKIAMhBCAHIANrQQdxIggEQANAIAAgBC0AADoAACAAQQFqIQAgBEEBaiEEIApBAWoiCiAIRw0ACwsgAyAHa0F4Sw0AA0AgACAELQAAOgAAIAAgBC0AAToAASAAIAQtAAI6AAIgACAELQADOgADIAAgBC0ABDoABCAAIAQtAAU6AAUgACAELQAGOgAGIAAgBC0ABzoAByAAQQhqIQAgBEEIaiIEIAdHDQALCyABIAEoAgwgBWo2AgwgASgCBCEAIAVBgIAESQ0AIAFBATYCJCABIAAgASgCAGtBA3U2AigLIAAgFjYCACAAIAU7AQQgDkEDayIDQYCABE8EQCABQQI2AiQgASAAIAEoAgBrQQN1NgIoCyAAIAM7AQYgASAAQQhqIgA2AgQgByAOaiIDIAlLBEAgDCARQQJ0aiAJIAtrNgIACwJAIAMgGUsEQCAGIQ4gDSEFDAELIA8gJGohBCAPQQJqIQUgDAJ/AkACQAJAAkACQCAYDgQAAQIDBAsgDCAEKQAAQoCAgNjLm++NT34gJ4inQQJ0aiAFNgIAIANBAmsiBCkAAEKAgIDYy5vvjU9+ICeIpwwECyAMIAQpAABCgIDs/Mub741PfiAniKdBAnRqIAU2AgAgA0ECayIEKQAAQoCA7PzLm++NT34gJ4inDAMLIAwgBCkAAEKAxpX9y5vvjU9+ICeIp0ECdGogBTYCACADQQJrIgQpAABCgMaV/cub741PfiAniKcMAgsgDCAEKQAAQuPIlb3Lm++NT34gJ4inQQJ0aiAFNgIAIANBAmsiBCkAAELjyJW9y5vvjU9+ICeIpwwBCyAMIAQoAABBsfPd8XlsIBN2QQJ0aiAFNgIAIANBAmsiBCgAAEGx893xeWwgE3YLQQJ0aiAEIAtrNgIAA0ACQCAGIQUgDSEGIAVFDQAgAyALayIJIAVrIgQgEGtBfEsNACAEIBUgCyAEIBBJIgQbaiIHKAAAIAMoAABHDQAgA0EEaiAHQQRqIBIgHiASIAQbIB8QDyEEIAMgF00EQCADKQAAISggASgCDCIAIAMpAAg3AAggACAoNwAAIAEoAgQhAAsgAEEBNgIAIABBADsBBCAEQQFqIgdBgIAETwRAIAFBAjYCJCABIAAgASgCAGtBA3U2AigLIARBBGohBCAAIAc7AQYgASAAQQhqIgA2AgQgDAJ/AkACQAJAAkACQCAYDgQBAgMEAAsgAygAAEGx893xeWwgE3YMBAsgAykAAEKAgIDYy5vvjU9+ICeIpwwDCyADKQAAQoCA7PzLm++NT34gJ4inDAILIAMpAABCgMaV/cub741PfiAniKcMAQsgAykAAELjyJW9y5vvjU9+ICeIpwtBAnRqIAk2AgAgBSENIAYhDiADIARqIgMgGU0NAQwCCwsgBSEOIAYhBQsgAyAhaiIPQQFqIgggGUkNAAsLIAIgBSAdIAUbNgIAIAIgDiAdICAgBRsgICAdGyAOGzYCBCASIANrC6ZkAiB/A35BASAAKALMASIMIAxBAU0bIRggAyAEaiIOQQhrIRIgACgCtAEiBSgCBCIWIAUoAgwiIWohGiAFKAIAIhcgAyAAKAIEIg8gACgCDCIQaiITa2ohCUEAIBYgF2sgEGoiG2shCyAAKALYASEGIAIoAgQhCCACKAIAIQwgACgCwAEhByAAKAJcIRQgBSgCwAEhBCAFKAJcIRwCQAJAAkACQAJAIAAoAsgBQQVrDgMDAgEACyAGRSAEQR1LckUEQEEEIAR0IQVBACEAA0AgAEFAayIAIAVJDQALCyASIAMgGGoiBkkEQCADIQAMBAsgD0ECaiEfIAsgFmohICAOQQFrISIgDkEDayEZIA5BIGshCyAQQQFrIR1BGCAEayEeQSAgB2shESADIAkgGkZqIQADQCAAKAAAQbHz3fF5bCINIB52IgQgHCAEQQZ2Qfz//x9xaigCACIKcyEHIABBgAJqIQUgGCEJAkACQAJ/A0AgFCANIBF2QQJ0aiIVKAIAIQ0gBiIEKAAAISMgFSAAIA9rIhU2AgACQCAdIBUgDGtBAWoiBmtBA0kNACAWIAYgG2tqIAYgD2ogBiAQSSIGGyIkKAAAIAAoAAFHDQAgAEEFaiAkQQRqIA4gFyAOIAYbIBMQDyEHIABBAWoiBSADayEJIAEoAgwhBAJAAkAgBSALTQRAIAMpAAAhJSAEIAMpAAg3AAggBCAlNwAAIAEoAgwhBCAJQRBNBEAgASAEIAlqNgIMIAEoAgQhAAwDCyADKQAQISUgBCADKQAYNwAYIAQgJTcAECAJQSFIDQEgBCAJaiEGIANBEGohACAEQSBqIQMDQCAAKQAQISUgAyAAKQAYNwAIIAMgJTcAACAAKQAgISUgAyAAKQAoNwAYIAMgJTcAECAAQSBqIQAgA0EgaiIDIAZJDQALDAELIAMgC00EQCADKQAAISUgBCADKQAINwAIIAQgJTcAACAEIAsgA2siCmohBiAKQRFOBEAgBEEQaiEEA0AgAykAECElIAQgAykAGDcACCAEICU3AAAgAykAICElIAQgAykAKDcAGCAEICU3ABAgA0EgaiEDIARBIGoiBCAGSQ0ACwsgBiEEIAshAwsgAyAFTw0AIAAgA2tBACEAIAUgA2tBB3EiCgRAA0AgBCADLQAAOgAAIARBAWohBCADQQFqIQMgAEEBaiIAIApHDQALC0EHSQ0AA0AgBCADLQAAOgAAIAQgAy0AAToAASAEIAMtAAI6AAIgBCADLQADOgADIAQgAy0ABDoABCAEIAMtAAU6AAUgBCADLQAGOgAGIAQgAy0ABzoAByAEQQhqIQQgA0EIaiIDIAVHDQALCyABIAEoAgwgCWo2AgwgASgCBCEAIAlBgIAESQ0AIAFBATYCJCABIAAgASgCAGtBA3U2AigLIAdBBGohCiAAQQE2AgAgACAJOwEEIAwhBiAHQQFqIgNB//8DSw0DDAQLAkAgB0H/AXENACAKQQh2IgYgIU0NACAGIBZqIgcoAAAgACgAAEcgDSAQS3INACAAQQRqIAdBBGogDiAXIBMQD0EEaiEKIBUgBiAbamshBiAAIQUCQCAAIANNDQADQCAAQQFrIgUtAAAgB0EBayIHLQAARwRAIAAhBQwCCyAKQQFqIQogAyAFTw0BIAUhACAHIBpLDQALCyAGQQNqIQkgBSADayEIIAEoAgwhAAJAAkAgBSALTQRAIAMpAAAhJSAAIAMpAAg3AAggACAlNwAAIAEoAgwhBCAIQRBNBEAgASAEIAhqNgIMIAEoAgQhAAwDCyADKQAQISUgBCADKQAYNwAYIAQgJTcAECAIQSFIDQEgBCAIaiEHIANBEGohACAEQSBqIQMDQCAAKQAQISUgAyAAKQAYNwAIIAMgJTcAACAAKQAgISUgAyAAKQAoNwAYIAMgJTcAECAAQSBqIQAgA0EgaiIDIAdJDQALDAELIAMgC00EQCADKQAAISUgACADKQAINwAIIAAgJTcAACAAIAsgA2siB2ohBCAHQRFOBEAgAEEQaiEAA0AgAykAECElIAAgAykAGDcACCAAICU3AAAgAykAICElIAAgAykAKDcAGCAAICU3ABAgA0EgaiEDIABBIGoiACAESQ0ACwsgCyEDIAQhAAsgAyAFTw0AQQAhDSADIQQgBSADa0EHcSIHBEADQCAAIAQtAAA6AAAgAEEBaiEAIARBAWohBCANQQFqIg0gB0cNAAsLIAMgBWtBeEsNAANAIAAgBC0AADoAACAAIAQtAAE6AAEgACAELQACOgACIAAgBC0AAzoAAyAAIAQtAAQ6AAQgACAELQAFOgAFIAAgBC0ABjoABiAAIAQtAAc6AAcgAEEIaiEAIARBCGoiBCAFRw0ACwsgASABKAIMIAhqNgIMIAEoAgQhACAIQYCABEkNACABQQE2AiQgASAAIAEoAgBrQQN1NgIoCyAAIAk2AgAgACAIOwEEIAwhCCAGIQwgCkEDayIDQf//A00NBAwDCwJAAkAgDSAQTQ0AIA0gD2oiBygAACAAKAAARw0AIAdBBGohBSAAQQRqIgYgGU8EQCAGIQQMAgsgBiIEKAAAIgggBSgAACIJRwRAIAggCXNoQQN2DAQLA0AgBUEEaiEFIARBBGoiBCAZTw0CIAQoAAAiCCAFKAAAIglGDQALIAQgCCAJc2hBA3ZqIAZrDAMLIBIgBCAJIAQgBU8iAGoiCWoiBkkEQCADIQAMCgsgBSAAQQh0aiEFIBwgI0Gx893xeWwiDSAediIAQQZ2Qfz//x9xaigCACIKIABzIQcgBCEADAELCwJAIAQgIk8NACAFLwAAIAQvAABHDQAgBUECaiEFIARBAmohBAsgBCAOSQR/IAQgBS0AACAELQAARmoFIAQLIAZrC0EEaiEKAkAgACADTQRAIAAhBQwBCyAAIQkgByEEIAAhBSANIBBMDQADQCAJQQFrIgUtAAAgBEEBayIELQAARwRAIAkhBQwCCyAKQQFqIQogAyAFTw0BIAUhCSAEIBNLDQALCyAAIAdrIgZBA2ohCSAFIANrIQggASgCDCEAAkACQCAFIAtNBEAgAykAACElIAAgAykACDcACCAAICU3AAAgASgCDCEEIAhBEE0EQCABIAQgCGo2AgwgASgCBCEADAMLIAMpABAhJSAEIAMpABg3ABggBCAlNwAQIAhBIUgNASAEIAhqIQcgA0EQaiEAIARBIGohAwNAIAApABAhJSADIAApABg3AAggAyAlNwAAIAApACAhJSADIAApACg3ABggAyAlNwAQIABBIGohACADQSBqIgMgB0kNAAsMAQsgAyALTQRAIAMpAAAhJSAAIAMpAAg3AAggACAlNwAAIAAgCyADayIHaiEEIAdBEU4EQCAAQRBqIQADQCADKQAQISUgACADKQAYNwAIIAAgJTcAACADKQAgISUgACADKQAoNwAYIAAgJTcAECADQSBqIQMgAEEgaiIAIARJDQALCyALIQMgBCEACyADIAVPDQBBACENIAMhBCAFIANrQQdxIgcEQANAIAAgBC0AADoAACAAQQFqIQAgBEEBaiEEIA1BAWoiDSAHRw0ACwsgAyAFa0F4Sw0AA0AgACAELQAAOgAAIAAgBC0AAToAASAAIAQtAAI6AAIgACAELQADOgADIAAgBC0ABDoABCAAIAQtAAU6AAUgACAELQAGOgAGIAAgBC0ABzoAByAAQQhqIQAgBEEIaiIEIAVHDQALCyABIAEoAgwgCGo2AgwgASgCBCEAIAhBgIAESQ0AIAFBATYCJCABIAAgASgCAGtBA3U2AigLIAAgCTYCACAAIAg7AQQgDCEIIAYhDCAKQQNrIgNB//8DTQ0BCyABQQI2AiQgASAAIAEoAgBrQQN1NgIoIAYhDAsgACADOwEGIAEgAEEIaiIDNgIEAkAgBSAKaiIAIBJLDQAgFCAVIB9qKAAAQbHz3fF5bCARdkECdGogFUECajYCACAUIABBAmsiBCgAAEGx893xeWwgEXZBAnRqIAQgD2s2AgAgDCEFIAghBANAAkAgBCEMIAUhBCAdIAAgD2siCCAMayIFa0EDSQ0AIAUgICAPIAUgEEkiBRtqIgYoAAAgACgAAEcNACAAQQRqIAZBBGogDiAXIA4gBRsgExAPIQYgACALTQRAIAApAAAhJSABKAIMIgMgACkACDcACCADICU3AAAgASgCBCEDCyADQQE2AgAgA0EAOwEEIAZBAWoiBUGAgARPBEAgAUECNgIkIAEgAyABKAIAa0EDdTYCKAsgAyAFOwEGIAEgA0EIaiIDNgIEIBQgACgAAEGx893xeWwgEXZBAnRqIAg2AgAgDCEFIAQhCCAGQQRqIABqIgAgEk0NAQwCCwsgDCEIIAQhDAsgACEDIAAgGGoiBiASTQ0ACwwDCyAGRSAEQR1LckUEQEEEIAR0IQVBACEAA0AgAEFAayIAIAVJDQALCyASIAMgGGoiBkkEQCADIQAMAwsgD0ECaiEdIAsgFmohHiAOQQFrIR8gDkEDayEVIA5BIGshCyAQQQFrIRkgAyAJIBpGaiEAQTggBGutISdBwAAgB2utISYDQCAcIAApAABCgMaV/cub741PfiIlICeIpyIEQQZ2Qfz//x9xaigCACIKIARzIQcgAEGAAmohBSAYIQkCQAJAAn8DQCAUICUgJoinQQJ0aiIRKAIAIQ0gBiIEKQAAISUgESAAIA9rIhE2AgACQCAZIBEgDGtBAWoiBmtBA0kNACAWIAYgG2tqIAYgD2ogBiAQSSIGGyIgKAAAIAAoAAFHDQAgAEEFaiAgQQRqIA4gFyAOIAYbIBMQDyEHIABBAWoiBSADayEJIAEoAgwhBAJAAkAgBSALTQRAIAMpAAAhJSAEIAMpAAg3AAggBCAlNwAAIAEoAgwhBCAJQRBNBEAgASAEIAlqNgIMIAEoAgQhAAwDCyADKQAQISUgBCADKQAYNwAYIAQgJTcAECAJQSFIDQEgBCAJaiEGIANBEGohACAEQSBqIQMDQCAAKQAQISUgAyAAKQAYNwAIIAMgJTcAACAAKQAgISUgAyAAKQAoNwAYIAMgJTcAECAAQSBqIQAgA0EgaiIDIAZJDQALDAELIAMgC00EQCADKQAAISUgBCADKQAINwAIIAQgJTcAACAEIAsgA2siCmohBiAKQRFOBEAgBEEQaiEEA0AgAykAECElIAQgAykAGDcACCAEICU3AAAgAykAICElIAQgAykAKDcAGCAEICU3ABAgA0EgaiEDIARBIGoiBCAGSQ0ACwsgBiEEIAshAwsgAyAFTw0AIAAgA2tBACEAIAUgA2tBB3EiCgRAA0AgBCADLQAAOgAAIARBAWohBCADQQFqIQMgAEEBaiIAIApHDQALC0EHSQ0AA0AgBCADLQAAOgAAIAQgAy0AAToAASAEIAMtAAI6AAIgBCADLQADOgADIAQgAy0ABDoABCAEIAMtAAU6AAUgBCADLQAGOgAGIAQgAy0ABzoAByAEQQhqIQQgA0EIaiIDIAVHDQALCyABIAEoAgwgCWo2AgwgASgCBCEAIAlBgIAESQ0AIAFBATYCJCABIAAgASgCAGtBA3U2AigLIAdBBGohCiAAQQE2AgAgACAJOwEEIAwhBiAHQQFqIgNB//8DSw0DDAQLAkAgB0H/AXENACAKQQh2IgYgIU0NACAGIBZqIgcoAAAgACgAAEcgDSAQS3INACAAQQRqIAdBBGogDiAXIBMQD0EEaiEKIBEgBiAbamshBiAAIQUCQCAAIANNDQADQCAAQQFrIgUtAAAgB0EBayIHLQAARwRAIAAhBQwCCyAKQQFqIQogAyAFTw0BIAUhACAHIBpLDQALCyAGQQNqIQkgBSADayEIIAEoAgwhAAJAAkAgBSALTQRAIAMpAAAhJSAAIAMpAAg3AAggACAlNwAAIAEoAgwhBCAIQRBNBEAgASAEIAhqNgIMIAEoAgQhAAwDCyADKQAQISUgBCADKQAYNwAYIAQgJTcAECAIQSFIDQEgBCAIaiEHIANBEGohACAEQSBqIQMDQCAAKQAQISUgAyAAKQAYNwAIIAMgJTcAACAAKQAgISUgAyAAKQAoNwAYIAMgJTcAECAAQSBqIQAgA0EgaiIDIAdJDQALDAELIAMgC00EQCADKQAAISUgACADKQAINwAIIAAgJTcAACAAIAsgA2siB2ohBCAHQRFOBEAgAEEQaiEAA0AgAykAECElIAAgAykAGDcACCAAICU3AAAgAykAICElIAAgAykAKDcAGCAAICU3ABAgA0EgaiEDIABBIGoiACAESQ0ACwsgCyEDIAQhAAsgAyAFTw0AQQAhDSADIQQgBSADa0EHcSIHBEADQCAAIAQtAAA6AAAgAEEBaiEAIARBAWohBCANQQFqIg0gB0cNAAsLIAMgBWtBeEsNAANAIAAgBC0AADoAACAAIAQtAAE6AAEgACAELQACOgACIAAgBC0AAzoAAyAAIAQtAAQ6AAQgACAELQAFOgAFIAAgBC0ABjoABiAAIAQtAAc6AAcgAEEIaiEAIARBCGoiBCAFRw0ACwsgASABKAIMIAhqNgIMIAEoAgQhACAIQYCABEkNACABQQE2AiQgASAAIAEoAgBrQQN1NgIoCyAAIAk2AgAgACAIOwEEIAwhCCAGIQwgCkEDayIDQf//A00NBAwDCwJAAkAgDSAQTQ0AIA0gD2oiBygAACAAKAAARw0AIAdBBGohBSAAQQRqIgYgFU8EQCAGIQQMAgsgBiIEKAAAIgggBSgAACIJRwRAIAggCXNoQQN2DAQLA0AgBUEEaiEFIARBBGoiBCAVTw0CIAQoAAAiCCAFKAAAIglGDQALIAQgCCAJc2hBA3ZqIAZrDAMLIBIgBCAJIAQgBU8iAGoiCWoiBkkEQCADIQAMCQsgBSAAQQh0aiEFIBwgJUKAxpX9y5vvjU9+IiUgJ4inIgBBBnZB/P//H3FqKAIAIgogAHMhByAEIQAMAQsLAkAgBCAfTw0AIAUvAAAgBC8AAEcNACAFQQJqIQUgBEECaiEECyAEIA5JBH8gBCAFLQAAIAQtAABGagUgBAsgBmsLQQRqIQoCQCAAIANNBEAgACEFDAELIAAhCSAHIQQgACEFIA0gEEwNAANAIAlBAWsiBS0AACAEQQFrIgQtAABHBEAgCSEFDAILIApBAWohCiADIAVPDQEgBSEJIAQgE0sNAAsLIAAgB2siBkEDaiEJIAUgA2shCCABKAIMIQACQAJAIAUgC00EQCADKQAAISUgACADKQAINwAIIAAgJTcAACABKAIMIQQgCEEQTQRAIAEgBCAIajYCDCABKAIEIQAMAwsgAykAECElIAQgAykAGDcAGCAEICU3ABAgCEEhSA0BIAQgCGohByADQRBqIQAgBEEgaiEDA0AgACkAECElIAMgACkAGDcACCADICU3AAAgACkAICElIAMgACkAKDcAGCADICU3ABAgAEEgaiEAIANBIGoiAyAHSQ0ACwwBCyADIAtNBEAgAykAACElIAAgAykACDcACCAAICU3AAAgACALIANrIgdqIQQgB0ERTgRAIABBEGohAANAIAMpABAhJSAAIAMpABg3AAggACAlNwAAIAMpACAhJSAAIAMpACg3ABggACAlNwAQIANBIGohAyAAQSBqIgAgBEkNAAsLIAshAyAEIQALIAMgBU8NAEEAIQ0gAyEEIAUgA2tBB3EiBwRAA0AgACAELQAAOgAAIABBAWohACAEQQFqIQQgDUEBaiINIAdHDQALCyADIAVrQXhLDQADQCAAIAQtAAA6AAAgACAELQABOgABIAAgBC0AAjoAAiAAIAQtAAM6AAMgACAELQAEOgAEIAAgBC0ABToABSAAIAQtAAY6AAYgACAELQAHOgAHIABBCGohACAEQQhqIgQgBUcNAAsLIAEgASgCDCAIajYCDCABKAIEIQAgCEGAgARJDQAgAUEBNgIkIAEgACABKAIAa0EDdTYCKAsgACAJNgIAIAAgCDsBBCAMIQggBiEMIApBA2siA0H//wNNDQELIAFBAjYCJCABIAAgASgCAGtBA3U2AiggBiEMCyAAIAM7AQYgASAAQQhqIgM2AgQCQCAFIApqIgAgEksNACAUIBEgHWopAABCgMaV/cub741PfiAmiKdBAnRqIBFBAmo2AgAgFCAAQQJrIgQpAABCgMaV/cub741PfiAmiKdBAnRqIAQgD2s2AgAgDCEFIAghBANAAkAgBCEMIAUhBCAZIAAgD2siCCAMayIFa0EDSQ0AIAUgHiAPIAUgEEkiBRtqIgYoAAAgACgAAEcNACAAQQRqIAZBBGogDiAXIA4gBRsgExAPIQYgACALTQRAIAApAAAhJSABKAIMIgMgACkACDcACCADICU3AAAgASgCBCEDCyADQQE2AgAgA0EAOwEEIAZBAWoiBUGAgARPBEAgAUECNgIkIAEgAyABKAIAa0EDdTYCKAsgAyAFOwEGIAEgA0EIaiIDNgIEIBQgACkAAEKAxpX9y5vvjU9+ICaIp0ECdGogCDYCACAMIQUgBCEIIAZBBGogAGoiACASTQ0BDAILCyAMIQggBCEMCyAAIQMgACAYaiIGIBJNDQALDAILIAZFIARBHUtyRQRAQQQgBHQhBUEAIQADQCAAQUBrIgAgBUkNAAsLIBIgAyAYaiIGSQRAIAMhAAwCCyAPQQJqIR0gCyAWaiEeIA5BAWshHyAOQQNrIRUgDkEgayELIBBBAWshGSADIAkgGkZqIQBBOCAEa60hJ0HAACAHa60hJgNAIBwgACkAAEKAgOz8y5vvjU9+IiUgJ4inIgRBBnZB/P//H3FqKAIAIgogBHMhByAAQYACaiEFIBghCQJAAkACfwNAIBQgJSAmiKdBAnRqIhEoAgAhDSAGIgQpAAAhJSARIAAgD2siETYCAAJAIBkgESAMa0EBaiIGa0EDSQ0AIBYgBiAba2ogBiAPaiAGIBBJIgYbIiAoAAAgACgAAUcNACAAQQVqICBBBGogDiAXIA4gBhsgExAPIQcgAEEBaiIFIANrIQkgASgCDCEEAkACQCAFIAtNBEAgAykAACElIAQgAykACDcACCAEICU3AAAgASgCDCEEIAlBEE0EQCABIAQgCWo2AgwgASgCBCEADAMLIAMpABAhJSAEIAMpABg3ABggBCAlNwAQIAlBIUgNASAEIAlqIQYgA0EQaiEAIARBIGohAwNAIAApABAhJSADIAApABg3AAggAyAlNwAAIAApACAhJSADIAApACg3ABggAyAlNwAQIABBIGohACADQSBqIgMgBkkNAAsMAQsgAyALTQRAIAMpAAAhJSAEIAMpAAg3AAggBCAlNwAAIAQgCyADayIKaiEGIApBEU4EQCAEQRBqIQQDQCADKQAQISUgBCADKQAYNwAIIAQgJTcAACADKQAgISUgBCADKQAoNwAYIAQgJTcAECADQSBqIQMgBEEgaiIEIAZJDQALCyAGIQQgCyEDCyADIAVPDQAgACADa0EAIQAgBSADa0EHcSIKBEADQCAEIAMtAAA6AAAgBEEBaiEEIANBAWohAyAAQQFqIgAgCkcNAAsLQQdJDQADQCAEIAMtAAA6AAAgBCADLQABOgABIAQgAy0AAjoAAiAEIAMtAAM6AAMgBCADLQAEOgAEIAQgAy0ABToABSAEIAMtAAY6AAYgBCADLQAHOgAHIARBCGohBCADQQhqIgMgBUcNAAsLIAEgASgCDCAJajYCDCABKAIEIQAgCUGAgARJDQAgAUEBNgIkIAEgACABKAIAa0EDdTYCKAsgB0EEaiEKIABBATYCACAAIAk7AQQgDCEGIAdBAWoiA0H//wNLDQMMBAsCQCAHQf8BcQ0AIApBCHYiBiAhTQ0AIAYgFmoiBygAACAAKAAARyANIBBLcg0AIABBBGogB0EEaiAOIBcgExAPQQRqIQogESAGIBtqayEGIAAhBQJAIAAgA00NAANAIABBAWsiBS0AACAHQQFrIgctAABHBEAgACEFDAILIApBAWohCiADIAVPDQEgBSEAIAcgGksNAAsLIAZBA2ohCSAFIANrIQggASgCDCEAAkACQCAFIAtNBEAgAykAACElIAAgAykACDcACCAAICU3AAAgASgCDCEEIAhBEE0EQCABIAQgCGo2AgwgASgCBCEADAMLIAMpABAhJSAEIAMpABg3ABggBCAlNwAQIAhBIUgNASAEIAhqIQcgA0EQaiEAIARBIGohAwNAIAApABAhJSADIAApABg3AAggAyAlNwAAIAApACAhJSADIAApACg3ABggAyAlNwAQIABBIGohACADQSBqIgMgB0kNAAsMAQsgAyALTQRAIAMpAAAhJSAAIAMpAAg3AAggACAlNwAAIAAgCyADayIHaiEEIAdBEU4EQCAAQRBqIQADQCADKQAQISUgACADKQAYNwAIIAAgJTcAACADKQAgISUgACADKQAoNwAYIAAgJTcAECADQSBqIQMgAEEgaiIAIARJDQALCyALIQMgBCEACyADIAVPDQBBACENIAMhBCAFIANrQQdxIgcEQANAIAAgBC0AADoAACAAQQFqIQAgBEEBaiEEIA1BAWoiDSAHRw0ACwsgAyAFa0F4Sw0AA0AgACAELQAAOgAAIAAgBC0A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IAMgBU8NASAFIQAgByAaSw0ACwsgBkEDaiEJIAUgA2shCCABKAIMIQACQAJAIAUgC00EQCADKQAAISUgACADKQAINwAIIAAgJTcAACABKAIMIQQgCEEQTQRAIAEgBCAIajYCDCABKAIEIQAMAwsgAykAECElIAQgAykAGDcAGCAEICU3ABAgCEEhSA0BIAQgCGohByADQRBqIQAgBEEgaiEDA0AgACkAECElIAMgACkAGDcACCADICU3AAAgACkAICElIAMgACkAKDcAGCADICU3ABAgAEEgaiEAIANBIGoiAyAHSQ0ACwwBCyADIAtNBEAgAykAACElIAAgAykACDcACCAAICU3AAAgACALIANrIgdqIQQgB0ERTgRAIABBEGohAANAIAMpABAhJSAAIAMpABg3AAggACAlNwAAIAMpACAhJSAAIAMpACg3ABggACAlNwAQIANBIGohAyAAQSBqIgAgBEkNAAsLIAshAyAEIQALIAMgBU8NAEEAIQ0gAyEEIAUgA2tBB3EiBwRAA0AgACAELQAAOgAAIABBAWohACAEQQFqIQQgDUEBaiINIAdHDQALCyADIAVrQXhLDQADQCAAIAQtAAA6AAAgACAELQABOgABIAAgBC0AAjoAAiAAIAQtAAM6AAMgACAELQAEOgAEIAAgBC0ABToABSAAIAQtAAY6AAYgACAELQAHOgAHIABBCGohACAEQQhqIgQgBUcNAAsLIAEgASgCDCAIajYCDCABKAIEIQAgCEGAgARJDQAgAUEBNgIkIAEgACABKAIAa0EDdTYCKAsgACAJNgIAIAAgCDsBBCAMIQggBiEMIApBA2siA0H//wNNDQQMAwsCQAJAIA0gEE0NACANIA9qIgcoAAAgACgAAEcNACAHQQRqIQUgAEEEaiIGIBVPBEAgBiEEDAILIAYiBCgAACIIIAUoAAAiCUcEQCAIIAlzaEEDdgwECwNAIAVBBGohBSAEQQRqIgQgFU8NAiAEKAAAIgggBSgAACIJRg0ACyAEIAggCXNoQQN2aiAGawwDCyASIAQgCSAEIAVPIgBqIglqIgZJBEAgAyEADAcLIAUgAEEIdGohBSAcICVCgICA2Mub741PfiIlICeIpyIAQQZ2Qfz//x9xaigCACIKIABzIQcgBCEADAELCwJAIAQgH08NACAFLwAAIAQvAABHDQAgBUECaiEFIARBAmohBAsgBCAOSQR/IAQgBS0AACAELQAARmoFIAQLIAZrC0EEaiEKAkAgACADTQRAIAAhBQwBCyAAIQkgByEEIAAhBSANIBBMDQADQCAJQQFrIgUtAAAgBEEBayIELQAARwRAIAkhBQwCCyAKQQFqIQogAyAFTw0BIAUhCSAEIBNLDQALCyAAIAdrIgZBA2ohCSAFIANrIQggASgCDCEAAkACQCAFIAtNBEAgAykAACElIAAgAykACDcACCAAICU3AAAgASgCDCEEIAhBEE0EQCABIAQgCGo2AgwgASgCBCEADAMLIAMpABAhJSAEIAMpABg3ABggBCAlNwAQIAhBIUgNASAEIAhqIQcgA0EQaiEAIARBIGohAwNAIAApABAhJSADIAApABg3AAggAyAlNwAAIAApACAhJSADIAApACg3ABggAyAlNwAQIABBIGohACADQSBqIgMgB0kNAAsMAQsgAyALTQRAIAMpAAAhJSAAIAMpAAg3AAggACAlNwAAIAAgCyADayIHaiEEIAdBEU4EQCAAQRBqIQADQCADKQAQISUgACADKQAYNwAIIAAgJTcAACADKQAgISUgACADKQAoNwAYIAAgJTcAECADQSBqIQMgAEEgaiIAIARJDQALCyALIQMgBCEACyADIAVPDQBBACENIAMhBCAFIANrQQdxIgcEQANAIAAgBC0AADoAACAAQQFqIQAgBEEBaiEEIA1BAWoiDSAHRw0ACwsgAyAFa0F4Sw0AA0AgACAELQAAOgAAIAAgBC0AAToAASAAIAQtAAI6AAIgACAELQADOgADIAAgBC0ABDoABCAAIAQtAAU6AAUgACAELQAGOgAGIAAgBC0ABzoAByAAQQhqIQAgBEEIaiIEIAVHDQALCyABIAEoAgwgCGo2AgwgASgCBCEAIAhBgIAESQ0AIAFBATYCJCABIAAgASgCAGtBA3U2AigLIAAgCTYCACAAIAg7AQQgDCEIIAYhDCAKQQNrIgNB//8DTQ0BCyABQQI2AiQgASAAIAEoAgBrQQN1NgIoIAYhDAsgACADOwEGIAEgAEEIaiIDNgIEAkAgBSAKaiIAIBJLDQAgFCARIB1qKQAAQoCAgNjLm++NT34gJoinQQJ0aiARQQJqNgIAIBQgAEECayIEKQAAQoCAgNjLm++NT34gJoinQQJ0aiAE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BiAXSQ0ACwwCCwJAIBJFDQAgCEEeSQRAQQQgCHQhBkEAIQADQCAAQUBrIgAgBkkNAAsLIAVBHUsNAEEEIAV0IQZBACEAA0AgAEFAayIAIAZJDQALCyADIAkgCkZqIgYgF08NASANIBNqISAgDEEgayENIAxBAWshGiAMQQNrIRIgD0EBayEdQTggBWutISpBOCAIa60hKEHAACARa60hJkHAACALa60hJwNAIBUgBikAACIlQuPIlb3Lm++NT34iKSAniKdBAnRqIgAoAgAhCiAZICVCgIDs/Mub741PfiIrICaIp0ECdGoiESgCACEJIB8gKSAoiKciG0EGdkH8//8fcWooAgAhBSAiICsgKoinIiFBBnZB/P//H3FqKAIAIQggESAGIA5rIhE2AgAgACARNgIAAkACQAJAAkAgHSARQQFqIgsgBGsiAGtBA0kNACATIAAgFmtqIAAgDmogACAPSSIAGyIeKAAAIAYoAAFHDQAgBkEFaiAeQQRqIAwgFCAMIAAbIBAQDyEKIAZBAWoiBSADayEJIAEoAgwhAAJAAkAgBSANTQRAIAMpAAAhJSAAIAMpAAg3AAggACAlNwAAIAEoAgwhACAJQRBNBEAgASAAIAlqNgIMIAEoAgQhAwwDCyADKQAQISUgACADKQAYNwAYIAAgJTcAECAJQSFIDQEgACAJaiEGIANBEGohAyAAQSBqIQADQCADKQAQISUgACADKQAYNwAIIAAgJTcAACADKQAgISUgACADKQAoNwAYIAAgJTcAECADQSBqIQMgAEEgaiIAIAZJDQALDAELIAMgDU0EQCADKQAAISUgACADKQAINwAIIAAgJTcAACAAIA0gA2siC2ohCCALQRFOBEAgAEEQaiEAA0AgAykAECElIAAgAykAGDcACCAAICU3AAAgAykAICElIAAgAykAKDcAGCAAICU3ABAgA0EgaiEDIABBIGoiACAISQ0ACwsgDSEDIAghAAsgAyAFTw0AIAYgA2tBACEGIAUgA2tBB3EiCwRAA0AgACADLQAAOgAAIABBAWohACADQQFqIQMgBkEBaiIGIAtHDQALC0EHSQ0AA0AgACADLQAAOgAAIAAgAy0AAToAASAAIAMtAAI6AAIgACADLQADOgADIAAgAy0ABDoABCAAIAMtAAU6AAUgACADLQAGOgAGIAAgAy0ABzoAByAAQQhqIQAgA0EIaiIDIAVHDQALCyABIAEoAgwgCWo2AgwgASgCBCEDIAlBgIAESQ0AIAFBATYCJCABIAMgASgCAGtBA3U2AigLIApBBGohCCADQQE2AgAgAyAJOwEEIAQhCSAKQQFqIgBB//8DSw0BDAILAkACfwJAAkAgCiAPSwRAIAogDmoiACkAACAlUg0BIABBCGohBSAGQQhqIgggEk8EQCAIIQcMAwsgCCIHKAAAIgkgBSgAACILRwRAIAkgC3NoQQN2DAQLA0AgBUEEaiEFIAdBBGoiByASTw0DIAcoAAAiCSAFKAAAIgtGDQALIAcgCSALc2hBA3ZqIAhrDAMLIAUgG3NB/wFxDQAgBUEIdiIFIBxMDQAgBSATaiIAKQAAICVSDQAgBkEIaiAAQQhqIAwgFCAQEA9BCGohCCARIAUgFmprIQkgAyAGTwRAIAYhBQwECwNAIAZBAWsiBS0AACAAQQFrIgAtAABHBEAgBiEFDAULIAhBAWohCCADIAVPDQQgBSEGIAAgGEsNAAsMAwsCQAJAIAkgD0sEQCAJIA5qIgAoAAAgBigAAEYNAQwCCyAIICFzQf8BcQ0BIAhBCHYiBSAcTA0BIAUgE2oiACgAACAGKAAARw0BIAUgFmohCQsgHyAGKQABIiVC48iVvcub741PfiIpICiIpyIIQQZ2Qfz//x9xaigCACEHIBUgKSAniKdBAnRqIgUoAgAhCiAFIAs2AgAgBkEBaiEFAn8CQAJAIAogD0sEQCAKIA5qIgcpAAAgJVINASAHQQhqIQggBkEJaiIGIBJPBEAgBiEADAMLIAYiACgAACIJIAgoAAAiC0cEQCAJIAtzaEEDdgwECwNAIAhBBGohCCAAQQRqIgAgEk8NAyAAKAAAIgkgCCgAACILRg0ACyAAIAkgC3NoQQN2aiAGawwDCyAHIAhzQf8BcQ0AIAdBCHYiCiAcTA0AIAogE2oiBykAACAlUg0AIAZBCWogB0EIaiAMIBQgEBAPQQhqIQggCyAKIBZqayEJIAMgBU8NBgNAIAVBAWsiAC0AACAHQQFrIgctAABHDQcgCEEBaiEIIAAgA00EQCAAIQUMCAsgACEFIAcgGEsNAAsMBgsgAEEEaiEFIAZBBGohCCAJIA9JBEAgCCAFIAwgFCAQEA9BBGohCCARIAlrIQkgAyAGTwRAIAYhBQwHCyAAIBhNBEAgBiEFDAcLA0AgBkEBayIFLQAAIABBAWsiAC0AAEcEQCAGIQUMCAsgCEEBaiEIIAMgBU8NByAFIQYgACAYSw0ACwwGCwJ/AkAgCCASTwRAIAghBwwBCyAIIQcgBSgAACIJICVCGIinIgpHBEAgCSAKc2hBA3YMAgsDQCAFQQRqIQUgB0EEaiIHIBJPDQEgBygAACIJIAUoAAAiCkYNAAsgByAJIApzaEEDdmogCGsMAQsCQCAHIBpPDQAgBS8AACAHLwAARw0AIAVBAmohBSAHQQJqIQcLIAcgDEkEfyAHIAUtAAAgBy0AAEZqBSAHCyAIawsgBiAAayEJQQRqIQggAyAGTwRAIAYhBQwGCyAAIBBNBEAgBiEFDAYLA0AgBkEBayIFLQAAIABBAWsiAC0AAEcEQCAGIQUMBwsgCEEBaiEIIAMgBU8NBiAFIQYgACAQSw0ACwwFCwJAIAAgGk8NACAILwAAIAAvAABHDQAgCEECaiEIIABBAmohAAsgACAMSQR/IAAgCC0AACAALQAARmoFIAALIAZrCyAFIAdrIQlBCGohCCAKIA9MIAMgBU9yDQMDQCAFQQFrIgAtAAAgB0EBayIHLQAARw0EIAhBAWohCCAAIANNBEAgACEFDAULIAAhBSAHIBBLDQALDAMLIAYgA2tBCHUgBmpBAWohBgwFCwJAIAcgGk8NACAFLwAAIAcvAABHDQAgBUECaiEFIAdBAmohBwsgByAMSQR/IAcgBS0AACAHLQAARmoFIAcLIAhrCyAGIABrIQlBCGohCCADIAZPBEAgBiEFDAELIAogD0wEQCAGIQUMAQsDQCAGQQFrIgUtAAAgAEEBayIALQAARwRAIAYhBQwCCyAIQQFqIQggAyAFTw0BIAUhBiAAIBBLDQALCyAJQQNqIQsgBSADayEKIAEoAgwhAAJAAkAgBSANTQRAIAMpAAAhJSAAIAMpAAg3AAggACAlNwAAIAEoAgwhACAKQRBNBEAgASAAIApqNgIMIAEoAgQhAwwDCyADKQAQISUgACADKQAYNwAYIAAgJTcAECAKQSFIDQEgACAKaiEGIANBEGohAyAAQSBqIQADQCADKQAQISUgACADKQAYNwAIIAAgJTcAACADKQAgISUgACADKQAoNwAYIAAgJTcAECADQSBqIQMgAEEgaiIAIAZJDQALDAELIAMgDU0EQCADKQAAISUgACADKQAINwAIIAAgJTcAACAAIA0gA2siB2ohBiAHQRFOBEAgAEEQaiEAA0AgAykAECElIAAgAykAGDcACCAAICU3AAAgAykAICElIAAgAykAKDcAGCAAICU3ABAgA0EgaiEDIABBIGoiACAGSQ0ACwsgDSEDIAYhAAsgAyAFTw0AQQAhByADIQYgBSADa0EHcSIbBEADQCAAIAYtAAA6AAAgAEEBaiEAIAZBAWohBiAHQQFqIgcgG0cNAAsLIAMgBWtBeEsNAANAIAAgBi0AADoAACAAIAYtAAE6AAEgACAGLQACOgACIAAgBi0AAzoAAyAAIAYtAAQ6AAQgACAGLQAFOgAFIAAgBi0ABjoABiAAIAYtAAc6AAcgAEEIaiEAIAZBCGoiBiAFRw0ACwsgASABKAIMIApqNgIMIAEoAgQhAyAKQYCABEkNACABQQE2AiQgASADIAEoAgBrQQN1NgIoCyADIAs2AgAgAyAKOwEEIAQhByAJIQQgCEEDayIAQYCABEkNAQsgAUECNgIkIAEgAyABKAIAa0EDdTYCKCAJIQQLIAMgADsBBiABIANBCGoiADYCBCAXIAUgCGoiA0kEQCADIQYMAQsgFSAOIBFBAmoiBWopAAAiJULjyJW9y5vvjU9+ICeIp0ECdGogBTYCACAVIANBAmsiBikAAELjyJW9y5vvjU9+ICeIp0ECdGogBiAOazYCACAZICVCgIDs/Mub741PfiAmiKdBAnRqIAU2AgAgGSADQQFrIgUpAABCgIDs/Mub741PfiAmiKdBAnRqIAUgDms2AgAgBCEIIAchBQNAAkAgBSEEIAghBSAdIAMgDmsiBiAEayIHa0EDSQ0AIAcgICAOIAcgD0kiBxtqIggoAAAgAygAAEcNACADQQRqIAhBBGogDCAUIAwgBxsgEBAPIQkgAyANTQRAIAMpAAAhJSABKAIMIgAgAykACDcACCAAICU3AAAgASgCBCEACyAAQQE2AgAgAEEAOwEEIAlBAWoiB0GAgARPBEAgAUECNgIkIAEgACABKAIAa0EDdTYCKAsgACAHOwEGIAEgAEEIaiIANgIEIBkgAykAACIlQoCA7PzLm++NT34gJoinQQJ0aiAGNgIAIBUgJULjyJW9y5vvjU9+ICeIp0ECdGogBjYCACAEIQggBSEHIAlBBGogA2oiAyEGIAMgF00NAQwCCwsgBCEHIAUhBCADIQYLIAYgF0kNAAsMAQsCQCASRQ0AIAhBHkkEQEEEIAh0IQZBACEAA0AgAEFAayIAIAZJDQALCyAFQR1LDQBBBCAFdCEGQQAhAANAIABBQGsiACAGSQ0ACwsgAyAJIApGaiIGIBdPDQAgDSATaiEgIAxBIGshDSAMQQFrIRogDEEDayESIA9BAWshHUE4IAVrrSEqQTggCGutIShBwAAgEWutISZBwAAgC2utIScDQCAVIAYpAAAiJULjyJW9y5vvjU9+IikgJ4inQQJ0aiIAKAIAIQogGSAlQoCAgNjLm++NT34iKyAmiKdBAnRqIhEoAgAhCSAfICkgKIinIhtBBnZB/P//H3FqKAIAIQUgIiArICqIpyIhQQZ2Qfz//x9xaigCACEIIBEgBiAOayIRNgIAIAAgETYCAAJAAkACQAJAIB0gEUEBaiILIARrIgBrQQNJDQAgEyAAIBZraiAAIA5qIAAgD0kiABsiHigAACAGKAABRw0AIAZBBWogHkEEaiAMIBQgDCAAGyAQEA8hCiAGQQFqIgUgA2shCSABKAIMIQACQAJAIAUgDU0EQCADKQAAISUgACADKQAINwAIIAAgJTcAACABKAIMIQAgCUEQTQRAIAEgACAJajYCDCABKAIEIQMMAwsgAykAECElIAAgAykAGDcAGCAAICU3ABAgCUEhSA0BIAAgCWohBiADQRBqIQMgAEEgaiEAA0AgAykAECElIAAgAykAGDcACCAAICU3AAAgAykAICElIAAgAykAKDcAGCAAICU3ABAgA0EgaiEDIABBIGoiACAGSQ0ACwwBCyADIA1NBEAgAykAACElIAAgAykACDcACCAAICU3AAAgACANIANrIgtqIQggC0ERTgRAIABBEGohAANAIAMpABAhJSAAIAMpABg3AAggACAlNwAAIAMpACAhJSAAIAMpACg3ABggACAlNwAQIANBIGohAyAAQSBqIgAgCEkNAAsLIA0hAyAIIQALIAMgBU8NACAGIANrQQAhBiAFIANrQQdxIgsEQANAIAAgAy0AADoAACAAQQFqIQAgA0EBaiEDIAZBAWoiBiALRw0ACwtBB0kNAANAIAAgAy0AADoAACAAIAMtAAE6AAEgACADLQACOgACIAAgAy0AAzoA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dGogBjYCACAVICVC48iVvcub741PfiAniKdBAnRqIAY2AgAgBCEIIAUhByAJQQRqIANqIgMhBiADIBdNDQEMAgsLIAQhByAFIQQgAyEGCyAGIBdJDQALCyACIAc2AgQgAiAENgIAIAwgA2sLVwEBfyMAQRBrIgIkACABIAJBCGpBsicQDiIBKAIAIAEoAgQQECEBIAAoAgggARAXIAEgAkH0IxAOIgEoAgAgASgCBBAQIQEgACgCDCABEBcgAkEQaiQACz0BAX8jAEEQayICJAAgAEEIaiABIAJBCGpB+yIQDiIAKAIAIAAoAgQQECIAEC8gAEHdABAkGiACQRBqJAALNwEBfyMAQRBrIgIkACABIAJBCGpB8yUQDiIBKAIAIAEoAgQQECEBIAAoAgggARAXIAJBEGokAAu5AgECfyMAQTBrIgMkACABQSgQIiAAQRBqIAEQLyABQSkQISAAKAIIIgIEQCACIAEgAigCACgCFBEAAAsgACgCICICQQFxBEAgASADQShqQbIKEA4iAigCACACKAIEEBAaIAAoAiAhAgsgAkECcQR/IAEgA0EgakHSFRAOIgIoAgAgAigCBBAQGiAAKAIgBSACC0EEcQRAIAEgA0EYakHBCxAOIgIoAgAgAigCBBAQGgsCQCABAn8CQAJAIAAtACRBAWsOAgABAwsgA0EUaiECIANBEGpBvCUQDgwBCyADQQxqIQIgA0EIakG4JRAOCygCACACKAIAEBAaCyAAKAIYIgIEQCACIAEQFwsgACgCHARAIAEgA0H5JRAOIgEoAgAgASgCBBAQIQEgACgCHCABEBcLIANBMGokAAtdAQJ/IwBBEGsiAyQAAkAgACgCCCICRQ0AIAIgASACKAIAKAIQEQAAIAAoAgggARBcDQAgASADQQhqQc4pEA4iAigCACACKAIEEBAaCyAAKAIMIAEQFyADQRBqJAALVQEBfyMAQRBrIgIkACAAKAIIIAEQFyABIAJBCGpBkCUQDiIBKAIAIAEoAgQQECAAKAIMIAAoAhAQECACQY4lEA4iACgCACAAKAIEEBAaIAJBEGokAAsbACABIAAoAgggACgCDBAQIQEgACgCECABEBcLRQEBfyMAQRBrIgIkACABIAJBCGpB/goQDiIBKAIAIAEoAgQQECIBQSgQIiAAKAIIIAFBE0EAEC0gAUEpECEg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QRBrIgIkACABIAJBCGpBiAgQDiIBKAIAIAEoAgQQECEBIAAoAggiACABIAAoAgAoAhARAAAgAkEQaiQACzcBAX8jAEEQayICJAAgASACQQhqQYsjEA4iASgCACABKAIEEBAhASAAKAIIIAEQFyACQRBqJAALZAECfyMAQRBrIgIkACAALQAMRQRAIAEgAkEIakGCKRAOIgMoAgAgAygCBBAQGgsgASACQZQLEA4iASgCACABKAIEEBAiAUEoECIgACgCCCABQRNBABAtIAFBKRAhIAJBEGokAAs0ACABIAAoAgggACgCDBAQIgFBKBAiIAAoAhAgARAXIAFBKRAhIAEgACgCFCAAKAIYEBAaC00BAX8jAEEQayICJAAgASACQQhqQawaEA4iASgCACABKAIEEBAhASAAKAIIIAEQFyABIAJBqhoQDiIAKAIAIAAoAgQQEBogAkEQaiQAC10BAX8jAEEQayICJAAgACgCCCABEBcgASACQQhqQbEaEA4iASgCACABKAIEEBAhASAAKAIMIgAEQCAAIAEQFwsgASACQaoaEA4iACgCACAAKAIEEBAaIAJBEGokAAuoAQEDfyMAQSBrIgMkACABKAIAIAEoAgQiBEUEQBAxAAsgBGpBAWssAABB3QBHBEAgASADQRhqQc4pEA4iAigCACACKAIEEBAaCyABIANBEGpBuBoQDiIBKAIAIAEoAgQQECEBIAAoAgwiAgRAIAIgARAXCyABIANBCGpBqhoQDiIBKAIAIAEoAgQQECEBIAAoAggiACABIAAoAgAoAhQRAAAgA0EgaiQACxYAIAAoAggiACABIAAoAgAoAhARAAALXQECfyMAQRBrIgIkAAJAIAAoAgwgARA+RQRAIAAoAgwgARBDRQ0BCyABIAJBCGpBjiUQDiIDKAIAIAMoAgQQEBoLIAAoAgwiACABIAAoAgAoAhQRAAAgAkEQaiQAC5sBAQJ/IwBBIGsiAiQAIAAoAgwiAyABIAMoAgAoAhARAAAgAQJ/AkAgACgCDCABED5FBEAgACgCDCABEENFDQELIAJBHGohAyACQRhqQZElEA4MAQsgAkEUaiEDIAJBEGpBzikQDgsoAgAgAygCABAQIQEgACgCCCABEBcgASACQQhqQbkkEA4iACgCACAAKAIEEBAaIAJBIGokAAsfACABIAAoAgggACgCDBAQQSAQJCEBIAAoAhAgARAXC1MBAn8jAEEQayICJAAgAC0AEEUEQCACQQhqIABBEGpBARA7IQMGQCAAKAIMIgAgASAAKAIAKAIUEQAAGSACJAAgAxAlCQALIAMQJQsgAkEQaiQAC1MBAn8jAEEQayICJAAgAC0AEEUEQCACQQhqIABBEGpBARA7IQMGQCAAKAIMIgAgASAAKAIAKAIQEQAAGSACJAAgAxAlCQALIAMQJQsgAkEQaiQAC1cBAn8jAEEQayICJAAgAC0AEEUEQCACQQhqIABBEGpBARA7IQMGQCAAKAIMIgAgASAAKAIAKAIMEQEAIQAZIAIkACADECUJAAsgAxAlCyACQRBqJAAgAAtMAQN/IwBBEGsiAiQAIAAtABBFBEAgAkEIaiAAQRBqQQEQOyEEBkAgACgCDCABEEMhAxkgAiQAIAQQJQkACyAEECULIAJBEGokACADC0wBA38jAEEQayICJAAgAC0AEEUEQCACQQhqIABBEGpBARA7IQQGQCAAKAIMIAEQPiEDGSACJAAgBBAlCQALIAQQJQsgAkEQaiQAIAMLTAEDfyMAQRBrIgIkACAALQAQRQRAIAJBCGogAEEQakEBEDshBAZAIAAoAgwgARBcIQMZIAIkACAEECUJAAsgBBAlCyACQRBqJAAgAwuUAQECfyMAQRBrIgMkACAAKAIMQQRPBEAgAUEoECIgASAAKAIIIAAoAgwQEEEpECELAkAgACgCECICLQAAQe4ARgRAIAEQpAIgA0EIaiAAKAIQQQFqIAAoAhRBAWsQKikDABAuGgwBCyABIAIgACgCFBAQGgsgACgCDCICQQNNBEAgASAAKAIIIAIQEBoLIANBEGokAAs2AQF/IwBBEGsiAiQAIAEgAkEIakGuFUHDFSAALQAHGxAOIgAoAgAgACgCBBAQGiACQRBqJAAL2QEBBX8jAEEwayICJAAgACgCDEEITwRAIAAoAgghBSACQSxqIQNBACEAA0AgAEEIRkUEQCADQVBBqX8gACAFaiIELAABIgZBMGtBCkkbIAZqQQlBACAELAAAIgRBMGtBCk8bIARqQQR0ajoAACADQQFqIQMgAEECaiEADAELCyACQSxqIAMQ1QEgAkIANwMgIAJCADcDGCACQgA3AxAgAiACKgIsuzkDACABIAJBCGogAkEQaiIAIABBGEGqFSACEO8BECoiACgCACAAKAIEEBAaCyACQTBqJAAL3wEBBX8jAEFAaiICJAAgACgCDEEQTwRAIAAoAgghBSACQThqIQNBACEAA0AgAEEQRkUEQCADQVBBqX8gACAFaiIELAABIgZBMGtBCkkbIAZqQQlBACAELAAAIgRBMGtBCk8bIARqQQR0ajoAACADQQFqIQMgAEECaiEADAELCyACQThqIAMQ1QEgAkIANwMoIAJCADcDICACQgA3AxggAkIANwMQIAIgAisDODkDACABIAJBCGogAkEQaiIAIABBIEHsGSACEO8BECoiACgCACAAKAIEEBAaCyACQUBrJAAL2gEBBX8jAEHgAGsiAiQAIAAoAgxBIE8EQCAAKAIIIQUgAkHQAGohA0EAIQADQCAAQSBGRQRAIANBUEGpfyAAIAVqIgQsAAEiBkEwa0EKSRsgBmpBCUEAIAQsAAAiBEEwa0EKTxsgBGpBBHRqOgAAIANBAWohAyAAQQJqIQAMAQsLIAJB0ABqIAMQ1QEgAkEgaiIAQQBBKhAYGiACIAIpA1A3AwAgAiACKQNYNwMIIAEgAkEYaiAAIABBKkHwGiACEO8BECoiACgCACAAKAIEEBAaCyACQeAAaiQAC00BAX8jAEEQayICJAAgASACQQhqQfIiEA4iASgCACABKAIEEBAhASAAKAIIIAEQFyABIAJBySUQDiIAKAIAIAAoAgQQEBogAkEQaiQAC1sBAX8jAEEQayICJAAgASACQQhqQakaEA4iASgCACABKAIEEBAhASAAKAIIIgAtAARBNEYEQCAAIAEQrgILIAEgAkGKCBAOIgAoAgAgACgCBBAQGiACQRBqJAALaQEBfyMAQRBrIgIkACABQSgQIiAAKAIIIAEQFyABQSkQIQJAIAAoAgwtAABB7gBGBEAgARCkAiACQQhqIAAoAgxBAWogACgCEEEBaxAqKQMAEC4aDAELIAEgACkCDBAuGgsgAkEQaiQACzUBAX8gACgCDCABEFsgASgCDCICIAAoAgxJBEAgACgCCCACEFoiACABIAAoAgAoAhQRAAALCzUBAX8gACgCDCABEFsgASgCDCICIAAoAgxJBEAgACgCCCACEFoiACABIAAoAgAoAhARAAALCzgBAX8gACgCDCABEFsgASgCDCICIAAoAgxJBH8gACgCCCACEFoiACABIAAoAgAoAgwRAQAFIAALCy0BAn8gACgCDCABEFsgASgCDCIDIAAoAgxJBH8gACgCCCADEFogARBDBSACCwstAQJ/IAAoAgwgARBbIAEoAgwiAyAAKAIMSQR/IAAoAgggAxBaIAEQPgUgAgsLLQECfyAAKAIMIAEQWyABKAIMIgMgACgCDEkEfyAAKAIIIAMQWiABEFwFIAILC3ABAn8jAEEgayICJAAgAkEYaiABQRRqQQAQRSEDBkAgAEEIaiABIAJBEGpB8yIQDiIAKAIAIAAoAgQQECIAEC8ZIAIkACADEDAJAAsgACACQQhqQaQhEA4iACgCACAAKAIEEBAaIAMQMCACQSBqJAALJAECfyAAKAIEIgAQTUEBaiIBECMiAgR/IAIgACABEBQFQQALCxQAIAAoAgggARAXIAAoAgwgARAXC3cBAn8jAEEQayIDJAACQCAAKAIIIgItAARBC0YEQCACKAIIEKcCDQELAkAgAiABED5FBEAgACgCCCABEENFDQELIAEgA0EIakGOJRAOIgIoAgAgAigCBBAQGgsgACgCCCIAIAEgACgCACgCFBEAAAsgA0EQaiQAC/MBAQJ/IwBBMGsiAiQAIAECfwJAIAAoAggiAy0ABEELRgRAIAMoAggQpwINAQsgAyABIAMoAgAoAhARAAAgACgCCCABED4EQCABIAJBKGpBzikQDiIDKAIAIAMoAgQQEBoLAkAgACgCCCABED5FBEAgACgCCCABEENFDQELIAEgAkEgakGRJRAOIgAoAgAgACgCBBAQGgsgAkEcaiEAIAJBGGpBxiQQDgwBCyACQQxqIQAgASACQRBqQeAiEA4iASgCACABKAIEEBAgAygCDCADKAIQEBAaIAJBCGpBpCEQDgsoAgAgACgCABAQGiACQTBqJAALpgEBAn8jAEEgayICJAAgAC0AEEUEQCACQRhqIABBEGpBARA7IQMGQAJAIAJBEGogACgCCCAAKAIMIAEQqAIgAigCFCIARQ0AAkAgACABED5FBEAgAigCFCABEENFDQELIAEgAkEIakGOJRAOIgAoAgAgACgCBBAQGgsgAigCFCIAIAEgACgCACgCFBEAAAsZIAIkACADECUJAAsgAxAlCyACQSBqJAAL8AEBAn8jAEEwayICJAAgAC0AEEUEQCACQShqIABBEGpBARA7IQMCQAJA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C0EBOgAAQQAhAQwBCyADKAKoBCABSwRAIAMgATYCqAQLIAMgATYCrAQLIAMgATYC+AVBACEBIAUNASADKAKsBCAJayIBIAMoAqQESQRAIAtBAToAAEEAIQEMAgsgAygCqAQgAUsEQCADIAE2AqgECyADIAE2AqwEDAELIAMgBjYCsAQgA0IANwL0BQsgA0EBNgLgBSADIAE2AvwFIANCADcDkARBRCECIARFDQBBACESIB0hFCAhISggBEEBRgRAIAMpA8gEQgF9IUwgAygCvAEhBCADKALcAUEAIQEgAygC2AEiBQRAIExC/wFWIExC/4EEVmogTEL+////D1ZqIQELIB1BEkkEQEG6fyECDAILQQBKQQJ0QSBBACAFQQBHIExBASAEdK1YcSIFG3IgAUEGdHIhBkEAIQIgLygCAEUEQCAhQajqvmk2AABBBCECCyACICFqIAY6AAAgAkEBciESIAVFBEAgEiAhaiAEQQN0QdAAazoAACACQQJyIRILAkACQAJAAkACQCABQQFrDgMBAgMACyAFRQ0DIBIgIWogTDwAACASQQFqIRIMAwsgEiAhaiBMp0GAAms7AAAgEkECaiESDAILIBIgIWogTD4AACASQQRqIRIMAQsgEiAhaiBMNwAAIBJBCHIhEgsgA0ECNgIAIBIgIWohKCAdIBJrIRRBAiEECyAPBEACQCADKALAEUEARyADKALYECIBIBpHciIGRQRAIAMoAuQQIQEgAygC6BAhBSADKALgECECDAELIAMgAygC5BAiBTYC6BAgAyADQdwQaiIEKAIAIgI2AuAQIAMgASACayIBNgLkECAEIBogAWs2AgAgASAFa0EHSw0AIAMgATYC6BAgASEFCyADIA8gGmoiBDYC2BAgBCACIAVqTSABIAJqIBpNckUEQCADIAQgAmsiAiABIAEgAkobNgLoEAsgBgRAIAMgATYC9BAgA0EANgLAEQsCQCADKAKMAkEBRw0AAkAgGiADKAKQBiIBRgRAIAMoApwGIQEgAygCoAYhBSADKAKYBiECDAELIAMgAygCnAYiBTYCoAYgAyADKAKUBiICNgKYBiADIAEgAmsiATYCnAYgAyAaIAFrNgKUBiABIAVrQQdLDQAgAyABNgKgBiABIQULIAMgBDYCkAYgBCACIAVqTSABIAJqIBpNcg0AIAMgBCACayICIAEgASACShs2AqAGCyADKAK8ASEBIAMoAsQEIRAgAygC3AEEQCA1IBogDxCSAQsgA0HkBWohHkEBIAF0ITEgA0GoFGohGyADQYAVaiE2IAhBnAFqITwgCEEMaiE9IANB3BBqITIgA0HUFGohHCAoIQ4DQCAaIQwgFEEGSQRAQbp/IQIMAwsCfyAMIA8gECI3IA8gEEkbIhBqIhogMigCACIBayIEQYCAgIB6TQRAIAMoAvAQDAELIAMgAygCoAQ2AqgEIAMgAygC7BBBAWo2AuwQIDIgDEEBIAMoAsABIAMoAtQBQQVLa3QiAkEBIAMoArwBdCIEIAIgBEsbIAwgAWsiASACQQFrcSIEakECIAIgAkECTRtBACAEQQJJG2oiAms2AgAgAyABIAJrIgIgAygC4BBqNgLgECADQQIgAygC6BAiASACayABIAJBAmoiBEkbNgLoECADQQIgAygC5BAiASACayABIARJGzYC5BAgAygCtBFBASADKALEAXQgAhDIASADKALUASEBAkACQCADKALEEQ0AIAFBAUYNASABQQNrQQJLDQAgAygCvAJBAUYNAQtBASADKALAAXQhBiADKAK8ESELIAFBBkYEQEEAIQVBACEHIAZBEEgNASAGQRBtIQkDQCALIAVBAnRqIgFBASABKAIAIgYgAmtBACAEIAZNGyAGQQFGGzYCACABQQEgASgCBCIGIAJrQQAgBCAGTRsgBkEBRhs2AgQgAUEBIAEoAggiBiACa0EAIAQgBk0bIAZBAUYbNgIIIAFBASABKAIMIgYgAmtBACAEIAZNGyAGQQFGGzYCDCABQQEgASgCECIGIAJrQQAgBCAGTRsgBkEBRhs2AhAgAUEBIAEoAhQiBiACa0EAIAQgBk0bIAZBAUYbNgIUIAFBASABKAIYIgYgAmtBACAEIAZNGyAGQQFGGzYCGCABQQEgASgCHCIGIAJrQQAgBCAGTRsgBkEBRhs2AhwgAUEBIAEoAiAiBiACa0EAIAQgBk0bIAZBAUYbNgIgIAFBASABKAIkIgYgAmtBACAEIAZNGyAGQQFGGzYCJCABQQEgASgCKCIGIAJrQQAgBCAGTRsgBkEBRhs2AiggAUEBIAEoAiwiBiACa0EAIAQgBk0bIAZBAUYbNgIsIAFBASABKAIwIgYgAmtBACAEIAZNGyAGQQFGGzYCMCABQQEgASgCNCIGIAJrQQAgBCAGTRsgBkEBRhs2AjQgAUEBIAEoAjgiBiACa0EAIAQgBk0bIAZBAUYbNgI4IAFBASABKAI8IgEgAmtBACABIARPGyABQQFGGzYCPCAFQRBqIQUgB0EBaiIHIAlHDQALDAELIAsgBiACEMgBCyADKAL4ECIBBEAgOygCAEEBIAF0IAIQyAELIAMoAqQEIgEgAygCqARLBEAgAyABNgKoBAsgA0EANgKMEiADQQA2AvAQIAMgAygC9BAiASACayICQQAgASACTxs2AvQQIBogMigCACIBayEEQQALIQICQCACIDFqIARPBEAgAiADKALkEEYNAQtBACECIANBADYCjBIgA0EANgLwEAsCQCAMIAFrIgQgAiAxak0EQCADKALoECEBDAELIAMoAugQIgEgBCAxayICSQRAIAMgAjYC6BAgAiEBCyABIAMoAuQQSwRAIAMgATYC5BALIANBADYCjBIgA0EANgLwEAsgASADKAL0EEsEQCADIAE2AvQQCyAPIDdNIRkCQAJAAkACQCADKALsAQRAIAMgDCAQEMsBIgJBiH9LDQcgAg0CAkAgAygC3AUNACADKALoBSADKALkBWtBH0sNACADKALwBSADKALsBWtBCUsNACAMIBAQygFFDQAgDiAMLQAAOgADIA4gEEENdjoAAiAOIBBBA3QgGXJBAnI7AABBBCECDAQLAkACQCAeIAMoAtAQIAMoAtQQIC8gCEEIaiADKAK4EhCiAiICQYh/Sw0AIAgoAghBAkYhJyAOIBRqIS0gAygC1BAiFkGQDmohPiAWQbwZaiE/IBZBjAhqIUAgFkEEaiEzIBZBjA5qIUEgFkG4GWohQiAWQYgIaiFDIAMoAugFIjhBCGshRCADKALsASE5IAMoAvwFIR8gAygC+AUhIyADKAL0BSEkIAMoAvAFIUUgAygC7AUhIiADKAK4EiETIAMoAtAQITRBASEsIBZBighqIUYgFkG6GWohRyAWQY4OaiFIIA4hCyAMISkgAygC5AUiKiEEAkADQEEAIQlBgIABQcgBQQAgJxsiAWshSUGACCABayFKIAtBA2ohFSBFICJrITogLSALa0EDayEwQQAhCgNAAn8gKiA4RgRAQQEhICA6DAELIAQgCkEDdGoiAiBERiEgIAIvAQQhASAKQQFqIQogOiADKAKM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KAK86QEhBwwQCyADKALk6wEiBEUEQCAcKAIADAILIAMoApDrAQ0ZIAMoAtzrASAEIAlBCGogCUEUahDOAiIEDRQMFgsgA0EBNgK06wEgA0IANwPQ6wEgA0IANwLk6wEgA0EANgLY6wEgA0EANgLA6wEgICAJKAIQNgIIICAgCSkCCDcCAEEACyADKALs6gEQmwEhBgJAIAMoAqzrAUUNACADKAKo6wEiBEUNACADKAKY6wFFDQAgCSADKALc6QEiBTYCMCAEKAIEQQFrIhUgCUEwakEEEOUBp3EhByAEKAIAIQQDQCAEIAdBAnRqKAIAIhBFDQEgBSAQKAKo1QEiI0cEQCAHIBVxQQFqIQcgIw0BCwsCQCADKAKU6wEiBEUNACAEKAK41QEhByAEKAK01QEhBQJAAkACQCAEKAIAIhUEQCAFRQ0CIAcgFSAFEQAADAELIAVFDQILIAcgBCAFEQAADAILIBUQFQsgBBAVCyADQQA2ApTrASADQX82AqTrASADIBA2ApjrASADIAMoAtzpATYCnOsBCyAGQYl/TwRAIApBBEkEQCAGIQQMGwsgBiEEIBIoAAAiB0HblcEWaiIOQQJLDRoCfwJAAkACQCADKAKk6wFBAWoOAwIAAQALIAMoApTrASIBBEACQCABKAK41QEhBCABKAK01QEhAgJAAkAgASgCACIGBEAgAkUNASAEIAYgAhEAACAEIAEgAhEAAAwDCyACRQ0BIAQgASACEQAADAILIAYQFQsgARAVCwtBACEFIANBADYCpOsBIANCADcClOsBQQAMAgsgA0EANgKk6wELIAMoApjrASIBRQRAQQAhBUEADAELIAEoAgQhBSABKAIICyEGQUAhBCADKAKQ6wENGgJAIAMoAuDrASIIIAdB4JXBFmoiB0YiAg0AIAMoAtzrASEBAkACQAJAIAhBBWsOAwABAgMLIAEEQCABKAIAEBUgASgCMBAVIAEoAjwQFSABEBULDAILIAEEQCABKAIAEBUgASgCHBAVIAEoAigQFSABEBULDAELIAEEQCABKAIAIggEQCAIKALEqQEgCCAIKALAqQERAAALIAEoAiQiCARAIAEoAmQgCCABKAJgEQAACyABKAIwIggEQCABKAJkIAggASgCYBEAAAsgASgCZCABIAEoAmARAAALCwJAAkACQAJAAkACQCAODgMB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AEcNACAFQQJqIQUgCEECaiEICyAEIAhLBH8gCCAFLQAAIAgtAABGagUgCAsgAmsLIBZqIgJJBEAgACALQQN0aiIFIAI2AgQgBSAYIA1rNgIAIAIgDWogESACIBEgDWtLGyERIAtBAWohCyACQYAgSw0CIAIiByADaiAERg0CCyAbIA0gEnFBA3RqIQUCQAJAIAIgHGotAAAgAiADai0AAEkEQCAQIA02AgAgDSAPSw0BIBdBDGohEAwECyAGIA02AgAgDSAPSwRAIAUhBiACIQwMAgsgF0EMaiEGDAMLIAIhCSAFQQRqIhAhBQsgCkEBayIKRQ0BIAUoAgAiDSAOTw0ACwsgBkEANgIAIBBBADYCACABIBFBCGs2AhwLIBdBEGokACALC3YBAn8jAEEgayICJAAGQAZAIAJBGGohAyACQQxqIAFBBGogASgCABDtAiEBGAEgAyABIAARAAAZIAIkACABLAALQQBIBEAgASgCABAVCwkACyACKAIcIAJBADYCHCABLAALQQBIBEAgASgCABAVCyACQSBqJAALxxUBGH8jAEEQayIcJAACQCABKAIEIg8gASgCHCINaiADSw0AAn8gAyAPayIJIA1NBEAgCQwBCwNAIAEgDSAPaiAEIAlBA0EBED0gDWoiDSAJSQ0ACyADIAEoAgQiD2sLIQwgASAJNgIcIAEoAhAiCSAMQQEgASgCuAF0IghrIAkgDCAJayAISxsgASgCGBshDiABKAK8ASEdIAEoAlwgAygAACIQQbHz3fF5bEEgIAEoAsABa3ZBAnRqIh4oAgAhDUH/HyABKALMASIJIAlB/x9PGyETIAdBAWshCSAPIAEoAgwiEmohGSABKAIIIhYgEmohGiABKAJkIR8gASgCxAEhGwJAIAZBfEsEQAwBCyAMIBJrIRQgBEEBayEXIARBA2shESADQQNqIQggDCAOayEYIAwCfyAGQQNGBEAgBSgCAEEBawwBCyAFIAZBAnRqKAIACyIHayEKAkACfwJAAkAgFCAHQQFrIhVLBEAgCiAOSQ0EIAMgB2soAAAgEHNB////B3ENBCAIIAdrIQcgCCARTwRAIAghCwwDCyAIKAAAIgsgBygAACIKRw0BIAghCwNAIAdBBGohByALQQRqIgsgEU8NAyALKAAAIgogBygAACIQRg0ACyALIAogEHNoQQN2aiAI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dWludDY0X3QAY2hhcjMyX3QAVXQAVHQAU3QAZGVjb21wcmVzcwBVbnN1cHBvcnRlZCBjb21iaW5hdGlvbiBvZiBwYXJhbWV0ZXJzAHRoaXMAZ3MAcmVxdWlyZXMAQ2Fubm90IGNyZWF0ZSBEaWN0aW9uYXJ5IGZyb20gcHJvdmlkZWQgc2FtcGxlcwBUcwBudWxscHRyAHNyAFVua25vd24gZnJhbWUgZGVzY3JpcHRvcgBvcGVyYXRvcgBhbGxvY2F0b3IAenN0ZCBjb2RlYyBlcnJvcjogY29udGVudCBzaXplIGVycm9yAFVuc3VwcG9ydGVkIGZyYW1lIHBhcmFtZXRlcgBVbnN1cHBvcnRlZCBwYXJhbWV0ZXIAenN0ZCBjb2RlYyBlcnJvcjogY2Fubm90IGFsbG9jYXRlIG91dHB1dCBidWZmZXIAenN0ZCBjb2RlYyBlcnJvcjogY291bGQgbm90IGV4cGFuZCBvdXRwdXQgYnVmZmVyAE9wZXJhdGlvbiBvbiBOVUxMIGRlc3RpbmF0aW9uIGJ1ZmZlcgB1bnNpZ25lZCBjaGFyAHJxAHNwAGZwAFRwACBhdXRvAG9iamNwcm90bwBzbwBEbwBzdGQ6OmV4Y2VwdGlvbgBIZWFkZXIgb2YgTGl0ZXJhbHMnIGJsb2NrIGRvZXNuJ3QgcmVzcGVjdCBmb3JtYXQgc3BlY2lmaWNhdGlvbgB1bmlvbgBkbgBuYW4AVG4ARG4AUmVzdG9yZWQgZGF0YSBkb2Vzbid0IG1hdGNoIGNoZWNrc3VtAGVudW0AYmFzaWNfaW9zdHJlYW0AYmFzaWNfb3N0cmVhbQBiYXNpY19pc3RyZWFtAHVsAHRsAGJvb2wAT3BlcmF0aW9uIG1hZGUgbm8gcHJvZ3Jlc3Mgb3ZlciBtdWx0aXBsZSBjYWxscywgZHVlIHRvIG91dHB1dCBidWZmZXIgYmVpbmcgZnVsbABEZXN0aW5hdGlvbiBidWZmZXIgaXMgdG9vIHNtYWxsAFNwZWNpZmllZCBtYXhTeW1ib2xWYWx1ZSBpcyB0b28gc21hbGwAaWwAc3RyaW5nIGxpdGVyYWwAVWwAeXB0bmsAVGsAcGkAbGkAd29ya1NwYWNlIGJ1ZmZlciBpcyBub3QgbGFyZ2UgZW5vdWdoAERpY3Rpb25hcnkgbWlzbWF0Y2gARGVzdGluYXRpb24gYnVmZmVyIGlzIHdyb25nAFNvdXJjZSBidWZmZXIgaXMgd3JvbmcAdW5zaWduZWQgbG9uZyBsb25nAHVuc2lnbmVkIGxvbmcAc3RkOjp3c3RyaW5nAGJhc2ljX3N0cmluZwBzdGQ6OnN0cmluZwBzdGQ6OnUxNnN0cmluZwBzdGQ6OnUzMnN0cmluZwBBbiBJL08gZXJyb3Igb2NjdXJyZWQgd2hlbiByZWFkaW5nL3NlZWtpbmcARnJhbWUgcmVxdWlyZXMgdG9vIG11Y2ggbWVtb3J5IGZvciBkZWNvZGluZwBfX3V1aWRvZgBpbmYAaGFsZgAlYWYAdHJ1ZQBvcGVyYXRvciBkZWxldGUAZmFsc2UAZGVjbHR5cGUAIHZvbGF0aWxlAGxvbmcgZG91YmxlAF9ibG9ja19pbnZva2UARnJhbWUgaW5kZXggaXMgdG9vIGxhcmdlAFVuc3VwcG9ydGVkIG1heCBTeW1ib2wgVmFsdWUgOiB0b28gbGFyZ2UAT3BlcmF0aW9uIG5vdCBhdXRob3JpemVkIGF0IGN1cnJlbnQgcHJvY2Vzc2luZyBzdGFnZQBCbG9jay1sZXZlbCBleHRlcm5hbCBzZXF1ZW5jZSBwcm9kdWNlciByZXR1cm5lZCBhbiBlcnJvciBjb2RlAFVuc3BlY2lmaWVkIGVycm9yIGNvZGUAVGUAc3RkAFBhcmFtZXRlciBpcyBvdXQgb2YgYm91bmQAdm9pZABFeHRlcm5hbCBzZXF1ZW5jZXMgYXJlIG5vdCB2YWxpZAB0YWJsZUxvZyByZXF1aXJlcyB0b28gbXVjaCBtZW1vcnkgOiB1bnN1cHBvcnRlZABWZXJzaW9uIG5vdCBzdXBwb3J0ZWQARGljdGlvbmFyeSBpcyBjb3JydXB0ZWQATm8gZXJyb3IgZGV0ZWN0ZWQARGF0YSBjb3JydXB0aW9uIGRldGVjdGVkAHBsZWRnZWQgYnVmZmVyIHN0YWJpbGl0eSBjb25kaXRpb24gaXMgbm90IHJlc3BlY3RlZAAndW5uYW1lZABzdGQ6OmJhZF9hbGxvYwBtYwBVYgAnbGFtYmRhACVhAGJhc2ljXwBvcGVyYXRvcl4Ab3BlcmF0b3IgbmV3W10Ab3BlcmF0b3JbXQBvcGVyYXRvciBkZWxldGVbXQBwaXhlbCB2ZWN0b3JbAHNaAF9fX19aAGZwVAAkVFQAJFQAclEAc1AARE8Ac3JOAF9HTE9CQUxfX04ATkFOACROAGZMACVMYUwAVWE5ZW5hYmxlX2lmSQBJTkYAUkUAT0UAYjFFAGIwRQBEQwBvcGVyYXRvcj8AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8c2hvcnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIHNob3J0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGludD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8ZmxvYXQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVpbnQ4X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDhfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDE2X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDE2X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVpbnQ2NF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQ2NF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50MzJfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50MzJfdD4Ab3BlcmF0b3I+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGNoYXI+ADxjaGFyLCBzdGQ6OmNoYXJfdHJhaXRzPGNoYXI+ACwgc3RkOjphbGxvY2F0b3I8Y2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgY2hhcj4Ac3RkOjpiYXNpY19zdHJpbmc8dW5zaWduZWQgY2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8c2lnbmVkIGNoYXI+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGxvbmc+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGxvbmc+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGRvdWJsZT4Ab3BlcmF0b3I+PgBvcGVyYXRvcjw9PgBvcGVyYXRvci0+AG9wZXJhdG9yfD0Ab3BlcmF0b3I9AG9wZXJhdG9yXj0Ab3BlcmF0b3I+PQBvcGVyYXRvcj4+PQBvcGVyYXRvcj09AG9wZXJhdG9yPD0Ab3BlcmF0b3I8PD0Ab3BlcmF0b3IvPQBvcGVyYXRvci09AG9wZXJhdG9yKz0Ab3BlcmF0b3IqPQBvcGVyYXRvciY9AG9wZXJhdG9yJT0Ab3BlcmF0b3IhPQBvcGVyYXRvcjwAdGVtcGxhdGU8AGlkPABvcGVyYXRvcjw8AC48ACI8AFthYmk6ACBbZW5hYmxlX2lmOgBzdGQ6OgB1bnNpZ25lZCBfX2ludDEyOABfX2Zsb2F0MTI4AGRlY2ltYWwxMjgAZGVjaW1hbDY0AGRlY2ltYWwzMgAwAG9wZXJhdG9yLwBvcGVyYXRvci4Ac2l6ZW9mLi4uAG9wZXJhdG9yLQAtaW4tAG9wZXJhdG9yLS0Ab3BlcmF0b3IsAG9wZXJhdG9yKwBvcGVyYXRvcisrAG9wZXJhdG9yKgBvcGVyYXRvci0+KgA6OioAb3BlcmF0b3IuKgAgZGVjbHR5cGUoYXV0bykAKG51bGwpAChhbm9ueW1vdXMgbmFtZXNwYWNlKQBFcnJvciAoZ2VuZXJpYykAb3BlcmF0b3IoKQAgKAAnYmxvY2stbGl0ZXJhbCcAb3BlcmF0b3ImAG9wZXJhdG9yJiYAICYmACAmAG9wZXJhdG9yJQA+IgBvcGVyYXRvciEAdGhyb3cgAG5vZXhjZXB0IAAgYXQgb2Zmc2V0IAB0aGlzIAAgcmVxdWlyZXMgAG9wZXJhdG9yIAByZWZlcmVuY2UgdGVtcG9yYXJ5IGZvciAAdGVtcGxhdGUgcGFyYW1ldGVyIG9iamVjdCBmb3IgAHR5cGVpbmZvIGZvciAAdGhyZWFkLWxvY2FsIHdyYXBwZXIgcm91dGluZSBmb3IgAHRocmVhZC1sb2NhbCBpbml0aWFsaXphdGlvbiByb3V0aW5lIGZvciAAdHlwZWluZm8gbmFtZSBmb3IgAGNvbnN0cnVjdGlvbiB2dGFibGUgZm9yIABndWFyZCB2YXJpYWJsZSBmb3IgAFZUVCBmb3IgAGNvdmFyaWFudCByZXR1cm4gdGh1bmsgdG8gAG5vbi12aXJ0dWFsIHRodW5rIHRvIABpbnZvY2F0aW9uIGZ1bmN0aW9uIGZvciBibG9jayBpbiAAYWxpZ25vZiAAc2l6ZW9mIAA+IHR5cGVuYW1lIABpbml0aWFsaXplciBmb3IgbW9kdWxlIAA6OmZyaWVuZCAAdHlwZWlkIAB1bnNpZ25lZCAAID8gACAtPiAAID0gAHpzdGQgY29kZWMgZXJyb3I6IAAgOiAAc2l6ZW9mLi4uIAAgLi4uIAAsIABvcGVyYXRvciIiIAB8FgAAOBUAAHBwcAB8FgAAOBUAAARJAABwcHBpAAAAALBIAAB2cABOU3QzX18yMTJiYXNpY19zdHJpbmdJY05TXzExY2hhcl90cmFpdHNJY0VFTlNfOWFsbG9jYXRvckljRUVFRQAAACRLAAD3FAAATlN0M19fMjEyYmFzaWNfc3RyaW5nSWhOU18xMWNoYXJfdHJhaXRzSWhFRU5TXzlhbGxvY2F0b3JJaEVFRUUAACRLAABAFQAATlN0M19fMjEyYmFzaWNfc3RyaW5nSXdOU18xMWNoYXJfdHJhaXRzSXdFRU5TXzlhbGxvY2F0b3JJd0VFRUUAACRLAACIFQAATlN0M19fMjEyYmFzaWNfc3RyaW5nSURzTlNfMTFjaGFyX3RyYWl0c0lEc0VFTlNfOWFsbG9jYXRvcklEc0VFRUUAAAAkSwAA0BUAAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0lEaU5TXzExY2hhcl90cmFpdHNJRGlFRU5TXzlhbGxvY2F0b3JJRGlFRUVFAAAAJEsAABwWAABOMTBlbXNjcmlwdGVuM3ZhbEUAACRLAABoFgAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJY0VFAAAkSwAAhBYAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWFFRQAAJEsAAKwWAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0loRUUAACRLAADUFgAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJc0VFAAAkSwAA/BYAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SXRFRQAAJEsAACQXAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lpRUUAACRLAABMFwAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJakVFAAAkSwAAdBcAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWxFRQAAJEsAAJwXAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0ltRUUAACRLAADEFwAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJeEVFAAAkSwAA7BcAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SXlFRQAAJEsAABQYAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lmRUUAACRLAAA8GAAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJZEVFAAAkSwAAZBgAAAAAAAAhAAAAIQAAACIAAAAjAAAAJAAAACUAAAAmAAAAJwAAACgAAAApAAAAKgAAACoAAAArAAAALAAAAC0AAAAuAAAALwAAADAAAAAxAAAAMQAAADIAAAAyAAAAMwAAADQAAAA1AAAANgAAADcAAAA4AAAAOQAAADkAQZQyCwk6AAAAOwAAADwAQbAyC90xPQAAAD4AAAA/AAAAQAAAAEEAAABCAAAAQwAAAEQAAABFAAAARgAAAEcAAABIAAAAAQAEAAMAAgACAAIAAgACAAIAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQD//////////////////wAAAAAAABMAAAAMAAAADQAAAAEAAAAGAAAAAQAAAAEAAAATAAAADQAAAA4AAAABAAAABwAAAAAAAAABAAAAFAAAAA8AAAAQAAAAAQAAAAYAAAAAAAAAAQAAABUAAAAQAAAAEQAAAAEAAAAFAAAAAAAAAAIAAAAVAAAAEgAAABIAAAABAAAABQAAAAAAAAACAAAAFQAAABIAAAATAAAAAwAAAAUAAAACAAAAAwAAABUAAAASAAAAEwAAAAMAAAAFAAAABAAAAAQAAAAVAAAAEwAAABQAAAAEAAAABQAAAAgAAAAEAAAAFQAAABMAAAAUAAAABAAAAAUAAAAQAAAABQAAABYAAAAUAAAAFQAAAAQAAAAFAAAAEAAAAAUAAAAWAAAAFQAAABYAAAAFAAAABQAAABAAAAAFAAAAFgAAABUAAAAWAAAABgAAAAUAAAAQAAAABQAAABYAAAAWAAAAFwAAAAYAAAAFAAAAIAAAAAUAAAAWAAAAFgAAABYAAAAEAAAABQAAACAAAAAGAAAAFgAAABYAAAAXAAAABQAAAAUAAAAgAAAABgAAABYAAAAXAAAAFwAAAAYAAAAFAAAAIAAAAAYAAAAWAAAAFgAAABYAAAAFAAAABQAAADAAAAAHAAAAFwAAABcAAAAWAAAABQAAAAQAAABAAAAABwAAABcAAAAXAAAAFgAAAAYAAAADAAAAQAAAAAgAAAAXAAAAGAAAABYAAAAHAAAAAwAAAAABAAAJAAAAGQAAABkAAAAXAAAABwAAAAMAAAAAAQAACQAAABoAAAAaAAAAGAAAAAcAAAADAAAAAAIAAAkAAAAbAAAAGwAAABkAAAAJAAAAAwAAAOcDAAAJAAAAEgAAAAwAAAANAAAAAQAAAAUAAAABAAAAAQAAABIAAAANAAAADgAAAAEAAAAGAAAAAAAAAAEAAAASAAAADgAAAA4AAAABAAAABQAAAAAAAAACAAAAEgAAABAAAAAQAAAAAQAAAAQAAAAAAAAAAgAAABIAAAAQAAAAEQAAAAMAAAAFAAAAAgAAAAMAAAASAAAAEQAAABIAAAAFAAAABQAAAAIAAAADAAAAEgAAABIAAAATAAAAAwAAAAUAAAAEAAAABAAAABIAAAASAAAAEwAAAAQAAAAEAAAABAAAAAQAAAASAAAAEgAAABMAAAAEAAAABAAAAAgAAAAFAAAAEgAAABIAAAATAAAABQAAAAQAAAAIAAAABQAAABIAAAASAAAAEwAAAAYAAAAEAAAACAAAAAUAAAASAAAAEgAAABMAAAAFAAAABAAAAAwAAAAGAAAAEgAAABMAAAATAAAABwAAAAQAAAAMAAAABgAAABIAAAASAAAAEwAAAAQAAAAEAAAAEAAAAAcAAAASAAAAEgAAABMAAAAEAAAAAwAAACAAAAAHAAAAEgAAABIAAAATAAAABgAAAAMAAACAAAAABwAAABIAAAATAAAAEwAAAAYAAAADAAAAgAAAAAgAAAASAAAAEwAAABMAAAAIAAAAAwAAAAABAAAIAAAAEgAAABMAAAATAAAABgAAAAMAAACAAAAACQAAABIAAAATAAAAEwAAAAgAAAADAAAAAAEAAAkAAAASAAAAEwAAABMAAAAKAAAAAwAAAAACAAAJAAAAEgAAABMAAAATAAAADAAAAAMAAAAAAgAACQAAABIAAAATAAAAEwAAAA0AAAADAAAA5wMAAAkAAAARAAAADAAAAAwAAAABAAAABQAAAAEAAAABAAAAEQAAAAwAAAANAAAAAQAAAAYAAAAAAAAAAQAAABEAAAANAAAADwAAAAEAAAAFAAAAAAAAAAEAAAARAAAADwAAABAAAAACAAAABQAAAAAAAAACAAAAEQAAABEAAAARAAAAAgAAAAQAAAAAAAAAAgAAABEAAAAQAAAAEQAAAAMAAAAEAAAAAgAAAAMAAAARAAAAEAAAABEAAAADAAAABAAAAAQAAAAEAAAAEQAAABAAAAARAAAAAwAAAAQAAAAIAAAABQAAABEAAAAQAAAAEQAAAAQAAAAEAAAACAAAAAUAAAARAAAAEAAAABEAAAAFAAAABAAAAAgAAAAFAAAAEQAAABAAAAARAAAABgAAAAQAAAAIAAAABQAAABEAAAARAAAAEQAAAAUAAAAEAAAACAAAAAYAAAARAAAAEgAAABEAAAAHAAAABAAAAAwAAAAGAAAAEQAAABIAAAARAAAAAwAAAAQAAAAMAAAABwAAABEAAAASAAAAEQAAAAQAAAADAAAAIAAAAAcAAAARAAAAEgAAABEAAAAGAAAAAwAAAAABAAAHAAAAEQAAABIAAAARAAAABgAAAAMAAACAAAAACAAAABEAAAASAAAAEQAAAAgAAAADAAAAAAEAAAgAAAARAAAAEgAAABEAAAAKAAAAAwAAAAACAAAIAAAAEQAAABIAAAARAAAABQAAAAMAAAAAAQAACQAAABEAAAASAAAAEQAAAAcAAAADAAAAAAIAAAkAAAARAAAAEgAAABEAAAAJAAAAAwAAAAACAAAJAAAAEQAAABIAAAARAAAACwAAAAMAAADnAwAACQAAAA4AAAAMAAAADQAAAAEAAAAFAAAAAQAAAAEAAAAOAAAADgAAAA8AAAABAAAABQAAAAAAAAABAAAADgAAAA4AAAAPAAAAAQAAAAQAAAAAAAAAAQAAAA4AAAAOAAAADwAAAAIAAAAEAAAAAAAAAAIAAAAOAAAADgAAAA4AAAAEAAAABAAAAAIAAAADAAAADgAAAA4AAAAOAAAAAwAAAAQAAAAEAAAABAAAAA4AAAAOAAAADgAAAAQAAAAEAAAACAAAAAUAAAAOAAAADgAAAA4AAAAGAAAABAAAAAgAAAAFAAAADgAAAA4AAAAOAAAACAAAAAQAAAAIAAAABQAAAA4AAAAPAAAADgAAAAUAAAAEAAAACAAAAAYAAAAOAAAADwAAAA4AAAAJAAAABAAAAAgAAAAGAAAADgAAAA8AAAAOAAAAAwAAAAQAAAAMAAAABwAAAA4AAAAPAAAADgAAAAQAAAADAAAAGAAAAAcAAAAOAAAADwAAAA4AAAAFAAAAAwAAACAAAAAIAAAADgAAAA8AAAAPAAAABgAAAAMAAABAAAAACAAAAA4AAAAPAAAADwAAAAcAAAADAAAAAAEAAAgAAAAOAAAADwAAAA8AAAAFAAAAAwAAADAAAAAJAAAADgAAAA8AAAAPAAAABgAAAAMAAACAAAAACQAAAA4AAAAPAAAADwAAAAcAAAADAAAAAAEAAAkAAAAOAAAADwAAAA8AAAAIAAAAAwAAAAABAAAJAAAADgAAAA8AAAAPAAAACAAAAAMAAAAAAgAACQAAAA4AAAAPAAAADwAAAAkAAAADAAAAAAIAAAkAAAAOAAAADwAAAA8AAAAKAAAAAwAAAOcDAAAJAAAAAAAAAGs4BwANsgcAnPIHAHBkCABgrgoAsHELADCqDAAAAAAAAAgAAAAHAABqBgAAAAYAAK0FAABqBQAAMQUAAAAFAADUBAAArQQAAIoEAABqBAAATAQAADEEAAAXBAAAAAQAAOkDAADUAwAAwAMAAK0DAACbAwAAigMAAHkDAABqAwAAWwMAAEwDAAA+AwAAMQMAACQDAAAXAwAACwMAAAADAAD0AgAA6QIAAN4CAADUAgAAygIAAMACAAC2AgAArQIAAKQCAACbAgAAkgIAAIoCAACCAgAAeQIAAHICAABqAgAAYgIAAFsCAABTAgAATAIAAEUCAAA+AgAANwIAADECAAAqAgAAJAIAAB4CAAAXAgAAEQIAAAsCAAAFAgAAAAIAAPoBAAD0AQAA7wEAAOkBAADkAQAA3gEAANkBAADUAQAAzwEAAMoBAADFAQAAwAEAALsBAAC2AQAAsgEAAK0BAACoAQAApAEAAJ8BAACbAQAAlwEAAJIBAACOAQAAigEAAIYBAACCAQAAfgEAAHkBAAB1AQAAcgEAAG4BAABqAQAAZgEAAGIBAABeAQAAWwEAAFcBAABTAQAAUAEAAEwBAABJAQAARQEAAEIBAAA+AQAAOwEAADcBAAA0AQAAMQEAAC4BAAAqAQAAJwEAACQBAAAhAQAAHgEAABoBAAAXAQAAFAEAABEBAAAOAQAACwEAAAgBAAAFAQAAAgEAAAABAAD9AAAA+gAAAPcAAAD0AAAA8QAAAO8AAADsAAAA6QAAAOYAAADkAAAA4QAAAN4AAADcAAAA2QAAANcAAADUAAAA0QAAAM8AAADMAAAAygAAAMcAAADFAAAAwgAAAMAAAAC+AAAAuwAAALkAAAC2AAAAtAAAALIAAACvAAAArQAAAKsAAACoAAAApgAAAKQAAACiAAAAnwAAAJ0AAACbAAAAmQAAAJcAAACVAAAAkgAAAJAAAACOAAAAjAAAAIoAAACIAAAAhgAAAIQAAACCAAAAgAAAAH4AAAB7AAAAeQAAAHcAAAB1AAAAcwAAAHIAAABwAAAAbgAAAGwAAABqAAAAaAAAAGYAAABkAAAAYgAAAGAAAABeAAAAXQAAAFsAAABZAAAAVwAAAFUAAABTAAAAUgAAAFAAAABOAAAATAAAAEoAAABJAAAARwAAAEUAAABDAAAAQgAAAEAAAAA+AAAAPQAAADsAAAA5AAAANwAAADYAAAA0AAAAMgAAADEAAAAvAAAALgAAACwAAAAqAAAAKQAAACcAAAAlAAAAJAAAACIAAAAhAAAAHwAAAB4AAAAcAAAAGgAAABkAAAAXAAAAFgAAABQAAAATAAAAEQAAABAAAAAOAAAADQAAAAsAAAAKAAAACAAAAAcAAAAFAAAABAAAAAIAAAABAAAAAQABAAEAAQABAAEAAgACAAIAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEA/////////////wAAAAAAAAQAAwACAAIAAgACAAIAAgACAAIAAgACAAIAAQABAAEAAgACAAIAAgACAAIAAgACAAIAAwACAAEAAQABAAEAAQD//////////wAAAAAAAAAAAQAEAAMAAgACAAIAAgACAAIAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQD//////////////////wAAAAAAAFx3d18s97j1EsR6ayZfk4TMDHPKqa1Htt6xTxFLu2Ww0J86jH5OWDQFa+JqfOGXTgSmmbxD1wM6TwTEIiQEzc6eJSSFxXbedsrqrVv2KIWcKXUJ4gY3VoaJ2HWjX0cC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AAAAgAAAAAABAEGU/gALbQEAAAADAAAABwAAAA8AAAAfAAAAPwAAAH8AAAD/AAAA/wEAAP8DAAD/BwAA/w8AAP8fAAD/PwAA/38AAP//AAD//wEA//8DAP//BwD//w8A//8fAP//PwD//38A////AP///wH///8DAQAAAAEAQZD/AAs1AQAAAAIAAAADAAAABAAAAAcAAAAIAAAADwAAABAAAAAfAAAAIAAAAD8AAABAAAAAfwAAAIAAQdj/AAsNAQAAAAEAAAACAAAAAgBB8P8AC+kCAQAAAAEAAAACAAAAAgAAACYAAACCAAAAIQUAAEoAAABnCAAAJgAAAMABAACAAAAASQUAAEoAAAC+CAAAKQAAACwCAACAAAAASQUAAEoAAAC+CAAALwAAAMoCAACAAAAAigUAAEoAAACECQAANQAAAHMDAACAAAAAnQUAAEoAAACgCQAAPQAAAIEDAACAAAAA6wUAAEsAAAA+CgAARAAAAJ4DAACAAAAATQYAAEsAAACqCgAASwAAALMDAACAAAAAwQYAAE0AAAAfDQAATQAAAFMEAACAAAAAIwgAAFEAAACmDwAAVAAAAJkEAACAAAAASwkAAFcAAACxEgAAWAAAANoEAACAAAAAbwkAAF0AAAAjFAAAVAAAAEUFAACAAAAAVAoAAGoAAACMFAAAagAAAK8FAACAAAAAdgkAAHwAAABOEAAAfAAAANICAACAAAAAYwcAAJEAAACQBwAAkgAAAAEAAAAEAAAACABB5IIBC5YCAQAAAAIAAAAEAAAAAAAAAAIAAAAEAAAACAAAAAQAAwACAAIAAgACAAIAAgACAAIAAgACAAIAAQABAAEAAgACAAIAAgACAAIAAgACAAIAAwACAAEAAQABAAEAAQD//////////wAAAAAAAAAAAQABAAEAAQABAAEAAgACAAIAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEA/////////////wAAAAAAAAEABAADAAIAAgACAAIAAgACAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEA//////////////////8AQcCFAQtNAQAAAAEAAAABAAAAAQAAAAIAAAACAAAAAwAAAAMAAAAE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AGIAAABjAAAAZAAAAJ4AAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGUxNkZsb2F0TGl0ZXJhbEltcGxJZEVFAMxKAAC4VQAAbEsAAAAAAABgVgAAXQAAAF4AAABfAAAAYAAAAJ8AAABiAAAAYwAAAGQAAACgAAAATjEyX0dMT0JBTF9fTl8xMTZpdGFuaXVtX2RlbWFuZ2xlMTZGbG9hdExpdGVyYWxJbXBsSWVFRQDMSgAAKFYAAGxLAAAAAAAAzFYAAF0AAABeAAAAXwAAAGAAAAChAAAAYgAAAGMAAABkAAAAogAAAE4xMl9HTE9CQUxfX05fMTE2aXRhbml1bV9kZW1hbmdsZTEzU3RyaW5nTGl0ZXJhbEUAAADMSgAAmFYAAGxLAAB2AAAAAAAAADxXAABdAAAAXgAAAF8AAABgAAAAowAAAGIAAABjAAAAZAAAAKQAAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGUxNVVubmFtZWRUeXBlTmFtZUUAzEoAAAhXAABsSwAAAAAAALRXAABdAAAAXgAAAF8AAABgAAAApQAAAGIAAABjAAAAZAAAAKYAAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGUyNlN5bnRoZXRpY1RlbXBsYXRlUGFyYW1OYW1lRQAAzEoAAHRXAABsSwAAAAAAAChYAABdAAAAXgAAAF8AAABgAAAApwAAAKgAAABjAAAAZAAAAKkAAABOMTJfR0xPQkFMX19OXzExNml0YW5pdW1fZGVtYW5nbGUyMVR5cGVUZW1wbGF0ZVBhcmFtRGVjbEUAAADMSgAA7FcAAGxLAAAAAAAAqFgAAF0AAABeAAAAXwAAAGAAAACqAAAAqwAAAGMAAABkAAAArAAAAE4xMl9HTE9CQUxfX05fMTE2aXRhbml1bV9kZW1hbmdsZTMyQ29uc3RyYWluZWRUeXBlVGVtcGxhdGVQYXJhbURlY2xFAAAAAMxKAABgWAAAbEsAAAAAAAAgWQAAXQAAAF4AAABfAAAAYAAAAK0AAACuAAAAYwAAAGQAAACvAAAATjEyX0dMT0JBTF9fTl8xMTZpdGFuaXVtX2RlbWFuZ2xlMjROb25UeXBlVGVtcGxhdGVQYXJhbURlY2xFAAAAAMxKAADgWAAAbEsA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\");\n\n// src/zstd.ts\nvar DEFAULT_CLEVEL = 1;\nvar MAX_CLEVEL = 22;\nvar emscriptenModule;\nvar init = () => zstd_codec_default({ noInitialRun: true, wasmBinary: zstd_codec_default2 });\nvar Zstd = class Zstd2 {\n  static codecId = \"zstd\";\n  static DEFAULT_CLEVEL = DEFAULT_CLEVEL;\n  static MAX_CLEVEL = MAX_CLEVEL;\n  level;\n  constructor(level = DEFAULT_CLEVEL) {\n    if (!Number.isInteger(level)) {\n      throw Error(`Invalid acceleration \"${level}\". Must be a positive integer.`);\n    }\n    this.level = level;\n  }\n  static fromConfig({ level }) {\n    return new Zstd2(level);\n  }\n  async encode(data) {\n    if (!emscriptenModule) {\n      emscriptenModule = init();\n    }\n    let level = this.level;\n    if (level <= 0) {\n      level = DEFAULT_CLEVEL;\n    }\n    if (level > MAX_CLEVEL) {\n      level = MAX_CLEVEL;\n    }\n    const module = await emscriptenModule;\n    const view = module.compress(data, level);\n    const result = new Uint8Array(view);\n    module.free_result();\n    return result;\n  }\n  async decode(data, out) {\n    if (!emscriptenModule) {\n      emscriptenModule = init();\n    }\n    const module = await emscriptenModule;\n    try {\n      const view = module.decompress(data);\n      const result = new Uint8Array(view);\n      module.free_result();\n      if (out !== void 0) {\n        out.set(result);\n        return out;\n      }\n      return result;\n    } catch (err) {\n      throw new Error(module.getExceptionMessage(err).toString());\n    }\n  }\n};\nvar zstd_default = Zstd;\nexport {\n  zstd_default as default\n};\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","{\n  \"name\": \"@niivue/niivue\",\n  \"version\": \"0.58.0\",\n  \"description\": \"minimal webgl2 nifti image viewer\",\n  \"types\": \"./build/index.d.ts\",\n  \"main\": \"./build/index.js\",\n  \"type\": \"module\",\n  \"unpkg\": \"./dist/index.min.js\",\n  \"module\": \"./build/index.js\",\n  \"exports\": {\n    \".\": {\n      \"import\": \"./build/index.js\"\n    },\n    \"./min\": {\n      \"import\": \"./build/index.min.js\"\n    }\n  },\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build:umd\": \"vite build --config vite.config.js --base=./ && vite build --config vite.config_inject.js --base=./\",\n    \"build\": \"tsup --config tsup.config.ts && npm run build:forTests && npm run build:min && npm run build:umd\",\n    \"build:forTests\": \"tsup --config tsup.config.tests.ts && npm run build:mindemos\",\n    \"build:min\": \"node bundle.js\",\n    \"build:mindemos\": \"node bundleForDemos.js\",\n    \"demo\": \"npm run build:forTests && rm -rf demos/dist && cp -r dist demos/dist && npx http-server demos/ --cors\",\n    \"demo-win\": \"npm run build && npx http-server demos/\",\n    \"test\": \"npm run build:forTests && npm run test:unit && jest --maxWorkers=1\",\n    \"test-win\": \"npm run build-win && jest\",\n    \"test-playwright\": \"npx playwright test --grep-invert \\\"niivue demo file:\\\"\",\n    \"test-demos\": \"npx playwright test playwright/e2e/test.demos.spec.ts\",\n    \"docs\": \"typedoc\",\n    \"test:unit\": \"vitest --run --coverage\",\n    \"serve-docs\": \"npx http-server devdocs\",\n    \"pub\": \"npm run build && npm publish --access public\",\n    \"lint\": \"eslint .\",\n    \"lint:ts\": \"tsc --noEmit\",\n    \"lint:fix\": \"eslint --fix .\",\n    \"lint:debug\": \"DEBUG=eslint:cli-engine eslint .\",\n    \"pretest-playwright\": \"npm run build:forTests && node preplaywrighttest.cjs && tsc --incremental -p playwright/e2e/tsconfig.json\",\n    \"pretest-demos\": \"npm run build:forTests && node preplaywrighttest.cjs && tsc --incremental -p playwright/e2e/tsconfig.json\"\n  },\n  \"files\": [\n    \"src\",\n    \"build\",\n    \"dist\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/niivue/niivue.git\"\n  },\n  \"keywords\": [\n    \"niivue\",\n    \"webgl2\",\n    \"nifti\",\n    \"image\",\n    \"viewer\"\n  ],\n  \"author\": \"niivue authors\",\n  \"license\": \"BSD-2-Clause\",\n  \"bugs\": {\n    \"url\": \"https://github.com/niivue/niivue/issues\"\n  },\n  \"homepage\": \"https://github.com/niivue/niivue#readme\",\n  \"dependencies\": {\n    \"@lukeed/uuid\": \"^2.0.1\",\n    \"@ungap/structured-clone\": \"^1.2.0\",\n    \"array-equal\": \"^1.0.2\",\n    \"gl-matrix\": \"^3.4.3\",\n    \"nifti-reader-js\": \"^0.8.0\",\n    \"fflate\": \"^0.8.2\",\n    \"zarrita\": \"^0.5.0\"\n  },\n  \"devDependencies\": {\n    \"@playwright/test\": \"^1.45.2\",\n    \"@rollup/plugin-commonjs\": \"^26.0.1\",\n    \"@types/array-equal\": \"^1.0.2\",\n    \"@types/node\": \"^20.14.11\",\n    \"@types/ungap__structured-clone\": \"^1.2.0\",\n    \"@typescript-eslint/eslint-plugin\": \"^7.16.1\",\n    \"@typescript-eslint/parser\": \"^7.16.1\",\n    \"@vitest/coverage-v8\": \"^3.1.3\",\n    \"eslint\": \"^8.57.0\",\n    \"eslint-config-prettier\": \"^9.1.0\",\n    \"eslint-config-standard\": \"^17.1.0\",\n    \"eslint-plugin-prettier\": \"^5.2.1\",\n    \"eslint-plugin-tsdoc\": \"^0.3.0\",\n    \"express\": \"^4.19.2\",\n    \"happy-dom\": \"^15.11.6\",\n    \"http-server\": \"^14.1.1\",\n    \"prettier\": \"^3.3.3\",\n    \"regenerator-runtime\": \"^0.14.1\",\n    \"terser\": \"^5.31.3\",\n    \"tsup\": \"^8.1.2\",\n    \"typedoc\": \"^0.26.4\",\n    \"typescript\": \"^5.5.3\",\n    \"vite\": \"^5.3.4\",\n    \"vitest\": \"^3.1.3\"\n  },\n  \"optionalDependencies\": {\n    \"@rollup/rollup-linux-x64-gnu\": \"^4.18.1\"\n  }\n}","interface LogLevelMap {\n  [key: string]: number\n}\nclass Log {\n  level: string\n  name: string\n  constructor({ name = 'niivue', level = 'info' } = {}) {\n    this.name = `${name}`\n    this.level = level\n  }\n\n  // map 'debug' 'info' 'warn' 'error' 'fatal' 'silent' to numbers\n  // for comparison\n  static levels: LogLevelMap = {\n    debug: 0,\n    info: 1,\n    warn: 2,\n    error: 3,\n    fatal: 4,\n    silent: Infinity\n  }\n\n  debug(...args: unknown[]): void {\n    if (Log.levels[this.level] > Log.levels.debug) {\n      return\n    }\n    // eslint-disable-next-line\n    console.debug(`${this.name}-debug`, ...args)\n  }\n\n  info(...args: unknown[]): void {\n    if (Log.levels[this.level] > Log.levels.info) {\n      return\n    }\n    // eslint-disable-next-line\n    console.info(`${this.name}-info`, ...args)\n  }\n\n  warn(...args: unknown[]): void {\n    if (Log.levels[this.level] > Log.levels.warn) {\n      return\n    }\n    // eslint-disable-next-line\n    console.warn(`${this.name}-warn`, ...args)\n  }\n\n  error(...args: unknown[]): void {\n    if (Log.levels[this.level] > Log.levels.error) {\n      return\n    }\n    // eslint-disable-next-line\n    console.error(`${this.name}-error`, ...args)\n  }\n\n  fatal(...args: unknown[]): void {\n    if (Log.levels[this.level] > Log.levels.fatal) {\n      return\n    }\n    // eslint-disable-next-line\n    console.error(`${this.name}-fatal`, ...args)\n  }\n\n  setLogLevel(level: string): void {\n    this.level = level\n  }\n\n  setName(name: string): void {\n    this.name = name\n  }\n}\n\n// make a log instance and export it\nconst log = new Log({ name: 'niivue', level: 'info' })\nexport { log }\n","import { log } from './logger.js'\n// shader.js is taken from github user Twinklebear: https://github.com/Twinklebear/webgl-util\n\n// Compile and link the shaders vert and frag. vert and frag should contain\n// the shader source code for the vertex and fragment shaders respectively\n// Returns the compiled and linked program, or null if compilation or linking failed\nexport const compileShader = function (gl: WebGL2RenderingContext, vert: string, frag: string): WebGLProgram {\n  const vs = gl.createShader(gl.VERTEX_SHADER)\n  gl.shaderSource(vs, vert)\n  gl.compileShader(vs)\n  const fs = gl.createShader(gl.FRAGMENT_SHADER)\n  gl.shaderSource(fs, frag)\n  gl.compileShader(fs)\n  const program = gl.createProgram()\n  gl.attachShader(program, vs)\n  gl.attachShader(program, fs)\n  gl.linkProgram(program)\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    // issue1128 report shader errors to console\n    console.log(gl.getProgramInfoLog(program))\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n      console.log('Vertex shader compilation error:', gl.getShaderInfoLog(vs))\n    }\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n      console.log('Fragment shader compilation error:', gl.getShaderInfoLog(fs))\n    }\n    log.error(gl.getProgramInfoLog(program))\n    throw new Error('Shader failed to link, see console for log')\n  }\n  return program\n}\n\nexport const getGLExtension = function (gl: WebGL2RenderingContext, ext: string): boolean {\n  if (!gl.getExtension(ext)) {\n    log.error('Missing ' + ext + ' WebGL extension')\n    return false\n  }\n  return true\n}\n\nexport class Shader {\n  program: WebGLProgram\n  uniforms: Record<string, WebGLUniformLocation | null> = {}\n  isMatcap?: boolean\n\n  constructor(gl: WebGL2RenderingContext, vertexSrc: string, fragmentSrc: string) {\n    this.program = compileShader(gl, vertexSrc, fragmentSrc)\n\n    const regexUniform = /uniform[^;]+[ ](\\w+);/g\n    const matchUniformName = /uniform[^;]+[ ](\\w+);/\n\n    const vertexUnifs = vertexSrc.match(regexUniform)\n    const fragUnifs = fragmentSrc.match(regexUniform)\n\n    if (vertexUnifs) {\n      vertexUnifs.forEach((unif) => {\n        const m = unif.match(matchUniformName)\n        this.uniforms[m![1]] = -1 // TODO can we guarantee this?\n      })\n    }\n    if (fragUnifs) {\n      fragUnifs.forEach((unif) => {\n        const m = unif.match(matchUniformName)\n        this.uniforms[m![1]] = -1 // TODO can we guarantee this?\n      })\n    }\n\n    for (const unif in this.uniforms) {\n      this.uniforms[unif] = gl.getUniformLocation(this.program, unif)!\n    }\n  }\n\n  use(gl: WebGL2RenderingContext): void {\n    gl.useProgram(this.program)\n  }\n}\n","export const vertRenderShader = `#version 300 es\n#line 4\nlayout(location=0) in vec3 pos;\nlayout(location=1) in vec3 texCoords;\nuniform mat4 mvpMtx;\nout vec3 vColor;\nvoid main(void) {\n\tgl_Position = mvpMtx * vec4(pos, 1.0);\n\tvColor = texCoords;\n}`\n\nconst kDrawFunc = `\n\tvec4 drawColor(float scalar, float drawOpacity) {\n\t\tfloat nlayer = float(textureSize(colormap, 0).y);\n\t\tfloat layer = (nlayer - 0.5) / nlayer;\n\t\tvec4 dcolor = texture(colormap, vec2((scalar * 255.0)/256.0 + 0.5/256.0, layer)).rgba;\n\t\tdcolor.a *= drawOpacity;\n\t\treturn dcolor;\n}`\n\nconst kRenderFunc =\n  `vec3 GetBackPosition(vec3 startPositionTex) {\n\tvec3 startPosition = startPositionTex * volScale;\n\tvec3 invR = 1.0 / rayDir;\n\tvec3 tbot = invR * (vec3(0.0)-startPosition);\n\tvec3 ttop = invR * (volScale-startPosition);\n\tvec3 tmax = max(ttop, tbot);\n\tvec2 t = min(tmax.xx, tmax.yz);\n\tvec3 endPosition = startPosition + (rayDir * min(t.x, t.y));\n\t//convert world position back to texture position:\n\tendPosition = endPosition / volScale;\n\treturn endPosition;\n}\n\nvec4 applyClip (vec3 dir, inout vec4 samplePos, inout float len, inout bool isClip) {\n\tfloat cdot = dot(dir,clipPlane.xyz);\n\tisClip = false;\n\tif  ((clipPlane.a > 1.0) || (cdot == 0.0)) return samplePos;\n\tbool frontface = (cdot > 0.0);\n\tfloat dis = (-clipPlane.a - dot(clipPlane.xyz, samplePos.xyz-0.5)) / cdot;\n\tfloat thick = clipThick;\n\tif (thick <= 0.0) thick = 2.0;\n\tfloat  disBackFace = (-(clipPlane.a-thick) - dot(clipPlane.xyz, samplePos.xyz-0.5)) / cdot;\n\tif (((frontface) && (dis >= len)) || ((!frontface) && (dis <= 0.0))) {\n\t\tsamplePos.a = len + 1.0;\n\t\treturn samplePos;\n\t}\n\tif (frontface) {\n\t\tdis = max(0.0, dis);\n\t\tsamplePos = vec4(samplePos.xyz+dir * dis, dis);\n\t\tif (dis > 0.0) isClip = true;\n\t\tlen = min(disBackFace, len);\n\t}\n\tif (!frontface) {\n\t\tlen = min(dis, len);\n\t\tdisBackFace = max(0.0, disBackFace);\n\t\tif (len == dis) isClip = true;\n\t\tsamplePos = vec4(samplePos.xyz+dir * disBackFace, disBackFace);\n\t}\n\treturn samplePos;\n}\n\nvoid clipVolume(inout vec3 startPos, inout vec3 backPos, int dim, float frac, bool isLo) {\n\tvec3 dir = backPos - startPos;\n\tfloat len = length(dir);\n\tdir = normalize(dir);\n\t// Discard if both startPos and backPos are outside the clipping plane\n\tif (isLo && startPos[dim] < frac && backPos[dim] < frac) {\n\t\tdiscard;\n\t}\n\tif (!isLo && startPos[dim] > frac && backPos[dim] > frac) {\n\t\tdiscard;\n\t}\n\tvec4 plane = vec4(0.0, 0.0, 0.0, 0.5 - frac);\n\tplane[dim] = 1.0;\n\tfloat cdot = dot(dir, plane.xyz);\n\tfloat dis = (-plane.w - dot(plane.xyz, startPos - vec3(0.5))) / cdot;\n\t// Adjust startPos or backPos based on the intersection with the plane\n\tbool isFrontFace = (cdot > 0.0);\n\tif (!isLo)\n\t\tisFrontFace = !isFrontFace;\n\tif (dis > 0.0) {\n\t\tif (isFrontFace) {\n\t\t\t\tif (dis <= len) {\n\t\t\t\t\tstartPos = startPos + dir * dis;\n\t\t\t\t}\n\t\t} else {\n\t\t\tif (dis < len) {\n\t\t\t\tbackPos = startPos + dir * dis;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid clipVolumeStart (inout vec3 startPos, inout vec3 backPos) {\n\t// vec3 clipLo = vec3(0.1, 0.2, 0.4);\n\t// vec3 clipHi = vec3(0.8, 0.7, 0.7);\n\tfor (int i = 0; i < 3; i++) {\n\t\tif (clipLo[i] > 0.0)\n\t\t\tclipVolume(startPos, backPos, i, clipLo[i], true);\n\t}\n\tfor (int i = 0; i < 3; i++) {\n\t\tif (clipHi[i] < 1.0)\n\t\t\tclipVolume(startPos, backPos, i, clipHi[i], false);\n\t}\n}\n\nfloat frac2ndc(vec3 frac) {\n//https://stackoverflow.com/questions/7777913/how-to-render-depth-linearly-in-modern-opengl-with-gl-fragcoord-z-in-fragment-sh\n\tvec4 pos = vec4(frac.xyz, 1.0); //fraction\n\tvec4 dim = vec4(vec3(textureSize(volume, 0)), 1.0);\n\tpos = pos * dim;\n\tvec4 shim = vec4(-0.5, -0.5, -0.5, 0.0);\n\tpos += shim;\n\tvec4 mm = transpose(matRAS) * pos;\n\tfloat z_ndc = (mvpMtx * vec4(mm.xyz, 1.0)).z;\n\treturn (z_ndc + 1.0) / 2.0;\n}` + kDrawFunc\n\nconst kRenderInit = `void main() {\n\tif (fColor.x > 2.0) {\n\t\tfColor = vec4(1.0, 0.0, 0.0, 0.5);\n\t\treturn;\n\t}\n\tfColor = vec4(0.0,0.0,0.0,0.0);\n\tvec4 clipPlaneColorX = clipPlaneColor;\n\t//if (clipPlaneColor.a < 0.0)\n\t//\tclipPlaneColorX.a = - 1.0;\n\tbool isColorPlaneInVolume = false;\n\tif (clipPlaneColorX.a < 0.0) {\n\t\tisColorPlaneInVolume = true;\n\t\tclipPlaneColorX.a = 0.0;\n\t}\n\t//fColor = vec4(vColor.rgb, 1.0); return;\n\tvec3 start = vColor;\n\tgl_FragDepth = 0.0;\n\tvec3 backPosition = GetBackPosition(start);\n\t// fColor = vec4(backPosition, 1.0); return;\n\tvec3 dir = normalize(backPosition - start);\n\tclipVolumeStart(start, backPosition);\n\tdir = normalize(dir);\n\tfloat len = length(backPosition - start);\n\tfloat lenVox = length((texVox * start) - (texVox * backPosition));\n\tif ((lenVox < 0.5) || (len > 3.0)) { //length limit for parallel rays\n\t\treturn;\n\t}\n\tfloat sliceSize = len / lenVox; //e.g. if ray length is 1.0 and traverses 50 voxels, each voxel is 0.02 in unit cube\n\tfloat stepSize = sliceSize; //quality: larger step is faster traversal, but fewer samples\n\tfloat opacityCorrection = stepSize/sliceSize;\n\tvec4 deltaDir = vec4(dir.xyz * stepSize, stepSize);\n\tvec4 samplePos = vec4(start.xyz, 0.0); //ray position\n\tfloat lenNoClip = len;\n\tbool isClip = false;\n\tvec4 clipPos = applyClip(dir, samplePos, len, isClip);\n\t//if ((clipPos.a != samplePos.a) && (len < 3.0)) {\n\t//start: OPTIONAL fast pass: rapid traversal until first hit\n\tfloat stepSizeFast = sliceSize * 1.9;\n\tvec4 deltaDirFast = vec4(dir.xyz * stepSizeFast, stepSizeFast);\n\twhile (samplePos.a <= len) {\n\t\tfloat val = texture(volume, samplePos.xyz).a;\n\t\tif (val > 0.01)\n\t\t\tbreak;\n\t\tsamplePos += deltaDirFast; //advance ray position\n\t}\n\tfloat drawOpacityA = renderDrawAmbientOcclusionXY.y;\n\tif ((samplePos.a >= len) && (((overlays < 1.0) && (drawOpacityA <= 0.0) ) || (backgroundMasksOverlays > 0)))  {\n\t\tif (isClip)\n\t\t\tfColor += clipPlaneColorX;\n\t\treturn;\n\t}\n\tfColor = vec4(1.0, 1.0, 1.0, 1.0);\n\t//gl_FragDepth = frac2ndc(samplePos.xyz); //crude due to fast pass resolution\n\tsamplePos -= deltaDirFast;\n\tif (samplePos.a < 0.0)\n\t\tvec4 samplePos = vec4(start.xyz, 0.0); //ray position\n\t//end: fast pass\n\tvec4 colAcc = vec4(0.0,0.0,0.0,0.0);\n\tvec4 firstHit = vec4(0.0,0.0,0.0,2.0 * lenNoClip);\n\tconst float earlyTermination = 0.95;\n\tfloat backNearest = len; //assume no hit\n\tfloat ran = fract(sin(gl_FragCoord.x * 12.9898 + gl_FragCoord.y * 78.233) * 43758.5453);\n\tsamplePos += deltaDir * ran; //jitter ray\n`\n\nconst kRenderTail = `\n\tif (firstHit.a < len)\n\t\tgl_FragDepth = frac2ndc(firstHit.xyz);\n\tcolAcc.a = (colAcc.a / earlyTermination) * backOpacity;\n\tfColor = colAcc;\n\t//if (isClip) //CR\n\tif ((isColorPlaneInVolume) && (clipPos.a != samplePos.a) && (abs(firstHit.a - clipPos.a) < deltaDir.a))\n\t\tfColor.rgb = mix(fColor.rgb, clipPlaneColorX.rgb, abs(clipPlaneColor.a));\n\t\t//fColor.rgb = mix(fColor.rgb, clipPlaneColorX.rgb, clipPlaneColorX.a * 0.65);\n\tfloat renderDrawAmbientOcclusionX = renderDrawAmbientOcclusionXY.x;\n\tfloat drawOpacity = renderDrawAmbientOcclusionXY.y;\n\tif ((overlays < 1.0) && (drawOpacity <= 0.0))\n\t\treturn;\n\t//overlay pass\n\tlen = lenNoClip;\n\tsamplePos = vec4(start.xyz, 0.0); //ray position\n\t//start: OPTIONAL fast pass: rapid traversal until first hit\n\tstepSizeFast = sliceSize * 1.0;\n\tdeltaDirFast = vec4(dir.xyz * stepSizeFast, stepSizeFast);\n\twhile (samplePos.a <= len) {\n\t\tfloat val = texture(overlay, samplePos.xyz).a;\n\t\tif (drawOpacity > 0.0)\n\t\t\tval = max(val, texture(drawing, samplePos.xyz).r);\n\t\tif (val > 0.001)\n\t\t\tbreak;\n\t\tsamplePos += deltaDirFast; //advance ray position\n\t}\n\tif (samplePos.a >= len) {\n\t\tif (isClip && (fColor.a == 0.0))\n\t\t\t\tfColor += clipPlaneColorX;\n\t\t\treturn;\n\t}\n\tsamplePos -= deltaDirFast;\n\tif (samplePos.a < 0.0)\n\t\tvec4 samplePos = vec4(start.xyz, 0.0); //ray position\n\t//end: fast pass\n\tfloat overFarthest = len;\n\tcolAcc = vec4(0.0, 0.0, 0.0, 0.0);\n\n\tsamplePos += deltaDir * ran; //jitter ray\n\tvec4 overFirstHit = vec4(0.0,0.0,0.0,2.0 * len);\n\tif (backgroundMasksOverlays > 0)\n\t\tsamplePos = firstHit;\n\tbool firstDraw = true;\n\twhile (samplePos.a <= len) {\n\t\tvec4 colorSample = texture(overlay, samplePos.xyz);\n\t\tif ((colorSample.a < 0.01) && (drawOpacity > 0.0)) {\n\t\t\tfloat val = texture(drawing, samplePos.xyz).r;\n\t\t\tvec4 draw = drawColor(val, drawOpacity);\n\t\t\tif ((draw.a > 0.0) && (firstDraw)) {\n\t\t\t\tfirstDraw = false;\n\t\t\t\tfloat sum = 0.0;\n\t\t\t\tconst float mn = 1.0 / 256.0;\n\t\t\t\tconst float sampleRadius = 1.1;\n\t\t\t\tfloat dx = sliceSize * sampleRadius;\n\t\t\t\tvec3 center = samplePos.xyz;\n\t\t\t\t//six neighbors that share a face\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(0.0,0.0,+dx), dir)).r, mn);\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(0.0,0.0,-dx), dir)).r, mn);\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(0.0,+dx,0.0), dir)).r, mn);\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(0.0,-dx,0.0), dir)).r, mn);\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(+dx,0.0,0.0), dir)).r, mn);\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(-dx,0.0,0.0), dir)).r, mn);\n\t\t\t\t//float proportion = (sum / mn) / 6.0;\n\t\t\t\t\n\t\t\t\t//12 neighbors that share an edge\n\t\t\t\tdx = sliceSize * sampleRadius * sqrt(2.0) * 0.5;\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(0.0,+dx,+dx), dir)).r, mn);\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(+dx,0.0,+dx), dir)).r, mn);\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(+dx,+dx,0.0), dir)).r, mn);\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(0.0,-dx,-dx), dir)).r, mn);\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(-dx,0.0,-dx), dir)).r, mn);\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(-dx,-dx,0.0), dir)).r, mn);\n\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(0.0,+dx,-dx), dir)).r, mn);\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(+dx,0.0,-dx), dir)).r, mn);\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(+dx,-dx,0.0), dir)).r, mn);\n\t\t\t\t\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(0.0,-dx,+dx), dir)).r, mn);\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(-dx,0.0,+dx), dir)).r, mn);\n\t\t\t\tsum += min(texture(drawing, center.xyz + cross(vec3(-dx,+dx,0.0), dir)).r, mn);\n\t\t\t\tfloat proportion = (sum / mn) / 18.0; //proportion of six neighbors is non-zero\n\t\t\t\t\n\t\t\t\t//a high proportion of hits means crevice\n\t\t\t\t//since the AO term adds shadows that darken most voxels, it will result in dark surfaces\n\t\t\t\t//the term brighten adds a little illumination to balance this\n\t\t\t\t// without brighten, only the most extreme ridges will not be darker\n\t\t\t\tconst float brighten = 1.2;\n\t\t\t\tvec3 ao = draw.rgb * (1.0 - proportion) * brighten;\n\t\t\t\tdraw.rgb = mix (draw.rgb, ao , renderDrawAmbientOcclusionX);\n\t\t\t}\n\t\t\tcolorSample = draw;\n\t\t}\n\t\tsamplePos += deltaDir; //advance ray position\n\t\tif (colorSample.a >= 0.01) {\n\t\t\tif (overFirstHit.a > len)\n\t\t\t\toverFirstHit = samplePos;\n\t\t\tcolorSample.a *= renderOverlayBlend;\n\t\t\tcolorSample.a = 1.0-pow((1.0 - colorSample.a), opacityCorrection);\n\t\t\tcolorSample.rgb *= colorSample.a;\n\t\t\tcolAcc= (1.0 - colAcc.a) * colorSample + colAcc;\n\t\t\toverFarthest = samplePos.a;\n\t\t\tif ( colAcc.a > earlyTermination )\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t//if (samplePos.a >= len) {\n\tif (colAcc.a <= 0.0) {\n\t\tif (isClip && (fColor.a == 0.0))\n\t\t\tfColor += clipPlaneColorX;\n\t\treturn;\n\t}\n\tif (overFirstHit.a < firstHit.a)\n\t\tgl_FragDepth = frac2ndc(overFirstHit.xyz);\n\tfloat overMix = colAcc.a;\n\tfloat overlayDepth = 0.3;\n\tif (fColor.a <= 0.0)\n\t\toverMix = 1.0;\n\telse if (((overFarthest) > backNearest)) {\n\t\tfloat dx = (overFarthest - backNearest)/1.73;\n\t\tdx = fColor.a * pow(dx, overlayDepth);\n\t\toverMix *= 1.0 - dx;\n\t}\n\tfColor.rgb = mix(fColor.rgb, colAcc.rgb, overMix);\n\tfColor.a = max(fColor.a, colAcc.a);\n}` // kRenderTail\n\n// https://github.com/niivue/niivue/issues/679\nexport const fragRenderSliceShader =\n  `#version 300 es\n#line 215\nprecision highp int;\nprecision highp float;\nuniform vec3 rayDir;\nuniform vec3 texVox;\nuniform int backgroundMasksOverlays;\nuniform vec3 volScale;\nuniform vec4 clipPlane;\nuniform highp sampler3D volume, overlay;\nuniform float overlays;\nuniform float clipThick;\nuniform vec3 clipLo;\nuniform vec3 clipHi;\nuniform float backOpacity;\nuniform mat4 mvpMtx;\nuniform mat4 matRAS;\nuniform vec4 clipPlaneColor;\nuniform float renderOverlayBlend;\nuniform highp sampler3D drawing;\nuniform highp sampler2D colormap;\nuniform vec2 renderDrawAmbientOcclusionXY;\nin vec3 vColor;\nout vec4 fColor;\n` +\n  kRenderFunc +\n  `\n\tvoid main() {\n\tvec3 start = vColor;\n\tgl_FragDepth = 0.0;\n\tvec3 backPosition = GetBackPosition(start);\n\tvec3 dir = normalize(backPosition - start);\n\tclipVolumeStart(start, backPosition);\n\tfloat len = length(backPosition - start);\n\tfloat lenVox = length((texVox * start) - (texVox * backPosition));\n\tif ((lenVox < 0.5) || (len > 3.0)) { //length limit for parallel rays\n\t\tfColor = vec4(0.0,0.0,0.0,0.0);\n\t\treturn;\n\t}\n\tfloat sliceSize = len / lenVox; //e.g. if ray length is 1.0 and traverses 50 voxels, each voxel is 0.02 in unit cube\n\tfloat stepSize = sliceSize; //quality: larger step is faster traversal, but fewer samples\n\tfloat opacityCorrection = stepSize/sliceSize;\n\tvec4 deltaDir = vec4(dir.xyz * stepSize, stepSize);\n\tvec4 samplePos = vec4(start.xyz, 0.0); //ray position\n\tvec4 colAcc = vec4(0.0,0.0,0.0,0.0);\n\tvec4 firstHit = vec4(0.0,0.0,0.0,2.0 * len);\n\tconst float earlyTermination = 0.95;\n\tfloat backNearest = len; //assume no hit\n\tfloat dis = len;\n\t//check if axial plane is closest\n\tvec4 aClip = vec4(0.0, 0.0, 1.0, (1.0- clipPlane.z) - 0.5);\n\tfloat adis = (-aClip.a - dot(aClip.xyz, samplePos.xyz-0.5)) / dot(dir,aClip.xyz);\n\tif (adis > 0.0)\n\t\tdis = min(adis, dis);\n\t//check of coronal plane is closest\n\tvec4 cClip = vec4(0.0, 1.0, 0.0, (1.0- clipPlane.y) - 0.5);\n\tfloat cdis = (-cClip.a - dot(cClip.xyz, samplePos.xyz-0.5)) / dot(dir,cClip.xyz);\n\tif (cdis > 0.0)\n\t\tdis = min(cdis, dis);\n\t//check if coronal slice is closest\n\tvec4 sClip = vec4(1.0, 0.0, 0.0, (1.0- clipPlane.x) - 0.5);\n\tfloat sdis = (-sClip.a - dot(sClip.xyz, samplePos.xyz-0.5)) / dot(dir,sClip.xyz);\n\tif (sdis > 0.0)\n\t\tdis = min(sdis, dis);\n\tif ((dis > 0.0) && (dis < len)) {\n\t\tsamplePos = vec4(samplePos.xyz+dir * dis, dis);\n\t\tcolAcc = texture(volume, samplePos.xyz);\n\t\tcolAcc.a = earlyTermination;\n\t\tfirstHit = samplePos;\n\t\tbackNearest = min(backNearest, samplePos.a);\n\t}\n\t//the following are only used by overlays\n\tvec4 clipPlaneColorX = clipPlaneColor;\n\tbool isColorPlaneInVolume = false;\n\tfloat lenNoClip = len;\n\tbool isClip = false;\n\tvec4 clipPos = applyClip(dir, samplePos, len, isClip);\n\tfloat stepSizeFast = sliceSize * 1.9;\n\tvec4 deltaDirFast = vec4(dir.xyz * stepSizeFast, stepSizeFast);\n\tif (samplePos.a < 0.0)\n\t\tvec4 samplePos = vec4(start.xyz, 0.0); //ray position\n\tfloat ran = fract(sin(gl_FragCoord.x * 12.9898 + gl_FragCoord.y * 78.233) * 43758.5453);\n\tsamplePos += deltaDir * ran; //jitter ray\n` +\n  kRenderTail\n\nexport const fragRenderShader =\n  `#version 300 es\n#line 215\nprecision highp int;\nprecision highp float;\nuniform vec3 rayDir;\nuniform vec3 texVox;\nuniform int backgroundMasksOverlays;\nuniform vec3 volScale;\nuniform vec4 clipPlane;\nuniform highp sampler3D volume, overlay;\nuniform float overlays;\nuniform float clipThick;\nuniform vec3 clipLo;\nuniform vec3 clipHi;\nuniform float backOpacity;\nuniform mat4 mvpMtx;\nuniform mat4 matRAS;\nuniform vec4 clipPlaneColor;\nuniform float renderOverlayBlend;\nuniform highp sampler3D drawing;\nuniform highp sampler2D colormap;\nuniform vec2 renderDrawAmbientOcclusionXY;\nin vec3 vColor;\nout vec4 fColor;\n` +\n  kRenderFunc +\n  kRenderInit +\n  `while (samplePos.a <= len) {\n\t\tvec4 colorSample = texture(volume, samplePos.xyz);\n\t\tsamplePos += deltaDir; //advance ray position\n\t\tif (colorSample.a >= 0.01) {\n\t\t\tif (firstHit.a > lenNoClip)\n\t\t\t\tfirstHit = samplePos;\n\t\t\tbackNearest = min(backNearest, samplePos.a);\n\t\t\tcolorSample.a = 1.0-pow((1.0 - colorSample.a), opacityCorrection);\n\t\t\tcolorSample.rgb *= colorSample.a;\n\t\t\tcolAcc= (1.0 - colAcc.a) * colorSample + colAcc;\n\t\t\tif ( colAcc.a > earlyTermination )\n\t\t\t\tbreak;\n\t\t}\n\t}\n` +\n  kRenderTail\n\nexport const gradientOpacityLutCount = 192\n\nconst kFragRenderGradientDecl = `#version 300 es\n#line 215\nprecision highp int;\nprecision highp float;\nuniform vec3 rayDir;\nuniform vec3 texVox;\nuniform int backgroundMasksOverlays;\nuniform vec3 volScale;\nuniform vec4 clipPlane;\nuniform highp sampler3D volume, overlay;\nuniform float overlays;\nuniform float clipThick;\nuniform vec3 clipLo;\nuniform vec3 clipHi;\nuniform float backOpacity;\nuniform mat4 mvpMtx;\nuniform mat4 normMtx;\nuniform mat4 matRAS;\nuniform vec4 clipPlaneColor;\nuniform float renderOverlayBlend;\nuniform highp sampler3D drawing, gradient;\nuniform highp sampler2D colormap;\nuniform highp sampler2D matCap;\nuniform vec2 renderDrawAmbientOcclusionXY;\nuniform float gradientAmount;\nuniform float silhouettePower;\nuniform float gradientOpacity[${gradientOpacityLutCount}];\nin vec3 vColor;\nout vec4 fColor;\n`\nexport const fragRenderGradientShader =\n  kFragRenderGradientDecl +\n  kRenderFunc +\n  kRenderInit +\n  `\n\tfloat startPos = samplePos.a;\n\tfloat clipClose = clipPos.a + 3.0 * deltaDir.a; //do not apply gradients near clip plane\n\tfloat brighten = 2.0; //modulating makes average intensity darker 0.5 * 0.5 = 0.25\n\t//vec4 prevGrad = vec4(0.0);\n\tfloat silhouetteThreshold = 1.0 - silhouettePower;\n\twhile (samplePos.a <= len) {\n\t\tvec4 colorSample = texture(volume, samplePos.xyz);\n\t\tif (colorSample.a >= 0.0) {\n\t\t\tvec4 grad = texture(gradient, samplePos.xyz);\n\t\t\tgrad.rgb = normalize(grad.rgb*2.0 - 1.0);\n\t\t\t//if (grad.a < prevGrad.a)\n\t\t\t//\tgrad.rgb = prevGrad.rgb;\n\t\t\t//prevGrad = grad;\n\t\t\tvec3 n = mat3(normMtx) * grad.rgb;\n\t\t\tn.y = - n.y;\n\t\t\tvec4 mc = vec4(texture(matCap, n.xy * 0.5 + 0.5).rgb, 1.0) * brighten;\n\t\t\tmc = mix(vec4(1.0), mc, gradientAmount);\n\t\t\tif (samplePos.a > clipClose)\n\t\t\t\tcolorSample.rgb *= mc.rgb;\n\t\t\tif (firstHit.a > lenNoClip)\n\t\t\t\tfirstHit = samplePos;\n\t\t\tbackNearest = min(backNearest, samplePos.a);\n\t\t\tcolorSample.a = 1.0-pow((1.0 - colorSample.a), opacityCorrection);\n\t\t\tint gradIdx = int(grad.a * 255.0);\n\t\t\tcolorSample.a *= gradientOpacity[gradIdx];\n\t\t\tfloat lightNormDot = dot(grad.rgb, rayDir);\n\t\t\t// n.b. \"lightNormDor\" is cosTheta, \"silhouettePower\" is Fresnel effect exponent\n \t\t\tcolorSample.a *= pow(1.0 - abs(lightNormDot), silhouettePower);\n \t\t\tfloat viewAlign = abs(lightNormDot); // 0 = perpendicular, 1 = aligned\n \t\t\t// linearly map silhouettePower (0..1) to a threshold range, e.g., [1.0, 0.0]\n \t\t\t// Cull voxels that are too aligned with the view direction\n \t\t\tif (viewAlign > silhouetteThreshold)\n \t\t\t\tcolorSample.a = 0.0;\n\t\t\tcolorSample.rgb *= colorSample.a;\n\t\t\tcolAcc= (1.0 - colAcc.a) * colorSample + colAcc;\n\t\t\tif ( colAcc.a > earlyTermination )\n\t\t\t\tbreak;\n\t\t}\n\t\tsamplePos += deltaDir; //advance ray position\n\t}\n` +\n  kRenderTail\n\nexport const fragRenderGradientValuesShader =\n  kFragRenderGradientDecl +\n  kRenderFunc +\n  kRenderInit +\n  `\n\tfloat startPos = samplePos.a;\n\tfloat clipClose = clipPos.a + 3.0 * deltaDir.a; //do not apply gradients near clip plane\n\tfloat brighten = 2.0; //modulating makes average intensity darker 0.5 * 0.5 = 0.25\n\t//vec4 prevGrad = vec4(0.0);\n\twhile (samplePos.a <= len) {\n\t\tvec4 colorSample = texture(volume, samplePos.xyz);\n\t\tif (colorSample.a >= 0.0) {\n\t\t\tvec4 grad = texture(gradient, samplePos.xyz);\n\t\t\tcolorSample.rgb = abs(normalize(grad.rgb*2.0 - 1.0));\n\t\t\tif (firstHit.a > lenNoClip)\n\t\t\t\tfirstHit = samplePos;\n\t\t\tbackNearest = min(backNearest, samplePos.a);\n\t\t\tcolorSample.a = 1.0-pow((1.0 - colorSample.a), opacityCorrection);\n\t\t\tcolorSample.rgb *= colorSample.a;\n\t\t\tcolAcc= (1.0 - colAcc.a) * colorSample + colAcc;\n\t\t\tif ( colAcc.a > earlyTermination )\n\t\t\t\tbreak;\n\t\t}\n\t\tsamplePos += deltaDir; //advance ray position\n\t}\n` +\n  kRenderTail\n\nexport const vertSliceMMShader = `#version 300 es\n#line 392\nlayout(location=0) in vec3 pos;\nuniform int axCorSag;\nuniform mat4 mvpMtx;\nuniform mat4 frac2mm;\nuniform float slice;\nout vec3 texPos;\nvoid main(void) {\n\ttexPos = vec3(pos.x, pos.y, slice);\n\tif (axCorSag > 1)\n\t\ttexPos = vec3(slice, pos.x, pos.y);\n\telse if (axCorSag > 0)\n\t\ttexPos = vec3(pos.x, slice, pos.y);\n\tvec4 mm = frac2mm * vec4(texPos, 1.0);\n\tgl_Position = mvpMtx * mm;\n}`\n\nexport const kFragSliceHead =\n  `#version 300 es\n#line 411\nprecision highp int;\nprecision highp float;\nuniform highp sampler3D volume, overlay;\nuniform int backgroundMasksOverlays;\nuniform float overlayOutlineWidth;\nuniform float overlayAlphaShader;\nuniform int axCorSag;\nuniform float overlays;\nuniform float opacity;\nuniform float drawOpacity;\nuniform bool isAlphaClipDark;\nuniform highp sampler3D drawing;\nuniform highp sampler2D colormap;\nin vec3 texPos;\nout vec4 color;` +\n  kDrawFunc +\n  `void main() {\n\t//color = vec4(1.0, 0.0, 1.0, 1.0);return;\n\tvec4 background = texture(volume, texPos);\n\tcolor = vec4(background.rgb, opacity);\n\tif ((isAlphaClipDark) && (background.a == 0.0)) color.a = 0.0; //FSLeyes clipping range\n\tvec4 ocolor = vec4(0.0);\n\tfloat overlayAlpha = overlayAlphaShader;\n\tif (overlays > 0.0) {\n\t\tocolor = texture(overlay, texPos);\n\t\t//dFdx for \"boxing\" issue 435 has aliasing on some implementations (coarse vs fine)\n\t\t//however, this only identifies 50% of the edges due to aliasing effects\n\t\t// http://www.aclockworkberry.com/shader-derivative-functions/\n\t\t// https://bgolus.medium.com/distinctive-derivative-differences-cce38d36797b\n\t\t//if ((ocolor.a >= 1.0) && ((dFdx(ocolor.a) != 0.0) || (dFdy(ocolor.a) != 0.0)  ))\n\t\t//\tocolor.rbg = vec3(0.0, 0.0, 0.0);\n\t\tbool isOutlineBelowNotAboveThreshold = true;\n\t\tif (isOutlineBelowNotAboveThreshold) {\n\t\t\tif ((overlayOutlineWidth > 0.0) && (ocolor.a < 1.0)) { //check voxel neighbors for edge\n\t\t\t\tvec3 vx = (overlayOutlineWidth ) / vec3(textureSize(overlay, 0));\n\t\t\t\t//6 voxel neighbors that share a face\n\t\t\t\tvec3 vxR = vec3(texPos.x+vx.x, texPos.y, texPos.z);\n\t\t\t\tvec3 vxL = vec3(texPos.x-vx.x, texPos.y, texPos.z);\n\t\t\t\tvec3 vxA = vec3(texPos.x, texPos.y+vx.y, texPos.z);\n\t\t\t\tvec3 vxP = vec3(texPos.x, texPos.y-vx.y, texPos.z);\n\t\t\t\tvec3 vxS = vec3(texPos.x, texPos.y, texPos.z+vx.z);\n\t\t\t\tvec3 vxI = vec3(texPos.x, texPos.y, texPos.z-vx.z);\n\t\t\t\tfloat a = 0.0;\n\t\t\t\tif (axCorSag != 2) {\n\t\t\t\t\ta = max(a, texture(overlay, vxR).a);\n\t\t\t\t\ta = max(a, texture(overlay, vxL).a);\n\t\t\t\t}\n\t\t\t\tif (axCorSag != 1) {\n\t\t\t\t\ta = max(a, texture(overlay, vxA).a);\n\t\t\t\t\ta = max(a, texture(overlay, vxP).a);\n\t\t\t\t}\n\t\t\t\tif (axCorSag != 0) {\n\t\t\t\t\ta = max(a, texture(overlay, vxS).a);\n\t\t\t\t\ta = max(a, texture(overlay, vxI).a);\n\t\t\t\t}\n\t\t\t\tbool isCheckCorners = true;\n\t\t\t\tif (isCheckCorners) {\n\t\t\t\t\t//12 voxel neighbors that share an edge\n\t\t\t\t\tvec3 vxRA = vec3(texPos.x+vx.x, texPos.y+vx.y, texPos.z);\n\t\t\t\t\tvec3 vxLA = vec3(texPos.x-vx.x, texPos.y+vx.y, texPos.z);\n\t\t\t\t\tvec3 vxRP = vec3(texPos.x+vx.x, texPos.y-vx.y, texPos.z);\n\t\t\t\t\tvec3 vxLP = vec3(texPos.x-vx.x, texPos.y-vx.y, texPos.z);\n\t\t\t\t\tvec3 vxRS = vec3(texPos.x+vx.x, texPos.y, texPos.z+vx.z);\n\t\t\t\t\tvec3 vxLS = vec3(texPos.x-vx.x, texPos.y, texPos.z+vx.z);\n\t\t\t\t\tvec3 vxRI = vec3(texPos.x+vx.x, texPos.y, texPos.z-vx.z);\n\t\t\t\t\tvec3 vxLI = vec3(texPos.x-vx.x, texPos.y, texPos.z-vx.z);\n\t\t\t\t\tvec3 vxAS = vec3(texPos.x, texPos.y+vx.y, texPos.z+vx.z);\n\t\t\t\t\tvec3 vxPS = vec3(texPos.x, texPos.y-vx.y, texPos.z+vx.z);\n\t\t\t\t\tvec3 vxAI = vec3(texPos.x, texPos.y+vx.y, texPos.z-vx.z);\n\t\t\t\t\tvec3 vxPI = vec3(texPos.x, texPos.y-vx.y, texPos.z-vx.z);\n\n\t\t\t\t\tif (axCorSag == 0) { //axial corners\n\t\t\t\t\t\ta = max(a, texture(overlay, vxRA).a);\n\t\t\t\t\t\ta = max(a, texture(overlay, vxLA).a);\n\t\t\t\t\t\ta = max(a, texture(overlay, vxRP).a);\n\t\t\t\t\t\ta = max(a, texture(overlay, vxLP).a);\n\t\t\t\t\t}\n\t\t\t\t\tif (axCorSag == 1) { //coronal corners\n\t\t\t\t\t\ta = max(a, texture(overlay, vxRS).a);\n\t\t\t\t\t\ta = max(a, texture(overlay, vxLS).a);\n\t\t\t\t\t\ta = max(a, texture(overlay, vxRI).a);\n\t\t\t\t\t\ta = max(a, texture(overlay, vxLI).a);\n\t\t\t\t\t}\n\t\t\t\t\tif (axCorSag == 2) { //sagittal corners\n\t\t\t\t\t\ta = max(a, texture(overlay, vxAS).a);\n\t\t\t\t\t\ta = max(a, texture(overlay, vxPS).a);\n\t\t\t\t\t\ta = max(a, texture(overlay, vxAI).a);\n\t\t\t\t\t\ta = max(a, texture(overlay, vxPI).a);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (a >= 1.0) {\n\t\t\t\t\tocolor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\t\toverlayAlpha = 1.0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tif ((overlayOutlineWidth > 0.0) && (ocolor.a >= 1.0)) { //check voxel neighbors for edge\n\t\t\t\tvec3 vx = (overlayOutlineWidth ) / vec3(textureSize(overlay, 0));\n\t\t\t\tvec3 vxR = vec3(texPos.x+vx.x, texPos.y, texPos.z);\n\t\t\t\tvec3 vxL = vec3(texPos.x-vx.x, texPos.y, texPos.z);\n\t\t\t\tvec3 vxA = vec3(texPos.x, texPos.y+vx.y, texPos.z);\n\t\t\t\tvec3 vxP = vec3(texPos.x, texPos.y-vx.y, texPos.z);\n\t\t\t\tvec3 vxS = vec3(texPos.x, texPos.y, texPos.z+vx.z);\n\t\t\t\tvec3 vxI = vec3(texPos.x, texPos.y, texPos.z-vx.z);\n\t\t\t\tfloat a = 1.0;\n\t\t\t\tif (axCorSag != 2) {\n\t\t\t\t\ta = min(a, texture(overlay, vxR).a);\n\t\t\t\t\ta = min(a, texture(overlay, vxL).a);\n\t\t\t\t}\n\t\t\t\tif (axCorSag != 1) {\n\t\t\t\t\ta = min(a, texture(overlay, vxA).a);\n\t\t\t\t\ta = min(a, texture(overlay, vxP).a);\n\t\t\t\t}\n\t\t\t\tif (axCorSag != 0) {\n\t\t\t\t\ta = min(a, texture(overlay, vxS).a);\n\t\t\t\t\ta = min(a, texture(overlay, vxI).a);\n\t\t\t\t}\n\t\t\t\tif (a < 1.0) {\n\t\t\t\t\tocolor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\t\toverlayAlpha = 1.0;\n\t\t\t\t}\n\t\t\t}\n\t\t} //outline above threshold\n\t}\n\n`\n\nexport const fragSlice2DShader =\n  `#version 300 es\n#line 411\nprecision highp int;\nprecision highp float;\nuniform highp sampler2D volume, overlay;\nuniform int backgroundMasksOverlays;\nuniform float overlayOutlineWidth;\nuniform float overlayAlphaShader;\nuniform int axCorSag;\nuniform float overlays;\nuniform float opacity;\nuniform float drawOpacity;\nuniform bool isAlphaClipDark;\nuniform highp sampler2D drawing;\nuniform highp sampler2D colormap;\nin vec3 texPos;\nout vec4 color;` +\n  kDrawFunc +\n  `void main() {\n\t//color = vec4(1.0, 0.0, 1.0, 1.0);return;\n\tvec4 background = texture(volume, texPos.xy);\n\tcolor = vec4(background.rgb, opacity);\n\tif ((isAlphaClipDark) && (background.a == 0.0)) color.a = 0.0; //FSLeyes clipping range\n\tvec4 dcolor = drawColor(texture(drawing, texPos.xy).r, drawOpacity);\n\tif (dcolor.a > 0.0) {\n\t\tcolor.rgb = mix(color.rgb, dcolor.rgb, dcolor.a);\n\t\tcolor.a = max(drawOpacity, color.a);\n\t}\n}`\n\nexport const kFragSliceTail = `\tocolor.a *= overlayAlpha;\n\tvec4 dcolor = drawColor(texture(drawing, texPos).r, drawOpacity);\n\tif (dcolor.a > 0.0) {\n\t\tcolor.rgb = mix(color.rgb, dcolor.rgb, dcolor.a);\n\t\tcolor.a = max(drawOpacity, color.a);\n\t}\n\tif ((backgroundMasksOverlays > 0) && (background.a == 0.0))\n\t\treturn;\n\tfloat a = color.a + ocolor.a * (1.0 - color.a); // premultiplied alpha\n\tif (a == 0.0) return;\n\tcolor.rgb = mix(color.rgb, ocolor.rgb, ocolor.a / a);\n\tcolor.a = a;\n}`\n\nexport const fragSliceMMShader = kFragSliceHead + kFragSliceTail\n\nexport const fragSliceV1Shader =\n  kFragSliceHead +\n  `\tif (ocolor.a > 0.0) {\n\t\t//https://gamedev.stackexchange.com/questions/102889/is-it-possible-to-convert-vec4-to-int-in-glsl-using-opengl-es\n\t\tuint alpha = uint(ocolor.a * 255.0);\n\t\tvec3 xyzFlip = vec3(float((uint(1) & alpha) > uint(0)), float((uint(2) & alpha) > uint(0)), float((uint(4) & alpha) > uint(0)));\n\t\t//convert from 0 and 1 to -1 and 1\n\t\txyzFlip = (xyzFlip * 2.0) - 1.0;\n\t\t//https://math.stackexchange.com/questions/1905533/find-perpendicular-distance-from-point-to-line-in-3d\n\t\t//v1 principle direction of tensor for this voxel\n\t\tvec3 v1 = ocolor.rgb;\n\t\t//flips encode polarity to convert from 0..1 to -1..1 (27 bits vs 24 bit precision)\n\t\tv1 = normalize( v1 * xyzFlip);\n\t\tvec3 vxl = fract(texPos * vec3(textureSize(volume, 0))) - 0.5;\n\t\t//vxl coordinates now -0.5..+0.5 so 0,0,0 is origin\n\t\tvxl.x = -vxl.x;\n\t\tfloat t = dot(vxl,v1);\n\t\tvec3 P = t * v1;\n\t\tfloat dx = length(P-vxl);\n\t\tocolor.a = 1.0 - smoothstep(0.2,0.25, dx);\n\t\t//if modulation was applied, use that to scale alpha not color:\n\t\tocolor.a *= length(ocolor.rgb);\n\t\tocolor.rgb = normalize(ocolor.rgb);\n\t\t//compute distance one half voxel closer to viewer:\n\t\tfloat pan = 0.5;\n\t\tif (axCorSag == 0)\n\t\t\tvxl.z -= pan;\n\t\tif (axCorSag == 1)\n\t\t\tvxl.y -= pan;\n\t\tif (axCorSag == 2)\n\t\t\tvxl.x += pan;\n\t\tt = dot(vxl,v1);\n\t\tP = t * v1;\n\t\tfloat dx2 = length(P-vxl);\n\t\tocolor.rgb += (dx2-dx-(0.5 * pan)) * 1.0;\n\t}\n` +\n  kFragSliceTail\n\nexport const fragRectShader = `#version 300 es\n#line 480\nprecision highp int;\nprecision highp float;\nuniform vec4 lineColor;\nout vec4 color;\nvoid main() {\n\tcolor = lineColor;\n}`\n\nexport const fragRectOutlineShader = `#version 300 es\n#line 723\nprecision highp int;\nprecision highp float;\n\nuniform vec4 lineColor;\nuniform vec4 leftTopWidthHeight;\nuniform float thickness; // line thickness in pixels\nuniform vec2 canvasWidthHeight;\n\nout vec4 color;\n\nvoid main() {\n    // fragment position in screen coordinates\n    vec2 fragCoord = gl_FragCoord.xy;\n\n    // canvas height\n    float canvasHeight = canvasWidthHeight.y;\n\n    // 'top' and 'bottom' to match gl_FragCoord.y coordinate system\n    float top = canvasHeight - leftTopWidthHeight.y;\n    float bottom = top - leftTopWidthHeight.w;\n\n    // left and right edges\n    float left = leftTopWidthHeight.x;\n    float right = left + leftTopWidthHeight.z;\n\n    bool withinLeft = fragCoord.x >= left && fragCoord.x <= left + thickness;\n    bool withinRight = fragCoord.x <= right && fragCoord.x >= right - thickness;\n    bool withinTop = fragCoord.y <= top && fragCoord.y >= top - thickness;\n    bool withinBottom = fragCoord.y >= bottom && fragCoord.y <= bottom + thickness;\n\n    bool isOutline = withinLeft || withinRight || withinTop || withinBottom;\n\n    if (isOutline) {\n        color = lineColor;\n    } else {\n        discard; \n    }\n}`\n\nexport const vertColorbarShader = `#version 300 es\n#line 490\nlayout(location=0) in vec3 pos;\nuniform vec2 canvasWidthHeight;\nuniform vec4 leftTopWidthHeight;\nout vec2 vColor;\nvoid main(void) {\n\t//convert pixel x,y space 1..canvasWidth,1..canvasHeight to WebGL 1..-1,-1..1\n\tvec2 frac;\n\tfrac.x = (leftTopWidthHeight.x + (pos.x * leftTopWidthHeight.z)) / canvasWidthHeight.x; //0..1\n\tfrac.y = 1.0 - ((leftTopWidthHeight.y + ((1.0 - pos.y) * leftTopWidthHeight.w)) / canvasWidthHeight.y); //1..0\n\tfrac = (frac * 2.0) - 1.0;\n\tgl_Position = vec4(frac, 0.0, 1.0);\n\tvColor = pos.xy;\n}`\n\nexport const fragColorbarShader = `#version 300 es\n#line 506\nprecision highp int;\nprecision highp float;\nuniform highp sampler2D colormap;\nuniform float layer;\nin vec2 vColor;\nout vec4 color;\nvoid main() {\n\tfloat nlayer = float(textureSize(colormap, 0).y);\n\tfloat fmap = (0.5 + layer) / nlayer;\n\tcolor = vec4(texture(colormap, vec2(vColor.x, fmap)).rgb, 1.0);\n}`\n\nexport const vertRectShader = `#version 300 es\n#line 520\nlayout(location=0) in vec3 pos;\nuniform vec2 canvasWidthHeight;\nuniform vec4 leftTopWidthHeight;\nvoid main(void) {\n\t//convert pixel x,y space 1..canvasWidth,1..canvasHeight to WebGL 1..-1,-1..1\n\tvec2 frac;\n\tfrac.x = (leftTopWidthHeight.x + (pos.x * leftTopWidthHeight.z)) / canvasWidthHeight.x; //0..1\n\tfrac.y = 1.0 - ((leftTopWidthHeight.y + ((1.0 - pos.y) * leftTopWidthHeight.w)) / canvasWidthHeight.y); //1..0\n\tfrac = (frac * 2.0) - 1.0;\n\tgl_Position = vec4(frac, 0.0, 1.0);\n}`\n\nexport const vertLineShader = `#version 300 es\n#line 534\nlayout(location=0) in vec3 pos;\nuniform vec2 canvasWidthHeight;\nuniform float thickness;\nuniform vec4 startXYendXY;\nvoid main(void) {\n\tvec2 posXY = mix(startXYendXY.xy, startXYendXY.zw, pos.x);\n\tvec2 dir = normalize(startXYendXY.xy - startXYendXY.zw);\n\tposXY += vec2(-dir.y, dir.x) * thickness * (pos.y - 0.5);\n\tposXY.x = (posXY.x) / canvasWidthHeight.x; //0..1\n\tposXY.y = 1.0 - (posXY.y / canvasWidthHeight.y); //1..0\n\tgl_Position = vec4((posXY * 2.0) - 1.0, 0.0, 1.0);\n}`\n\nexport const vertLine3DShader = `#version 300 es\n#line 534\nlayout(location=0) in vec3 pos;\nuniform vec2 canvasWidthHeight;\nuniform float thickness;\nuniform vec2 startXY;\nuniform vec3 endXYZ; // transformed XYZ point\nvoid main(void) {\t\n\tvec2 posXY = mix(startXY.xy, endXYZ.xy, pos.x);\n\tvec2 startDiff = endXYZ.xy - startXY.xy;\n\tfloat startDistance = length(startDiff);\n\tvec2 diff = endXYZ.xy - posXY;\n\tfloat currentDistance = length(diff);\n\tvec2 dir = normalize(startXY.xy - endXYZ.xy);\n\tposXY += vec2(-dir.y, dir.x) * thickness * (pos.y - 0.5);\n\tposXY.x = (posXY.x) / canvasWidthHeight.x; //0..1\n\tposXY.y = 1.0 - (posXY.y / canvasWidthHeight.y); //1..0\t\n\tfloat z = endXYZ.z * ( 1.0 - abs(currentDistance/startDistance)); \n\tgl_Position = vec4((posXY * 2.0) - 1.0, z, 1.0);\n}`\n\nexport const vertBmpShader = `#version 300 es\n#line 549\nlayout(location=0) in vec3 pos;\nuniform vec2 canvasWidthHeight;\nuniform vec4 leftTopWidthHeight;\nout vec2 vUV;\nvoid main(void) {\n\t//convert pixel x,y space 1..canvasWidth,1..canvasHeight to WebGL 1..-1,-1..1\n\tvec2 frac;\n\tfrac.x = (leftTopWidthHeight.x + (pos.x * leftTopWidthHeight.z)) / canvasWidthHeight.x; //0..1\n\tfrac.y = 1.0 - ((leftTopWidthHeight.y + ((1.0 - pos.y) * leftTopWidthHeight.w)) / canvasWidthHeight.y); //1..0\n\tfrac = (frac * 2.0) - 1.0;\n\tgl_Position = vec4(frac, 0.0, 1.0);\n\tvUV = vec2(pos.x, 1.0 - pos.y);\n}`\n\nexport const fragBmpShader = `#version 300 es\n#line 565\nprecision highp int;\nprecision highp float;\nuniform highp sampler2D bmpTexture;\nin vec2 vUV;\nout vec4 color;\nvoid main() {\n\tcolor = texture(bmpTexture, vUV);\n}`\n\nexport const vertFontShader = `#version 300 es\n#line 576\nlayout(location=0) in vec3 pos;\nuniform vec2 canvasWidthHeight;\nuniform vec4 leftTopWidthHeight;\nuniform vec4 uvLeftTopWidthHeight;\nout vec2 vUV;\nvoid main(void) {\n\t//convert pixel x,y space 1..canvasWidth,1..canvasHeight to WebGL 1..-1,-1..1\n\tvec2 frac;\n\tfrac.x = (leftTopWidthHeight.x + (pos.x * leftTopWidthHeight.z)) / canvasWidthHeight.x; //0..1\n\tfrac.y = 1.0 - ((leftTopWidthHeight.y + ((1.0 - pos.y) * leftTopWidthHeight.w)) / canvasWidthHeight.y); //1..0\n\tfrac = (frac * 2.0) - 1.0;\n\tgl_Position = vec4(frac, 0.0, 1.0);\n\tvUV = vec2(uvLeftTopWidthHeight.x + (pos.x * uvLeftTopWidthHeight.z), uvLeftTopWidthHeight.y  + ((1.0 - pos.y) * uvLeftTopWidthHeight.w) );\n}`\n\nexport const fragFontShader = `#version 300 es\n#line 593\nprecision highp int;\nprecision highp float;\nuniform highp sampler2D fontTexture;\nuniform vec4 fontColor;\nuniform float screenPxRange;\nin vec2 vUV;\nout vec4 color;\nfloat median(float r, float g, float b) {\n\treturn max(min(r, g), min(max(r, g), b));\n}\nvoid main() {\n\tvec3 msd = texture(fontTexture, vUV).rgb;\n\tfloat sd = median(msd.r, msd.g, msd.b);\n\tfloat screenPxDistance = screenPxRange*(sd - 0.5);\n\tfloat opacity = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n\tcolor = vec4(fontColor.rgb , fontColor.a * opacity);\n}`\n\nexport const vertCircleShader = `#version 300 es\nlayout(location=0) in vec3 pos;\nuniform vec2 canvasWidthHeight;\nuniform vec4 leftTopWidthHeight;\nuniform vec4 uvLeftTopWidthHeight;\nout vec2 vUV;\nvoid main(void) {\n\t//convert pixel x,y space 1..canvasWidth,1..canvasHeight to WebGL 1..-1,-1..1\n\tvec2 frac;\n\tfrac.x = (leftTopWidthHeight.x + (pos.x * leftTopWidthHeight.z)) / canvasWidthHeight.x; //0..1\n\tfrac.y = 1.0 - ((leftTopWidthHeight.y + ((1.0 - pos.y) * leftTopWidthHeight.w)) / canvasWidthHeight.y); //1..0\n\tfrac = (frac * 2.0) - 1.0;\n\tgl_Position = vec4(frac, 0.0, 1.0);\n\tvUV = pos.xy;\n}`\n\nexport const fragCircleShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform vec4 circleColor;\nuniform float fillPercent;\nin vec2 vUV;\nout vec4 color;\nvoid main() {\n\t/* Check if the pixel is inside the circle\n\t\t and color it with a gradient. Otherwise, color it \n\t\t transparent   */\n\tfloat distance = length(vUV-vec2(0.5,0.5));\n\tif ( distance < 0.5 && distance >= (1.0 - fillPercent) / 2.0){\n\t\t\tcolor = vec4(circleColor.r,circleColor.g,circleColor.b,circleColor.a) ;\t\t\t\n\t}else{\n\t\t\tcolor = vec4(0.0,0.0,0.0,0.0);\n\t}\n}\n`\n\nexport const vertOrientShader = `#version 300 es\n#line 613\nprecision highp int;\nprecision highp float;\nin vec3 vPos;\nout vec2 TexCoord;\nvoid main() {\n\tTexCoord = vPos.xy;\n\tgl_Position = vec4( (vPos.xy-vec2(0.5,0.5)) * 2.0, 0.0, 1.0);\n}`\n\nexport const fragOrientShaderU = `#version 300 es\nuniform highp usampler3D intensityVol;\n`\n\nexport const fragOrientShaderI = `#version 300 es\nuniform highp isampler3D intensityVol;\n`\n\nexport const fragOrientShaderF = `#version 300 es\nuniform highp sampler3D intensityVol;\n`\n\nexport const fragOrientShaderAtlas = `#line 636\nprecision highp int;\nprecision highp float;\nin vec2 TexCoord;\nout vec4 FragColor;\nuniform float coordZ;\nuniform float layer;\nuniform highp sampler2D colormap;\nuniform lowp sampler3D blend3D;\nuniform float opacity;\nuniform vec4 xyzaFrac;\nuniform mat4 mtx;\nvoid main(void) {\n\tvec4 vx = vec4(TexCoord.x, TexCoord.y, coordZ, 1.0) * mtx;\n\tuint idx = uint(texture(intensityVol, vx.xyz).r);\n\tFragColor = vec4(0.0, 0.0, 0.0, 0.0);\n\tif (idx == uint(0))\n\t\treturn;\n\t//idx = ((idx - uint(1)) % uint(100))+uint(1);\n\tfloat textureWidth = float(textureSize(colormap, 0).x);\n\tfloat fx = (float(idx)+0.5) / textureWidth;\n\tfloat nlayer = float(textureSize(colormap, 0).y);\n\tfloat y = ((2.0 * layer) + 1.5)/nlayer;\n\tFragColor = texture(colormap, vec2(fx, y)).rgba;\n\tfloat alpha = FragColor.a;\n\tFragColor.a *= opacity;\n\tif (xyzaFrac.a > 0.0) { //outline\n\t\tvx = vec4(TexCoord.x+xyzaFrac.x, TexCoord.y, coordZ, 1.0) * mtx;\n\t\tuint R = uint(texture(intensityVol, vx.xyz).r);\n\t\tvx = vec4(TexCoord.x-xyzaFrac.x, TexCoord.y, coordZ, 1.0) * mtx;\n\t\tuint L = uint(texture(intensityVol, vx.xyz).r);\n\t\tvx = vec4(TexCoord.x, TexCoord.y+xyzaFrac.y, coordZ, 1.0) * mtx;\n\t\tuint A = uint(texture(intensityVol, vx.xyz).r);\n\t\tvx = vec4(TexCoord.x, TexCoord.y-xyzaFrac.y, coordZ, 1.0) * mtx;\n\t\tuint P = uint(texture(intensityVol, vx.xyz).r);\n\t\tvx = vec4(TexCoord.x, TexCoord.y, coordZ+xyzaFrac.z, 1.0) * mtx;\n\t\tuint S = uint(texture(intensityVol, vx.xyz).r);\n\t\tvx = vec4(TexCoord.x, TexCoord.y, coordZ-xyzaFrac.z, 1.0) * mtx;\n\t\tuint I = uint(texture(intensityVol, vx.xyz).r);\n\t\tif ((idx != R) || (idx != L) || (idx != A) || (idx != P) || (idx != S) || (idx != I))\n\t\t\tFragColor.a = alpha * xyzaFrac.a;\n\t}\n}`\n\nexport const fragOrientShader = `#line 691\nprecision highp int;\nprecision highp float;\nin vec2 TexCoord;\nout vec4 FragColor;\nuniform float coordZ;\nuniform float layer;\nuniform float scl_slope;\nuniform float scl_inter;\nuniform float cal_max;\nuniform float cal_min;\nuniform float cal_maxNeg;\nuniform float cal_minNeg;\nuniform bool isAlphaThreshold;\nuniform bool isColorbarFromZero;\nuniform bool isAdditiveBlend;\nuniform highp sampler2D colormap;\nuniform lowp sampler3D blend3D;\nuniform int modulation;\nuniform highp sampler3D modulationVol;\nuniform float opacity;\nuniform mat4 mtx;\nvoid main(void) {\n\tvec4 vx = vec4(TexCoord.xy, coordZ, 1.0) * mtx;\n\tif ((vx.x < 0.0) || (vx.x > 1.0) || (vx.y < 0.0) || (vx.y > 1.0) || (vx.z < 0.0) || (vx.z > 1.0)) {\n\t\t//set transparent if out of range\n\t\t//https://webglfundamentals.org/webgl/webgl-3d-textures-repeat-clamp.html\n\t\tFragColor = texture(blend3D, vec3(TexCoord.xy, coordZ));\n\t\treturn;\n\t}\n\tfloat f = (scl_slope * float(texture(intensityVol, vx.xyz).r)) + scl_inter;\n\tfloat mn = cal_min;\n\tfloat mx = cal_max;\n\tif ((isAlphaThreshold) || (isColorbarFromZero))\n\t\tmn = 0.0;\n\tfloat r = max(0.00001, abs(mx - mn));\n\tmn = min(mn, mx);\n\tfloat txl = mix(0.0, 1.0, (f - mn) / r);\n\tif (f > mn) { //issue1139: survives threshold, so round up to opaque voxel\n\t\ttxl = max(txl, 2.0/256.0);\n\t}\n\t//https://stackoverflow.com/questions/5879403/opengl-texture-coordinates-in-pixel-space\n\tfloat nlayer = float(textureSize(colormap, 0).y);\n\t//each volume has two color maps:\n\t// (layer*2) = negative and (layer * 2) + 1 = positive\n\tfloat y = ((2.0 * layer) + 1.5)/nlayer;\n\tFragColor = texture(colormap, vec2(txl, y)).rgba;\n\t//negative colors\n\tmn = cal_minNeg;\n\tmx = cal_maxNeg;\n\tif ((isAlphaThreshold) || (isColorbarFromZero))\n\t\tmx = 0.0;\n\t//if ((!isnan(cal_minNeg)) && ( f < mx)) {\n\tif ((cal_minNeg < cal_maxNeg) && ( f < mx)) {\n\t\tr = max(0.00001, abs(mx - mn));\n\t\tmn = min(mn, mx);\n\t\ttxl = 1.0 - mix(0.0, 1.0, (f - mn) / r);\n\t\t//issue1139: survives threshold, so round up to opaque voxel\n\t\ttxl = max(txl, 2.0/256.0);\n\t\ty = ((2.0 * layer) + 0.5)/nlayer;\n\t\tFragColor = texture(colormap, vec2(txl, y));\n\t}\n\tif (layer > 0.7)\n\t\tFragColor.a = step(0.00001, FragColor.a);\n\t//if (modulation > 10)\n\t//\tFragColor.a *= texture(modulationVol, vx.xyz).r;\n\t//\tFragColor.rgb *= texture(modulationVol, vx.xyz).r;\n\tif (isAlphaThreshold) {\n\t\tif ((cal_minNeg != cal_maxNeg) && ( f < 0.0) && (f > cal_maxNeg))\n\t\t\tFragColor.a = pow(-f / -cal_maxNeg, 2.0);\n\t\telse if ((f > 0.0) && (cal_min > 0.0))\n\t\t\tFragColor.a *= pow(f / cal_min, 2.0); //issue435:  A = (V/X)**2\n\t\t//FragColor.g = 0.0;\n\t} else if (isColorbarFromZero) {\n\t\tif ((cal_minNeg != cal_maxNeg) && ( f < 0.0) && (f > cal_maxNeg))\n\t\t\tFragColor.a = 0.0;\n\t\telse if ((f > 0.0) && (cal_min > 0.0) && (f < cal_min))\n\t\t\tFragColor.a *= 0.0;\n\n\t}\n\tif (modulation == 1) {\n\t\tFragColor.rgb *= texture(modulationVol, vx.xyz).r;\n\t} else if (modulation == 2) {\n\t\tFragColor.a = texture(modulationVol, vx.xyz).r;\n\t}\n\tFragColor.a *= opacity;\n\tif (layer < 1.0) return;\n\tvec4 prevColor = texture(blend3D, vec3(TexCoord.xy, coordZ));\n\t// https://en.wikipedia.org/wiki/Alpha_compositing\n\tfloat aout = FragColor.a + (1.0 - FragColor.a) * prevColor.a;\n\tif (aout <= 0.0) return;\n\tif (isAdditiveBlend)\n\t\tFragColor.rgb = ((FragColor.rgb * FragColor.a) + (prevColor.rgb * prevColor.a)) / aout;\n\telse\n\t\tFragColor.rgb = ((FragColor.rgb * FragColor.a) + (prevColor.rgb * prevColor.a * (1.0 - FragColor.a))) / aout;\n\tFragColor.a = aout;\n}`\n\nexport const fragRGBOrientShader = `#line 773\nprecision highp int;\nprecision highp float;\nin vec2 TexCoord;\nout vec4 FragColor;\nuniform float coordZ;\nuniform float layer;\nuniform float scl_slope;\nuniform float scl_inter;\nuniform float cal_max;\nuniform float cal_min;\nuniform highp sampler2D colormap;\nuniform lowp sampler3D blend3D;\nuniform float opacity;\nuniform mat4 mtx;\nuniform bool hasAlpha;\nuniform int modulation;\nuniform highp sampler3D modulationVol;\nvoid main(void) {\n\tvec4 vx = vec4(TexCoord.xy, coordZ, 1.0) * mtx;\n\tuvec4 aColor = texture(intensityVol, vx.xyz);\n\tFragColor = vec4(float(aColor.r) / 255.0, float(aColor.g) / 255.0, float(aColor.b) / 255.0, float(aColor.a) / 255.0);\n\tif (modulation == 1)\n\t\tFragColor.rgb *= texture(modulationVol, vx.xyz).r;\n\tif (!hasAlpha) {\n\t\tFragColor.a = (FragColor.r * 0.21 + FragColor.g * 0.72 + FragColor.b * 0.07);\n\t\t//next line: we could binarize alpha, but see rendering of visible human\n\t\t//FragColor.a = step(0.01, FragColor.a);\n\t}\n\tif (modulation == 2)\n\t\tFragColor.a = texture(modulationVol, vx.xyz).r;\n\tFragColor.a *= opacity;\n}`\n\nexport const vertGrowCutShader = `#version 300 es\n#line 808\nprecision highp int;\nprecision highp float;\nin vec3 vPos;\nout vec2 TexCoord;\nvoid main() {\n\tTexCoord = vPos.xy;\n\tgl_Position = vec4((vPos.x - 0.5) * 2.0, (vPos.y - 0.5) * 2.0, 0.0, 1.0);\n}`\n\n// https://github.com/pieper/step/blob/master/src/growcut.js\n// Steve Pieper 2022: Apache License 2.0\nexport const fragGrowCutShader = `#version 300 es\n#line 829\n\tprecision highp float;\n\tprecision highp int;\n\tprecision highp isampler3D;\n\tlayout(location = 0) out int label;\n\tlayout(location = 1) out int strength;\n\tin vec2 TexCoord;\n\tuniform int finalPass;\n\tuniform float coordZ;\n\tuniform lowp sampler3D in3D;\n\tuniform highp isampler3D backTex; // background\n\tuniform highp isampler3D labelTex; // label\n\tuniform highp isampler3D strengthTex; // strength\nvoid main(void) {\n\tvec3 interpolatedTextureCoordinate = vec3(TexCoord.xy, coordZ);\n\tivec3 size = textureSize(backTex, 0);\n\tivec3 texelIndex = ivec3(floor(interpolatedTextureCoordinate * vec3(size)));\n\tint background = texelFetch(backTex, texelIndex, 0).r;\n\tlabel = texelFetch(labelTex, texelIndex, 0).r;\n\tstrength = texelFetch(strengthTex, texelIndex, 0).r;\n\tfor (int k = -1; k <= 1; k++) {\n\t\tfor (int j = -1; j <= 1; j++) {\n\t\t\tfor (int i = -1; i <= 1; i++) {\n\t\t\t\tif (i != 0 && j != 0 && k != 0) {\n\t\t\t\t\tivec3 neighborIndex = texelIndex + ivec3(i,j,k);\n\t\t\t\t\tint neighborBackground = texelFetch(backTex, neighborIndex, 0).r;\n\t\t\t\t\tint neighborStrength = texelFetch(strengthTex, neighborIndex, 0).r;\n\t\t\t\t\tint strengthCost = abs(neighborBackground - background);\n\t\t\t\t\tint takeoverStrength = neighborStrength - strengthCost;\n\t\t\t\t\tif (takeoverStrength > strength) {\n\t\t\t\t\t\tstrength = takeoverStrength;\n\t\t\t\t\t\tlabel = texelFetch(labelTex, neighborIndex, 0).r;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (finalPass < 1)\n\t\treturn;\n\tint ok = 1;\n\tivec4 labelCount = ivec4(0,0,0,0);\n\tfor (int k = -1; k <= 1; k++)\n\t\tfor (int j = -1; j <= 1; j++)\n\t\t\tfor (int i = -1; i <= 1; i++) {\n\t\t\t\tivec3 neighborIndex = texelIndex + ivec3(i,j,k);\n\t\t\t\tint ilabel = texelFetch(labelTex, neighborIndex, 0).r;\n\t\t\t\tif ((ilabel < 0) || (ilabel > 3))\n\t\t\t\t\tok = 0;\n\t\t\t\telse\n\t\t\t\t\tlabelCount[ilabel]++;\n\t\t\t}\n\tif (ok != 1) {\n\t\treturn;\n\t}\n\tint maxIdx = 0;\n\tfor (int i = 1; i < 4; i++) {\n\t\tif (labelCount[i] > labelCount[maxIdx])\n\t\t\tmaxIdx = i;\n\t}\n\tlabel = maxIdx;\n}`\n\nexport const vertSurfaceShader = `#version 300 es\nlayout(location=0) in vec3 pos;\nuniform mat4 mvpMtx;\nvoid main(void) {\n\tgl_Position = mvpMtx * vec4(pos, 1.0);\n}`\n\nexport const fragSurfaceShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform vec4 surfaceColor;\nout vec4 color;\nvoid main() {\n\tcolor = surfaceColor;\n}`\n\nexport const vertFiberShader = `#version 300 es\nlayout(location=0) in vec3 pos;\nlayout(location=1) in vec4 clr;\nout vec4 vClr;\nuniform mat4 mvpMtx;\nvoid main(void) {\n\tgl_Position = mvpMtx * vec4(pos, 1.0);\n\tvClr = clr;\n}`\n\nexport const fragFiberShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nin vec4 vClr;\nout vec4 color;\nuniform float opacity;\nvoid main() {\n\tcolor = vec4(vClr.rgb, opacity);\n}`\n\nexport const vertMeshShader = `#version 300 es\nlayout(location=0) in vec3 pos;\nlayout(location=1) in vec4 norm;\nlayout(location=2) in vec4 clr;\nuniform mat4 mvpMtx;\n//uniform mat4 modelMtx;\nuniform mat4 normMtx;\nout vec4 vClr;\nout vec3 vN;\nout vec4 vP;\nout vec4 vPc;\nvoid main(void) {\n\tvec3 lightPosition = vec3(0.0, 0.0, -10.0);\n\tvP = vec4(pos, 1.0);\n\tvPc = mvpMtx * vec4(pos, 1.0);\n\tgl_Position = vPc;\n\tvN = normalize((normMtx * vec4(norm.xyz,1.0)).xyz);\n\t//vV = -vec3(modelMtx*vec4(pos,1.0));\n\tvClr = clr;\n}`\n\n// report depth for fragment\n// https://github.com/rii-mango/Papaya/blob/782a19341af77a510d674c777b6da46afb8c65f1/src/js/viewer/screensurface.js#L89\nexport const fragMeshDepthShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nout vec4 color;\nvec4 packFloatToVec4i(const float value) {\n\tconst vec4 bitSh = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\n\tconst vec4 bitMsk = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\n\tvec4 res = fract(value * bitSh);\n\tres -= res.xxyz * bitMsk;\n\treturn res;\n}\nvoid main() {\n\tcolor = packFloatToVec4i(gl_FragCoord.z);\n}`\n\n// ToonShader https://prideout.net/blog/old/blog/index.html@tag=toon-shader.html\nexport const fragMeshToonShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nin vec4 vClr;\nin vec3 vN;\nout vec4 color;\nfloat stepmix(float edge0, float edge1, float E, float x){\n\tfloat T = clamp(0.5 * (x - edge0 + E) / E, 0.0, 1.0);\n\treturn mix(edge0, edge1, T);\n}\nvoid main() {\n\tvec3 r = vec3(0.0, 0.0, 1.0);\n\tfloat ambient = 0.3;\n\tfloat diffuse = 0.6;\n\tfloat specular = 0.5;\n\tfloat shininess = 50.0;\n\tvec3 n = normalize(vN);\n\tvec3 lightPosition = vec3(0.0, 10.0, -5.0);\n\tvec3 l = normalize(lightPosition);\n\tfloat df = max(0.0, dot(n, l));\n\tfloat sf = pow(max(dot(reflect(l, n), r), 0.0), shininess);\n\tconst float A = 0.1;\n\tconst float B = 0.3;\n\tconst float C = 0.6;\n\tconst float D = 1.0;\n\tfloat E = fwidth(df);\n\tif (df > A - E && df < A + E) df = stepmix(A, B, E, df);\n\telse if (df > B - E && df < B + E) df = stepmix(B, C, E, df);\n\telse if (df > C - E && df < C + E) df = stepmix(C, D, E, df);\n\telse if (df < A) df = 0.0;\n\telse if (df < B) df = B;\n\telse if (df < C) df = C;\n\telse df = D;\n\tE = fwidth(sf);\n\tif (sf > 0.5 - E && sf < 0.5 + E)\n\t\tsf = smoothstep(0.5 - E, 0.5 + E, sf);\n\telse\n\t\tsf = step(0.5, sf);\n\tvec3 a = vClr.rgb * ambient;\n\tvec3 d = max(df, 0.0) * vClr.rgb * diffuse;\n\tcolor.rgb = a + d + (specular * sf);\n\tcolor.a = opacity;\n}`\n\n// outline\nexport const fragMeshOutlineShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nin vec4 vClr;\nin vec3 vN;\nout vec4 color;\nvoid main() {\n\tvec3 r = vec3(0.0, 0.0, 1.0); //rayDir: for orthographic projections moving in Z direction (no need for normal matrix)\n\tfloat ambient = 0.3;\n\tfloat diffuse = 0.6;\n\tfloat specular = 0.25;\n\tfloat shininess = 10.0;\n\tfloat PenWidth = 0.6;\n\tvec3 n = normalize(vN);\n\tvec3 lightPosition = vec3(0.0, 10.0, -5.0);\n\tvec3 l = normalize(lightPosition);\n\tfloat lightNormDot = dot(n, l);\n\tfloat view = abs(dot(n,r)); //with respect to viewer\n\tif (PenWidth < view) discard;\n\tvec3 a = vClr.rgb * ambient;\n\tvec3 d = max(lightNormDot, 0.0) * vClr.rgb * diffuse;\n\tfloat s = specular * pow(max(dot(reflect(l, n), r), 0.0), shininess);\n\tcolor.rgb = a + d + s;\n\tcolor.a = opacity;\n}`\n\n// Flat shader with edge outline inspired by ggseg\nexport const fragMeshRimShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nin vec4 vClr;\nin vec3 vN;\nout vec4 color;\nvoid main() {\n\tconst float thresh = 0.4;\n\tconst vec3 viewDir = vec3(0.0, 0.0, -1.0);\n\tvec3 n = normalize(vN);\n\t// use abs() for two-sided lighting, max() for one sided\n\tfloat cosTheta = abs(dot(n, viewDir));\n\t// float cosTheta = max(dot(n, viewDir), 0.0);\n\t// optional fresnel equation - adjust exponent\n\t// cosTheta = 1.0 - pow(1.0 - cosTheta, 2.0);\n\t// use step for binary edges, smoothstep for feathered edges\n\t// vec3 d = step(thresh, cosTheta) * vClr.rgb;\n\tvec3 d = smoothstep(thresh - 0.05, thresh + 0.05, cosTheta) * vClr.rgb;\n\tcolor = vec4(d, opacity);\n}`\n\nexport const fragMeshContourShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nin vec4 vClr;\nin vec3 vN;\nout vec4 color;\nvoid main() {\n  const float edge0 = 0.1;\n  const float edge1 = 0.25;\n  const vec3 viewDir = vec3(0.0, 0.0, -1.0);\n  vec3 n = normalize(vN);\n  float cosTheta = abs(dot(n, viewDir));\n  float alpha = 1.0 - smoothstep(edge0, edge1, cosTheta);\n  if (alpha <= 0.0) {\n    discard;\n  }\n  color = vec4(0.0, 0.0, 0.0, opacity * alpha);\n}`\n\n// Phong headlight shader for edge enhancement, opposite of fresnel rim lighting\nexport const fragMeshEdgeShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nin vec4 vClr;\nin vec3 vN;\nout vec4 color;\nvoid main() {\n\tvec3 r = vec3(0.0, 0.0, 1.0); //rayDir: for orthographic projections moving in Z direction (no need for normal matrix)\n\tfloat diffuse = 1.0;\n\tfloat specular = 0.2;\n\tfloat shininess = 10.0;\n\tvec3 n = normalize(vN);\n\tvec3 lightPosition = vec3(0.0, 0.0, -5.0);\n\tvec3 l = normalize(lightPosition);\n\tfloat lightNormDot = max(dot(n, l), 0.0);\n\tvec3 d = lightNormDot * vClr.rgb * diffuse;\n\tfloat s = specular * pow(max(dot(reflect(l, n), r), 0.0), shininess);\n\tcolor = vec4(d + s, opacity);\n}`\n\nexport const fragMeshDiffuseEdgeShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nin vec4 vClr;\nin vec3 vN;\nout vec4 color;\nvoid main() {\n\tfloat diffuse = 1.4;\n\tvec3 l = vec3(0.0, 0.0, -1.0);\n\tfloat lightNormDot = max(dot(normalize(vN), l), 0.0);\n\tcolor = vec4(lightNormDot * vClr.rgb * diffuse, opacity);\n}`\n\nexport const fragMeshSpecularEdgeShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nin vec4 vClr;\nin vec3 vN;\nout vec4 color;\nvoid main() {\n\tfloat specularRGB = 0.7;\n\tfloat specularWhite = 0.3;\n\tfloat shininess = 10.0;\n\tfloat diffuse = 1.0;\n\tvec3 r = vec3(0.0, 0.0, 1.0); //rayDir: for orthographic projections moving in Z direction (no need for normal matrix)\n\tvec3 n = normalize(vN);\n\tvec3 l = vec3(0.0, 0.0, -1.0);\n\tfloat lightNormDot = max(dot(n, l), 0.0);\n\tvec3 d3 = lightNormDot * vClr.rgb * diffuse;\n\tfloat s = pow(max(dot(reflect(l, n), r), 0.0), shininess);\n\tvec3 s3 = specularRGB * s * vClr.rgb;\n\ts *= specularWhite;\n\tcolor = vec4(d3 + s3 + s, opacity);\n}`\n\n// https://thorium.rocks/media/curves/curvaceous.html\nexport const fragMeshShaderCrevice = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nin vec4 vClr;\nin vec3 vN;\nin vec4 vPc;\nout vec4 color;\nvoid main() {\n\tvec3 n = normalize(vN);\n\t// Compute curvature\n\tvec3 dx = dFdx(n);\n\tvec3 dy = dFdy(n);\n\tvec3 xneg = n - dx;\n\tvec3 xpos = n + dx;\n\tvec3 yneg = n - dy;\n\tvec3 ypos = n + dy;\n\tfloat depth = length(vPc.xyz);\n\tfloat curv = (cross(xneg, xpos).y - cross(yneg, ypos).x) / depth;\n\t//at this stage 0.5 for flat, with valleys dark and ridges bright\n\tcurv = 1.0 - (curv + 0.5);\n\t//clamp\n\tcurv =  min(max(curv, 0.0), 1.0);\n\t// easing function\n\tcurv = pow(curv, 0.5);\n\t//modulate ambient and diffuse with curvature\n\tvec3 r = vec3(0.0, 0.0, 1.0); //rayDir: for orthographic projections moving in Z direction (no need for normal matrix)\n\tfloat ambient = 0.6;\n\tfloat diffuse = 0.6;\n\tfloat specular = 0.2;\n\tfloat shininess = 10.0;\n\tvec3 lightPosition = vec3(0.0, 10.0, -2.0);\n\tvec3 l = normalize(lightPosition);\n\tfloat lightNormDot = dot(n, l);\n\tvec3 a = vClr.rgb * ambient * curv;\n\tvec3 d = max(lightNormDot, 0.0) * vClr.rgb * diffuse;\n\tfloat s = specular * pow(max(dot(reflect(l, n), r), 0.0), shininess);\n\tcolor = vec4(a + d + s, opacity);\n}`\n// Phong: default\nexport const fragMeshShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nin vec4 vClr;\nin vec3 vN;\nout vec4 color;\nvoid main() {\n\tvec3 r = vec3(0.0, 0.0, 1.0); //rayDir: for orthographic projections moving in Z direction (no need for normal matrix)\n\tfloat ambient = 0.35;\n\tfloat diffuse = 0.5;\n\tfloat specular = 0.2;\n\tfloat shininess = 10.0;\n\tvec3 n = normalize(vN);\n\tvec3 lightPosition = vec3(0.0, 10.0, -5.0);\n\tvec3 l = normalize(lightPosition);\n\tfloat lightNormDot = dot(n, l);\n\tvec3 a = vClr.rgb * ambient;\n\tvec3 d = max(lightNormDot, 0.0) * vClr.rgb * diffuse;\n\tfloat s = specular * pow(max(dot(reflect(l, n), r), 0.0), shininess);\n\tcolor = vec4(a + d + s, opacity);\n}`\n\n// Matcap: modulate mesh color with spherical matcap image\nexport const fragMeshMatcapShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nin vec4 vClr;\nin vec3 vN;\nuniform sampler2D matCap;\nout vec4 color;\nvoid main() {\n\tvec3 n = normalize(vN);\n\tvec2 uv = n.xy * 0.5 + 0.5;\n\tuv.y = 1.0 - uv.y;\n\tvec3 clr = texture(matCap,uv.xy).rgb * vClr.rgb;\n\tcolor = vec4(clr, opacity);\n}`\n\n// matte: same as phong without specular and a bit more diffuse\nexport const fragMeshMatteShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nin vec4 vClr;\nin vec3 vN;\nout vec4 color;\nvoid main() {\n\tfloat ambient = 0.35;\n\tfloat diffuse = 0.6;\n\tvec3 n = normalize(vN);\n\tvec3 lightPosition = vec3(0.0, 10.0, -5.0);\n\tvec3 l = normalize(lightPosition);\n\tfloat lightNormDot = dot(n, l);\n\tvec3 a = vClr.rgb * ambient;\n\tvec3 d = max(lightNormDot, 0.0) * vClr.rgb * diffuse;\n\tcolor = vec4(a + d, opacity);\n}`\n\n// Hemispheric\nexport const fragMeshHemiShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nin vec4 vClr;\nin vec3 vN;\nout vec4 color;\nvoid main() {\n\tvec3 r = vec3(0.0, 0.0, 1.0); //rayDir: for orthographic projections moving in Z direction (no need for normal matrix)\n\tfloat ambient = 0.35;\n\tfloat diffuse = 0.5;\n\tfloat specular = 0.2;\n\tfloat shininess = 10.0;\n\tvec3 n = normalize(vN);\n\tvec3 lightPosition = vec3(0.0, 10.0, -5.0);\n\tvec3 l = normalize(lightPosition);\n\tfloat lightNormDot = dot(n, l);\n\tvec3 up = vec3(0.0, 1.0, 0.0);\n\tfloat ax = dot(n, up) * 0.5 + 0.5;  //Shreiner et al. (2013) OpenGL Programming Guide, 8th Ed., p 388. ISBN-10: 0321773039\n\tvec3 upClr = vec3(1.0, 1.0, 0.95);\n\tvec3 downClr = vec3(0.4, 0.4, 0.6);\n\tvec3 a = vClr.rgb * ambient;\n\ta *= mix(downClr, upClr, ax);\n\tvec3 d = max(lightNormDot, 0.0) * vClr.rgb * diffuse;\n\tfloat s = specular * pow(max(dot(reflect(l, n), r), 0.0), shininess);\n\tcolor = vec4(a + d + s, opacity);\n}`\n\nexport const fragMeshShaderSHBlue = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nin vec4 vClr;\nin vec3 vN;\nout vec4 color;\n//Spherical harmonics constants\nconst float C1 = 0.429043;\nconst float C2 = 0.511664;\nconst float C3 = 0.743125;\nconst float C4 = 0.886227;\nconst float C5 = 0.247708;\n//Spherical harmonics coefficients\n// Ramamoorthi, R., and P. Hanrahan. 2001b. \"An Efficient Representation for Irradiance Environment Maps.\" In Proceedings of SIGGRAPH 2001, pp. 497–500.\n// https://github.com/eskimoblood/processingSketches/blob/master/data/shader/shinyvert.glsl\n// https://github.com/eskimoblood/processingSketches/blob/master/data/shader/shinyvert.glsl\n// Constants for Eucalyptus Grove lighting\nconst vec3 L00  = vec3( 0.3783264,  0.4260425,  0.4504587);\nconst vec3 L1m1 = vec3( 0.2887813,  0.3586803,  0.4147053);\nconst vec3 L10  = vec3( 0.0379030,  0.0295216,  0.0098567);\nconst vec3 L11  = vec3(-0.1033028, -0.1031690, -0.0884924);\nconst vec3 L2m2 = vec3(-0.0621750, -0.0554432, -0.0396779);\nconst vec3 L2m1 = vec3( 0.0077820, -0.0148312, -0.0471301);\nconst vec3 L20  = vec3(-0.0935561, -0.1254260, -0.1525629);\nconst vec3 L21  = vec3(-0.0572703, -0.0502192, -0.0363410);\nconst vec3 L22  = vec3( 0.0203348, -0.0044201, -0.0452180);\nvec3 SH(vec3 vNormal) {\n\tvNormal = vec3(vNormal.x,vNormal.z,vNormal.y);\n\tvec3 diffuseColor = C1 * L22 * (vNormal.x * vNormal.x - vNormal.y * vNormal.y) +\n\tC3 * L20 * vNormal.z * vNormal.z +\n\tC4 * L00 -\n\tC5 * L20 +\n\t2.0 * C1 * L2m2 * vNormal.x * vNormal.y +\n\t2.0 * C1 * L21  * vNormal.x * vNormal.z +\n\t2.0 * C1 * L2m1 * vNormal.y * vNormal.z +\n\t2.0 * C2 * L11  * vNormal.x +\n\t2.0 * C2 * L1m1 * vNormal.y +\n\t2.0 * C2 * L10  * vNormal.z;\n\treturn diffuseColor;\n}\nvoid main() {\n\tvec3 r = vec3(0.0, 0.0, 1.0); //rayDir: for orthographic projections moving in Z direction (no need for normal matrix)\n\tfloat ambient = 0.3;\n\tfloat diffuse = 0.6;\n\tfloat specular = 0.1;\n\tfloat shininess = 10.0;\n\tvec3 n = normalize(vN);\n\tvec3 lightPosition = vec3(0.0, 10.0, -5.0);\n\tvec3 l = normalize(lightPosition);\n\tfloat s = specular * pow(max(dot(reflect(l, n), r), 0.0), shininess);\n\tvec3 a = vClr.rgb * ambient;\n\tvec3 d = vClr.rgb * diffuse * SH(-reflect(n, vec3(l.x, l.y, -l.z)) );\n\tcolor = vec4(a + d + s, opacity);\n}`\n\nexport const vertFlatMeshShader = `#version 300 es\nlayout(location=0) in vec3 pos;\nlayout(location=1) in vec4 norm;\nlayout(location=2) in vec4 clr;\nuniform mat4 mvpMtx;\n//uniform mat4 modelMtx;\nuniform mat4 normMtx;\nout vec4 vClr;\nflat out vec3 vN;\nvoid main(void) {\n\tgl_Position = mvpMtx * vec4(pos, 1.0);\n\tvN = normalize((normMtx * vec4(norm.xyz,1.0)).xyz);\n\t//vV = -vec3(modelMtx*vec4(pos,1.0));\n\tvClr = clr;\n}`\n\nexport const fragFlatMeshShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nuniform float opacity;\nin vec4 vClr;\nflat in vec3 vN;\nout vec4 color;\nvoid main() {\n\tvec3 r = vec3(0.0, 0.0, 1.0); //rayDir: for orthographic projections moving in Z direction (no need for normal matrix)\n\tfloat ambient = 0.35;\n\tfloat diffuse = 0.5;\n\tfloat specular = 0.2;\n\tfloat shininess = 10.0;\n\tvec3 n = normalize(vN);\n\tvec3 lightPosition = vec3(0.0, 10.0, -5.0);\n\tvec3 l = normalize(lightPosition);\n\tfloat lightNormDot = dot(n, l);\n\tvec3 a = vClr.rgb * ambient;\n\tvec3 d = max(lightNormDot, 0.0) * vClr.rgb * diffuse;\n\tfloat s = specular * pow(max(dot(reflect(l, n), r), 0.0), shininess);\n\tcolor = vec4(a + d + s, opacity);\n}`\n\nexport const fragVolumePickingShader =\n  `#version 300 es\n#line 1260\n//precision highp int;\nprecision highp float;\nuniform vec3 rayDir;\nuniform vec3 volScale;\nuniform vec3 texVox;\nuniform vec4 clipPlane;\nuniform highp sampler3D volume, overlay;\nuniform float overlays;\nuniform float clipThick;\nuniform vec3 clipLo;\nuniform vec3 clipHi;\nuniform mat4 matRAS;\nuniform mat4 mvpMtx;\nuniform float drawOpacity, renderOverlayBlend;\nuniform highp sampler3D drawing;\nuniform highp sampler2D colormap;\nuniform int backgroundMasksOverlays;\nin vec3 vColor;\nout vec4 fColor;\n` +\n  kRenderFunc +\n  `\nvoid main() {\n\tint id = 254;\n\tvec3 start = vColor;\n\tgl_FragDepth = 0.0;\n\tfColor = vec4(0.0, 0.0, 0.0, 0.0); //assume no hit: ID = 0\n\tfloat fid = float(id & 255)/ 255.0;\n\tvec3 backPosition = GetBackPosition(start);\n\tvec3 dir = normalize(backPosition - start);\n\tclipVolumeStart(start, backPosition);\n\tfloat len = length(backPosition - start);\n\tfloat lenVox = length((texVox * start) - (texVox * backPosition));\n\tif ((lenVox < 0.5) || (len > 3.0)) return;//discard; //length limit for parallel rays\n\tfloat sliceSize = len / lenVox; //e.g. if ray length is 1.0 and traverses 50 voxels, each voxel is 0.02 in unit cube\n\tfloat stepSize = sliceSize; //quality: larger step is faster traversal, but fewer samples\n\tfloat opacityCorrection = stepSize/sliceSize;\n\tdir = normalize(dir);\n\tvec4 samplePos = vec4(start.xyz, 0.0); //ray position\n\tfloat lenNoClip = len;\n\tbool isClip = false;\n\tvec4 clipPos = applyClip(dir, samplePos, len, isClip);\n\tif (isClip) fColor = vec4(samplePos.xyz, 253.0 / 255.0); //assume no hit: ID = 0\n\t//start: OPTIONAL fast pass: rapid traversal until first hit\n\tfloat stepSizeFast = sliceSize * 1.9;\n\tvec4 deltaDirFast = vec4(dir.xyz * stepSizeFast, stepSizeFast);\n\twhile (samplePos.a <= len) {\n\t\tfloat val = texture(volume, samplePos.xyz).a;\n\t\tif (val > 0.01) {\n\t\t\tfColor = vec4(samplePos.rgb, fid);\n\t\t\tgl_FragDepth = frac2ndc(samplePos.xyz);\n\t\t\tbreak;\n\t\t}\n\t\tsamplePos += deltaDirFast; //advance ray position\n\t}\n\t//end: fast pass\n\tif ((overlays < 1.0) || (backgroundMasksOverlays > 0)) {\n\t\treturn; //background hit, no overlays\n\t}\n\t//overlay pass\n\tlen = min(lenNoClip, samplePos.a); //only find overlay closer than background\n\tsamplePos = vec4(start.xyz, 0.0); //ray position\n\twhile (samplePos.a <= len) {\n\t\tfloat val = texture(overlay, samplePos.xyz).a;\n\t\tif (val > 0.01) {\n\t\t\tfColor = vec4(samplePos.rgb, fid);\n\t\t\tgl_FragDepth = frac2ndc(samplePos.xyz);\n\t\t\treturn;\n\t\t}\n\t\tsamplePos += deltaDirFast; //advance ray position\n\t}\n\t//if (fColor.a == 0.0) discard; //no hit in either background or overlays\n\t//you only get here if there is a hit with the background that is closer than any overlay\n}`\n\nexport const vertOrientCubeShader = `#version 300 es\n// an attribute is an input (in) to a vertex shader.\n// It will receive data from a buffer\nlayout(location=0)  in vec3 a_position;\nlayout(location=1)  in vec3 a_color;\n// A matrix to transform the positions by\nuniform mat4 u_matrix;\nout vec3 vColor;\n// all shaders have a main function\nvoid main() {\n\t// Multiply the position by the matrix.\n\tvec4 pos = vec4(a_position, 1.0);\n\tgl_Position = u_matrix * vec4(pos);\n\tvColor = a_color;\n}\n`\n\nexport const fragOrientCubeShader = `#version 300 es\nprecision highp float;\nuniform vec4 u_color;\nin vec3 vColor;\nout vec4 outColor;\nvoid main() {\n\toutColor = vec4(vColor, 1.0);\n}`\n\nexport const vertPassThroughShader = `#version 300 es\n#line 1359\nprecision highp int;\nprecision highp float;\nin vec3 vPos;\nout vec2 TexCoord;\nvoid main() {\n\tTexCoord = vPos.xy;\n\tvec2 viewCoord = (vPos.xy - 0.5) * 2.0;\n\tgl_Position = vec4((vPos.xy - 0.5) * 2.0, 0.0, 1.0);\n}`\n\nexport const fragPassThroughShader = `#version 300 es\nprecision highp int;\nprecision highp float;\nin vec2 TexCoord;\nout vec4 FragColor;\nuniform float coordZ;\nuniform lowp sampler3D in3D;\nvoid main(void) {\n FragColor = texture(in3D, vec3(TexCoord.xy, coordZ));\n}`\n\nexport const blurVertShader = `#version 300 es\n#line 286\nprecision highp int;\nprecision highp float;\nin vec3 vPos;\nout vec2 TexCoord;\nvoid main() {\n    TexCoord = vPos.xy;\n    gl_Position = vec4( (vPos.xy-vec2(0.5,0.5))* 2.0, 0.0, 1.0);\n}`\n\nexport const blurFragShader = `#version 300 es\n#line 298\nprecision highp int;\nprecision highp float;\nin vec2 TexCoord;\nout vec4 FragColor;\nuniform float coordZ;\nuniform float dX;\nuniform float dY;\nuniform float dZ;\nuniform highp sampler3D intensityVol;\nvoid main(void) {\n vec3 vx = vec3(TexCoord.xy, coordZ);\n vec4 samp = texture(intensityVol,vx+vec3(+dX,+dY,+dZ));\n samp += texture(intensityVol,vx+vec3(+dX,+dY,-dZ));\n samp += texture(intensityVol,vx+vec3(+dX,-dY,+dZ));\n samp += texture(intensityVol,vx+vec3(+dX,-dY,-dZ));\n samp += texture(intensityVol,vx+vec3(-dX,+dY,+dZ));\n samp += texture(intensityVol,vx+vec3(-dX,+dY,-dZ));\n samp += texture(intensityVol,vx+vec3(-dX,-dY,+dZ));\n samp += texture(intensityVol,vx+vec3(-dX,-dY,-dZ));\n FragColor = samp*0.125;\n}`\n\nexport const sobelBlurFragShader = `#version 300 es\n#line 298\nprecision highp int;\nprecision highp float;\nin vec2 TexCoord;\nout vec4 FragColor;\nuniform float coordZ;\nuniform float dX;\nuniform float dY;\nuniform float dZ;\nuniform highp sampler3D intensityVol;\nvoid main(void) {\n vec3 vx = vec3(TexCoord.xy, coordZ);\n vec4 XYZ = texture(intensityVol,vx+vec3(+dX,+dY,+dZ));\n vec4 OYZ = texture(intensityVol,vx+vec3(0.0,+dY,+dZ));\n vec4 xYZ = texture(intensityVol,vx+vec3(-dX,+dY,+dZ));\n vec4 XOZ = texture(intensityVol,vx+vec3(+dX,0.0,+dZ));\n vec4 OOZ = texture(intensityVol,vx+vec3(0.0,0.0,+dZ));\n vec4 xOZ = texture(intensityVol,vx+vec3(-dX,0.0,+dZ));\n vec4 XyZ = texture(intensityVol,vx+vec3(+dX,-dY,+dZ));\n vec4 OyZ = texture(intensityVol,vx+vec3(0.0,-dY,+dZ));\n vec4 xyZ = texture(intensityVol,vx+vec3(-dX,-dY,+dZ));\n\n vec4 XYO = texture(intensityVol,vx+vec3(+dX,+dY,0.0));\n vec4 OYO = texture(intensityVol,vx+vec3(0.0,+dY,0.0));\n vec4 xYO = texture(intensityVol,vx+vec3(-dX,+dY,0.0));\n vec4 XOO = texture(intensityVol,vx+vec3(+dX,0.0,0.0));\n vec4 OOO = texture(intensityVol,vx+vec3(0.0,0.0,0.0));\n vec4 xOO = texture(intensityVol,vx+vec3(-dX,0.0,0.0));\n vec4 XyO = texture(intensityVol,vx+vec3(+dX,-dY,0.0));\n vec4 OyO = texture(intensityVol,vx+vec3(0.0,-dY,0.0));\n vec4 xyO = texture(intensityVol,vx+vec3(-dX,-dY,0.0));\n\n vec4 XYz = texture(intensityVol,vx+vec3(+dX,+dY,-dZ));\n vec4 OYz = texture(intensityVol,vx+vec3(0.0,+dY,-dZ));\n vec4 xYz = texture(intensityVol,vx+vec3(-dX,+dY,-dZ));\n vec4 XOz = texture(intensityVol,vx+vec3(+dX,0.0,-dZ));\n vec4 OOz = texture(intensityVol,vx+vec3(0.0,0.0,-dZ));\n vec4 xOz = texture(intensityVol,vx+vec3(-dX,0.0,-dZ));\n vec4 Xyz = texture(intensityVol,vx+vec3(+dX,-dY,-dZ));\n vec4 Oyz = texture(intensityVol,vx+vec3(0.0,-dY,-dZ));\n vec4 xyz = texture(intensityVol,vx+vec3(-dX,-dY,-dZ));\n\n vec4 blurred = vec4 (0.0, 0.0, 0.0, 0.0);\n blurred.r = 2.0*(xOz.r +xOZ.r +xyO.r +xYO.r +xOO.r +XOz.r +XOZ.r +XyO.r +XYO.r +XOO.r) +xyz.r +xyZ.r +xYz.r +xYZ.r +Xyz.r +XyZ.r +XYz.r +XYZ.r;\n blurred.g = 2.0*(Oyz.r +OyZ.r +xyO.r +XyO.r +OyO.r +OYz.r +OYZ.r +xYO.r +XYO.r +OYO.r) +xyz.r +Xyz.r +xyZ.r +XyZ.r +xYz.r +XYz.r +xYZ.r +XYZ.r;\n blurred.b = 2.0*(Oyz.r +OYz.r +xOz.r +XOz.r +OOz.r +OyZ.r +OYZ.r +xOZ.r +XOZ.r +OOZ.r) +xyz.r +Xyz.r +xYz.r +XYz.r +xyZ.r +XyZ.r +XyZ.r +XYZ.r;\n blurred.a = 0.32*(abs(blurred.r)+abs(blurred.g)+abs(blurred.b));\n // 0.0357 = 1/28 to account for weights, rescale to 2**16,\n FragColor = 0.0357*blurred;\n}`\n\n// -18.988706873717717 = log2(1/(255**2*8)) // 8 is chosen for contrast\n// 1.922337562475971e-06 = 1/(255**2*8)\nconst kGradientMagnitude = `\n  gradientSample.a = log2(gradientSample.r*gradientSample.r + gradientSample.g*gradientSample.g + gradientSample.b*gradientSample.b + 1.922337562475971e-06) + 18.988706873717717;\n`\n\nexport const sobelFirstOrderFragShader = `#version 300 es\n#line 323\nprecision highp int;\nprecision highp float;\nin vec2 TexCoord;\nout vec4 FragColor;\nuniform float coordZ;\nuniform float dX;\nuniform float dY;\nuniform float dZ;\nuniform highp sampler3D intensityVol;\nvoid main(void) {\n  vec3 vx = vec3(TexCoord.xy, coordZ);\n  //Neighboring voxels 'T'op/'B'ottom, 'A'nterior/'P'osterior, 'R'ight/'L'eft\n  float TAR = texture(intensityVol,vx+vec3(+dX,+dY,+dZ)).r;\n  float TAL = texture(intensityVol,vx+vec3(+dX,+dY,-dZ)).r;\n  float TPR = texture(intensityVol,vx+vec3(+dX,-dY,+dZ)).r;\n  float TPL = texture(intensityVol,vx+vec3(+dX,-dY,-dZ)).r;\n  float BAR = texture(intensityVol,vx+vec3(-dX,+dY,+dZ)).r;\n  float BAL = texture(intensityVol,vx+vec3(-dX,+dY,-dZ)).r;\n  float BPR = texture(intensityVol,vx+vec3(-dX,-dY,+dZ)).r;\n  float BPL = texture(intensityVol,vx+vec3(-dX,-dY,-dZ)).r;\n  vec4 gradientSample = vec4 (0.0, 0.0, 0.0, 0.0);\n  gradientSample.r = BAR+BAL+BPR+BPL -TAR-TAL-TPR-TPL;\n  gradientSample.g = TPR+TPL+BPR+BPL -TAR-TAL-BAR-BAL;\n  gradientSample.b = TAL+TPL+BAL+BPL -TAR-TPR-BAR-BPR;\n${kGradientMagnitude}\n\t// 0.04242020977371934 = 1/(log2(3*8) - log2(1/(255**2*8))) // 3*8 -> max for 1st order gradient\n\tgradientSample.a *= 0.04242020977371934;\n  gradientSample.rgb = normalize(gradientSample.rgb);\n  gradientSample.rgb = (gradientSample.rgb * 0.5)+0.5;\n  FragColor = gradientSample;\n}`\n\nexport const sobelSecondOrderFragShader = `#version 300 es\n#line 323\nprecision highp int;\nprecision highp float;\nin vec2 TexCoord;\nout vec4 FragColor;\nuniform float coordZ;\nuniform float dX;\nuniform float dY;\nuniform float dZ;\nuniform float dX2;\nuniform float dY2;\nuniform float dZ2;\nuniform highp sampler3D intensityVol;\nvoid main(void) {\n  vec3 vx = vec3(TexCoord.xy, coordZ);\n  //Neighboring voxels 'T'op/'B'ottom, 'A'nterior/'P'osterior, 'R'ight/'L'eft\n  vec4 TAR = texture(intensityVol,vx+vec3(+dX,+dY,+dZ));\n  vec4 TAL = texture(intensityVol,vx+vec3(+dX,+dY,-dZ));\n  vec4 TPR = texture(intensityVol,vx+vec3(+dX,-dY,+dZ));\n  vec4 TPL = texture(intensityVol,vx+vec3(+dX,-dY,-dZ));\n  vec4 BAR = texture(intensityVol,vx+vec3(-dX,+dY,+dZ));\n  vec4 BAL = texture(intensityVol,vx+vec3(-dX,+dY,-dZ));\n  vec4 BPR = texture(intensityVol,vx+vec3(-dX,-dY,+dZ));\n  vec4 BPL = texture(intensityVol,vx+vec3(-dX,-dY,-dZ));\n  vec4 T = texture(intensityVol,vx+vec3(+dX2,0.0,0.0));\n  vec4 A = texture(intensityVol,vx+vec3(0.0,+dY2,0.0));\n  vec4 R = texture(intensityVol,vx+vec3(0.0,0.0,+dZ2));\n  vec4 B = texture(intensityVol,vx+vec3(-dX2,0.0,0.0));\n  vec4 P = texture(intensityVol,vx+vec3(0.0,-dY2,0.0));\n  vec4 L = texture(intensityVol,vx+vec3(0.0,0.0,-dZ2));\n  vec4 gradientSample = vec4 (0.0, 0.0, 0.0, 0.0);\n  gradientSample.r = -4.0*B.r +8.0*(BAR.r+BAL.r+BPR.r+BPL.r) -8.0*(TAR.r+TAL.r+TPR.r+TPL.r) +4.0*T.r;\n  gradientSample.g = -4.0*P.g +8.0*(TPR.g+TPL.g+BPR.g+BPL.g) -8.0*(TAR.g+TAL.g+BAR.g+BAL.g) +4.0*A.g;\n  gradientSample.b = -4.0*L.b +8.0*(TAL.b+TPL.b+BAL.b+BPL.b) -8.0*(TAR.b+TPR.b+BAR.b+BPR.b) +4.0*R.b;\n${kGradientMagnitude}\n\tgradientSample.a *= 0.0325;\n  gradientSample.rgb = normalize(gradientSample.rgb);\n  gradientSample.rgb =  (gradientSample.rgb * 0.5)+0.5;\n  FragColor = gradientSample;\n}`\n","export const orientCube = new Float32Array([\n  -1, -1, -1, 0.28, 0.28, 0.28, -1, -1, -1, 0.28, 0.28, 0.28, -1, 1, -1, 0.28, 0.28, 0.28, 1, -1, -1, 0.28, 0.28, 0.28,\n  1, 1, -1, 0.28, 0.28, 0.28, 1, 1, -1, 0.28, 0.28, 0.28, -1, -1, 1, 0.8, 0.8, 0.8, -1, -1, 1, 0.8, 0.8, 0.8, 1, -1, 1,\n  0.8, 0.8, 0.8, -1, 1, 1, 0.8, 0.8, 0.8, 1, 1, 1, 0.8, 0.8, 0.8, 1, 1, 1, 0.8, 0.8, 0.8, -1, 1, -1, 0, 0, 0.74, -1, 1,\n  -1, 0, 0, 0.74, -1, 1, 1, 0, 0, 0.74, 1, 1, -1, 0, 0, 0.74, 1, 1, 1, 0, 0, 0.74, 1, 1, 1, 0, 0, 0.74, -1, -1, -1,\n  0.42, 0, 0.42, -1, -1, -1, 0.42, 0, 0.42, 1, -1, -1, 0.42, 0, 0.42, -1, -1, 1, 0.42, 0, 0.42, 1, -1, 1, 0.42, 0, 0.42,\n  1, -1, 1, 0.42, 0, 0.42, -1, -1, -1, 0.64, 0, 0, -1, -1, -1, 0.64, 0, 0, -1, -1, 1, 0.64, 0, 0, -1, 1, -1, 0.64, 0, 0,\n  -1, 1, 1, 0.64, 0, 0, -1, 1, 1, 0.64, 0, 0, 1, -1, -1, 0, 0.5, 0, 1, -1, -1, 0, 0.5, 0, 1, 1, -1, 0, 0.5, 0, 1, -1, 1,\n  0, 0.5, 0, 1, 1, 1, 0, 0.5, 0, 1, 1, 1, 0, 0.5, 0,\n  // P\n  -0.45, 1, -0.8, 0, 0, 0, -0.45, 1, -0.8, 0, 0, 0, -0.45, 1, 0.8, 0, 0, 0, -0.25, 1, -0.8, 0, 0, 0, -0.25, 1, 0.8, 0,\n  0, 0, -0.25, 1, 0.8, 0, 0, 0, -0.25, 1, 0.6, 0, 0, 0, -0.25, 1, 0.6, 0, 0, 0, -0.25, 1, 0.8, 0, 0, 0, 0.45, 1, 0.6, 0,\n  0, 0, 0.25, 1, 0.8, 0, 0, 0, 0.25, 1, 0.8, 0, 0, 0, 0.25, 1, 0.1, 0, 0, 0, 0.25, 1, 0.1, 0, 0, 0, 0.25, 1, 0.6, 0, 0,\n  0, 0.45, 1, 0.1, 0, 0, 0, 0.45, 1, 0.6, 0, 0, 0, 0.45, 1, 0.6, 0, 0, 0, -0.25, 1, -0.1, 0, 0, 0, -0.25, 1, -0.1, 0, 0,\n  0, -0.25, 1, 0.1, 0, 0, 0, 0.25, 1, -0.1, 0, 0, 0, 0.45, 1, 0.1, 0, 0, 0, 0.45, 1, 0.1, 0, 0, 0,\n  // A\n  0.45, -1, -0.8, 0, 0, 0, 0.45, -1, -0.8, 0, 0, 0, 0.05, -1, 0.8, 0, 0, 0, 0.25, -1, -0.8, 0, 0, 0, -0.15, -1, 0.8, 0,\n  0, 0, -0.15, -1, 0.8, 0, 0, 0, -0.25, -1, -0.8, 0, 0, 0, -0.25, -1, -0.8, 0, 0, 0, 0.05, -1, 0.8, 0, 0, 0, -0.45, -1,\n  -0.8, 0, 0, 0, -0.15, -1, 0.8, 0, 0, 0, -0.15, -1, 0.8, 0, 0, 0, 0.13, -1, -0.3, 0, 0, 0, 0.13, -1, -0.3, 0, 0, 0,\n  0.07, -1, -0.1, 0, 0, 0, -0.33, -1, -0.3, 0, 0, 0, -0.27, -1, -0.1, 0, 0, 0, -0.27, -1, -0.1, 0, 0, 0,\n  // S\n  -0.45, 0.6, 1, 0, 0, 0, -0.45, 0.6, 1, 0, 0, 0, -0.45, 0.4, 1, 0, 0, 0, -0.25, 0.8, 1, 0, 0, 0, -0.25, 0.4, 1, 0, 0,\n  0, -0.25, 0.4, 1, 0, 0, 0, -0.25, 0.8, 1, 0, 0, 0, -0.25, 0.8, 1, 0, 0, 0, -0.25, 0.6, 1, 0, 0, 0, 0.25, 0.8, 1, 0, 0,\n  0, 0.45, 0.6, 1, 0, 0, 0, 0.45, 0.6, 1, 0, 0, 0, 0.25, 0.8, 1, 0, 0, 0, 0.25, 0.8, 1, 0, 0, 0, 0.25, -0.1, 1, 0, 0, 0,\n  0.45, 0.6, 1, 0, 0, 0, 0.45, 0.1, 1, 0, 0, 0, 0.45, 0.1, 1, 0, 0, 0, -0.25, 0.1, 1, 0, 0, 0, -0.25, 0.1, 1, 0, 0, 0,\n  -0.45, -0.1, 1, 0, 0, 0, 0.25, 0.1, 1, 0, 0, 0, 0.25, -0.1, 1, 0, 0, 0, 0.25, -0.1, 1, 0, 0, 0, -0.45, -0.1, 1, 0, 0,\n  0, -0.45, -0.1, 1, 0, 0, 0, -0.45, -0.6, 1, 0, 0, 0, -0.25, -0.1, 1, 0, 0, 0, -0.25, -0.8, 1, 0, 0, 0, -0.25, -0.8, 1,\n  0, 0, 0, -0.25, -0.6, 1, 0, 0, 0, -0.25, -0.6, 1, 0, 0, 0, -0.25, -0.8, 1, 0, 0, 0, 0.45, -0.6, 1, 0, 0, 0, 0.25,\n  -0.8, 1, 0, 0, 0, 0.25, -0.8, 1, 0, 0, 0, 0.25, -0.4, 1, 0, 0, 0, 0.25, -0.4, 1, 0, 0, 0, 0.25, -0.6, 1, 0, 0, 0,\n  0.45, -0.4, 1, 0, 0, 0, 0.45, -0.6, 1, 0, 0, 0, 0.45, -0.6, 1, 0, 0, 0,\n  // I\n  -0.1, -0.8, -1, 0, 0, 0, -0.1, -0.8, -1, 0, 0, 0, -0.1, 0.8, -1, 0, 0, 0, 0.1, -0.8, -1, 0, 0, 0, 0.1, 0.8, -1, 0, 0,\n  0, 0.1, 0.8, -1, 0, 0, 0,\n  // L\n  -1, -0.45, -0.8, 0, 0, 0, -1, -0.45, -0.8, 0, 0, 0, -1, -0.45, 0.8, 0, 0, 0, -1, -0.25, -0.8, 0, 0, 0, -1, -0.25, 0.8,\n  0, 0, 0, -1, -0.25, 0.8, 0, 0, 0, -1, -0.25, -0.8, 0, 0, 0, -1, -0.25, -0.8, 0, 0, 0, -1, -0.25, -0.6, 0, 0, 0, -1,\n  0.45, -0.8, 0, 0, 0, -1, 0.45, -0.6, 0, 0, 0, -1, 0.45, -0.6, 0, 0, 0,\n  // R\n  1, 0.45, -0.8, 0, 0, 0, 1, 0.45, -0.8, 0, 0, 0, 1, 0.45, 0.8, 0, 0, 0, 1, 0.25, -0.8, 0, 0, 0, 1, 0.25, 0.8, 0, 0, 0,\n  1, 0.25, 0.8, 0, 0, 0, 1, 0.25, 0.6, 0, 0, 0, 1, 0.25, 0.6, 0, 0, 0, 1, 0.25, 0.8, 0, 0, 0, 1, -0.45, 0.6, 0, 0, 0, 1,\n  -0.25, 0.8, 0, 0, 0, 1, -0.25, 0.8, 0, 0, 0, 1, -0.25, 0.1, 0, 0, 0, 1, -0.25, 0.1, 0, 0, 0, 1, -0.25, 0.6, 0, 0, 0,\n  1, -0.45, 0.1, 0, 0, 0, 1, -0.45, 0.6, 0, 0, 0, 1, -0.45, 0.6, 0, 0, 0, 1, 0.25, -0.1, 0, 0, 0, 1, 0.25, -0.1, 0, 0,\n  0, 1, 0.25, 0.1, 0, 0, 0, 1, -0.25, -0.1, 0, 0, 0, 1, -0.45, 0.1, 0, 0, 0, 1, -0.45, 0.1, 0, 0, 0, 1, -0.25, -0.8, 0,\n  0, 0, 1, -0.25, -0.8, 0, 0, 0, 1, -0.05, -0.1, 0, 0, 0, 1, -0.45, -0.8, 0, 0, 0, 1, -0.25, -0.1, 0, 0, 0, 1, -0.25,\n  -0.1, 0, 0, 0\n])\n","import { mat4, vec3, vec4 } from 'gl-matrix'\n\ntype Geometry = {\n  vertexBuffer: WebGLBuffer\n  indexBuffer: WebGLBuffer\n  indexCount: number\n  vao: WebGLVertexArrayObject | null\n}\n\n/**\n * Object rendered with WebGL\n **/\nexport class NiivueObject3D {\n  static BLEND = 1\n  static CULL_FACE = 2\n  static CULL_FRONT = 4\n  static CULL_BACK = 8\n  static ENABLE_DEPTH_TEST = 16\n\n  sphereIdx: number[] = []\n  sphereVtx: number[] = []\n  renderShaders: number[] = []\n  isVisible = true\n  isPickable = true\n  vertexBuffer: WebGLVertexArrayObject\n  indexCount: number\n  indexBuffer: WebGLVertexArrayObject | null\n  vao: WebGLVertexArrayObject | null\n  mode: number\n  glFlags = 0\n  id: number\n  colorId: [number, number, number, number]\n\n  modelMatrix = mat4.create()\n  scale = [1, 1, 1]\n  position = [0, 0, 0]\n  rotation = [0, 0, 0]\n  rotationRadians = 0.0\n\n  extentsMin: number[] = []\n  extentsMax: number[] = []\n\n  // TODO needed through NVImage\n  furthestVertexFromOrigin?: number\n  originNegate?: vec3\n  fieldOfViewDeObliqueMM?: vec3\n\n  // TODO needed through crosshairs in NiiVue\n  mm?: vec4\n\n  constructor(\n    id: number,\n    vertexBuffer: WebGLBuffer,\n    mode: number,\n    indexCount: number,\n    indexBuffer: WebGLVertexArrayObject | null = null,\n    vao: WebGLVertexArrayObject | null = null\n  ) {\n    this.vertexBuffer = vertexBuffer\n    this.indexCount = indexCount\n    this.indexBuffer = indexBuffer\n    this.vao = vao\n    this.mode = mode\n\n    this.id = id\n    this.colorId = [\n      ((id >> 0) & 0xff) / 255.0,\n      ((id >> 8) & 0xff) / 255.0,\n      ((id >> 16) & 0xff) / 255.0,\n      ((id >> 24) & 0xff) / 255.0\n    ]\n  }\n\n  static generateCrosshairs = function (\n    gl: WebGL2RenderingContext,\n    id: number,\n    xyzMM: vec4,\n    xyzMin: vec3,\n    xyzMax: vec3,\n    radius: number,\n    sides = 20,\n    gap = 0\n  ): NiivueObject3D {\n    const geometry = NiivueObject3D.generateCrosshairsGeometry(gl, xyzMM, xyzMin, xyzMax, radius, sides, gap)\n    return new NiivueObject3D(\n      id,\n      geometry.vertexBuffer,\n      gl.TRIANGLES,\n      geometry.indexCount,\n      geometry.indexBuffer,\n      geometry.vao\n    )\n  }\n\n  // not included in public docs\n  static generateCrosshairsGeometry = function (\n    gl: WebGL2RenderingContext,\n    xyzMM: vec4,\n    xyzMin: vec3,\n    xyzMax: vec3,\n    radius: number,\n    sides = 20,\n    gap = 0\n  ): Geometry {\n    const vertices: number[] = []\n    const indices: number[] = []\n    const gapX = radius * gap\n    if (gapX <= 0) {\n      // left-right\n      let start = vec3.fromValues(xyzMin[0], xyzMM[1], xyzMM[2])\n      let dest = vec3.fromValues(xyzMax[0], xyzMM[1], xyzMM[2])\n      NiivueObject3D.makeCylinder(vertices, indices, start, dest, radius, sides)\n      // anterior-posterior\n      start = vec3.fromValues(xyzMM[0], xyzMin[1], xyzMM[2])\n      dest = vec3.fromValues(xyzMM[0], xyzMax[1], xyzMM[2])\n      NiivueObject3D.makeCylinder(vertices, indices, start, dest, radius, sides)\n      // superior-inferior\n      start = vec3.fromValues(xyzMM[0], xyzMM[1], xyzMin[2])\n      dest = vec3.fromValues(xyzMM[0], xyzMM[1], xyzMax[2])\n      NiivueObject3D.makeCylinder(vertices, indices, start, dest, radius, sides)\n    } else {\n      // left-right\n      let start = vec3.fromValues(xyzMin[0], xyzMM[1], xyzMM[2])\n      let dest = vec3.fromValues(xyzMM[0] - gapX, xyzMM[1], xyzMM[2])\n      NiivueObject3D.makeCylinder(vertices, indices, start, dest, radius, sides, false)\n      start = vec3.fromValues(xyzMM[0] + gapX, xyzMM[1], xyzMM[2])\n      dest = vec3.fromValues(xyzMax[0], xyzMM[1], xyzMM[2])\n      NiivueObject3D.makeCylinder(vertices, indices, start, dest, radius, sides, false)\n      // anterior-posterior\n      start = vec3.fromValues(xyzMM[0], xyzMin[1], xyzMM[2])\n      dest = vec3.fromValues(xyzMM[0], xyzMM[1] - gapX, xyzMM[2])\n      NiivueObject3D.makeCylinder(vertices, indices, start, dest, radius, sides, false)\n      start = vec3.fromValues(xyzMM[0], xyzMM[1] + gapX, xyzMM[2])\n      dest = vec3.fromValues(xyzMM[0], xyzMax[1], xyzMM[2])\n      NiivueObject3D.makeCylinder(vertices, indices, start, dest, radius, sides, false)\n      // superior-inferior\n      start = vec3.fromValues(xyzMM[0], xyzMM[1], xyzMin[2])\n      dest = vec3.fromValues(xyzMM[0], xyzMM[1], xyzMM[2] - gapX)\n      NiivueObject3D.makeCylinder(vertices, indices, start, dest, radius, sides, false)\n      start = vec3.fromValues(xyzMM[0], xyzMM[1], xyzMM[2] + gapX)\n      dest = vec3.fromValues(xyzMM[0], xyzMM[1], xyzMax[2])\n      NiivueObject3D.makeCylinder(vertices, indices, start, dest, radius, sides, false)\n    }\n    // console.log('i:',indices.length / 3, 'v:',vertices.length / 3);\n    const vertexBuffer = gl.createBuffer()\n    if (vertexBuffer === null) {\n      throw new Error('could not instantiate vertex buffer')\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW)\n\n    // index buffer allocated in parent class\n    const indexBuffer = gl.createBuffer()\n    if (indexBuffer === null) {\n      throw new Error('could not instantiate index buffer')\n    }\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint32Array(indices), gl.STATIC_DRAW)\n\n    const vao = gl.createVertexArray()\n    gl.bindVertexArray(vao)\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\n    // vertex position: 3 floats X,Y,Z\n    gl.enableVertexAttribArray(0)\n    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 0, 0)\n    gl.bindVertexArray(null) // https://stackoverflow.com/questions/43904396/are-we-not-allowed-to-bind-gl-array-buffer-and-vertex-attrib-array-to-0-in-webgl\n\n    return {\n      vertexBuffer,\n      indexBuffer,\n      indexCount: indices.length,\n      vao\n    }\n  }\n\n  static getFirstPerpVector = function (v1: vec3): vec3 {\n    const v2 = vec3.fromValues(0.0, 0.0, 0.0)\n    if (v1[0] === 0.0) {\n      v2[0] = 1.0\n    } else if (v1[1] === 0.0) {\n      v2[1] = 1.0\n    } else if (v1[2] === 0.0) {\n      v2[2] = 1.0\n    } else {\n      // If xyz is all set, we set the z coordinate as first and second argument .\n      // As the scalar product must be zero, we add the negated sum of x and y as third argument\n      v2[0] = v1[2] // scalp = z*x\n      v2[1] = v1[2] // scalp = z*(x+y)\n      v2[2] = -(v1[0] + v1[1]) // scalp = z*(x+y)-z*(x+y) = 0\n      vec3.normalize(v2, v2)\n    }\n    return v2\n  }\n\n  static subdivide = function (verts: number[], faces: number[]): void {\n    // Subdivide each triangle into four triangles, pushing verts to the unit sphere\"\"\"\n    let nv = verts.length / 3\n    let nf = faces.length / 3\n    const n = nf\n    const vNew = vec3.create()\n    const nNew = vec3.create()\n    for (let faceIndex = 0; faceIndex < n; faceIndex++) {\n      // setlength(verts, nv + 3);\n      const fx = faces[faceIndex * 3 + 0]\n      const fy = faces[faceIndex * 3 + 1]\n      const fz = faces[faceIndex * 3 + 2]\n      const vx = vec3.fromValues(verts[fx * 3 + 0], verts[fx * 3 + 1], verts[fx * 3 + 2])\n      const vy = vec3.fromValues(verts[fy * 3 + 0], verts[fy * 3 + 1], verts[fy * 3 + 2])\n      const vz = vec3.fromValues(verts[fz * 3 + 0], verts[fz * 3 + 1], verts[fz * 3 + 2])\n      vec3.add(vNew, vx, vy)\n      vec3.normalize(nNew, vNew)\n      verts.push(...nNew)\n\n      vec3.add(vNew, vy, vz)\n      vec3.normalize(nNew, vNew)\n      verts.push(...nNew)\n\n      vec3.add(vNew, vx, vz)\n      vec3.normalize(nNew, vNew)\n      verts.push(...nNew)\n      // Split the current triangle into four smaller triangles:\n      let face = [nv, nv + 1, nv + 2]\n      faces.push(...face)\n      face = [fx, nv, nv + 2]\n      faces.push(...face)\n      face = [nv, fy, nv + 1]\n      faces.push(...face)\n      faces[faceIndex * 3 + 0] = nv + 2\n      faces[faceIndex * 3 + 1] = nv + 1\n      faces[faceIndex * 3 + 2] = fz\n      nf = nf + 3\n      nv = nv + 3\n    }\n  }\n\n  static weldVertices = function (verts: number[], faces: number[]): number[] {\n    // unify identical vertices\n    const nv = verts.length / 3\n    // yikes: bubble sort! TO DO: see Surfice for more efficient solution\n    let nUnique = 0 // first vertex is unique\n    // var remap = new Array();\n    const remap = new Int32Array(nv)\n    for (let i = 0; i < nv - 1; i++) {\n      if (remap[i] !== 0) {\n        continue\n      } // previously tested\n      remap[i] = nUnique\n      let v = i * 3\n      const x = verts[v]\n      const y = verts[v + 1]\n      const z = verts[v + 2]\n      for (let j = i + 1; j < nv; j++) {\n        v += 3\n        if (x === verts[v] && y === verts[v + 1] && z === verts[v + 2]) {\n          remap[j] = nUnique\n        }\n      }\n      nUnique++ // another new vertex\n    } // for i\n    if (nUnique === nv) {\n      return verts\n    }\n    // console.log('welding vertices removed redundant positions ', nv, '->', nUnique);\n    const nf = faces.length\n    for (let f = 0; f < nf; f++) {\n      faces[f] = remap[faces[f]]\n    }\n    const vtx = verts.slice(0, nUnique * 3 - 1)\n    for (let i = 0; i < nv - 1; i++) {\n      const v = i * 3\n      const r = remap[i] * 3\n      vtx[r] = verts[v]\n      vtx[r + 1] = verts[v + 1]\n      vtx[r + 2] = verts[v + 2]\n    }\n    return vtx\n  }\n\n  static makeSphere = function (\n    vertices: number[],\n    indices: number[],\n    radius: number,\n    origin: vec3 | vec4 = [0, 0, 0]\n  ): void {\n    let vtx = [\n      0.0, 0.0, 1.0, 0.894, 0.0, 0.447, 0.276, 0.851, 0.447, -0.724, 0.526, 0.447, -0.724, -0.526, 0.447, 0.276, -0.851,\n      0.447, 0.724, 0.526, -0.447, -0.276, 0.851, -0.447, -0.894, 0.0, -0.447, -0.276, -0.851, -0.447, 0.724, -0.526,\n      -0.447, 0.0, 0.0, -1.0\n    ]\n    // let idx = new Uint16Array([\n    const idx = [\n      0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5, 0, 5, 1, 7, 6, 11, 8, 7, 11, 9, 8, 11, 10, 9, 11, 6, 10, 11, 6, 2, 1, 7, 3, 2,\n      8, 4, 3, 9, 5, 4, 10, 1, 5, 6, 7, 2, 7, 8, 3, 8, 9, 4, 9, 10, 5, 10, 6, 1\n    ]\n    NiivueObject3D.subdivide(vtx, idx)\n    NiivueObject3D.subdivide(vtx, idx)\n    vtx = NiivueObject3D.weldVertices(vtx, idx)\n\n    for (let i = 0; i < vtx.length; i++) {\n      vtx[i] = vtx[i] * radius\n    }\n    const nvtx = vtx.length / 3\n    let j = 0\n    for (let i = 0; i < nvtx; i++) {\n      vtx[j] = vtx[j] + origin[0]\n      j++\n      vtx[j] = vtx[j] + origin[1]\n      j++\n      vtx[j] = vtx[j] + origin[2]\n      j++\n    }\n    const idx0 = Math.floor(vertices.length / 3) // first new vertex will be AFTER previous vertices\n    for (let i = 0; i < idx.length; i++) {\n      idx[i] = idx[i] + idx0\n    }\n\n    indices.push(...idx)\n    vertices.push(...vtx)\n  }\n\n  static makeCylinder = function (\n    vertices: number[],\n    indices: number[],\n    start: vec3,\n    dest: vec3,\n    radius: number,\n    sides = 20,\n    endcaps = true\n  ): void {\n    if (sides < 3) {\n      sides = 3\n    } // prism is minimal 3D cylinder\n    const v1 = vec3.create()\n    vec3.subtract(v1, dest, start)\n    vec3.normalize(v1, v1) // principle axis of cylinder\n    const v2 = NiivueObject3D.getFirstPerpVector(v1) // a unit length vector orthogonal to v1\n    // Get the second perp vector by cross product\n    const v3 = vec3.create()\n    vec3.cross(v3, v1, v2) // a unit length vector orthogonal to v1 and v2\n    vec3.normalize(v3, v3)\n    let num_v = 2 * sides\n    let num_f = 2 * sides\n    if (endcaps) {\n      num_f += 2 * sides\n      num_v += 2\n    }\n    const idx0 = Math.floor(vertices.length / 3) // first new vertex will be AFTER previous vertices\n    const idx = new Uint32Array(num_f * 3)\n    const vtx = new Float32Array(num_v * 3)\n    function setV(i: number, vec3: vec3): void {\n      vtx[i * 3 + 0] = vec3[0]\n      vtx[i * 3 + 1] = vec3[1]\n      vtx[i * 3 + 2] = vec3[2]\n    }\n    function setI(i: number, a: number, b: number, c: number): void {\n      idx[i * 3 + 0] = a + idx0\n      idx[i * 3 + 1] = b + idx0\n      idx[i * 3 + 2] = c + idx0\n    }\n    const startPole = 2 * sides\n    const destPole = startPole + 1\n    if (endcaps) {\n      setV(startPole, start)\n      setV(destPole, dest)\n    }\n    const pt1 = vec3.create()\n    const pt2 = vec3.create()\n    for (let i = 0; i < sides; i++) {\n      const c = Math.cos((i / sides) * 2 * Math.PI)\n      const s = Math.sin((i / sides) * 2 * Math.PI)\n      pt1[0] = radius * (c * v2[0] + s * v3[0])\n      pt1[1] = radius * (c * v2[1] + s * v3[1])\n      pt1[2] = radius * (c * v2[2] + s * v3[2])\n      vec3.add(pt2, start, pt1)\n      setV(i, pt2)\n      vec3.add(pt2, dest, pt1)\n      setV(i + sides, pt2)\n      let nxt = 0\n      if (i < sides - 1) {\n        nxt = i + 1\n      }\n      setI(i * 2, i, nxt, i + sides)\n      setI(i * 2 + 1, nxt, nxt + sides, i + sides)\n      if (endcaps) {\n        setI(sides * 2 + i, i, startPole, nxt)\n        setI(sides * 2 + i + sides, destPole, i + sides, nxt + sides)\n      }\n    }\n    indices.push(...idx)\n    vertices.push(...vtx)\n  }\n\n  static makeColoredCylinder = function (\n    vertices: number[],\n    indices: number[],\n    colors: number[],\n    start: vec3,\n    dest: vec3,\n    radius: number,\n    rgba255 = [192, 0, 0, 255],\n    sides = 20,\n    endcaps = false\n  ): void {\n    let nv = vertices.length / 3\n    NiivueObject3D.makeCylinder(vertices, indices, start, dest, radius, sides, endcaps)\n    nv = vertices.length / 3 - nv\n    const clrs = []\n    for (let i = 0; i < nv * 4 - 1; i += 4) {\n      clrs[i] = rgba255[0]\n      clrs[i + 1] = rgba255[1]\n      clrs[i + 2] = rgba255[2]\n      clrs[i + 3] = rgba255[3]\n    }\n    colors.push(...clrs)\n  }\n\n  static makeColoredSphere = function (\n    vertices: number[],\n    indices: number[],\n    colors: number[],\n    radius: number,\n    origin: vec3 | vec4 = [0, 0, 0],\n    rgba255 = [0, 0, 192, 255]\n  ): void {\n    let nv = vertices.length / 3\n    NiivueObject3D.makeSphere(vertices, indices, radius, origin)\n    nv = vertices.length / 3 - nv\n    const clrs = []\n    for (let i = 0; i < nv * 4 - 1; i += 4) {\n      clrs[i] = rgba255[0]\n      clrs[i + 1] = rgba255[1]\n      clrs[i + 2] = rgba255[2]\n      clrs[i + 3] = rgba255[3]\n    }\n    colors.push(...clrs)\n  }\n}\n","var IDX=256, HEX=[], BUFFER;\nwhile (IDX--) HEX[IDX] = (IDX + 256).toString(16).substring(1);\n\nexport function v4() {\n\tvar i=0, num, out='';\n\n\tif (!BUFFER || ((IDX + 16) > 256)) {\n\t\tBUFFER = Array(i=256);\n\t\twhile (i--) BUFFER[i] = 256 * Math.random() | 0;\n\t\ti = IDX = 0;\n\t}\n\n\tfor (; i < 16; i++) {\n\t\tnum = BUFFER[IDX + i];\n\t\tif (i==6) out += HEX[num & 15 | 64];\n\t\telse if (i==8) out += HEX[num & 63 | 128];\n\t\telse out += HEX[num];\n\n\t\tif (i & 1 && i > 1 && i < 11) out += '-';\n\t}\n\n\tIDX++;\n\treturn out;\n}\n","export { default as $itksnap } from './_itksnap.json'\nexport { default as $slicer3d } from './_slicer3d.json'\nexport { default as actc } from './actc.json'\nexport { default as batlow } from './batlow.json'\nexport { default as bcgwhw_dark } from './bcgwhw_dark.json'\nexport { default as bcgwhw } from './bcgwhw.json'\nexport { default as blue2red } from './blue2red.json'\nexport { default as blue2magenta } from './blue2magenta.json'\nexport { default as blue2cyan } from './blue2cyan.json'\nexport { default as bluegrn } from './bluegrn.json'\nexport { default as blue } from './blue.json'\nexport { default as bone } from './bone.json'\nexport { default as bronze } from './bronze.json'\nexport { default as cet_l17 } from './cet_l17.json'\nexport { default as cividis } from './cividis.json'\nexport { default as cool } from './cool.json'\nexport { default as copper2 } from './copper2.json'\nexport { default as copper } from './copper.json'\nexport { default as ct_airways } from './ct_airways.json'\nexport { default as ct_artery } from './ct_artery.json'\nexport { default as ct_bones } from './ct_bones.json'\nexport { default as ct_brain_gray } from './ct_brain_gray.json'\nexport { default as ct_brain } from './ct_brain.json'\nexport { default as ct_cardiac } from './ct_cardiac.json'\nexport { default as ct_head } from './ct_head.json'\nexport { default as ct_kidneys } from './ct_kidneys.json'\nexport { default as ct_liver } from './ct_liver.json'\nexport { default as ct_muscles } from './ct_muscles.json'\nexport { default as ct_scalp } from './ct_scalp.json'\nexport { default as ct_skull } from './ct_skull.json'\nexport { default as ct_soft } from './ct_soft.json'\nexport { default as ct_soft_tissue } from './ct_soft_tissue.json'\nexport { default as ct_surface } from './ct_surface.json'\nexport { default as ct_vessels } from './ct_vessels.json'\nexport { default as ct_w_contrast } from './ct_w_contrast.json'\nexport { default as cubehelix } from './cubehelix.json'\nexport { default as electric_blue } from './electric_blue.json'\nexport { default as freesurfer } from './freesurfer.json'\nexport { default as ge_color } from './ge_color.json'\nexport { default as gold } from './gold.json'\nexport { default as gray } from './gray.json'\nexport { default as green } from './green.json'\nexport { default as green2cyan } from './green2cyan.json'\nexport { default as green2orange } from './green2orange.json'\nexport { default as hotiron } from './hotiron.json'\nexport { default as hot } from './hot.json'\nexport { default as hsv } from './hsv.json'\nexport { default as inferno } from './inferno.json'\nexport { default as jet } from './jet.json'\nexport { default as kry } from './kry.json'\nexport { default as linspecer } from './linspecer.json'\nexport { default as lipari } from './lipari.json'\nexport { default as magma } from './magma.json'\nexport { default as mako } from './mako.json'\nexport { default as navia } from './navia.json'\nexport { default as nih } from './nih.json'\nexport { default as plasma } from './plasma.json'\nexport { default as random } from './random.json'\nexport { default as red } from './red.json'\nexport { default as redyell } from './redyell.json'\nexport { default as rocket } from './rocket.json'\nexport { default as surface } from './surface.json'\nexport { default as thermal } from './thermal.json'\nexport { default as turbo } from './turbo.json'\nexport { default as violet } from './violet.json'\nexport { default as viridis } from './viridis.json'\nexport { default as warm } from './warm.json'\nexport { default as winter } from './winter.json'\nexport { default as x_rain } from './x_rain.json'\nexport { default as afni_blues_inv } from './afni_blues_inv.json'\nexport { default as afni_reds_inv } from './afni_reds_inv.json'\nexport { default as roi_i256 } from './roi_i256.json'\n","{\n  \"R\": [\n    0, 255, 0, 0, 255, 0, 255, 255, 0, 205, 210, 102, 0, 0, 46, 255, 106, 221,\n    233, 165, 255, 147, 218, 75, 255, 60, 255, 255, 218, 0, 188, 255, 255, 222,\n    127, 139, 124, 255, 70, 0, 238, 238, 240, 245, 184, 32, 255, 25, 112, 34,\n    248, 245, 255, 144, 173, 65, 255, 250, 128, 50, 244, 255, 123, 255, 173,\n    255, 127, 255, 143, 220, 253, 255, 0, 0, 128, 255, 250, 148, 178, 255, 135,\n    100, 240, 250, 255, 107, 135, 0, 139, 245, 186, 255, 255, 0, 210, 255, 47,\n    72, 175, 128, 176, 255, 139, 240, 255, 216, 119, 219, 72, 255, 199, 154,\n    189, 240, 230, 0, 85, 64, 153, 205, 250, 95, 0, 255, 224, 176, 138, 30, 240,\n    152, 160\n  ],\n  \"G\": [\n    0, 0, 255, 0, 255, 255, 0, 239, 0, 133, 180, 205, 0, 139, 139, 228, 90, 160,\n    150, 42, 250, 112, 112, 0, 182, 179, 235, 228, 165, 128, 143, 105, 218, 184,\n    255, 69, 252, 255, 130, 100, 130, 232, 255, 222, 134, 178, 20, 25, 128, 139,\n    248, 255, 160, 238, 255, 105, 99, 240, 0, 205, 164, 255, 104, 165, 216, 192,\n    255, 140, 188, 20, 245, 250, 206, 255, 0, 250, 128, 0, 34, 127, 206, 149,\n    230, 235, 245, 142, 206, 0, 0, 245, 85, 228, 222, 191, 105, 248, 79, 61,\n    238, 128, 224, 240, 0, 255, 215, 191, 136, 112, 209, 0, 21, 205, 183, 248,\n    230, 250, 107, 224, 50, 92, 250, 158, 128, 69, 255, 196, 43, 144, 128, 251,\n    82\n  ],\n  \"B\": [\n    0, 0, 0, 255, 0, 255, 255, 213, 205, 63, 140, 170, 128, 139, 87, 225, 205,\n    221, 122, 42, 250, 219, 214, 130, 193, 113, 205, 196, 32, 128, 143, 180,\n    185, 135, 0, 19, 0, 224, 180, 0, 238, 170, 240, 179, 11, 170, 147, 112, 144,\n    34, 255, 250, 122, 144, 47, 225, 71, 230, 0, 50, 96, 240, 238, 0, 230, 203,\n    212, 0, 143, 60, 230, 240, 209, 127, 128, 205, 114, 211, 34, 80, 235, 237,\n    140, 215, 238, 35, 250, 139, 139, 220, 211, 181, 173, 255, 30, 220, 79, 139,\n    238, 0, 230, 245, 0, 255, 0, 216, 153, 147, 204, 255, 133, 50, 107, 255,\n    250, 154, 47, 208, 204, 92, 210, 160, 0, 0, 255, 222, 226, 255, 128, 152, 45\n  ],\n  \"A\": [\n    0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255\n  ],\n  \"I\": [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n    21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n    40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,\n    59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,\n    78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,\n    97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,\n    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,\n    128, 129, 130\n  ]\n}\n","{\n  \"labels\": [\n    \"background\",\n    \"tissue\",\n    \"bone\",\n    \"skin\",\n    \"connective tissue\",\n    \"blood\",\n    \"organ\",\n    \"mass\",\n    \"muscle\",\n    \"foreign object\",\n    \"waste\",\n    \"teeth\",\n    \"fat\",\n    \"gray matter\",\n    \"white matter\",\n    \"nerve\",\n    \"vein\",\n    \"artery\",\n    \"capillary\",\n    \"ligament\",\n    \"tendon\",\n    \"cartilage\",\n    \"meniscus\",\n    \"lymph node\",\n    \"lymphatic vessel\",\n    \"cerebro-spinal fluid\",\n    \"bile\",\n    \"urine\",\n    \"feces\",\n    \"gas\",\n    \"fluid\",\n    \"edema\",\n    \"bleeding\",\n    \"necrosis\",\n    \"clot\",\n    \"embolism\",\n    \"head\",\n    \"central nervous system\",\n    \"brain\",\n    \"gray matter of brain\",\n    \"telencephalon\",\n    \"cerebral cortex\",\n    \"right frontal lobe\",\n    \"left frontal lobe\",\n    \"right temporal lobe\",\n    \"left temporal lobe\",\n    \"right parietal lobe\",\n    \"left parietal lobe\",\n    \"right occipital lobe\",\n    \"left occipital lobe\",\n    \"right insular lobe\",\n    \"left insular lobe\",\n    \"right limbic lobe\",\n    \"left limbic lobe\",\n    \"right striatum\",\n    \"left striatum\",\n    \"right caudate nucleus\",\n    \"left caudate nucleus\",\n    \"right putamen\",\n    \"left putamen\",\n    \"right pallidum\",\n    \"left pallidum\",\n    \"right amygdaloid complex\",\n    \"left amygdaloid complex\",\n    \"diencephalon\",\n    \"thalamus\",\n    \"right thalamus\",\n    \"left thalamus\",\n    \"pineal gland\",\n    \"midbrain\",\n    \"substantia nigra\",\n    \"right substantia nigra\",\n    \"left substantia nigra\",\n    \"cerebral white matter\",\n    \"right superior longitudinal fasciculus\",\n    \"left superior longitudinal fasciculus\",\n    \"right inferior longitudinal fasciculus\",\n    \"left inferior longitudinal fasciculus\",\n    \"right arcuate fasciculus\",\n    \"left arcuate fasciculus\",\n    \"right uncinate fasciculus\",\n    \"left uncinate fasciculus\",\n    \"right cingulum bundle\",\n    \"left cingulum bundle\",\n    \"projection fibers\",\n    \"right corticospinal tract\",\n    \"left corticospinal tract\",\n    \"right optic radiation\",\n    \"left optic radiation\",\n    \"right medial lemniscus\",\n    \"left medial lemniscus\",\n    \"right superior cerebellar peduncle\",\n    \"left superior cerebellar peduncle\",\n    \"right middle cerebellar peduncle\",\n    \"left middle cerebellar peduncle\",\n    \"right inferior cerebellar peduncle\",\n    \"left inferior cerebellar peduncle\",\n    \"optic chiasm\",\n    \"right optic tract\",\n    \"left optic tract\",\n    \"right fornix\",\n    \"left fornix\",\n    \"commissural fibers\",\n    \"corpus callosum\",\n    \"posterior commissure\",\n    \"cerebellar white matter\",\n    \"CSF space\",\n    \"ventricles of brain\",\n    \"right lateral ventricle\",\n    \"left lateral ventricle\",\n    \"right third ventricle\",\n    \"left third ventricle\",\n    \"cerebral aqueduct\",\n    \"fourth ventricle\",\n    \"subarachnoid space\",\n    \"spinal cord\",\n    \"gray matter of spinal cord\",\n    \"white matter of spinal cord\",\n    \"endocrine system of brain\",\n    \"pituitary gland\",\n    \"adenohypophysis\",\n    \"neurohypophysis\",\n    \"meninges\",\n    \"dura mater\",\n    \"arachnoid\",\n    \"pia mater\",\n    \"muscles of head\",\n    \"salivary glands\",\n    \"lips\",\n    \"nose\",\n    \"tongue\",\n    \"soft palate\",\n    \"right inner ear\",\n    \"left inner ear\",\n    \"right external ear\",\n    \"left external ear\",\n    \"right middle ear\",\n    \"left middle ear\",\n    \"right eyeball\",\n    \"left eyeball\",\n    \"skull\",\n    \"right frontal bone\",\n    \"left frontal bone\",\n    \"right parietal bone\",\n    \"left parietal bone\",\n    \"right temporal bone\",\n    \"left temporal bone\",\n    \"right sphenoid bone\",\n    \"left sphenoid bone\",\n    \"right ethmoid bone\",\n    \"left ethmoid bone\",\n    \"occipital bone\",\n    \"maxilla\",\n    \"right zygomatic bone\",\n    \"right lacrimal bone\",\n    \"vomer bone\",\n    \"right palatine bone\",\n    \"left palatine bone\",\n    \"mandible\",\n    \"neck\",\n    \"muscles of neck\",\n    \"pharynx\",\n    \"larynx\",\n    \"thyroid gland\",\n    \"right parathyroid glands\",\n    \"left parathyroid glands\",\n    \"skeleton of neck\",\n    \"hyoid bone\",\n    \"cervical vertebral column\",\n    \"thorax\",\n    \"trachea\",\n    \"bronchi\",\n    \"right lung\",\n    \"left lung\",\n    \"superior lobe of right lung\",\n    \"superior lobe of left lung\",\n    \"middle lobe of right lung\",\n    \"inferior lobe of right lung\",\n    \"inferior lobe of left lung\",\n    \"pleura\",\n    \"heart\",\n    \"right atrium\",\n    \"left atrium\",\n    \"atrial septum\",\n    \"ventricular septum\",\n    \"right ventricle of heart\",\n    \"left ventricle of heart\",\n    \"mitral valve\",\n    \"tricuspid valve\",\n    \"aortic valve\",\n    \"pulmonary valve\",\n    \"aorta\",\n    \"pericardium\",\n    \"pericardial cavity\",\n    \"esophagus\",\n    \"thymus\",\n    \"mediastinum\",\n    \"skin of thoracic wall\",\n    \"muscles of thoracic wall\",\n    \"skeleton of thorax\",\n    \"thoracic vertebral column\",\n    \"ribs\",\n    \"sternum\",\n    \"right clavicle\",\n    \"left clavicle\",\n    \"abdominal cavity\",\n    \"abdomen\",\n    \"peritoneum\",\n    \"omentum\",\n    \"peritoneal cavity\",\n    \"retroperitoneal space\",\n    \"stomach\",\n    \"duodenum\",\n    \"small bowel\",\n    \"colon\",\n    \"anus\",\n    \"liver\",\n    \"biliary tree\",\n    \"gallbladder\",\n    \"pancreas\",\n    \"spleen\",\n    \"urinary system\",\n    \"right kidney\",\n    \"left kidney\",\n    \"right ureter\",\n    \"left ureter\",\n    \"urinary bladder\",\n    \"urethra\",\n    \"right adrenal gland\",\n    \"left adrenal gland\",\n    \"female internal genitalia\",\n    \"uterus\",\n    \"right fallopian tube\",\n    \"left fallopian tube\",\n    \"right ovary\",\n    \"left ovary\",\n    \"vagina\",\n    \"male internal genitalia\",\n    \"prostate\",\n    \"right seminal vesicle\",\n    \"left seminal vesicle\",\n    \"right deferent duct\",\n    \"left deferent duct\",\n    \"skin of abdominal wall\",\n    \"muscles of abdominal wall\",\n    \"skeleton of abdomen\",\n    \"lumbar vertebral column\",\n    \"female external genitalia\",\n    \"male external genitalia\",\n    \"skeleton of upper limb\",\n    \"muscles of upper limb\",\n    \"right upper limb\",\n    \"left upper limb\",\n    \"right shoulder\",\n    \"left shoulder\",\n    \"right arm\"\n  ],\n  \"R\": [\n    0, 128, 241, 177, 111, 216, 221, 144, 192, 220, 78, 255, 230, 200, 250, 244,\n    0, 216, 183, 183, 152, 111, 178, 68, 111, 85, 0, 214, 78, 218, 170, 140,\n    188, 216, 145, 150, 177, 244, 250, 200, 68, 128, 83, 83, 162, 162, 141, 141,\n    182, 182, 188, 188, 154, 154, 177, 177, 30, 30, 210, 210, 48, 48, 98, 98,\n    69, 166, 122, 122, 253, 145, 46, 0, 0, 250, 127, 127, 159, 159, 125, 125,\n    106, 106, 154, 154, 126, 201, 201, 78, 78, 174, 174, 139, 139, 148, 148,\n    186, 186, 99, 156, 156, 64, 64, 138, 97, 126, 194, 85, 88, 88, 88, 88, 88,\n    88, 88, 88, 244, 200, 250, 82, 57, 60, 92, 255, 255, 255, 255, 201, 70, 188,\n    177, 166, 182, 229, 229, 174, 174, 201, 201, 194, 194, 241, 203, 203, 229,\n    229, 255, 255, 209, 209, 248, 248, 255, 196, 255, 255, 255, 242, 242, 222,\n    177, 213, 184, 150, 62, 62, 62, 242, 250, 255, 177, 182, 175, 197, 197, 172,\n    172, 202, 224, 224, 255, 206, 210, 203, 233, 195, 181, 152, 159, 166, 218,\n    225, 224, 255, 184, 211, 47, 255, 173, 188, 255, 226, 253, 244, 205, 205,\n    186, 177, 255, 234, 204, 180, 216, 255, 205, 204, 255, 221, 0, 139, 249,\n    157, 203, 185, 185, 247, 247, 222, 124, 249, 249, 244, 255, 255, 227, 213,\n    213, 193, 216, 230, 245, 245, 241, 241, 177, 171, 217, 212, 185, 185, 198,\n    194, 177, 177, 177, 177, 177\n  ],\n  \"G\": [\n    0, 174, 214, 122, 184, 101, 130, 238, 104, 245, 63, 250, 220, 200, 250, 214,\n    151, 101, 156, 214, 189, 184, 212, 172, 197, 188, 145, 230, 63, 255, 250,\n    224, 65, 191, 60, 98, 122, 214, 250, 200, 131, 174, 146, 146, 115, 115, 93,\n    93, 166, 166, 135, 135, 150, 150, 140, 140, 111, 111, 157, 157, 129, 129,\n    153, 153, 110, 113, 101, 101, 135, 92, 101, 108, 108, 250, 150, 150, 116,\n    116, 102, 102, 174, 174, 146, 146, 126, 160, 160, 152, 152, 140, 140, 126,\n    126, 120, 120, 135, 135, 106, 171, 171, 123, 123, 95, 113, 161, 195, 188,\n    106, 106, 106, 106, 106, 106, 106, 106, 214, 200, 250, 174, 157, 143, 162,\n    244, 244, 244, 244, 121, 163, 91, 122, 84, 105, 147, 147, 122, 122, 112,\n    112, 142, 142, 213, 179, 179, 204, 204, 243, 243, 185, 185, 223, 223, 230,\n    172, 255, 250, 237, 217, 217, 198, 122, 124, 105, 208, 162, 162, 162, 206,\n    210, 255, 122, 228, 216, 165, 165, 138, 138, 164, 186, 186, 245, 110, 115,\n    108, 138, 100, 85, 55, 63, 70, 123, 130, 97, 244, 122, 171, 150, 244, 121,\n    95, 239, 202, 232, 217, 179, 179, 124, 122, 255, 234, 142, 119, 132, 253,\n    167, 168, 224, 130, 145, 150, 180, 108, 136, 102, 102, 182, 182, 154, 186,\n    186, 186, 170, 181, 190, 153, 141, 141, 123, 146, 158, 172, 172, 172, 172,\n    124, 85, 198, 188, 135, 135, 175, 98, 122, 122, 122, 122, 122\n  ],\n  \"B\": [\n    0, 128, 145, 101, 210, 79, 101, 144, 88, 20, 0, 220, 70, 235, 210, 49, 206,\n    79, 220, 211, 207, 210, 242, 100, 131, 255, 30, 130, 0, 255, 250, 228, 28,\n    216, 66, 83, 101, 49, 225, 215, 98, 128, 164, 164, 105, 105, 137, 137, 110,\n    110, 166, 166, 201, 201, 190, 190, 85, 85, 166, 166, 126, 126, 112, 112, 53,\n    137, 38, 38, 192, 109, 131, 112, 112, 225, 88, 88, 163, 163, 154, 154, 155,\n    155, 83, 83, 55, 133, 133, 141, 141, 103, 103, 177, 177, 72, 72, 135, 135,\n    24, 108, 108, 147, 147, 74, 158, 197, 164, 255, 215, 215, 215, 215, 215,\n    215, 215, 215, 49, 215, 225, 128, 110, 83, 109, 209, 209, 209, 209, 77, 117,\n    95, 101, 94, 107, 118, 118, 90, 90, 73, 73, 0, 0, 144, 77, 77, 109, 109,\n    152, 152, 85, 85, 131, 131, 138, 68, 167, 160, 145, 123, 123, 101, 101, 109,\n    108, 243, 114, 114, 114, 142, 139, 207, 101, 255, 244, 145, 145, 115, 115,\n    140, 162, 162, 217, 84, 89, 81, 112, 73, 57, 13, 27, 38, 97, 104, 76, 209,\n    154, 143, 103, 209, 88, 76, 172, 134, 158, 154, 108, 108, 161, 101, 220,\n    194, 178, 153, 105, 229, 142, 143, 199, 101, 30, 98, 111, 162, 116, 83, 83,\n    164, 164, 132, 223, 150, 150, 147, 158, 165, 130, 113, 113, 103, 127, 140,\n    147, 147, 151, 151, 92, 68, 131, 102, 134, 134, 125, 79, 101, 101, 101, 101,\n    101\n  ],\n  \"A\": [\n    0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n    255\n  ],\n  \"I\": [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n    21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n    40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,\n    59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,\n    78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,\n    97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,\n    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,\n    128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,\n    143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,\n    158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,\n    173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,\n    188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,\n    203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217,\n    218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232,\n    233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,\n    248, 249, 250, 251, 252, 253, 254, 255\n  ]\n}\n","{\n  \"R\": [0, 0, 24, 248, 255],\n  \"G\": [0, 0, 177, 254, 0],\n  \"B\": [0, 136, 0, 0, 0],\n  \"A\": [0, 32, 64, 78, 128],\n  \"I\": [0, 64, 128, 156, 255]\n}\n","{\n  \"R\": [1, 10, 15, 17, 21, 27, 36, 49, 65, 82, 99, 118, 140, 161, 183, 203, 222, 238, 248, 253, 253, 253, 252, 250],\n  \"G\": [25, 42, 56, 68, 79, 88, 97, 105, 111, 116, 122, 127, 133, 138, 142, 146, 150, 155, 162, 170, 178, 186, 195, 204],\n  \"B\": [89, 92, 95, 96, 98, 98, 96, 91, 83, 74, 64, 55, 46, 43, 49, 62, 79, 100, 126, 151, 175, 199, 223, 250],\n  \"A\": [0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64],\n  \"I\": [0, 11, 22, 33, 44, 55, 66, 77, 88, 99, 110, 121, 133, 144, 155, 166, 177, 188, 199, 210, 221, 232, 243, 255]\n}\n","{\n  \"R\": [\n    0, 248, 242, 235, 229, 222, 212, 202, 193, 183, 173, 145, 117, 78, 39, 0, 0,\n    0, 0, 0, 0, 64, 128, 191, 255, 255, 255, 255, 255, 238, 221, 204, 214, 224,\n    235, 245, 255, 249, 242, 236, 229, 223, 217, 210, 204, 197, 191, 184, 176,\n    169, 161, 154, 146, 139, 132, 124, 117, 109, 102, 0\n  ],\n  \"G\": [\n    0, 251, 247, 243, 239, 235, 235, 235, 235, 235, 235, 216, 197, 174, 150,\n    127, 153, 178, 204, 229, 255, 255, 255, 255, 255, 220, 185, 150, 115, 77,\n    38, 0, 31, 61, 92, 122, 153, 138, 122, 107, 92, 77, 61, 46, 31, 15, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n  ],\n  \"B\": [\n    0, 254, 253, 252, 251, 250, 251, 252, 253, 254, 255, 226, 198, 132, 66, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 80, 120, 160, 200, 199,\n    198, 197, 196, 196, 195, 194, 193, 192, 191, 184, 176, 169, 161, 154, 146,\n    139, 132, 124, 117, 109, 102, 0\n  ],\n  \"A\": [\n    256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256,\n    256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256,\n    256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256,\n    256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256\n  ],\n  \"I\": [\n    0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76,\n    80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140,\n    144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200,\n    204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 255\n  ]\n}\n","{\n  \"R\": [\n    255, 248, 242, 235, 229, 222, 212, 202, 193, 183, 173, 145, 117, 78, 39, 0,\n    0, 0, 0, 0, 0, 64, 128, 191, 255, 255, 255, 255, 255, 238, 221, 204, 214,\n    224, 235, 245, 255, 249, 242, 236, 229, 223, 217, 210, 204, 197, 191, 184,\n    176, 169, 161, 154, 146, 139, 132, 124, 117, 109, 102, 0\n  ],\n  \"G\": [\n    255, 251, 247, 243, 239, 235, 235, 235, 235, 235, 235, 216, 197, 174, 150,\n    127, 153, 178, 204, 229, 255, 255, 255, 255, 255, 220, 185, 150, 115, 77,\n    38, 0, 31, 61, 92, 122, 153, 138, 122, 107, 92, 77, 61, 46, 31, 15, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n  ],\n  \"B\": [\n    255, 254, 253, 252, 251, 250, 251, 252, 253, 254, 255, 226, 198, 132, 66, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 80, 120, 160, 200, 199,\n    198, 197, 196, 196, 195, 194, 193, 192, 191, 184, 176, 169, 161, 154, 146,\n    139, 132, 124, 117, 109, 102, 0\n  ],\n  \"A\": [\n    256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256,\n    256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256,\n    256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256,\n    256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256\n  ],\n  \"I\": [\n    0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76,\n    80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140,\n    144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200,\n    204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 255\n  ]\n}\n","{\n  \"R\": [0, 0, 0, 0, 196, 255],\n  \"G\": [0, 32, 128, 128, 128, 32],\n  \"B\": [0, 255, 196, 0, 0, 0],\n  \"A\": [0, 128, 64, 64, 64, 128],\n  \"I\": [0, 1, 64, 128, 192, 255]\n}\n","{\n  \"R\": [0, 255],\n  \"G\": [0, 0],\n  \"B\": [255, 255],\n  \"A\": [0, 128],\n  \"I\": [0, 255]\n}\n","{\n  \"R\": [0, 0],\n  \"G\": [0, 255],\n  \"B\": [255, 255],\n  \"A\": [0, 128],\n  \"I\": [0, 255]\n}\n","{\n  \"R\": [0, 0, 0, 0],\n  \"G\": [0, 1, 128, 255],\n  \"B\": [0, 222, 127, 32],\n  \"A\": [0, 0, 64, 128],\n  \"I\": [0, 1, 128, 255]\n}\n","{\n  \"R\": [0, 0, 0],\n  \"G\": [0, 0, 0],\n  \"B\": [0, 128, 255],\n  \"A\": [0, 64, 128],\n  \"I\": [0, 128, 255]\n}\n","{\n  \"R\": [0, 103, 255],\n  \"G\": [0, 126, 255],\n  \"B\": [0, 165, 255],\n  \"A\": [0, 76, 128],\n  \"I\": [0, 153, 255]\n}\n","{\n  \"R\": [0, 43, 103, 199, 216, 255],\n  \"G\": [0, 0, 37, 155, 213, 255],\n  \"B\": [0, 0, 20, 97, 201, 255],\n  \"A\": [0, 44, 48, 54, 56, 56],\n  \"I\": [0, 64, 128, 196, 240, 255]\n}\n","{\n  \"R\": [\n    0, 9, 24, 33, 40, 46, 52, 57, 62, 66, 70, 74, 78, 81, 85, 88, 91, 94, 98,\n    101, 103, 106, 109, 112, 114, 117, 119, 121, 124, 126, 128, 130, 133, 135,\n    137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 164,\n    166, 168, 169, 171, 172, 174, 175, 177, 178, 180, 181, 183, 184, 186, 187,\n    189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205,\n    206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220,\n    221, 222, 222, 223, 224, 224, 225, 226, 226, 227, 228, 228, 229, 229, 230,\n    231, 231, 232, 233, 233, 234, 234, 235, 235, 236, 236, 236, 237, 237, 237,\n    238, 238, 238, 239, 239, 239, 240, 240, 240, 241, 241, 241, 242, 242, 242,\n    243, 243, 243, 243, 243, 243, 243, 243, 244, 244, 244, 244, 244, 244, 244,\n    244, 244, 244, 244, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245,\n    245, 245, 245, 245, 245, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244,\n    244, 244, 244, 244, 244, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243,\n    243, 243, 242, 242, 242, 242, 242, 242, 242, 242, 241, 242, 242, 242, 242,\n    242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242,\n    242, 242, 242, 242, 243, 243, 244, 244, 245, 246, 246, 247, 247, 248, 249,\n    249, 250, 250, 251, 251, 252, 252, 253, 253, 254, 254, 254\n  ],\n  \"G\": [\n    42, 41, 41, 41, 40, 40, 40, 39, 39, 39, 38, 38, 37, 37, 36, 36, 35, 35, 34,\n    34, 33, 32, 32, 31, 30, 30, 30, 30, 29, 29, 29, 29, 28, 28, 28, 27, 27, 27,\n    26, 26, 26, 25, 25, 25, 24, 24, 24, 24, 24, 25, 25, 26, 27, 27, 28, 28, 29,\n    30, 30, 31, 31, 32, 33, 33, 34, 34, 35, 36, 36, 37, 38, 39, 40, 42, 43, 44,\n    45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66,\n    68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 92,\n    93, 94, 95, 97, 98, 100, 101, 102, 104, 105, 107, 108, 109, 111, 112, 113,\n    115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133,\n    134, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 153,\n    154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 172,\n    173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190,\n    191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207,\n    208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,\n    224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 238,\n    239, 240, 241, 241, 242, 243, 244, 244, 245, 246, 247, 248, 248, 249, 250,\n    251, 251, 252, 253, 254, 255\n  ],\n  \"B\": [\n    167, 167, 166, 166, 166, 165, 165, 165, 164, 164, 164, 163, 163, 162, 162,\n    162, 161, 161, 161, 160, 160, 160, 159, 159, 158, 158, 157, 157, 156, 155,\n    155, 154, 154, 153, 153, 152, 151, 151, 150, 150, 149, 149, 148, 147, 147,\n    146, 146, 145, 144, 144, 143, 143, 142, 141, 141, 140, 139, 139, 138, 137,\n    137, 136, 135, 135, 134, 133, 133, 132, 131, 131, 130, 130, 129, 128, 128,\n    127, 127, 126, 125, 125, 124, 124, 123, 123, 122, 121, 121, 120, 119, 119,\n    118, 118, 117, 116, 116, 116, 115, 115, 114, 114, 113, 113, 113, 112, 112,\n    111, 111, 110, 110, 109, 109, 109, 108, 108, 107, 107, 106, 106, 106, 106,\n    106, 105, 105, 105, 105, 105, 105, 105, 104, 104, 104, 104, 104, 103, 103,\n    103, 103, 103, 102, 102, 102, 103, 103, 103, 103, 104, 104, 104, 104, 104,\n    105, 105, 105, 105, 106, 106, 106, 106, 106, 107, 107, 107, 107, 108, 108,\n    109, 110, 111, 111, 112, 113, 113, 114, 115, 115, 116, 117, 117, 118, 119,\n    120, 120, 121, 122, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134,\n    135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152,\n    153, 155, 157, 158, 160, 162, 163, 165, 167, 168, 170, 172, 173, 175, 177,\n    178, 180, 182, 183, 185, 187, 188, 190, 193, 196, 199, 201, 204, 207, 210,\n    212, 215, 218, 221, 224, 226, 229, 232, 235, 238, 240, 243, 246, 249, 252,\n    255\n  ],\n  \"A\": [\n    0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64\n  ],\n  \"I\": [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n    21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n    40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,\n    59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,\n    78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,\n    97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,\n    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,\n    128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,\n    143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,\n    158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,\n    173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,\n    188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,\n    203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217,\n    218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232,\n    233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,\n    248, 249, 250, 251, 252, 253, 254, 255\n  ]\n}\n","{\n  \"R\": [0, 86, 166, 255],\n  \"G\": [32, 92, 156, 233],\n  \"B\": [76, 108, 117, 69],\n  \"A\": [0, 56, 80, 88],\n  \"I\": [0, 64, 192, 255]\n}\n","{\n  \"R\": [0, 0, 0],\n  \"G\": [127, 196, 254],\n  \"B\": [255, 255, 255],\n  \"A\": [0, 64, 128],\n  \"I\": [0, 128, 255]\n}\n","{\n  \"R\": [0, 61, 122, 183, 244, 255],\n  \"G\": [0, 41, 81, 122, 163, 255],\n  \"B\": [0, 25, 51, 76, 102, 255],\n  \"A\": [0, 25, 51, 71, 102, 128],\n  \"I\": [0, 51, 102, 153, 204, 255]\n}\n","{\n  \"R\": [0, 61, 122, 183, 244, 255],\n  \"G\": [0, 41, 81, 122, 163, 203],\n  \"B\": [0, 25, 51, 76, 102, 127],\n  \"A\": [0, 25, 51, 71, 102, 128],\n  \"I\": [0, 51, 102, 153, 204, 255]\n}\n","{\n  \"min\": -643,\n  \"max\": -235,\n  \"R\": [0, 0, 0],\n  \"G\": [154, 154, 154],\n  \"B\": [179, 179, 101],\n  \"A\": [0, 32, 0],\n  \"I\": [0, 163, 255]\n}\n","{\n  \"min\": 114,\n  \"max\": 800,\n  \"R\": [0, 255, 255, 255],\n  \"G\": [0, 0, 129, 255],\n  \"B\": [0, 0, 0, 255],\n  \"A\": [0, 64, 88, 228],\n  \"I\": [0, 80, 160, 255]\n}\n","{\n  \"min\": 180,\n  \"max\": 600,\n  \"R\": [0, 0, 113, 255],\n  \"G\": [0, 0, 109, 250],\n  \"B\": [0, 0, 101, 245],\n  \"A\": [0, 0, 100, 160],\n  \"I\": [0, 1, 128, 255]\n}\n","{\n  \"min\": -10,\n  \"max\": 110,\n  \"R\": [0, 127, 255],\n  \"G\": [0, 127, 255],\n  \"B\": [0, 127, 255],\n  \"A\": [0, 48, 128],\n  \"I\": [0, 124, 255]\n}\n","{\n  \"min\": -10,\n  \"max\": 110,\n  \"R\": [0, 199, 255],\n  \"G\": [0, 127, 255],\n  \"B\": [0, 127, 255],\n  \"A\": [0, 48, 128],\n  \"I\": [0, 124, 255]\n}\n","{\n  \"min\": -80,\n  \"max\": 1000,\n  \"R\": [0, 189, 150, 150, 150, 150, 255],\n  \"G\": [0, 169, 54, 54, 54, 54, 240],\n  \"B\": [0, 153, 52, 52, 52, 52, 242],\n  \"A\": [0, 32, 64, 0, 0, 64, 64],\n  \"I\": [0, 1, 82, 92, 234, 242, 255]\n}\n","{\n  \"min\": -590,\n  \"max\": 600,\n  \"R\": [0, 241, 241, 248, 248, 178, 178, 232, 255, 255, 255],\n  \"G\": [0, 156, 156, 222, 222, 36, 36, 51, 255, 255, 255],\n  \"B\": [0, 130, 130, 169, 169, 24, 24, 37, 255, 255, 255],\n  \"A\": [0, 8, 0, 0, 0, 64, 64, 0, 0, 222, 222],\n  \"I\": [0, 2, 3, 64, 122, 142, 172, 182, 252, 253, 255]\n}\n","{\n  \"min\": 114,\n  \"max\": 302,\n  \"R\": [0, 255, 255],\n  \"G\": [0, 129, 255],\n  \"B\": [0, 0, 255],\n  \"A\": [0, 88, 228],\n  \"I\": [0, 103, 255]\n}\n","{\n  \"min\": -23,\n  \"max\": 246,\n  \"R\": [0, 44, 255, 255, 255],\n  \"G\": [0, 128, 90, 255, 255],\n  \"B\": [0, 0, 70, 0, 255],\n  \"A\": [0, 0, 82, 184, 228],\n  \"I\": [0, 64, 131, 196, 255]\n}\n","{\n  \"min\": -100,\n  \"max\": 246,\n  \"R\": [0, 128, 159, 255, 255, 255, 255],\n  \"G\": [0, 0, 56, 90, 0, 255, 255],\n  \"B\": [0, 0, 41, 70, 0, 0, 255],\n  \"A\": [0, 63, 105, 135, 167, 184, 228],\n  \"I\": [0, 100, 128, 155, 180, 209, 255]\n}\n","{\n  \"min\": -590,\n  \"max\": 600,\n  \"R\": [0, 241, 241, 248, 248, 178, 232, 255, 255],\n  \"G\": [0, 156, 156, 222, 222, 36, 51, 255, 255],\n  \"B\": [0, 130, 130, 169, 169, 24, 37, 255, 255],\n  \"A\": [0, 63, 105, 135, 167, 184, 228, 228, 228],\n  \"I\": [0, 1, 52, 127, 137, 162, 172, 252, 255]\n}\n","{\n  \"min\": 140,\n  \"max\": 1024,\n  \"R\": [0, 2, 113, 255],\n  \"G\": [0, 1, 109, 250],\n  \"B\": [0, 1, 101, 245],\n  \"A\": [0, 1, 96, 168],\n  \"I\": [0, 1, 128, 255]\n}\n","{\n  \"min\": -923,\n  \"max\": 679,\n  \"R\": [0, 0, 0, 0, 0, 255, 255, 255],\n  \"G\": [154, 154, 154, 154, 0, 0, 254, 255],\n  \"B\": [179, 179, 179, 179, 0, 0, 0, 255],\n  \"A\": [0, 3, 8, 0, 0, 10, 15, 20],\n  \"I\": [0, 30, 62, 88, 170, 200, 232, 255]\n}\n","{\n  \"min\": -10,\n  \"max\": 110,\n  \"R\": [0, 199, 255],\n  \"G\": [0, 127, 255],\n  \"B\": [0, 127, 255],\n  \"A\": [0, 48, 128],\n  \"I\": [0, 124, 255]\n}\n","{\n  \"min\": -600,\n  \"max\": 100,\n  \"R\": [0, 134, 255],\n  \"G\": [0, 109, 250],\n  \"B\": [0, 101, 245],\n  \"A\": [0, 60, 148],\n  \"I\": [0, 128, 255]\n}\n","{\n  \"min\": 114,\n  \"max\": 246,\n  \"R\": [0, 255, 255],\n  \"G\": [0, 128, 255],\n  \"B\": [0, 128, 255],\n  \"A\": [0, 64, 96],\n  \"I\": [0, 87, 255]\n}\n","{\n  \"min\": 50,\n  \"max\": 1000,\n  \"R\": [98, 210, 169, 128, 255],\n  \"G\": [94, 26, 77, 128, 255],\n  \"B\": [45, 21, 74, 128, 255],\n  \"A\": [0, 25, 0, 4, 168],\n  \"I\": [0, 41, 87, 154, 255]\n}\n","{\n  \"R\": [\n    0, 13, 21, 26, 27, 25, 22, 21, 22, 28, 39, 54, 75, 98, 124, 148, 171, 189,\n    202, 210, 213, 211, 206, 200, 195, 193, 195, 201, 211, 225, 240, 255\n  ],\n  \"G\": [\n    0, 5, 11, 20, 31, 44, 58, 72, 86, 99, 109, 116, 120, 122, 122, 122, 121,\n    121, 124, 129, 137, 147, 161, 175, 190, 205, 218, 229, 238, 245, 251, 255\n  ],\n  \"B\": [\n    0, 14, 30, 46, 61, 71, 77, 78, 75, 68, 60, 52, 48, 47, 53, 65, 83, 105, 131,\n    157, 183, 205, 222, 235, 241, 243, 242, 240, 239, 240, 245, 255\n  ],\n  \"A\": [\n    0, 4, 8, 12, 17, 21, 25, 29, 33, 37, 41, 45, 50, 54, 58, 62, 66, 70, 74, 78,\n    83, 87, 91, 95, 99, 103, 107, 111, 116, 120, 124, 128\n  ],\n  \"I\": [\n    0, 8, 16, 25, 33, 41, 49, 58, 66, 74, 82, 90, 99, 107, 115, 123, 132, 140,\n    148, 156, 165, 173, 181, 189, 197, 206, 214, 222, 230, 239, 247, 255\n  ]\n}\n","{\n  \"R\": [0, 10, 136, 255],\n  \"G\": [0, 39, 220, 255],\n  \"B\": [0, 223, 253, 255],\n  \"A\": [0, 48, 64, 70],\n  \"I\": [0, 92, 192, 255]\n}\n","{\n  \"R\": [\n    0, 245, 205, 120, 196, 220, 230, 0, 122, 236, 12, 204, 42, 119, 220, 103,\n    60, 255, 165, 160, 0, 245, 205, 120, 196, 220, 230, 0, 122, 236, 13, 220,\n    103, 255, 165, 160, 0, 120, 200, 255, 255, 164, 164, 164, 234, 0, 0, 0, 0, 0\n  ],\n  \"G\": [\n    0, 245, 62, 18, 58, 248, 148, 118, 186, 13, 48, 182, 204, 159, 216, 255, 60,\n    165, 42, 32, 200, 245, 62, 18, 58, 248, 148, 118, 186, 13, 48, 216, 255,\n    165, 42, 32, 200, 190, 70, 148, 148, 108, 108, 108, 169, 0, 0, 0, 0, 0\n  ],\n  \"B\": [\n    0, 245, 78, 134, 250, 164, 34, 14, 220, 176, 255, 142, 164, 176, 20, 255,\n    60, 0, 42, 240, 200, 245, 78, 134, 250, 164, 34, 14, 220, 176, 255, 20, 255,\n    0, 42, 240, 221, 150, 255, 10, 10, 226, 226, 226, 30, 64, 112, 160, 208, 255\n  ],\n  \"A\": [\n    0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64\n  ],\n  \"I\": [\n    0, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 26, 28, 30, 31,\n    41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 58, 60, 62, 63, 72, 77, 78,\n    79, 80, 81, 82, 85, 251, 252, 253, 254, 255\n  ]\n}\n","{\n  \"R\": [0, 0, 128, 255, 255],\n  \"G\": [0, 128, 0, 128, 255],\n  \"B\": [0, 125, 255, 0, 255],\n  \"A\": [0, 32, 64, 96, 128],\n  \"I\": [0, 63, 128, 192, 255]\n}\n","{\n  \"R\": [0, 142, 227, 255],\n  \"G\": [0, 85, 170, 255],\n  \"B\": [0, 14, 76, 255],\n  \"A\": [0, 42, 84, 128],\n  \"I\": [0, 85, 170, 255]\n}\n","{\n  \"R\": [0, 255],\n  \"G\": [0, 255],\n  \"B\": [0, 255],\n  \"A\": [0, 128],\n  \"I\": [0, 255]\n}\n","{\n  \"R\": [0, 0, 0],\n  \"G\": [0, 128, 255],\n  \"B\": [0, 0, 0],\n  \"A\": [0, 64, 128],\n  \"I\": [0, 128, 255]\n}\n","{\n  \"R\": [0, 0, 0],\n  \"G\": [72, 72, 255],\n  \"B\": [0, 255, 255],\n  \"A\": [0, 64, 128],\n  \"I\": [0, 88, 255]\n}\n","{\n  \"R\": [0, 255, 255],\n  \"G\": [72, 88, 255],\n  \"B\": [0, 0, 0],\n  \"A\": [0, 64, 128],\n  \"I\": [0, 88, 255]\n}\n","{\n  \"R\": [0, 255, 255, 255],\n  \"G\": [0, 0, 126, 255],\n  \"B\": [0, 0, 0, 255],\n  \"A\": [0, 64, 96, 128],\n  \"I\": [0, 128, 191, 255]\n}\n","{\n  \"R\": [3, 255, 255, 255],\n  \"G\": [0, 0, 255, 255],\n  \"B\": [0, 0, 0, 255],\n  \"A\": [0, 48, 96, 128],\n  \"I\": [0, 95, 191, 255]\n}\n","{\n  \"R\": [255, 255, 0, 0, 0, 255, 255],\n  \"G\": [0, 255, 255, 255, 0, 0, 0],\n  \"B\": [0, 0, 0, 255, 255, 255, 0],\n  \"A\": [0, 14, 28, 43, 57, 71, 85],\n  \"I\": [0, 43, 85, 128, 170, 213, 255]\n}\n","{\n  \"R\": [0, 120, 237, 240],\n  \"G\": [0, 28, 105, 249],\n  \"B\": [4, 109, 37, 33],\n  \"A\": [0, 56, 80, 88],\n  \"I\": [0, 64, 192, 255]\n}\n","{\n  \"R\": [0, 0, 127, 255, 127],\n  \"G\": [0, 127, 255, 127, 0],\n  \"B\": [127, 255, 127, 0, 0],\n  \"A\": [0, 32, 64, 96, 128],\n  \"I\": [0, 63, 128, 192, 255]\n}\n","{\n  \"R\": [0, 255, 255],\n  \"G\": [0,   0, 255],\n  \"B\": [0,   0,   0],\n  \"A\": [0,  64,  64],\n  \"I\": [0,  86, 255]\n}\n","{\n  \"R\": [94, 50, 90, 152, 215, 238, 249, 254, 252, 241, 209, 158],\n  \"G\": [79, 131, 186, 214, 240, 244, 237, 210, 157, 100, 57, 1],\n  \"B\": [162, 189, 167, 164, 155, 169, 168, 123, 86, 68, 79, 66],\n  \"A\": [0, 12, 23, 35, 47, 58, 70, 81, 93, 105, 116, 128],\n  \"I\": [0, 23, 46, 70, 93, 116, 139, 162, 185, 209, 232, 255]\n}\n","{\n  \"R\": [3, 7, 13, 25, 45, 67, 84, 98, 110, 124, 138, 154, 173, 191, 210, 225, 233, 233, 231, 229, 230, 235, 243, 253],\n  \"G\": [19, 33, 48, 63, 77, 87, 92, 94, 95, 96, 96, 97, 99, 101, 106, 118, 133, 149, 163, 177, 192, 208, 225, 245],\n  \"B\": [38, 58, 79, 99, 114, 122, 122, 120, 117, 113, 110, 105, 101, 97, 94, 96, 103, 112, 122, 134, 149, 169, 192, 218],\n  \"A\": [0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64],\n  \"I\": [0, 11, 22, 33, 44, 55, 66, 77, 88, 99, 110, 121, 133, 144, 155, 166, 177, 188, 199, 210, 221, 232, 243, 255]\n}\n","{\n  \"R\": [0, 148, 183, 223, 247, 252],\n  \"G\": [0, 44, 55, 74, 112, 253],\n  \"B\": [4, 128, 121, 104, 92, 191],\n  \"A\": [0, 44, 53, 64, 75, 107],\n  \"I\": [0, 107, 128, 154, 179, 255]\n}\n","{\n  \"R\": [11, 59, 55, 222],\n  \"G\": [4, 45, 165, 245],\n  \"B\": [5, 91, 172, 229],\n  \"A\": [0, 23, 70, 107],\n  \"I\": [0, 56, 167, 255]\n}\n","{\n  \"R\": [3, 5, 6, 8, 12, 19, 28, 36, 42, 48, 54, 61, 68, 76, 86, 96, 110, 129, 154, 181, 205, 224, 239, 252],\n  \"G\": [19, 32, 44, 58, 72, 86, 98, 108, 116, 122, 128, 134, 141, 149, 157, 167, 178, 191, 204, 216, 225, 232, 239, 244],\n  \"B\": [39, 60, 82, 104, 123, 137, 144, 145, 142, 138, 134, 130, 126, 121, 116, 110, 105, 104, 112, 131, 155, 178, 198, 217],\n  \"A\": [0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64],\n  \"I\": [0, 11, 22, 33, 44, 55, 66, 77, 88, 99, 110, 121, 133, 144, 155, 166, 177, 188, 199, 210, 221, 232, 243, 255]\n}\n","{\n  \"R\": [0, 85, 0, 0, 0, 0, 0, 0, 85, 255, 255, 255, 172],\n  \"G\": [0, 0, 0, 0, 85, 170, 255, 255, 255, 255, 85, 0, 0],\n  \"B\": [0, 170, 85, 255, 255, 170, 170, 0, 85, 0, 0, 0, 0],\n  \"A\": [0, 5, 10, 21, 26, 32, 37, 42, 48, 53, 64, 72, 85],\n  \"I\": [0, 15, 31, 63, 79, 95, 111, 127, 143, 159, 191, 217, 255]\n}\n","{\n  \"R\": [13, 156, 237, 240],\n  \"G\": [8, 23, 121, 249],\n  \"B\": [135, 158, 83, 33],\n  \"A\": [0, 56, 80, 88],\n  \"I\": [0, 64, 192, 255]\n}\n","{\n  \"R\": [\n    208, 71, 33, 192, 32, 195, 208, 173, 233, 202, 25, 210, 145, 89, 87, 245,\n    246, 38, 3, 25, 57, 167, 245, 86, 227, 208, 81, 64, 90, 199, 140, 48, 212,\n    180, 70, 120, 9, 192, 245, 177, 65, 157, 9, 193, 100, 181, 125, 145, 62, 8,\n    108, 36, 140, 237, 242, 248, 161, 189, 41, 114, 65, 121, 97, 50, 238, 149,\n    44, 214, 124, 167, 40, 167, 127, 178, 231, 30, 173, 244, 193, 203, 204, 238,\n    139, 135, 71, 234, 234, 217, 66, 14, 129, 19, 97, 165, 112, 244, 35, 73,\n    192, 12, 149, 71, 33, 192, 32, 195, 208, 173, 233, 202, 25, 210, 145, 89,\n    87, 245, 246, 38, 3, 25, 57, 167, 245, 86, 227, 208, 81, 64, 90, 199, 140,\n    48, 212, 180, 70, 120, 9, 192, 245, 177, 65, 157, 9, 193, 100, 181, 125,\n    145, 62, 8, 108, 36, 140, 237, 242, 248, 161, 189, 41, 114, 65, 121, 97, 50,\n    238, 149, 44, 214, 124, 167, 40, 167, 127, 178, 231, 30, 173, 244, 193, 203,\n    204, 238, 139, 135, 71, 234, 234, 217, 66, 14, 129, 19, 97, 165, 112, 244,\n    35, 73, 192, 12, 149, 71, 33, 192, 32, 195, 208, 173, 233, 202, 25, 210,\n    145, 89, 87, 245, 246, 38, 3, 25, 57, 167, 245, 86, 227, 208, 81, 64, 90,\n    199, 140, 48, 212, 180, 70, 120, 9, 192, 245, 177, 65, 157, 9, 193, 100,\n    181, 125, 145, 62, 8, 108, 36, 140, 237, 242, 248\n  ],\n  \"G\": [\n    182, 46, 78, 199, 79, 89, 41, 208, 135, 20, 154, 35, 21, 43, 230, 113, 191,\n    147, 208, 37, 28, 27, 86, 203, 25, 209, 148, 187, 139, 111, 48, 102, 76,\n    110, 106, 130, 37, 160, 34, 222, 90, 165, 245, 222, 102, 47, 19, 130, 4,\n    232, 137, 211, 240, 11, 140, 21, 42, 22, 241, 61, 99, 115, 199, 166, 114,\n    190, 204, 60, 233, 66, 115, 230, 125, 103, 203, 125, 13, 176, 94, 131, 39,\n    198, 167, 124, 67, 175, 254, 1, 15, 198, 62, 237, 159, 31, 218, 58, 244, 47,\n    61, 67, 94, 46, 78, 199, 79, 89, 41, 208, 135, 20, 154, 35, 21, 43, 230,\n    113, 191, 147, 208, 37, 28, 27, 86, 203, 25, 209, 148, 187, 139, 111, 48,\n    102, 76, 110, 106, 130, 37, 160, 34, 222, 90, 165, 245, 222, 102, 47, 19,\n    130, 4, 232, 137, 211, 240, 11, 140, 21, 42, 22, 241, 61, 99, 115, 199, 166,\n    114, 190, 204, 60, 233, 66, 115, 230, 125, 103, 203, 125, 13, 176, 94, 131,\n    39, 198, 167, 124, 67, 175, 254, 1, 15, 198, 62, 237, 159, 31, 218, 58, 244,\n    47, 61, 67, 94, 46, 78, 199, 79, 89, 41, 208, 135, 20, 154, 35, 21, 43, 230,\n    113, 191, 147, 208, 37, 28, 27, 86, 203, 25, 209, 148, 187, 139, 111, 48,\n    102, 76, 110, 106, 130, 37, 160, 34, 222, 90, 165, 245, 222, 102, 47, 19,\n    130, 4, 232, 137, 211, 240, 11, 140, 21\n  ],\n  \"B\": [\n    191, 154, 43, 10, 207, 204, 164, 231, 136, 58, 239, 30, 147, 230, 101, 111,\n    150, 35, 128, 57, 252, 79, 173, 120, 25, 126, 81, 85, 8, 7, 122, 237, 190,\n    152, 246, 182, 130, 219, 67, 76, 167, 178, 235, 250, 28, 61, 186, 250, 199,\n    67, 58, 50, 86, 182, 108, 77, 89, 112, 59, 125, 226, 50, 205, 227, 125, 128,\n    104, 27, 59, 66, 53, 133, 159, 203, 97, 125, 139, 159, 158, 7, 215, 47, 140,\n    226, 223, 231, 44, 110, 184, 61, 233, 47, 67, 148, 22, 120, 173, 156, 117,\n    181, 94, 154, 43, 10, 207, 204, 164, 231, 136, 58, 239, 30, 147, 230, 101,\n    111, 150, 35, 128, 57, 252, 79, 173, 120, 25, 126, 81, 85, 8, 7, 122, 237,\n    190, 152, 246, 182, 130, 219, 67, 76, 167, 178, 235, 250, 28, 61, 186, 250,\n    199, 67, 58, 50, 86, 182, 108, 77, 89, 112, 59, 125, 226, 50, 205, 227, 125,\n    128, 104, 27, 59, 66, 53, 133, 159, 203, 97, 125, 139, 159, 158, 7, 215, 47,\n    140, 226, 223, 231, 44, 110, 184, 61, 233, 47, 67, 148, 22, 120, 173, 156,\n    117, 181, 94, 154, 43, 10, 207, 204, 164, 231, 136, 58, 239, 30, 147, 230,\n    101, 111, 150, 35, 128, 57, 252, 79, 173, 120, 25, 126, 81, 85, 8, 7, 122,\n    237, 190, 152, 246, 182, 130, 219, 67, 76, 167, 178, 235, 250, 28, 61, 186,\n    250, 199, 67, 58, 50, 86, 182, 108, 77\n  ],\n  \"A\": [\n    0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64\n  ],\n  \"I\": [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n    21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n    40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,\n    59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,\n    78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,\n    97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,\n    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,\n    128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,\n    143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,\n    158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,\n    173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,\n    188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,\n    203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217,\n    218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232,\n    233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,\n    248, 249, 250, 251, 252, 253, 254, 255\n  ]\n}\n","{\n  \"R\": [0, 128, 255],\n  \"G\": [0, 0, 0],\n  \"B\": [0, 0, 0],\n  \"A\": [0, 64, 128],\n  \"I\": [0, 128, 255]\n}\n","{\n  \"R\": [192, 224, 255],\n  \"G\": [1, 128, 255],\n  \"B\": [0, 0, 0],\n  \"A\": [0, 64, 128],\n  \"I\": [0, 128, 255]\n}\n","{\n  \"R\": [3, 112, 144, 188, 236, 246, 255],\n  \"G\": [5, 31, 29, 22, 76, 158, 250],\n  \"B\": [26, 87, 91, 86, 62, 117, 235],\n  \"A\": [0, 30, 38, 49, 67, 85, 107],\n  \"I\": [0, 73, 92, 118, 160, 205, 255]\n}\n","{\n  \"R\": [1, 240, 255],\n  \"G\": [1, 128, 255],\n  \"B\": [1, 128, 255],\n  \"A\": [0, 76, 128],\n  \"I\": [0, 153, 255]\n}\n","{\n  \"R\": [0, 5, 18, 34, 53, 72, 90, 107, 126, 144, 161, 178, 194, 209, 222, 233, 242, 248, 251, 251, 249, 244, 241, 252],\n  \"G\": [0, 4, 10, 11, 9, 11, 17, 23, 30, 36, 43, 50, 59, 70, 83, 98, 117, 136, 157, 177, 199, 220, 240, 254],\n  \"B\": [3, 24, 50, 76, 96, 106, 109, 110, 108, 104, 97, 89, 79, 67, 55, 42, 26, 12, 6, 22, 47, 79, 121, 164],\n  \"A\": [0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64],\n  \"I\": [0, 11, 22, 33, 44, 55, 66, 77, 88, 99, 110, 121, 133, 144, 155, 166, 177, 188, 199, 210, 221, 232, 243, 255]\n}\n","{\n  \"R\": [48, 48, 64, 70, 65, 25, 132, 195, 244, 254, 218, 122],\n  \"G\": [18, 18, 64, 107, 150, 226, 255, 241, 199, 158, 57, 4],\n  \"B\": [59, 59, 162, 227, 255, 187, 81, 52, 58, 47, 7, 3],\n  \"A\": [0, 22, 26, 30, 34, 43, 52, 57, 63, 67, 77, 86],\n  \"I\": [0, 1, 16, 32, 49, 83, 118, 140, 164, 181, 219, 255]\n}\n","{\n  \"R\": [0, 128, 255],\n  \"G\": [0, 0, 0],\n  \"B\": [0, 128, 255],\n  \"A\": [0, 64, 128],\n  \"I\": [0, 128, 255]\n}\n","{\n  \"R\": [68, 49, 53, 253],\n  \"G\": [1, 104, 183, 231],\n  \"B\": [84, 142, 121, 37],\n  \"A\": [0, 56, 80, 88],\n  \"I\": [0, 64, 192, 255]\n}\n","{\n  \"R\": [255, 255, 255],\n  \"G\": [127, 196, 254],\n  \"B\": [0, 0, 0],\n  \"A\": [0, 64, 128],\n  \"I\": [0, 128, 255]\n}\n","{\n  \"R\": [0, 0, 0],\n  \"G\": [0, 128, 255],\n  \"B\": [255, 196, 128],\n  \"A\": [0, 64, 128],\n  \"I\": [0, 128, 255]\n}\n","{\n  \"R\": [3, 64, 0, 0, 255, 255, 255],\n  \"G\": [0, 0, 0, 255, 255, 192, 3],\n  \"B\": [0, 32, 48, 56, 64, 96, 128],\n  \"A\": [0, 8, 16, 24, 32, 52, 80],\n  \"I\": [0, 32, 64, 96, 160, 192, 255]\n}\n","{\n  \"min\": 0,\n  \"max\": 0,\n  \"R\": [0, 37],\n  \"G\": [242, 0],\n  \"B\": [255, 255],\n  \"A\": [0, 64],\n  \"I\": [0, 255]\n}\n","{\n  \"R\": [255, 255],\n  \"G\": [255, 11],\n  \"B\": [0, 0],\n  \"A\": [0, 64],\n  \"I\": [0, 255]\n}\n","{\n  \"min\": 0,\n  \"max\": 0,\n  \"R\": [\n    65, 10, 223, 120, 216, 207, 251, 93, 252, 217, 21, 253, 131, 165, 173, 143,\n    144, 217, 86, 89, 63, 254, 172, 1, 142, 107, 42, 78, 221, 8, 222, 71, 127,\n    126, 167, 33, 104, 2, 208, 216, 0, 251, 7, 105, 2, 101, 248, 190, 253, 62,\n    255, 224, 166, 37, 110, 138, 45, 34, 6, 37, 69, 201, 43, 122, 199, 37, 173,\n    194, 103, 211, 75, 159, 96, 4, 239, 98, 110, 193, 253, 166, 40, 255, 48,\n    130, 140, 243, 101, 9, 177, 220, 133, 32, 4, 81, 48, 48, 210, 109, 60, 132,\n    1, 119, 1, 159, 247, 33, 212, 187, 253, 144, 196, 254, 168, 79, 64, 196, 39,\n    97, 73, 173, 104, 216, 217, 43, 101, 119, 254, 5, 237, 103, 203, 122, 57,\n    87, 251, 164, 19, 75, 200, 2, 252, 150, 66, 0, 255, 157, 23, 254, 55, 16,\n    240, 161, 69, 253, 207, 195, 5, 60, 255, 251, 200, 217, 134, 123, 253, 180,\n    27, 246, 130, 136, 250, 232, 4, 125, 140, 22, 253, 255, 13, 180, 123, 61,\n    254, 111, 10, 185, 76, 192, 255, 223, 186, 61, 198, 5, 172, 13, 83, 172,\n    171, 6, 23, 73, 134, 133, 109, 61, 213, 55, 57, 132, 36, 209, 2, 144, 1,\n    253, 68, 155, 3, 160, 2, 77, 121, 70, 67, 176, 223, 131, 4, 162, 232, 255,\n    150, 94, 235, 191, 207, 10, 246, 0, 225, 4, 209, 116, 57, 112, 172, 253, 1,\n    6, 92, 227, 73, 62, 135, 223\n  ],\n  \"G\": [\n    162, 50, 112, 245, 4, 124, 176, 243, 56, 125, 183, 139, 182, 68, 189, 4,\n    225, 10, 20, 223, 7, 46, 31, 193, 225, 250, 219, 41, 2, 100, 83, 181, 34,\n    150, 72, 223, 168, 248, 80, 253, 7, 117, 214, 2, 248, 10, 3, 59, 179, 160,\n    90, 244, 146, 4, 207, 4, 125, 255, 96, 100, 1, 208, 130, 51, 116, 181, 236,\n    53, 244, 5, 165, 28, 181, 86, 96, 42, 254, 1, 134, 194, 214, 92, 41, 204,\n    137, 86, 207, 3, 143, 3, 100, 239, 164, 94, 65, 251, 131, 244, 173, 57, 143,\n    107, 217, 53, 210, 0, 148, 250, 45, 198, 81, 40, 61, 218, 252, 88, 171, 0,\n    248, 24, 248, 4, 41, 100, 187, 46, 208, 145, 43, 168, 121, 46, 175, 250,\n    125, 107, 233, 112, 207, 231, 174, 215, 53, 9, 43, 153, 52, 124, 128, 65,\n    210, 147, 255, 147, 63, 200, 148, 254, 0, 179, 241, 42, 239, 2, 230, 8, 82,\n    135, 87, 16, 3, 87, 86, 151, 254, 8, 255, 86, 53, 19, 7, 192, 171, 201, 253,\n    247, 197, 103, 251, 126, 0, 149, 54, 183, 61, 126, 79, 113, 10, 103, 184,\n    75, 11, 195, 222, 136, 149, 131, 8, 99, 240, 177, 252, 255, 198, 16, 7, 68,\n    178, 66, 191, 150, 73, 26, 211, 109, 78, 209, 240, 254, 1, 166, 247, 131, 2,\n    0, 167, 127, 133, 10, 43, 99, 235, 3, 214, 142, 176, 82, 132, 38, 10, 249,\n    255, 215, 44, 81\n  ],\n  \"B\": [\n    176, 182, 248, 37, 117, 35, 96, 69, 32, 152, 108, 20, 237, 250, 2, 89, 141,\n    216, 111, 251, 211, 149, 10, 44, 214, 103, 31, 251, 3, 32, 252, 246, 97, 1,\n    219, 167, 197, 4, 36, 116, 206, 118, 106, 43, 205, 204, 114, 69, 127, 205,\n    87, 80, 41, 251, 145, 204, 253, 161, 247, 1, 149, 9, 43, 253, 97, 72, 136,\n    161, 171, 181, 26, 255, 108, 80, 218, 214, 231, 255, 84, 31, 109, 4, 218, 3,\n    217, 36, 68, 85, 241, 39, 221, 2, 240, 2, 173, 42, 206, 5, 110, 46, 103, 27,\n    212, 184, 2, 207, 246, 45, 116, 72, 110, 253, 38, 105, 248, 159, 243, 81,\n    192, 93, 141, 145, 24, 157, 234, 131, 57, 178, 62, 75, 65, 176, 148, 40,\n    253, 66, 76, 240, 51, 154, 17, 251, 139, 253, 207, 9, 114, 49, 200, 254, 96,\n    73, 138, 118, 204, 102, 137, 89, 145, 161, 4, 112, 66, 234, 147, 178, 212,\n    205, 185, 11, 203, 131, 2, 250, 118, 169, 1, 185, 154, 53, 171, 197, 61,\n    175, 249, 96, 15, 254, 95, 5, 222, 75, 246, 194, 2, 61, 180, 25, 133, 165,\n    15, 233, 59, 35, 221, 140, 109, 7, 114, 255, 198, 0, 115, 168, 252, 23, 242,\n    80, 75, 142, 137, 255, 12, 182, 68, 201, 4, 111, 37, 228, 83, 248, 24, 192,\n    249, 5, 54, 223, 160, 122, 160, 114, 145, 119, 252, 31, 253, 250, 10, 214,\n    8, 47, 0, 142, 222, 70\n  ],\n  \"A\": [\n    0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,\n    64, 64, 64, 64, 64, 64, 64, 64, 64\n  ],\n  \"I\": [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n    21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n    40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,\n    59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,\n    78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,\n    97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,\n    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,\n    128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,\n    143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,\n    158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,\n    173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,\n    188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,\n    203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217,\n    218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232,\n    233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,\n    248, 249, 250, 251, 252, 253, 254, 255\n  ]\n}\n","import * as cmaps from './cmaps/index.js'\nimport { log } from './logger.js'\n\nexport type ColorMap = {\n  R: number[]\n  G: number[]\n  B: number[]\n  A: number[]\n  I: number[]\n\n  min?: number\n  max?: number\n  labels?: string[]\n}\n\nexport type LUT = {\n  lut: Uint8ClampedArray\n  min?: number\n  max?: number\n  labels?: string[]\n}\n\nexport class ColorTables {\n  gamma = 1.0\n  version = 0.1\n  cluts: Record<string, ColorMap> = {}\n\n  /**\n   * Sets cluts to alphabetically sorted cmaps\n   */\n  constructor() {\n    const cmapKeys = Object.keys(cmaps) as Array<keyof typeof cmaps>\n\n    const cmapsSorted = cmapKeys\n      .filter((k) => !k.startsWith('$')) // ignore drawing maps\n      .sort(new Intl.Collator('en').compare) // case insensitive, e.g. \"ROI_i256\" > \"actc\"\n\n    for (const key of cmapsSorted) {\n      this.cluts[key] = cmaps[key]\n    }\n  }\n\n  addColormap(key: string, cmap: ColorMap): void {\n    this.cluts[key] = cmap\n  }\n\n  colormaps(): Array<keyof typeof this.cluts> {\n    return Object.keys(this.cluts) as Array<keyof typeof this.cluts>\n  }\n\n  // for backward compatibility: prior to v0.34 \"colormaps\" used to be \"colorMaps\"\n  colorMaps(): Array<keyof typeof this.cluts> {\n    return this.colormaps()\n  }\n\n  // returns key name if it exists, otherwise returns default \"gray\"\n  colormapFromKey(name: string): ColorMap {\n    let cmap = this.cluts[name]\n    if (cmap !== undefined) {\n      return cmap\n    }\n\n    cmap = this.cluts[name.toLowerCase()]\n    if (cmap !== undefined) {\n      return cmap\n    }\n\n    if (name.length > 0) {\n      log.warn('No color map named ' + name)\n    }\n    return {\n      min: 0,\n      max: 0,\n      R: [0, 255],\n      G: [0, 255],\n      B: [0, 255],\n      A: [0, 255],\n      I: [0, 255]\n    }\n  }\n\n  // not included in public docs\n  colormap(key = '', isInvert = false): Uint8ClampedArray {\n    const cmap = this.colormapFromKey(key)\n    return this.makeLut(cmap.R, cmap.G, cmap.B, cmap.A, cmap.I, isInvert)\n  }\n\n  makeLabelLut(cm: ColorMap, alphaFill = 255): LUT {\n    if (cm.R === undefined || cm.G === undefined || cm.B === undefined) {\n      throw new Error(`Invalid colormap table: ${cm}`)\n    }\n    const nLabels = cm.R.length\n\n    // if indices are not provided, indices default to 0..(nLabels-1)\n    const idxs = cm.I ?? [...Array(nLabels).keys()]\n\n    if (nLabels !== cm.G.length || nLabels !== cm.B.length || nLabels !== idxs.length) {\n      throw new Error(\n        `colormap does not make sense: ${cm} Rs ${cm.R.length} Gs ${cm.G.length} Bs ${cm.B.length} Is ${idxs.length}`\n      )\n    }\n\n    let As = new Uint8ClampedArray(nLabels).fill(alphaFill)\n    As[0] = 0\n    if (cm.A !== undefined) {\n      As = Uint8ClampedArray.from(cm.A)\n    }\n\n    const mnIdx = Math.min(...idxs)\n    const mxIdx = Math.max(...idxs)\n\n    // n.b. number of input labels can be sparse: I:[0,3,4] output is dense [0,1,2,3,4]\n    const nLabelsDense = mxIdx - mnIdx + 1\n    const lut = new Uint8ClampedArray(nLabelsDense * 4).fill(0)\n    for (let i = 0; i < nLabels; i++) {\n      let k = (idxs[i] - mnIdx) * 4\n      lut[k++] = cm.R[i] // Red\n      lut[k++] = cm.G[i] // Green\n      lut[k++] = cm.B[i] // Blue\n      lut[k++] = As[i] // Alpha\n    }\n\n    const cmap: LUT = {\n      lut,\n      min: mnIdx,\n      max: mxIdx\n    }\n    // labels are optional\n    if (cm.labels) {\n      const nL = cm.labels.length\n      if (nL === nLabelsDense) {\n        cmap.labels = cm.labels\n      } else if (nL === nLabels) {\n        cmap.labels = Array(nLabelsDense).fill('?')\n        for (let i = 0; i < nLabels; i++) {\n          const idx = idxs[i]\n          cmap.labels[idx] = cm.labels[i]\n        }\n      }\n    }\n    return cmap\n  }\n\n  async makeLabelLutFromUrl(name: string): Promise<LUT> {\n    const response = await fetch(name)\n    const cm = await response.json()\n    return this.makeLabelLut(cm)\n  }\n\n  // not included in public docs\n  // The drawing colormap is a variant of the label colormap with precisely 256 colors\n  makeDrawLut(name: string | ColorMap): LUT {\n    let cmap: ColorMap = typeof name === 'object' ? name : cmaps[name as keyof typeof cmaps]\n\n    if (cmap === undefined) {\n      cmap = {\n        min: 0,\n        max: 0,\n        R: [0, 255, 0, 0, 255, 0, 255],\n        G: [0, 0, 255, 0, 255, 255, 0],\n        B: [0, 0, 0, 255, 0, 255, 255],\n        A: [0, 255, 255, 255, 255, 255, 255],\n        I: [0, 255]\n      }\n    }\n\n    const cm = this.makeLabelLut(cmap, 255)\n\n    if (cm.labels === undefined) {\n      cm.labels = []\n    }\n    if (cm.labels.length < 256) {\n      const j = cm.labels.length\n      for (let i = j; i < 256; i++) {\n        // make all unused slots opaque red\n        cm.labels.push(i.toString())\n      }\n    }\n\n    const lut = new Uint8ClampedArray(256 * 4)\n    let k = 0\n    for (let i = 0; i < 256; i++) {\n      lut[k++] = 255 // Red\n      lut[k++] = 0 // Green\n      lut[k++] = 0 // Blue\n      lut[k++] = 255 // Alpha\n    }\n    lut[3] = 0 // make first alpha transparent: not part of drawing\n\n    // drawings can have no more than 256 colors\n    const explicitLUTbytes = Math.min(cm.lut.length, 256 * 4)\n    if (explicitLUTbytes > 0) {\n      for (let i = 0; i < explicitLUTbytes; i++) {\n        lut[i] = cm.lut[i]\n      }\n    }\n\n    return {\n      lut,\n      labels: cm.labels\n    }\n  }\n\n  // not included in public docs\n  makeLut(\n    Rsi: number[],\n    Gsi: number[],\n    Bsi: number[],\n    Asi: number[],\n    Isi: number[],\n    isInvert: boolean\n  ): Uint8ClampedArray {\n    // create color lookup table provided arrays of reds, greens, blues, alphas and intensity indices\n    // intensity indices should be in increasing order with the first value 0 and the last 255.\n    // this.makeLut([0, 255], [0, 0], [0,0], [0,128],[0,255]); //red gradient\n    const nIdx = Rsi.length\n    const Rs = [...Rsi]\n    const Gs = [...Gsi]\n    const Bs = [...Bsi]\n    if (!Isi) {\n      Isi = new Array(nIdx)\n      for (let i = 0; i < nIdx; i++) {\n        Isi[i] = (i / (nIdx - 1)) * 255\n      }\n    }\n    if (!Asi) {\n      Asi = new Array(nIdx).fill(64)\n      Asi[0] = 0\n    }\n    let As = Uint8ClampedArray.from(Asi)\n    let Is = Uint8ClampedArray.from(Isi)\n    if (isInvert) {\n      for (let i = 0; i < nIdx; i++) {\n        Rs[i] = Rsi[nIdx - 1 - i]\n        Gs[i] = Gsi[nIdx - 1 - i]\n        Bs[i] = Bsi[nIdx - 1 - i]\n        As[i] = 255 - Asi[nIdx - 1 - i]\n        Is[i] = 255 - Isi[nIdx - 1 - i]\n      }\n    }\n    const lut = new Uint8ClampedArray(256 * 4)\n    if (typeof Is === 'undefined') {\n      Is = new Uint8ClampedArray(nIdx).fill(0)\n      for (let i = 0; i < nIdx; i++) {\n        Is[i] = Math.round((i * 255.0) / (nIdx - 1))\n      }\n    }\n    if (typeof As === 'undefined') {\n      As = new Uint8ClampedArray(nIdx).fill(64)\n      As[0] = 0\n    }\n    for (let i = 0; i < nIdx - 1; i++) {\n      const idxLo = Is[i]\n      let idxHi = Is[i + 1]\n      if (i === 0 && idxLo !== 0) {\n        log.warn('colormap issue: indices expected to start with 0 not ', idxLo)\n      }\n      if (i === Is.length - 2 && idxHi !== 255) {\n        log.warn('padding colormap: indices expected end with 255 not ', idxHi)\n        idxHi = 255\n      }\n      const idxRng = idxHi - idxLo\n      let k = idxLo * 4\n      for (let j = idxLo; j <= idxHi; j++) {\n        const f = (j - idxLo) / idxRng\n        lut[k++] = Rs[i] + f * (Rs[i + 1] - Rs[i]) // Red\n        lut[k++] = Gs[i] + f * (Gs[i + 1] - Gs[i]) // Green\n        lut[k++] = Bs[i] + f * (Bs[i + 1] - Bs[i]) // Blue\n        lut[k++] = As[i] + f * (As[i + 1] - As[i]) // Alpha\n      }\n    }\n    if (this.gamma === 1.0) {\n      return lut\n    }\n    for (let i = 0; i < 255 * 4; i++) {\n      if (i % 4 === 3) {\n        continue\n      } // gamma changes RGB, not Alpha\n      lut[i] = Math.pow(lut[i] / 255, 1 / this.gamma) * 255\n    }\n    return lut\n  }\n}\n\nexport const cmapper = new ColorTables()\n","import { vec3 } from 'gl-matrix'\n\ntype Extents = {\n  mxDx: number\n  extentsMin: number | number[]\n  extentsMax: number | number[]\n}\n\n/**\n * Utilities class for common mesh functions\n */\nexport class NVMeshUtilities {\n  static getClusterBoundaryU8(u8: Uint8Array, faces: number[] | Uint32Array): boolean[] {\n    // assume all vertices are not near a border\n    const border = new Array(u8.length).fill(false)\n    const binary = new Array(u8.length).fill(false)\n    for (let i = 0; i < u8.length; i++) {\n      if (u8[i] > 0) {\n        binary[i] = true\n      }\n    }\n    const nTri = faces.length / 3\n    let j = 0\n    // interior: a triangle where all three vertices are the same color\n    // else, all three vertices are on a border\n    for (let i = 0; i < nTri; i++) {\n      const v0 = faces[j]\n      const v1 = faces[j + 1]\n      const v2 = faces[j + 2]\n      j += 3\n      if (binary[v0] === binary[v1] && binary[v0] === binary[v2] && binary[v1] === binary[v2]) {\n        continue\n      }\n      border[v0] = true\n      border[v1] = true\n      border[v2] = true\n    }\n    return border\n  }\n\n  static async gzip(data: Uint8Array): Promise<Uint8Array> {\n    const stream = new CompressionStream('gzip')\n    const writer = stream.writable.getWriter()\n    writer.write(data).catch(console.error)\n    const closePromise = writer.close().catch(console.error)\n    const response = new Response(stream.readable)\n    const result = new Uint8Array(await response.arrayBuffer())\n    await closePromise // Ensure close happens eventually\n    return result\n  }\n\n  static createMZ3(\n    vertices: Float32Array,\n    indices: Uint32Array,\n    compress: boolean = false,\n    colors: Uint8Array | null = null\n  ): ArrayBuffer {\n    // generate binary MZ3 format mesh\n    // n.b. small, precise and small but support is not widespread\n    // n.b. result can be compressed with gzip\n    // https://github.com/neurolabusc/surf-ice/tree/master/mz3\n\n    const magic = 23117\n    const isRGBA = colors instanceof Uint8Array && colors.length === (vertices.length / 3) * 4\n    const attr = isRGBA ? 7 : 3\n    const nface = indices.length / 3\n    const nvert = vertices.length / 3\n    const nskip = 0\n    // Calculate buffer size\n    const headerSize = 16\n    const indexSize = nface * 3 * 4 // Uint32Array\n    const vertexSize = nvert * 3 * 4 // Float32Array\n    const totalSize = headerSize + indexSize + vertexSize\n    const buffer = new ArrayBuffer(totalSize)\n    const writer = new DataView(buffer)\n    // Write header\n    writer.setUint16(0, magic, true)\n    writer.setUint16(2, attr, true)\n    writer.setUint32(4, nface, true)\n    writer.setUint32(8, nvert, true)\n    writer.setUint32(12, nskip, true)\n    // Write indices\n    let offset = headerSize\n    new Uint32Array(buffer, offset, indices.length).set(indices)\n    offset += indexSize\n    // Write vertices\n    new Float32Array(buffer, offset, vertices.length).set(vertices)\n    // Write colors\n    if (isRGBA) {\n      offset += vertexSize\n      new Uint8Array(buffer, offset, colors.length).set(colors)\n    }\n    if (compress) {\n      throw new Error('Call async createMZ3Async() for compression')\n    }\n    return buffer\n  }\n\n  static async createMZ3Async(\n    vertices: Float32Array,\n    indices: Uint32Array,\n    compress: boolean = false,\n    colors: Uint8Array | null = null\n  ): Promise<ArrayBuffer> {\n    const buffer = this.createMZ3(vertices, indices, compress, colors)\n    if (compress) {\n      return await this.gzip(new Uint8Array(buffer))\n    }\n    return buffer\n  }\n\n  static createOBJ(vertices: Float32Array, indices: Uint32Array): ArrayBuffer {\n    // generate binary OBJ format mesh\n    // n.b. widespread support, but large and slow due to ASCII\n    // https://en.wikipedia.org/wiki/Wavefront_.obj_file\n    let objContent = ''\n    // Add vertices to OBJ content\n    for (let i = 0; i < vertices.length; i += 3) {\n      objContent += `v ${vertices[i]} ${vertices[i + 1]} ${vertices[i + 2]}\\n`\n    }\n    // Add faces to OBJ content (OBJ indices start at 1, not 0)\n    for (let i = 0; i < indices.length; i += 3) {\n      objContent += `f ${indices[i] + 1} ${indices[i + 1] + 1} ${indices[i + 2] + 1}\\n`\n    }\n    // Encode the OBJ content as an ArrayBuffer\n    const encoder = new TextEncoder()\n    const arrayBuffer = encoder.encode(objContent).buffer\n    return arrayBuffer\n  }\n\n  static createSTL(vertices: Float32Array, indices: Uint32Array): ArrayBuffer {\n    // generate binary STL format mesh\n    // n.b. inefficient and slow as vertices are not reused\n    // https://en.wikipedia.org/wiki/STL_(file_format)#Binary\n    const numTriangles = indices.length / 3\n    const bufferLength = 84 + numTriangles * 50\n    const arrayBuffer = new ArrayBuffer(bufferLength)\n    const dataView = new DataView(arrayBuffer)\n    // Write header (80 bytes)\n    for (let i = 0; i < 80; i++) {\n      dataView.setUint8(i, 0)\n    }\n    // Write number of triangles (4 bytes)\n    dataView.setUint32(80, numTriangles, true)\n    let offset = 84\n    for (let i = 0; i < indices.length; i += 3) {\n      const i0 = indices[i] * 3\n      const i1 = indices[i + 1] * 3\n      const i2 = indices[i + 2] * 3\n      // Normal vector (12 bytes, set to zero)\n      dataView.setFloat32(offset, 0, true) // Normal X\n      dataView.setFloat32(offset + 4, 0, true) // Normal Y\n      dataView.setFloat32(offset + 8, 0, true) // Normal Z\n      offset += 12\n      // Vertex 1 (12 bytes)\n      dataView.setFloat32(offset, vertices[i0], true) // Vertex 1 X\n      dataView.setFloat32(offset + 4, vertices[i0 + 1], true) // Vertex 1 Y\n      dataView.setFloat32(offset + 8, vertices[i0 + 2], true) // Vertex 1 Z\n      offset += 12\n      // Vertex 2 (12 bytes)\n      dataView.setFloat32(offset, vertices[i1], true) // Vertex 2 X\n      dataView.setFloat32(offset + 4, vertices[i1 + 1], true) // Vertex 2 Y\n      dataView.setFloat32(offset + 8, vertices[i1 + 2], true) // Vertex 2 Z\n      offset += 12\n      // Vertex 3 (12 bytes)\n      dataView.setFloat32(offset, vertices[i2], true) // Vertex 3 X\n      dataView.setFloat32(offset + 4, vertices[i2 + 1], true) // Vertex 3 Y\n      dataView.setFloat32(offset + 8, vertices[i2 + 2], true) // Vertex 3 Z\n      offset += 12\n      // Attribute byte count (2 bytes, set to zero)\n      dataView.setUint16(offset, 0, true)\n      offset += 2\n    }\n    return arrayBuffer\n  }\n\n  static downloadArrayBuffer(buffer: ArrayBuffer, filename: string): void {\n    const blob = new Blob([buffer], { type: 'application/octet-stream' })\n    const url = URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = filename\n    document.body.appendChild(a)\n    a.style.display = 'none'\n    a.click()\n    setTimeout(() => {\n      document.body.removeChild(a)\n      URL.revokeObjectURL(url)\n    }, 0)\n  }\n\n  static async saveMesh(\n    vertices: Float32Array,\n    indices: Uint32Array,\n    filename: string = '.mz3',\n    compress: boolean = false\n  ): Promise<ArrayBuffer> {\n    let buff = new ArrayBuffer(0)\n    if (/\\.obj$/i.test(filename)) {\n      buff = this.createOBJ(vertices, indices)\n    } else if (/\\.stl$/i.test(filename)) {\n      buff = this.createSTL(vertices, indices)\n    } else {\n      if (!/\\.mz3$/i.test(filename)) {\n        filename += '.mz3'\n      }\n      buff = await this.createMZ3Async(vertices, indices, compress)\n    }\n    if (filename.length > 4) {\n      this.downloadArrayBuffer(buff, filename)\n    }\n    return buff\n  }\n\n  static getClusterBoundary(rgba8: Uint8Array, faces: number[] | Uint32Array): boolean[] {\n    const rgba32 = new Uint32Array(rgba8.buffer)\n    // assume all vertices are not near a border\n    const border = new Array(rgba32.length).fill(false)\n    const nTri = faces.length / 3\n    let j = 0\n    // interior: a triangle where all three vertices are the same color\n    // else, all three vertices are on a border\n    for (let i = 0; i < nTri; i++) {\n      const v0 = faces[j]\n      const v1 = faces[j + 1]\n      const v2 = faces[j + 2]\n      j += 3\n      if (rgba32[v0] === rgba32[v1] && rgba32[v0] === rgba32[v2] && rgba32[v1] === rgba32[v2]) {\n        continue\n      }\n      border[v0] = true\n      border[v1] = true\n      border[v2] = true\n    }\n    return border\n  }\n\n  // return spatial extremes for vertices\n  static getExtents(pts: number[] | Float32Array): Extents {\n    if ((!ArrayBuffer.isView(pts) && !Array.isArray(pts)) || pts.length < 3) {\n      return { mxDx: 0.0, extentsMin: 0.0, extentsMax: 0.0 }\n    }\n\n    // each vertex has 3 coordinates: XYZ\n    let mxDx = 0.0\n    const mn = vec3.fromValues(pts[0], pts[1], pts[2])\n    const mx = vec3.fromValues(pts[0], pts[1], pts[2])\n    for (let i = 0; i < pts.length; i += 3) {\n      const v = vec3.fromValues(pts[i], pts[i + 1], pts[i + 2])\n      mxDx = Math.max(mxDx, vec3.len(v))\n      vec3.min(mn, mn, v)\n      vec3.max(mx, mx, v)\n    }\n    const extentsMin = [mn[0], mn[1], mn[2]]\n    const extentsMax = [mx[0], mx[1], mx[2]]\n    return { mxDx, extentsMin, extentsMax }\n  }\n\n  // determine vector orthogonal to plane defined by triangle\n  // triangle winding determines front/back face\n  static generateNormals(pts: number[] | Float32Array, tris: number[] | Uint32Array): Float32Array {\n    // from https://github.com/rii-mango/Papaya\n    /*\nCopyright (c) 2012-2015, RII-UTHSCSA\nAll rights reserved.\n\nTHIS PRODUCT IS NOT FOR CLINICAL USE.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the\nfollowing conditions are met:\n\n - Redistributions of source code must retain the above copyright notice, this list of conditions and the following\n   disclaimer.\n\n - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following\n   disclaimer in the documentation and/or other materials provided with the distribution.\n\n - Neither the name of the RII-UTHSCSA nor the names of its contributors may be used to endorse or promote products\n   derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n    const normal = []\n    // nn = [],\n    let ctr\n    const normalsDataLength = pts.length\n    let qx\n    let qy\n    let qz\n    let px\n    let py\n    let pz\n    let index1\n    let index2\n    let index3\n\n    const norms = new Float32Array(normalsDataLength)\n    const numIndices = tris.length\n    for (ctr = 0; ctr < numIndices; ctr += 3) {\n      index1 = tris[ctr] * 3\n      index2 = tris[ctr + 1] * 3\n      index3 = tris[ctr + 2] * 3\n\n      const p1 = [pts[index1], pts[index1 + 1], pts[index1 + 2]]\n      const p2 = [pts[index2], pts[index2 + 1], pts[index2 + 2]]\n      const p3 = [pts[index3], pts[index3 + 1], pts[index3 + 2]]\n\n      qx = p2[0] - p1[0]\n      qy = p2[1] - p1[1]\n      qz = p2[2] - p1[2]\n      px = p3[0] - p1[0]\n      py = p3[1] - p1[1]\n      pz = p3[2] - p1[2]\n\n      normal[0] = py * qz - pz * qy\n      normal[1] = pz * qx - px * qz\n      normal[2] = px * qy - py * qx\n\n      norms[index1] += normal[0]\n      norms[index1 + 1] += normal[1]\n      norms[index1 + 2] += normal[2]\n\n      norms[index2] += normal[0]\n      norms[index2 + 1] += normal[1]\n      norms[index2 + 2] += normal[2]\n\n      norms[index3] += normal[0]\n      norms[index3 + 1] += normal[1]\n      norms[index3 + 2] += normal[2]\n    }\n    for (ctr = 0; ctr < normalsDataLength; ctr += 3) {\n      normal[0] = -1 * norms[ctr]\n      normal[1] = -1 * norms[ctr + 1]\n      normal[2] = -1 * norms[ctr + 2]\n      let len = normal[0] * normal[0] + normal[1] * normal[1] + normal[2] * normal[2]\n      if (len > 0) {\n        len = 1.0 / Math.sqrt(len)\n        normal[0] *= len\n        normal[1] *= len\n        normal[2] *= len\n      }\n      norms[ctr] = normal[0]\n      norms[ctr + 1] = normal[1]\n      norms[ctr + 2] = normal[2]\n    }\n    return norms\n  }\n}\n","import arrayEqual from 'array-equal'\nimport { mat4, vec3, vec4 } from 'gl-matrix'\n\n// TODO: TypedNumberArray also in nvmesh-types.ts\ntype TypedNumberArray =\n  | Float64Array\n  | Float32Array\n  | Uint32Array\n  | Uint16Array\n  | Uint8Array\n  | Int32Array\n  | Int16Array\n  | Int8Array\n\n/**\n * Namespace for utility functions\n * @ignore\n */\n\n/**\n * Read ZIP files using asynchronous compression streams API, supports data descriptors\n * todo: check ZIP64 support\n * https://github.com/libyal/assorted/blob/main/documentation/ZIP%20archive%20format.asciidoc\n * https://en.wikipedia.org/wiki/ZIP_(file_format)\n * https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT\n * https://dev.to/ndesmic/writing-a-simple-browser-zip-file-decompressor-with-compressionstreams-5che\n */\n\ninterface Entry {\n  signature: string\n  version: number\n  generalPurpose: number\n  compressionMethod: number\n  lastModifiedTime: number\n  lastModifiedDate: number\n  crc: number\n  compressedSize: number\n  uncompressedSize: number\n  fileNameLength: number\n  extraLength: number\n  fileName: string\n  extra: string\n  startsAt?: number\n  extract?: () => Promise<Uint8Array>\n}\n\ninterface CentralDirectoryEntry {\n  versionCreated: number\n  versionNeeded: number\n  fileCommentLength: number\n  diskNumber: number\n  internalAttributes: number\n  externalAttributes: number\n  offset: number\n  comments: string\n  fileNameLength: number\n  extraLength: number\n}\n\ninterface EndOfCentralDirectory {\n  numberOfDisks: number\n  centralDirectoryStartDisk: number\n  numberCentralDirectoryRecordsOnThisDisk: number\n  numberCentralDirectoryRecords: number\n  centralDirectorySize: number\n  centralDirectoryOffset: number\n  commentLength: number\n  comment: string\n}\n\nexport class Zip {\n  #dataView: DataView\n  #index: number = 0\n  #localFiles: Entry[] = []\n  #centralDirectories: CentralDirectoryEntry[] = []\n  #endOfCentralDirectory?: EndOfCentralDirectory\n\n  constructor(arrayBuffer: ArrayBuffer) {\n    this.#dataView = new DataView(arrayBuffer)\n    this.read()\n  }\n\n  async extract(entry: Entry): Promise<Uint8Array> {\n    const buffer = new Uint8Array(this.#dataView.buffer.slice(entry.startsAt!, entry.startsAt! + entry.compressedSize))\n    if (entry.compressionMethod === 0x00) {\n      return buffer\n    } else if (entry.compressionMethod === 0x08) {\n      const stream = new DecompressionStream('deflate-raw')\n      const writer = stream.writable.getWriter()\n      writer.write(buffer).catch(console.error)\n      const closePromise = writer.close().catch(console.error)\n      const response = new Response(stream.readable)\n      const result = new Uint8Array(await response.arrayBuffer())\n      await closePromise\n      return result\n    }\n    throw new Error(`Unsupported compression method: ${entry.compressionMethod}`)\n  }\n\n  private read(): void {\n    while (!this.#endOfCentralDirectory && this.#index < this.#dataView.byteLength) {\n      const signature = this.#dataView.getUint32(this.#index, true)\n      if (signature === 0x04034b50) {\n        const entry = this.readLocalFile(this.#index)\n        entry.extract = this.extract.bind(this, entry)\n        this.#localFiles.push(entry)\n        const hasDataDescriptor = (entry.generalPurpose & 0x0008) !== 0\n        entry.startsAt = this.#index + 30 + entry.fileNameLength + entry.extraLength\n        if (entry.compressedSize === 0 && hasDataDescriptor) {\n          let scanIndex = entry.startsAt\n          while (scanIndex! + 20 <= this.#dataView.byteLength) {\n            const possibleSignature = this.#dataView.getUint32(scanIndex!, true)\n            if (possibleSignature === 0x08074b50) {\n              const nextPK = this.#dataView.getUint16(scanIndex! + 16, true) === 0x4b50\n              if (nextPK) {\n                scanIndex! += 4\n                break\n              }\n            }\n            scanIndex!++\n          }\n          entry.crc = this.#dataView.getUint32(scanIndex!, true)\n          entry.compressedSize = this.#dataView.getUint32(scanIndex! + 4, true)\n          entry.uncompressedSize = this.#dataView.getUint32(scanIndex! + 8, true)\n          this.#index = scanIndex! + 12\n        } else {\n          this.#index = entry.startsAt + entry.compressedSize\n        }\n      } else if (signature === 0x02014b50) {\n        const entry = this.readCentralDirectory(this.#index)\n        this.#centralDirectories.push(entry)\n        this.#index += 46 + entry.fileNameLength + entry.extraLength + entry.fileCommentLength\n      } else if (signature === 0x06054b50) {\n        this.#endOfCentralDirectory = this.readEndCentralDirectory(this.#index)\n        break\n      } else if (signature === 0x06064b50) {\n        this.#endOfCentralDirectory = this.readEndCentralDirectory64(this.#index)\n        break\n      } else {\n        console.error(`Unexpected ZIP signature 0x${signature.toString(16).padStart(8, '0')} at index ${this.#index}`)\n        break\n      }\n    }\n  }\n\n  private readLocalFile(offset: number): Entry {\n    let compressedSize = this.#dataView.getUint32(offset + 18, true)\n    let uncompressedSize = this.#dataView.getUint32(offset + 22, true)\n    const fileNameLength = this.#dataView.getUint16(offset + 26, true)\n    const extraLength = this.#dataView.getUint16(offset + 28, true)\n    const extraOffset = offset + 30 + fileNameLength\n    const extra = this.readString(extraOffset, extraLength)\n    if (compressedSize === 0xffffffff && uncompressedSize === 0xffffffff) {\n      let zip64Offset = extraOffset\n      let foundZip64 = false\n      while (zip64Offset < extraOffset + extraLength - 4) {\n        const fieldSignature = this.#dataView.getUint16(zip64Offset, true)\n        const fieldLength = this.#dataView.getUint16(zip64Offset + 2, true)\n        zip64Offset += 4 // Move past signature and length\n        if (fieldSignature === 0x0001) {\n          // ZIP64 Extended Information Extra Field\n          if (fieldLength >= 16) {\n            // Ensure we have enough bytes\n            uncompressedSize = Number(this.#dataView.getBigUint64(zip64Offset, true))\n            zip64Offset += 8\n            compressedSize = Number(this.#dataView.getBigUint64(zip64Offset, true))\n            foundZip64 = true\n            break\n          } else {\n            throw new Error(\n              `ZIP64 extra field found but is too small (expected at least 16 bytes, got ${fieldLength}).`\n            )\n          }\n        }\n        zip64Offset += fieldLength // Move to the next extra field\n      }\n      if (!foundZip64) {\n        throw new Error('ZIP64 format missing extra field with signature 0x0001.')\n      }\n    }\n    return {\n      signature: this.readString(offset, 4),\n      version: this.#dataView.getUint16(offset + 4, true),\n      generalPurpose: this.#dataView.getUint16(offset + 6, true),\n      compressionMethod: this.#dataView.getUint16(offset + 8, true),\n      lastModifiedTime: this.#dataView.getUint16(offset + 10, true),\n      lastModifiedDate: this.#dataView.getUint16(offset + 12, true),\n      crc: this.#dataView.getUint32(offset + 14, true),\n      compressedSize,\n      uncompressedSize,\n      fileNameLength,\n      extraLength,\n      fileName: this.readString(offset + 30, fileNameLength),\n      extra: this.readString(offset + 30 + fileNameLength, extraLength)\n    }\n  }\n\n  private readCentralDirectory(offset: number): CentralDirectoryEntry {\n    return {\n      versionCreated: this.#dataView.getUint16(offset + 4, true),\n      versionNeeded: this.#dataView.getUint16(offset + 6, true),\n      fileNameLength: this.#dataView.getUint16(offset + 28, true),\n      extraLength: this.#dataView.getUint16(offset + 30, true),\n      fileCommentLength: this.#dataView.getUint16(offset + 32, true),\n      diskNumber: this.#dataView.getUint16(offset + 34, true),\n      internalAttributes: this.#dataView.getUint16(offset + 36, true),\n      externalAttributes: this.#dataView.getUint32(offset + 38, true),\n      offset: this.#dataView.getUint32(offset + 42, true),\n      comments: this.readString(offset + 46, this.#dataView.getUint16(offset + 32, true))\n    }\n  }\n\n  private readEndCentralDirectory(offset: number): EndOfCentralDirectory {\n    const commentLength = this.#dataView.getUint16(offset + 20, true)\n    return {\n      numberOfDisks: this.#dataView.getUint16(offset + 4, true),\n      centralDirectoryStartDisk: this.#dataView.getUint16(offset + 6, true),\n      numberCentralDirectoryRecordsOnThisDisk: this.#dataView.getUint16(offset + 8, true),\n      numberCentralDirectoryRecords: this.#dataView.getUint16(offset + 10, true),\n      centralDirectorySize: this.#dataView.getUint32(offset + 12, true),\n      centralDirectoryOffset: this.#dataView.getUint32(offset + 16, true),\n      commentLength,\n      comment: this.readString(offset + 22, commentLength)\n    }\n  }\n\n  private readEndCentralDirectory64(offset: number): EndOfCentralDirectory {\n    const commentLength = Number(this.#dataView.getBigUint64(offset + 0, true))\n    return {\n      numberOfDisks: this.#dataView.getUint32(offset + 16, true),\n      centralDirectoryStartDisk: this.#dataView.getUint32(offset + 20, true),\n      numberCentralDirectoryRecordsOnThisDisk: Number(this.#dataView.getBigUint64(offset + 24, true)),\n      numberCentralDirectoryRecords: Number(this.#dataView.getBigUint64(offset + 32, true)),\n      centralDirectorySize: Number(this.#dataView.getBigUint64(offset + 40, true)),\n      centralDirectoryOffset: Number(this.#dataView.getBigUint64(offset + 48, true)),\n      commentLength,\n      comment: ''\n    }\n  }\n\n  private readString(offset: number, length: number): string {\n    return Array.from({ length }, (_, i) => String.fromCharCode(this.#dataView.getUint8(offset + i))).join('')\n  }\n\n  get entries(): Entry[] {\n    return this.#localFiles\n  }\n}\n\nexport class NVUtilities {\n  static arrayBufferToBase64(arrayBuffer: ArrayBuffer): string {\n    const bytes = new Uint8Array(arrayBuffer)\n    return NVUtilities.uint8tob64(bytes)\n  }\n\n  static async decompress(data: Uint8Array): Promise<Uint8Array> {\n    const format =\n      data[0] === 31 && data[1] === 139 && data[2] === 8\n        ? 'gzip'\n        : data[0] === 120 && (data[1] === 1 || data[1] === 94 || data[1] === 156 || data[1] === 218)\n          ? 'deflate'\n          : 'deflate-raw'\n    const stream = new DecompressionStream(format)\n    const writer = stream.writable.getWriter()\n    writer.write(data).catch(console.error) // Do not await this\n    // Close without awaiting directly, preventing the hang issue\n    const closePromise = writer.close().catch(console.error)\n    const response = new Response(stream.readable)\n    const result = new Uint8Array(await response.arrayBuffer())\n    await closePromise // Ensure close happens eventually\n    return result\n  }\n\n  static async decompressToBuffer(data: Uint8Array): Promise<ArrayBuffer> {\n    const decompressed = await NVUtilities.decompress(data)\n    return decompressed.buffer.slice(decompressed.byteOffset, decompressed.byteOffset + decompressed.byteLength)\n  }\n\n  static async readMatV4(\n    buffer: ArrayBuffer,\n    isReplaceDots: boolean = false\n  ): Promise<Record<string, TypedNumberArray>> {\n    let len = buffer.byteLength\n    if (len < 40) {\n      throw new Error('File too small to be MAT v4: bytes = ' + buffer.byteLength)\n    }\n    let reader = new DataView(buffer)\n    let magic = reader.getUint16(0, true)\n    let _buffer = buffer\n    if (magic === 35615 || magic === 8075) {\n      // gzip signature 0x1F8B in little and big endian\n      const raw = await this.decompress(new Uint8Array(buffer))\n      reader = new DataView(raw.buffer)\n      magic = reader.getUint16(0, true)\n      _buffer = raw.buffer\n      len = _buffer.byteLength\n    }\n    const textDecoder = new TextDecoder('utf-8')\n    const bytes = new Uint8Array(_buffer)\n    let pos = 0\n    const mat: Record<string, TypedNumberArray> = {}\n    function getTensDigit(v: number): number {\n      return Math.floor(v / 10) % 10\n    }\n    function readArray(tagDataType: number, tagBytesStart: number, tagBytesEnd: number): TypedNumberArray {\n      const byteArray = new Uint8Array(bytes.subarray(tagBytesStart, tagBytesEnd))\n      if (tagDataType === 1) {\n        return new Float32Array(byteArray.buffer)\n      }\n      if (tagDataType === 2) {\n        return new Int32Array(byteArray.buffer)\n      }\n      if (tagDataType === 3) {\n        return new Int16Array(byteArray.buffer)\n      }\n      if (tagDataType === 4) {\n        return new Uint16Array(byteArray.buffer)\n      }\n      if (tagDataType === 5) {\n        return new Uint8Array(byteArray.buffer)\n      }\n      return new Float64Array(byteArray.buffer)\n    }\n    function readTag(): void {\n      const mtype = reader.getUint32(pos, true)\n      const mrows = reader.getUint32(pos + 4, true)\n      const ncols = reader.getUint32(pos + 8, true)\n      const imagf = reader.getUint32(pos + 12, true)\n      const namlen = reader.getUint32(pos + 16, true)\n      pos += 20 // skip header\n      if (imagf !== 0) {\n        throw new Error('Matlab V4 reader does not support imaginary numbers')\n      }\n      const tagArrayItems = mrows * ncols\n      if (tagArrayItems < 1) {\n        throw new Error('mrows * ncols must be greater than one')\n      }\n      const byteArray = new Uint8Array(bytes.subarray(pos, pos + namlen))\n      let tagName = textDecoder.decode(byteArray).trim().replaceAll('\\x00', '')\n      // n.b. DSI studio have array mat.dti_fa[] and mat.dti_fa.slope\n      if (isReplaceDots) {\n        // kludge for invalid DSIstudio FZ files\n        tagName = tagName.replaceAll('.', '_')\n      }\n      const tagDataType = getTensDigit(mtype)\n      // 0 double-precision (64-bit) floating-point numbers\n      // 1 single-precision (32-bit) floating-point numbers\n      // 2 32-bit signed integers\n      // 3 16-bit signed integers\n      // 4 16-bit unsigned integers\n      // 5 8-bit unsigned integers\n      let tagBytesPerItem = 8\n      if (tagDataType >= 1 && tagDataType <= 2) {\n        tagBytesPerItem = 4\n      } else if (tagDataType >= 3 && tagDataType <= 4) {\n        tagBytesPerItem = 2\n      } else if (tagDataType === 5) {\n        tagBytesPerItem = 1\n      } else if (tagDataType !== 0) {\n        throw new Error('impossible Matlab v4 datatype')\n      }\n      pos += namlen // skip name\n      if (mtype > 50) {\n        throw new Error('Does not appear to be little-endian V4 Matlab file')\n      }\n      const posEnd = pos + tagArrayItems * tagBytesPerItem\n      mat[tagName] = readArray(tagDataType, pos, posEnd)\n      pos = posEnd\n    }\n    while (pos + 20 < len) {\n      readTag()\n    }\n    return mat\n  } // readMatV4()\n\n  static b64toUint8(base64: string): Uint8Array {\n    const binaryString = atob(base64)\n    const length = binaryString.length\n    const bytes = new Uint8Array(length)\n    for (let i = 0; i < length; i++) {\n      bytes[i] = binaryString.charCodeAt(i)\n    }\n    return bytes\n  }\n\n  /*\nhttps://gist.github.com/jonleighton/958841\nMIT LICENSE\nCopyright 2011 Jon Leighton\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n  static uint8tob64(bytes: Uint8Array): string {\n    // TODO: use TextDecoder instead of shipping own implementation\n\n    let base64 = ''\n    const encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    const byteLength = bytes.byteLength\n    const byteRemainder = byteLength % 3\n    const mainLength = byteLength - byteRemainder\n\n    let a, b, c, d\n    let chunk\n\n    // Main loop deals with bytes in chunks of 3\n    for (let i = 0; i < mainLength; i = i + 3) {\n      // Combine the three bytes into a single integer\n      chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2]\n\n      // Use bitmasks to extract 6-bit segments from the triplet\n      a = (chunk & 16515072) >> 18 // 16515072 = (2^6 - 1) << 18\n      b = (chunk & 258048) >> 12 // 258048   = (2^6 - 1) << 12\n      c = (chunk & 4032) >> 6 // 4032     = (2^6 - 1) << 6\n      d = chunk & 63 // 63       = 2^6 - 1\n\n      // Convert the raw binary segments to the appropriate ASCII encoding\n      base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d]\n    }\n\n    // Deal with the remaining bytes and padding\n    if (byteRemainder === 1) {\n      chunk = bytes[mainLength]\n\n      a = (chunk & 252) >> 2 // 252 = (2^6 - 1) << 2\n\n      // Set the 4 least significant bits to zero\n      b = (chunk & 3) << 4 // 3   = 2^2 - 1\n\n      base64 += encodings[a] + encodings[b] + '=='\n    } else if (byteRemainder === 2) {\n      chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1]\n\n      a = (chunk & 64512) >> 10 // 64512 = (2^6 - 1) << 10\n      b = (chunk & 1008) >> 4 // 1008  = (2^6 - 1) << 4\n\n      // Set the 2 least significant bits to zero\n      c = (chunk & 15) << 2 // 15    = 2^4 - 1\n\n      base64 += encodings[a] + encodings[b] + encodings[c] + '='\n    }\n\n    return base64\n  }\n\n  // https://stackoverflow.com/questions/34156282/how-do-i-save-json-to-local-text-file\n  static download(content: string | ArrayBuffer, fileName: string, contentType: string): void {\n    const a = document.createElement('a')\n    const contentArray = Array.isArray(content) ? content : [content]\n    const file = new Blob(contentArray, { type: contentType })\n    a.href = URL.createObjectURL(file)\n    a.download = fileName\n    a.click()\n  }\n\n  static readFileAsync(file: Blob): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.onload = (): void => {\n        resolve(reader.result as ArrayBuffer)\n      }\n\n      reader.onerror = reject\n\n      reader.readAsArrayBuffer(file)\n    })\n  }\n\n  static blobToBase64(blob: Blob): Promise<string> {\n    return new Promise((resolve) => {\n      const reader = new FileReader()\n      reader.onloadend = (): void => resolve(reader.result as string)\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  static async decompressBase64String(base64: string): Promise<string> {\n    const compressed = atob(base64)\n    // convert to an array buffer\n    const compressedBuffer = new ArrayBuffer(compressed.length)\n    const compressedView = new Uint8Array(compressedBuffer)\n    for (let i = 0; i < compressed.length; i++) {\n      compressedView[i] = compressed.charCodeAt(i)\n    }\n    return NVUtilities.decompressArrayBuffer(compressedView)\n  }\n\n  static async compressToBase64String(string: string): Promise<string> {\n    const buf = await NVUtilities.compressStringToArrayBuffer(string)\n    return NVUtilities.uint8tob64(new Uint8Array(buf))\n  }\n\n  /**\n   * Converts a string into a Uint8Array for use with compression/decompression methods (101arrowz/fflate: MIT License)\n   * @param str The string to encode\n   * @param latin1 Whether or not to interpret the data as Latin-1. This should\n   *               not need to be true unless decoding a binary string.\n   * @returns The string encoded in UTF-8/Latin-1 binary\n   */\n\n  static strToU8(str: string, latin1?: boolean): Uint8Array {\n    if (latin1) {\n      const ar = new Uint8Array(str.length)\n      for (let i = 0; i < str.length; ++i) {\n        ar[i] = str.charCodeAt(i)\n      }\n      return ar\n    }\n    const l = str.length\n    // TODO: strToU8 and strFromU8 both define slc\n    // typed array slice - allows garbage collector to free original reference,\n    // while being more compatible than .slice\n    const slc = (v: Uint8Array, s: number, e?: number): Uint8Array => {\n      if (s == null || s < 0) {\n        s = 0\n      }\n      if (e == null || e > v.length) {\n        e = v.length\n      }\n      // can't use .constructor in case user-supplied\n      return new Uint8Array(v.subarray(s, e))\n    }\n    let ar = new Uint8Array(str.length + (str.length >> 1))\n    let ai = 0\n    const w = (v: number): void => {\n      ar[ai++] = v\n    }\n    for (let i = 0; i < l; ++i) {\n      if (ai + 5 > ar.length) {\n        const n = new Uint8Array(ai + 8 + ((l - i) << 1))\n        n.set(ar)\n        ar = n\n      }\n      let c = str.charCodeAt(i)\n      if (c < 128 || latin1) {\n        w(c)\n      } else if (c < 2048) {\n        w(192 | (c >> 6))\n        w(128 | (c & 63))\n      } else if (c > 55295 && c < 57344) {\n        c = (65536 + (c & (1023 << 10))) | (str.charCodeAt(++i) & 1023)\n        w(240 | (c >> 18))\n        w(128 | ((c >> 12) & 63))\n        w(128 | ((c >> 6) & 63))\n        w(128 | (c & 63))\n      } else {\n        c = (65536 + (c & (1023 << 10))) | (str.charCodeAt(++i) & 1023)\n        w(240 | (c >> 18))\n        w(128 | ((c >> 12) & 63))\n        w(128 | ((c >> 6) & 63))\n        w(128 | (c & 63))\n      }\n    }\n    return slc(ar, 0, ai)\n  }\n\n  static async compress(data: Uint8Array, format: CompressionFormat = 'gzip'): Promise<ArrayBuffer> {\n    // mimics fflate, use 'deflate-raw' 'deflate' or 'gzip' if needed\n    // const format = 'deflate-raw'\n    const stream = new CompressionStream(format)\n    const writer = stream.writable.getWriter()\n\n    writer.write(data).catch(console.error) // Do not await this\n    const closePromise = writer.close().catch(console.error)\n\n    const response = new Response(stream.readable)\n    const result = await response.arrayBuffer()\n\n    await closePromise // Ensure close happens eventually\n    return result\n  }\n\n  static async compressStringToArrayBuffer(input: string): Promise<ArrayBuffer> {\n    const uint8Array = this.strToU8(input)\n    return await this.compress(uint8Array)\n  }\n\n  static isArrayBufferCompressed(buffer: ArrayBuffer): boolean {\n    if (buffer && buffer.byteLength) {\n      const arr = new Uint8Array(buffer)\n      const magicNumber = (arr[0] << 8) | arr[1]\n      return magicNumber === 0x1f8b\n    } else {\n      return false\n    }\n  }\n\n  /**\n   * Converts a Uint8Array to a string (101arrowz/fflate: MIT License)\n   * @param dat The data to decode to string\n   * @param latin1 Whether or not to interpret the data as Latin-1. This should\n   *               not need to be true unless encoding to binary string.\n   * @returns The original UTF-8/Latin-1 string\n   */\n  static strFromU8(dat: Uint8Array, latin1?: boolean): string {\n    if (latin1) {\n      let r = ''\n      for (let i = 0; i < dat.length; i += 16384) {\n        r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384))\n      }\n      return r\n    } else {\n      // typed array slice - allows garbage collector to free original reference,\n      // while being more compatible than .slice\n      const slc = (v: Uint8Array, s: number, e?: number): Uint8Array => {\n        if (s == null || s < 0) {\n          s = 0\n        }\n        if (e == null || e > v.length) {\n          e = v.length\n        }\n        // can't use .constructor in case user-supplied\n        return new Uint8Array(v.subarray(s, e))\n      }\n      // decode UTF8\n      const dutf8 = (d: Uint8Array): { s: string; r: Uint8Array } => {\n        for (let r = '', i = 0; ; ) {\n          let c = d[i++]\n          const eb =\n            ((c > 127) as unknown as number) + ((c > 223) as unknown as number) + ((c > 239) as unknown as number)\n          if (i + eb > d.length) {\n            return { s: r, r: slc(d, i - 1) }\n          }\n          if (!eb) {\n            r += String.fromCharCode(c)\n          } else if (eb === 3) {\n            c = (((c & 15) << 18) | ((d[i++] & 63) << 12) | ((d[i++] & 63) << 6) | (d[i++] & 63)) - 65536\n            r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023))\n          } else if (eb & 1) {\n            r += String.fromCharCode(((c & 31) << 6) | (d[i++] & 63))\n          } else {\n            r += String.fromCharCode(((c & 15) << 12) | ((d[i++] & 63) << 6) | (d[i++] & 63))\n          }\n        }\n      }\n      const { s, r } = dutf8(dat)\n      if (r.length) {\n        throw new Error('Unexpected trailing bytes in UTF-8 decoding')\n      }\n      return s\n    }\n  }\n\n  static async decompressArrayBuffer(buffer: ArrayBuffer): Promise<string> {\n    const decompressed = await this.decompress(new Uint8Array(buffer))\n    return this.strFromU8(decompressed)\n  }\n\n  static arraysAreEqual(a: unknown[], b: unknown[]): boolean {\n    return arrayEqual(a, b)\n  }\n\n  /**\n   * Generate a pre-filled number array.\n   *\n   * @param start - start value\n   * @param stop - stop value\n   * @param step - step value\n   * @returns filled number array\n   */\n  static range(start: number, stop: number, step: number): number[] {\n    return Array.from({ length: (stop - start) / step + 1 }, (_, i) => start + i * step)\n  }\n\n  /**\n   * convert spherical AZIMUTH, ELEVATION to Cartesian\n   * @param azimuth - azimuth number\n   * @param elevation - elevation number\n   * @returns the converted [x, y, z] coordinates\n   * @example\n   * xyz = NVUtilities.sph2cartDeg(42, 42)\n   */\n  static sph2cartDeg(azimuth: number, elevation: number): number[] {\n    // convert spherical AZIMUTH,ELEVATION,RANGE to Cartesian\n    // see Matlab's [x,y,z] = sph2cart(THETA,PHI,R)\n    // reverse with cart2sph\n    const Phi = -elevation * (Math.PI / 180)\n    const Theta = ((azimuth - 90) % 360) * (Math.PI / 180)\n    const ret = [Math.cos(Phi) * Math.cos(Theta), Math.cos(Phi) * Math.sin(Theta), Math.sin(Phi)]\n    const len = Math.sqrt(ret[0] * ret[0] + ret[1] * ret[1] + ret[2] * ret[2])\n    if (len <= 0.0) {\n      return ret\n    }\n    ret[0] /= len\n    ret[1] /= len\n    ret[2] /= len\n    return ret\n  }\n\n  static vox2mm(XYZ: number[], mtx: mat4): vec3 {\n    const sform = mat4.clone(mtx)\n    mat4.transpose(sform, sform)\n    const pos = vec4.fromValues(XYZ[0], XYZ[1], XYZ[2], 1)\n    vec4.transformMat4(pos, pos, sform)\n    const pos3 = vec3.fromValues(pos[0], pos[1], pos[2])\n    return pos3\n  }\n}\n","import { mat4, vec4, vec3 } from 'gl-matrix'\nimport { log } from './logger.js'\nimport { NVUtilities, Zip } from './nvutilities.js'\nimport { ColorMap, LUT, cmapper } from './colortables.js'\nimport { NiivueObject3D } from './niivue-object3D.js'\nimport { NVMesh, NVMeshLayer, NVMeshLayerDefaults } from './nvmesh.js'\nimport {\n  ANNOT,\n  DefaultMeshType,\n  GII,\n  // Layer,\n  MGH,\n  MZ3,\n  SmpMap,\n  TCK,\n  TRACT,\n  TRK,\n  TT,\n  TRX,\n  VTK,\n  X3D,\n  XmlTag,\n  AnyNumberArray\n} from './nvmesh-types.js'\n\nconst utiltiesLogger = log\n\n/**\n * Class to load different mesh formats\n * @ignore\n */\nexport class NVMeshLoaders {\n  // read undocumented AFNI tract.niml format streamlines\n  static readTRACT(buffer: ArrayBuffer): TRACT {\n    const len = buffer.byteLength\n    if (len < 20) {\n      throw new Error('File too small to be niml.tract: bytes = ' + len)\n    }\n    const reader = new DataView(buffer)\n    const bytes = new Uint8Array(buffer)\n    let pos = 0\n    function readStr(): string {\n      // read until right angle bracket \">\"\n      while (pos < len && bytes[pos] !== 60) {\n        pos++\n      } // start with \"<\"\n      const startPos = pos\n      while (pos < len && bytes[pos] !== 62) {\n        pos++\n      }\n      pos++ // skip EOLN\n      if (pos - startPos < 1) {\n        return ''\n      }\n      return new TextDecoder().decode(buffer.slice(startPos, pos - 1)).trim()\n    }\n\n    let line = readStr() // 1st line: signature '<network'\n    function readNumericTag(TagName: string): number {\n      // Tag 'Dim1' will return 3 for Dim1=\"3\"\n      const pos = line.indexOf(TagName)\n      if (pos < 0) {\n        return 0\n      }\n      const spos = line.indexOf('\"', pos) + 1\n      const epos = line.indexOf('\"', spos)\n      const str = line.slice(spos, epos)\n      return parseInt(str)\n    }\n    const n_tracts = readNumericTag('N_tracts=')\n    if (!line.startsWith('<network') || n_tracts < 1) {\n      log.warn('This is not a valid niml.tract file ' + line)\n    }\n    let npt = 0\n    const offsetPt0 = []\n    offsetPt0.push(npt) // 1st streamline starts at 0\n    const pts = []\n    const bundleTags = []\n    for (let t = 0; t < n_tracts; t++) {\n      line = readStr() // <tracts ...\n      const new_tracts = readNumericTag('ni_dimen=')\n      const bundleTag = readNumericTag('Bundle_Tag=')\n      const isLittleEndian = line.includes('binary.lsbfirst')\n      for (let i = 0; i < new_tracts; i++) {\n        // let id = reader.getUint32(pos, isLittleEndian);\n        pos += 4\n        const new_pts = reader.getUint32(pos, isLittleEndian) / 3\n        pos += 4\n        for (let j = 0; j < new_pts; j++) {\n          pts.push(reader.getFloat32(pos, isLittleEndian))\n          pos += 4\n          pts.push(-reader.getFloat32(pos, isLittleEndian))\n          pos += 4\n          pts.push(reader.getFloat32(pos, isLittleEndian))\n          pos += 4\n        }\n        npt += new_pts\n        offsetPt0.push(npt)\n        bundleTags.push(bundleTag) // each streamline associated with tract\n      }\n      line = readStr() // </tracts>\n    }\n    const dps = []\n    dps.push({\n      id: 'tract',\n      vals: Float32Array.from(bundleTags)\n    })\n\n    return {\n      pts: new Float32Array(pts),\n      offsetPt0: new Uint32Array(offsetPt0),\n      dps\n    }\n  } // readTRACT()\n\n  // https://dsi-studio.labsolver.org/doc/cli_data.html\n  // https://brain.labsolver.org/hcp_trk_atlas.html\n  static async readTT(buffer: ArrayBuffer): Promise<TT> {\n    // Read a Matlab V4 file, n.b. does not support modern versions\n    // https://www.mathworks.com/help/pdf_doc/matlab/matfile_format.pdf\n    let offsetPt0 = new Uint32Array(0)\n    let pts = new Float32Array(0)\n    const mat = await NVUtilities.readMatV4(buffer)\n    if (!('trans_to_mni' in mat)) {\n      throw new Error(\"TT format file must have 'trans_to_mni'\")\n    }\n    if (!('voxel_size' in mat)) {\n      throw new Error(\"TT format file must have 'voxel_size'\")\n    }\n    if (!('track' in mat)) {\n      throw new Error(\"TT format file must have 'track'\")\n    }\n    let trans_to_mni = mat4.create()\n    const m = mat.trans_to_mni\n    trans_to_mni = mat4.fromValues(\n      m[0],\n      m[1],\n      m[2],\n      m[3],\n      m[4],\n      m[5],\n      m[6],\n      m[7],\n      m[8],\n      m[9],\n      m[10],\n      m[11],\n      m[12],\n      m[13],\n      m[14],\n      m[15]\n    )\n    mat4.transpose(trans_to_mni, trans_to_mni)\n    // unlike TRK, TT uses voxel centers, not voxel corners\n    function parse_tt(\n      track: Float64Array | Float32Array | Uint32Array | Uint16Array | Uint8Array | Int32Array | Int16Array | Int8Array\n    ): void {\n      const dv = new DataView(track.buffer)\n      const pos = []\n      let nvert3 = 0\n      let i = 0\n      while (i < track.length) {\n        pos.push(i)\n        const newpts = dv.getUint32(i, true)\n        i = i + newpts + 13\n        nvert3 += newpts\n      }\n      offsetPt0 = new Uint32Array(pos.length + 1)\n      pts = new Float32Array(nvert3)\n      let npt = 0\n      for (let i = 0; i < pos.length; i++) {\n        offsetPt0[i] = npt / 3\n        let p = pos[i]\n        const sz = dv.getUint32(p, true) / 3\n        let x = dv.getInt32(p + 4, true)\n        let y = dv.getInt32(p + 8, true)\n        let z = dv.getInt32(p + 12, true)\n        p += 16\n        pts[npt++] = x\n        pts[npt++] = y\n        pts[npt++] = z\n        for (let j = 2; j <= sz; j++) {\n          x = x + dv.getInt8(p++)\n          y = y + dv.getInt8(p++)\n          z = z + dv.getInt8(p++)\n          pts[npt++] = x\n          pts[npt++] = y\n          pts[npt++] = z\n        }\n      } // for each streamline\n      for (let i = 0; i < npt; i++) {\n        pts[i] = pts[i] / 32.0\n      }\n      let v = 0\n      for (let i = 0; i < npt / 3; i++) {\n        const pos = vec4.fromValues(pts[v], pts[v + 1], pts[v + 2], 1)\n        vec4.transformMat4(pos, pos, trans_to_mni)\n        pts[v++] = pos[0]\n        pts[v++] = pos[1]\n        pts[v++] = pos[2]\n      }\n      offsetPt0[pos.length] = npt / 3 // solve fence post problem, offset for final streamline\n    } // parse_tt()\n    parse_tt(mat.track)\n    return {\n      pts,\n      offsetPt0\n    }\n  } // readTT\n\n  // read TRX format tractogram\n  // https://github.com/tee-ar-ex/trx-spec/blob/master/specifications.md\n  static async readTRX(buffer: ArrayBuffer): Promise<TRX> {\n    // Javascript does not support float16, so we convert to float32\n    // https://stackoverflow.com/questions/5678432/decompressing-half-precision-floats-in-javascript\n    function decodeFloat16(binary: number): number {\n      'use strict'\n      const exponent = (binary & 0x7c00) >> 10\n      const fraction = binary & 0x03ff\n      return (\n        (binary >> 15 ? -1 : 1) *\n        (exponent\n          ? exponent === 0x1f\n            ? fraction\n              ? NaN\n              : Infinity\n            : Math.pow(2, exponent - 15) * (1 + fraction / 0x400)\n          : 6.103515625e-5 * (fraction / 0x400))\n      )\n    } // decodeFloat16()\n    let noff = 0\n    let npt = 0\n    let pts = new Float32Array([])\n    const offsetPt0: number[] = []\n    const dpg = []\n    const dps = []\n    const dpv = []\n    let header = []\n    let isOverflowUint64 = false\n    const zip = new Zip(buffer)\n    for (let i = 0; i < zip.entries.length; i++) {\n      const entry = zip.entries[i]\n      if (entry.uncompressedSize === 0) {\n        continue // e.g. folder\n      }\n\n      const parts = entry.fileName.split('/')\n      const fname = parts.slice(-1)[0] // my.trx/dpv/fx.float32 -> fx.float32\n      if (fname.startsWith('.')) {\n        continue\n      }\n      const pname = parts.slice(-2)[0] // my.trx/dpv/fx.float32 -> dpv\n      const tag = fname.split('.')[0] // \"positions.3.float16 -> \"positions\"\n      const data = await entry.extract()\n      // const data = await NVUtilities.zipInflate(buffer, entry.startsAt, entry.compressedSize, entry.uncompressedSize, entry.compressionMethod )\n      // console.log(`entry ${pname}  ${fname}  ${tag} : ${data.length}`)\n      if (fname.includes('header.json')) {\n        const jsonString = new TextDecoder().decode(data)\n        header = JSON.parse(jsonString)\n        continue\n      }\n\n      // next read arrays for all possible datatypes: int8/16/32/64 uint8/16/32/64 float16/32/64\n      let nval = 0\n      let vals: AnyNumberArray = []\n      if (fname.endsWith('.uint64') || fname.endsWith('.int64')) {\n        // javascript does not have 64-bit integers! read lower 32-bits\n        // note for signed int64 we only read unsigned bytes\n        // for both signed and unsigned, generate an error if any value is out of bounds\n        // one alternative might be to convert to 64-bit double that has a flintmax of 2^53.\n        nval = data.length / 8 // 8 bytes per 64bit input\n        vals = new Uint32Array(nval)\n        const u32 = new Uint32Array(data.buffer)\n        let j = 0\n        for (let i = 0; i < nval; i++) {\n          vals[i] = u32[j]\n          if (u32[j + 1] !== 0) {\n            isOverflowUint64 = true\n          }\n          j += 2\n        }\n      } else if (fname.endsWith('.uint32')) {\n        vals = new Uint32Array(data.buffer)\n      } else if (fname.endsWith('.uint16')) {\n        vals = new Uint16Array(data.buffer)\n      } else if (fname.endsWith('.uint8')) {\n        vals = new Uint8Array(data.buffer)\n      } else if (fname.endsWith('.int32')) {\n        vals = new Int32Array(data.buffer)\n      } else if (fname.endsWith('.int16')) {\n        vals = new Int16Array(data.buffer)\n      } else if (fname.endsWith('.int8')) {\n        vals = new Int8Array(data.buffer)\n      } else if (fname.endsWith('.float64')) {\n        vals = new Float64Array(data.buffer)\n      } else if (fname.endsWith('.float32')) {\n        vals = new Float32Array(data.buffer)\n      } else if (fname.endsWith('.float16')) {\n        // javascript does not have 16-bit floats! Convert to 32-bits\n        nval = data.length / 2 // 2 bytes per 16bit input\n        vals = new Float32Array(nval)\n        const u16 = new Uint16Array(data.buffer)\n        const lut = new Float32Array(65536)\n        for (let i = 0; i < 65536; i++) {\n          lut[i] = decodeFloat16(i)\n        }\n        for (let i = 0; i < nval; i++) {\n          vals[i] = lut[u16[i]]\n        }\n      } else {\n        continue\n      } // not a data array\n      nval = vals.length\n      // next: read data_per_group\n      if (pname.includes('groups')) {\n        dpg.push({\n          id: tag,\n          vals: Float32Array.from(vals.slice())\n        })\n        continue\n      }\n      // next: read data_per_vertex\n      if (pname.includes('dpv')) {\n        dpv.push({\n          id: tag,\n          vals: Float32Array.from(vals.slice())\n        })\n        continue\n      }\n      // next: read data_per_streamline\n      if (pname.includes('dps')) {\n        dps.push({\n          id: tag,\n          vals: Float32Array.from(vals.slice())\n        })\n        continue\n      }\n      // Next: read offsets: Always uint64\n      if (fname.startsWith('offsets.')) {\n        // javascript does not have 64-bit integers! read lower 32-bits\n        noff = nval // 8 bytes per 64bit input\n        // we need to solve the fence post problem, so we can not use slice\n        for (let i = 0; i < nval; i++) {\n          offsetPt0[i] = vals[i]\n        }\n      }\n      if (fname.startsWith('positions.3.')) {\n        npt = nval // 4 bytes per 32bit input\n        pts = new Float32Array(vals)\n      }\n    }\n    if (noff === 0 || npt === 0) {\n      throw new Error('Failure reading TRX format (no offsets or points).')\n    }\n    if (isOverflowUint64) {\n      // TODO use BigInt\n      throw new Error('Too many vertices: JavaScript does not support 64 bit integers')\n    }\n    offsetPt0[noff] = npt / 3 // solve fence post problem, offset for final streamline\n    return {\n      pts,\n      offsetPt0: new Uint32Array(offsetPt0),\n      dpg,\n      dps,\n      dpv,\n      header\n    }\n  } // readTRX()\n\n  // read mrtrix tsf format Track Scalar Files - these are are DPV\n  // https://mrtrix.readthedocs.io/en/dev/getting_started/image_data.html#track-scalar-file-format-tsf\n  static readTSF(buffer: ArrayBuffer, n_vert = 0): Float32Array {\n    const vals = new Float32Array(n_vert)\n    const len = buffer.byteLength\n    if (len < 20) {\n      throw new Error('File too small to be TSF: bytes = ' + len)\n    }\n    const bytes = new Uint8Array(buffer)\n    let pos = 0\n    function readStr(): string {\n      while (pos < len && bytes[pos] === 10) {\n        pos++\n      } // skip blank lines\n      const startPos = pos\n      while (pos < len && bytes[pos] !== 10) {\n        pos++\n      }\n      pos++ // skip EOLN\n      if (pos - startPos < 1) {\n        return ''\n      }\n      return new TextDecoder().decode(buffer.slice(startPos, pos - 1))\n    }\n    let line = readStr() // 1st line: signature 'mrtrix tracks'\n    if (!line.includes('mrtrix track scalars')) {\n      throw new Error('Not a valid TSF file')\n    }\n    let offset = -1 // \"file: offset\" is REQUIRED\n    while (pos < len && !line.includes('END')) {\n      line = readStr()\n      if (line.toLowerCase().startsWith('file:')) {\n        offset = parseInt(line.split(' ').pop()!)\n      }\n      if (line.toLowerCase().startsWith('datatype:') && !line.endsWith('Float32LE')) {\n        throw new Error('Only supports TSF files with Float32LE')\n      }\n    }\n    if (offset < 20) {\n      throw new Error('Not a valid TSF file (missing file offset)')\n    }\n    pos = offset\n    const reader = new DataView(buffer)\n    // read and transform vertex positions\n    let npt = 0\n    while (pos + 4 <= len && npt < n_vert) {\n      const ptx = reader.getFloat32(pos, true)\n      pos += 4\n      if (!isFinite(ptx)) {\n        // both NaN and Infinity are not finite\n        if (!isNaN(ptx)) {\n          // terminate if infinity\n          break\n        }\n      } else {\n        vals[npt++] = ptx\n      }\n    }\n    return vals\n  } // readTSF\n\n  // read mrtrix tck format streamlines\n  // https://mrtrix.readthedocs.io/en/latest/getting_started/image_data.html#tracks-file-format-tck\n  static readTCK(buffer: ArrayBuffer): TCK {\n    const len = buffer.byteLength\n    if (len < 20) {\n      throw new Error('File too small to be TCK: bytes = ' + len)\n    }\n    const bytes = new Uint8Array(buffer)\n    let pos = 0\n    function readStr(): string {\n      while (pos < len && bytes[pos] === 10) {\n        pos++\n      } // skip blank lines\n      const startPos = pos\n      while (pos < len && bytes[pos] !== 10) {\n        pos++\n      }\n      pos++ // skip EOLN\n      if (pos - startPos < 1) {\n        return ''\n      }\n      return new TextDecoder().decode(buffer.slice(startPos, pos - 1))\n    }\n    let line = readStr() // 1st line: signature 'mrtrix tracks'\n    if (!line.includes('mrtrix tracks')) {\n      throw new Error('Not a valid TCK file')\n    }\n    let offset = -1 // \"file: offset\" is REQUIRED\n    while (pos < len && !line.includes('END')) {\n      line = readStr()\n      if (line.toLowerCase().startsWith('file:')) {\n        offset = parseInt(line.split(' ').pop()!)\n      }\n    }\n    if (offset < 20) {\n      throw new Error('Not a valid TCK file (missing file offset)')\n    }\n    pos = offset\n    const reader = new DataView(buffer)\n    // read and transform vertex positions\n    let npt = 0\n    // over-provision offset array to store number of segments\n    let offsetPt0 = new Uint32Array(len / (4 * 4))\n    let noffset = 0\n    // over-provision points array to store vertex positions\n    let npt3 = 0\n    let pts = new Float32Array(len / 4)\n    offsetPt0[0] = 0 // 1st streamline starts at 0\n    while (pos + 12 < len) {\n      const ptx = reader.getFloat32(pos, true)\n      pos += 4\n      const pty = reader.getFloat32(pos, true)\n      pos += 4\n      const ptz = reader.getFloat32(pos, true)\n      pos += 4\n      if (!isFinite(ptx)) {\n        // both NaN and Infinity are not finite\n        offsetPt0[noffset++] = npt\n        if (!isNaN(ptx)) {\n          // terminate if infinity\n          break\n        }\n      } else {\n        pts[npt3++] = ptx\n        pts[npt3++] = pty\n        pts[npt3++] = ptz\n        npt++\n      }\n    }\n    // resize offset/vertex arrays that were initially over-provisioned\n    pts = pts.slice(0, npt3)\n    offsetPt0 = offsetPt0.slice(0, noffset)\n    return {\n      pts,\n      offsetPt0\n    }\n  } // readTCK()\n\n  // not included in public docs\n  // read trackvis trk format streamlines\n  // http://trackvis.org/docs/?subsect=fileformat\n  static async readTRK(buffer: ArrayBuffer): Promise<TRK> {\n    // https://brain.labsolver.org/hcp_trk_atlas.html\n    // https://github.com/xtk/X/tree/master/io\n    // in practice, always little endian\n    let reader = new DataView(buffer)\n    let magic = reader.getUint32(0, true) // 'TRAC'\n    if (magic !== 1128354388) {\n      // e.g. TRK.gz\n      let raw\n      if (magic === 4247762216) {\n        // e.g. TRK.zstd\n        // raw = fzstd.decompress(new Uint8Array(buffer));\n        // raw = new Uint8Array(raw);\n        throw new Error('zstd TRK decompression is not supported')\n      } else {\n        raw = await NVUtilities.decompress(new Uint8Array(buffer))\n      }\n      buffer = raw.buffer\n      reader = new DataView(buffer)\n      magic = reader.getUint32(0, true) // 'TRAC'\n    }\n    const vers = reader.getUint32(992, true) // 2\n    const hdr_sz = reader.getUint32(996, true) // 1000\n    if (vers > 2 || hdr_sz !== 1000 || magic !== 1128354388) {\n      throw new Error('Not a valid TRK file')\n    }\n    const n_scalars = reader.getInt16(36, true)\n    const dpv = []\n    // data_per_vertex\n    for (let i = 0; i < n_scalars; i++) {\n      const arr = new Uint8Array(buffer.slice(38 + i * 20, 58 + i * 20))\n      const str = new TextDecoder().decode(arr).split('\\0').shift()\n      dpv.push({\n        id: str!.trim(), // TODO can we guarantee this?\n        vals: [] as number[]\n      })\n    }\n    const voxel_sizeX = reader.getFloat32(12, true)\n    const voxel_sizeY = reader.getFloat32(16, true)\n    const voxel_sizeZ = reader.getFloat32(20, true)\n    const zoomMat = mat4.fromValues(\n      1 / voxel_sizeX,\n      0,\n      0,\n      -0.5,\n      0,\n      1 / voxel_sizeY,\n      0,\n      -0.5,\n      0,\n      0,\n      1 / voxel_sizeZ,\n      -0.5,\n      0,\n      0,\n      0,\n      1\n    )\n    const n_properties = reader.getInt16(238, true)\n    const dps = []\n    // data_per_streamline\n    for (let i = 0; i < n_properties; i++) {\n      const arr = new Uint8Array(buffer.slice(240 + i * 20, 260 + i * 20))\n      const str = new TextDecoder().decode(arr).split('\\0').shift()\n      dps.push({\n        id: str!.trim(), // TODO can we guarantee this?\n        vals: [] as number[]\n      })\n    }\n    const mat = mat4.create()\n    for (let i = 0; i < 16; i++) {\n      mat[i] = reader.getFloat32(440 + i * 4, true)\n    }\n    if (mat[15] === 0.0) {\n      // vox_to_ras[3][3] is 0, it means the matrix is not recorded\n      log.warn('TRK vox_to_ras not set')\n      mat4.identity(mat)\n    }\n    const vox2mmMat = mat4.create()\n    mat4.mul(vox2mmMat, zoomMat, mat)\n    let i32 = null\n    let f32 = null\n    i32 = new Int32Array(buffer.slice(hdr_sz))\n    f32 = new Float32Array(i32.buffer)\n    const ntracks = i32.length\n    if (ntracks < 1) {\n      throw new Error('Empty TRK file.')\n    }\n    // read and transform vertex positions\n    let i = 0\n    let npt = 0\n    // pre-allocate and over-provision offset array\n    let offsetPt0 = new Uint32Array(i32.length / 4)\n    let noffset = 0\n    // pre-allocate and over-provision vertex positions array\n    let pts = new Float32Array(i32.length)\n    let npt3 = 0\n    while (i < ntracks) {\n      const n_pts = i32[i]\n      i = i + 1 // read 1 32-bit integer for number of points in this streamline\n      offsetPt0[noffset++] = npt\n      for (let j = 0; j < n_pts; j++) {\n        const ptx = f32[i + 0]\n        const pty = f32[i + 1]\n        const ptz = f32[i + 2]\n        i += 3 // read 3 32-bit floats for XYZ position\n        pts[npt3++] = ptx * vox2mmMat[0] + pty * vox2mmMat[1] + ptz * vox2mmMat[2] + vox2mmMat[3]\n        pts[npt3++] = ptx * vox2mmMat[4] + pty * vox2mmMat[5] + ptz * vox2mmMat[6] + vox2mmMat[7]\n        pts[npt3++] = ptx * vox2mmMat[8] + pty * vox2mmMat[9] + ptz * vox2mmMat[10] + vox2mmMat[11]\n        if (n_scalars > 0) {\n          for (let s = 0; s < n_scalars; s++) {\n            dpv[s].vals.push(f32[i])\n            i++\n          }\n        }\n        npt++\n      } // for j: each point in streamline\n      if (n_properties > 0) {\n        for (let j = 0; j < n_properties; j++) {\n          dps[j].vals.push(f32[i])\n          i++\n        }\n      }\n    } // for each streamline: while i < n_count\n    // output uses static float32 not dynamic number[]\n    const dps32 = []\n    // data_per_streamline\n    for (let i = 0; i < dps.length; i++) {\n      dps32.push({\n        id: dps[i].id,\n        vals: Float32Array.from(dps[i].vals)\n      })\n    }\n    const dpv32 = []\n    for (let i = 0; i < dpv.length; i++) {\n      dpv32.push({\n        id: dpv[i].id,\n        vals: Float32Array.from(dpv[i].vals)\n      })\n    }\n    // add 'first index' as if one more line was added (fence post problem)\n    offsetPt0[noffset++] = npt\n    // resize offset/vertex arrays that were initially over-provisioned\n    pts = pts.slice(0, npt3)\n    offsetPt0 = offsetPt0.slice(0, noffset)\n    return {\n      pts,\n      offsetPt0,\n      dps: dps32,\n      dpv: dpv32\n    }\n  } // readTRK()\n\n  // read legacy VTK text format file\n  static readTxtVTK(buffer: ArrayBuffer): VTK {\n    const enc = new TextDecoder('utf-8')\n    const txt = enc.decode(buffer)\n    const lines = txt.split('\\n')\n    const n = lines.length\n    if (n < 7 || !lines[0].startsWith('# vtk DataFile')) {\n      throw new Error('Invalid VTK image')\n    }\n    if (!lines[2].startsWith('ASCII')) {\n      throw new Error('Not ASCII VTK mesh')\n    }\n    let pos = 3\n    while (lines[pos].length < 1) {\n      pos++\n    } // skip blank lines\n    if (!lines[pos].includes('POLYDATA')) {\n      throw new Error('Not ASCII VTK polydata')\n    }\n    pos++\n    while (lines[pos].length < 1) {\n      pos++\n    } // skip blank lines\n    if (!lines[pos].startsWith('POINTS')) {\n      throw new Error('Not VTK POINTS')\n    }\n    let items = lines[pos].trim().split(/\\s+/)\n    const nvert = parseInt(items[1]) // POINTS 10261 float\n    const nvert3 = nvert * 3\n    const positions = new Float32Array(nvert * 3)\n    let v = 0\n    while (v < nvert * 3) {\n      pos++\n      const str = lines[pos].trim()\n      const pts = str.trim().split(/\\s+/)\n      for (let i = 0; i < pts.length; i++) {\n        if (v >= nvert3) {\n          break\n        }\n        positions[v] = parseFloat(pts[i])\n        v++\n      }\n    }\n    const tris = []\n    pos++\n    while (lines[pos].length < 1) {\n      pos++\n    } // skip blank lines\n    if (lines[pos].startsWith('METADATA')) {\n      while (lines[pos].length > 1) {\n        pos++\n      } // skip until blank line\n      pos++\n    }\n    items = lines[pos].trim().split(/\\s+/)\n    pos++\n    if (items[0].includes('LINES')) {\n      const n_count = parseInt(items[1])\n      if (n_count < 1) {\n        throw new Error('Corrupted VTK ASCII')\n      }\n      let str = lines[pos].trim()\n      const offsetPt0 = []\n      let pts: number[] = []\n      if (str.startsWith('OFFSETS')) {\n        // 'new' line style https://discourse.vtk.org/t/upcoming-changes-to-vtkcellarray/2066\n        pos++\n        let c = 0\n        while (c < n_count) {\n          str = lines[pos].trim()\n          pos++\n          const items = str.trim().split(/\\s+/)\n          for (let i = 0; i < items.length; i++) {\n            offsetPt0[c] = parseInt(items[i])\n            c++\n            if (c >= n_count) {\n              break\n            }\n          } // for each line\n        } // while offset array not filled\n        pts = Array.from(positions)\n      } else {\n        // classic line style https://www.visitusers.org/index.php?title=ASCII_VTK_Files\n        let npt = 0\n        offsetPt0[0] = 0 // 1st streamline starts at 0\n        let asciiInts: number[] = []\n        let asciiIntsPos = 0\n\n        function lineToInts(): void {\n          // VTK can save one array across multiple ASCII lines\n          str = lines[pos].trim()\n          const items = str.trim().split(/\\s+/)\n          asciiInts = []\n          for (let i = 0; i < items.length; i++) {\n            asciiInts.push(parseInt(items[i]))\n          }\n          asciiIntsPos = 0\n          pos++\n        }\n\n        lineToInts()\n        for (let c = 0; c < n_count; c++) {\n          if (asciiIntsPos >= asciiInts.length) {\n            lineToInts()\n          }\n          const numPoints = asciiInts[asciiIntsPos++]\n          npt += numPoints\n          offsetPt0[c + 1] = npt\n          for (let i = 0; i < numPoints; i++) {\n            if (asciiIntsPos >= asciiInts.length) {\n              lineToInts()\n            }\n            const idx = asciiInts[asciiIntsPos++] * 3\n            pts.push(positions[idx + 0]) // X\n            pts.push(positions[idx + 1]) // Y\n            pts.push(positions[idx + 2]) // Z\n          } // for numPoints: number of segments in streamline\n        } // for n_count: number of streamlines\n      }\n      return {\n        pts: Float32Array.from(pts),\n        offsetPt0: Uint32Array.from(offsetPt0)\n      }\n    } else if (items[0].includes('TRIANGLE_STRIPS')) {\n      const nstrip = parseInt(items[1])\n      for (let i = 0; i < nstrip; i++) {\n        const str = lines[pos].trim()\n        pos++\n        const vs = str.trim().split(/\\s+/)\n        const ntri = parseInt(vs[0]) - 2 // -2 as triangle strip is creates pts - 2 faces\n        let k = 1\n        for (let t = 0; t < ntri; t++) {\n          if (t % 2) {\n            // preserve winding order\n            tris.push(parseInt(vs[k + 2]))\n            tris.push(parseInt(vs[k + 1]))\n            tris.push(parseInt(vs[k]))\n          } else {\n            tris.push(parseInt(vs[k]))\n            tris.push(parseInt(vs[k + 1]))\n            tris.push(parseInt(vs[k + 2]))\n          }\n          k += 1\n        } // for each triangle\n      } // for each strip\n    } else if (items[0].includes('POLYGONS')) {\n      const npoly = parseInt(items[1])\n      for (let i = 0; i < npoly; i++) {\n        const str = lines[pos].trim()\n        pos++\n        const vs = str.trim().split(/\\s+/)\n        const ntri = parseInt(vs[0]) - 2 // e.g. 3 for triangle\n        const fx = parseInt(vs[1])\n        let fy = parseInt(vs[2])\n        for (let t = 0; t < ntri; t++) {\n          const fz = parseInt(vs[3 + t])\n          tris.push(fx)\n          tris.push(fy)\n          tris.push(fz)\n          fy = fz\n        }\n      }\n    } else {\n      throw new Error('Unsupported ASCII VTK datatype ' + items[0])\n    }\n    const indices = new Uint32Array(tris)\n    return {\n      positions,\n      indices\n    }\n  } // readTxtVTK()\n\n  // read mesh overlay to influence vertex colors\n  static async readLayer(\n    name: string = '',\n    buffer: ArrayBuffer,\n    nvmesh: NVMesh,\n    opacity = 0.5,\n    colormap = 'warm',\n    colormapNegative = 'winter',\n    useNegativeCmap = false,\n    cal_min: number | null = null,\n    cal_max: number | null = null,\n    outlineBorder = 0\n  ): Promise<NVMeshLayer | undefined> {\n    const layer: NVMeshLayer = {\n      ...NVMeshLayerDefaults,\n      colormapInvert: false,\n      colormapType: 0, // COLORMAP_TYPE.MIN_TO_MAX\n      isTransparentBelowCalMin: true,\n      isAdditiveBlend: false,\n      colorbarVisible: true,\n      colormapLabel: null\n    }\n    const isReadColortables = true\n    const re = /(?:\\.([^.]+))?$/\n    let ext = re.exec(name)![1] // TODO can we guarantee this?\n    ext = ext.toUpperCase()\n    if (ext === 'GZ') {\n      ext = re.exec(name.slice(0, -3))![1] // img.trk.gz -> img.trk\n      ext = ext.toUpperCase()\n    }\n    const n_vert = nvmesh.vertexCount / 3 // each vertex has XYZ component\n    if (nvmesh.offsetPt0) {\n      if (ext !== 'TSF') {\n        throw new Error('readLayer for streamlines only supports TSF files.')\n      }\n      const npt = nvmesh.pts.length / 3\n      // typescript hell commences for one liner\n      // const tag = name.split('/')!.pop()!.split('.')!.slice(0, -1).join('.')!\n      const splitResult = name.split('/')\n      let tag = 'Unknown'\n      if (splitResult.length > 1) {\n        const tag1 = splitResult.pop()\n        if (tag1) {\n          tag = tag.split('.').slice(0, -1).join('.')\n        }\n      }\n      // return to readable javascript\n      const vals = NVMeshLoaders.readTSF(buffer, npt)\n      if (!nvmesh.dpv) {\n        nvmesh.dpv = []\n      }\n      const mn = vals.reduce((acc, current) => Math.min(acc, current))\n      const mx = vals.reduce((acc, current) => Math.max(acc, current))\n      nvmesh.dpv.push({\n        id: tag,\n        vals: Float32Array.from(vals.slice()),\n        global_min: mn,\n        global_max: mx,\n        cal_min: mn,\n        cal_max: mx\n      })\n      return layer\n    }\n    if (n_vert < 3) {\n      log.error('n_vert < 3 in layer')\n      return\n    }\n    if (ext === 'MZ3') {\n      const obj = await NVMeshLoaders.readMZ3(buffer, n_vert)\n      layer.values = obj.scalars\n      if ('colormapLabel' in obj) {\n        layer.colormapLabel = obj.colormapLabel\n      }\n    } else if (ext === 'ANNOT') {\n      if (!isReadColortables) {\n        // TODO: bogus ANNOT return type\n        layer.values = NVMeshLoaders.readANNOT(buffer, n_vert) as unknown as Float32Array\n      } else {\n        const obj = NVMeshLoaders.readANNOT(buffer, n_vert, true)\n        if (!(obj instanceof Uint32Array)) {\n          layer.values = obj.scalars\n          layer.colormapLabel = obj.colormapLabel\n        } // unable to decode colormapLabel\n        else {\n          layer.values = obj\n        }\n      }\n    } else if (ext === 'CRV' || ext === 'CURV' || ext === 'THICKNESS' || ext === 'AREA') {\n      layer.values = NVMeshLoaders.readCURV(buffer, n_vert)\n      layer.isTransparentBelowCalMin = false\n    } else if (ext === 'GII') {\n      const obj = await NVMeshLoaders.readGII(buffer, n_vert)\n      layer.values = obj.scalars // colormapLabel\n      layer.colormapLabel = obj.colormapLabel\n    } else if (ext === 'MGH' || ext === 'MGZ') {\n      if (!isReadColortables) {\n        layer.values = (await NVMeshLoaders.readMGH(buffer, n_vert)) as number[]\n      } else {\n        const obj = await NVMeshLoaders.readMGH(buffer, n_vert, true)\n        if ('scalars' in obj) {\n          layer.values = obj.scalars\n          layer.colormapLabel = obj.colormapLabel\n        } // unable to decode colormapLabel\n        else {\n          layer.values = obj\n        }\n      }\n    } else if (ext === 'NII') {\n      layer.values = (await NVMeshLoaders.readNII(buffer, n_vert, nvmesh.anatomicalStructurePrimary)) as Float32Array\n    } else if (ext === 'SMP') {\n      layer.values = await NVMeshLoaders.readSMP(buffer, n_vert)\n    } else if (ext === 'STC') {\n      layer.values = NVMeshLoaders.readSTC(buffer, n_vert)\n    } else if (NVMeshLoaders.isCurv(buffer)) {\n      // Unknown layer overlay format - hail mary assume FreeSurfer\n      layer.values = NVMeshLoaders.readCURV(buffer, n_vert)\n      layer.isTransparentBelowCalMin = false\n    } else {\n      log.warn('Unknown layer overlay format ' + name)\n      return layer\n    }\n    if (!layer.values) {\n      log.error('no values in layer')\n      return\n    }\n    layer.nFrame4D = layer.values.length / n_vert\n    layer.frame4D = 0\n    layer.outlineBorder = outlineBorder\n    // determine global min..max\n    let mn = layer.values[0]\n    let mx = layer.values[0]\n    for (let i = 0; i < layer.values.length; i++) {\n      mn = Math.min(mn, layer.values[i])\n      mx = Math.max(mx, layer.values[i])\n    }\n    layer.global_min = mn\n    layer.global_max = mx\n    layer.cal_min = cal_min || 0\n    if (!cal_min) {\n      layer.cal_min = mn\n    }\n    layer.cal_max = cal_max || 0\n    if (!cal_max) {\n      layer.cal_max = mx\n    }\n    layer.cal_minNeg = NaN\n    layer.cal_maxNeg = NaN\n    layer.opacity = opacity\n    layer.colormap = colormap\n    layer.colormapNegative = colormapNegative\n    layer.useNegativeCmap = useNegativeCmap\n    return layer\n  } // readLayer()\n\n  // read brainvoyager smp format file\n  // https://support.brainvoyager.com/brainvoyager/automation-development/84-file-formats/40-the-format-of-smp-files\n  static async readSMP(buffer: ArrayBuffer, n_vert: number): Promise<Float32Array> {\n    const len = buffer.byteLength\n    let reader = new DataView(buffer)\n    let vers = reader.getUint16(0, true)\n    if (vers > 5) {\n      // assume gzip\n      const raw = await NVUtilities.decompress(new Uint8Array(buffer))\n      reader = new DataView(raw.buffer)\n      vers = reader.getUint16(0, true)\n      buffer = raw.buffer\n    }\n    if (vers > 5) {\n      log.error('Unsupported or invalid BrainVoyager SMP version ' + vers)\n    }\n    const nvert = reader.getUint32(2, true)\n    if (nvert !== n_vert) {\n      log.error('SMP file has ' + nvert + ' vertices, background mesh has ' + n_vert)\n    }\n    const nMaps = reader.getUint16(6, true)\n\n    const scalars = new Float32Array(nvert * nMaps)\n    const maps = []\n    let pos = 9\n    function readStr(): string {\n      const startPos = pos\n      while (pos < len && reader.getUint8(pos) !== 0) {\n        pos++\n      }\n      pos++ // skip null termination\n      return new TextDecoder().decode(buffer.slice(startPos, pos - 1))\n    } // readStr: read variable length string\n\n    // read Name of SRF\n    const _filenameSRF = readStr()\n\n    for (let i = 0; i < nMaps; i++) {\n      const m: Partial<SmpMap> = {}\n      m.mapType = reader.getUint32(pos, true)\n      pos += 4\n      // Read additional values only if a lag map\n      if (vers >= 3 && m.mapType === 3) {\n        m.nLags = reader.getUint32(pos, true)\n        pos += 4\n        m.mnLag = reader.getUint32(pos, true)\n        pos += 4\n        m.mxLag = reader.getUint32(pos, true)\n        pos += 4\n        m.ccOverlay = reader.getUint32(pos, true)\n        pos += 4\n      }\n      m.clusterSize = reader.getUint32(pos, true)\n      pos += 4\n      m.clusterCheck = reader.getUint8(pos)\n      pos += 1\n      m.critThresh = reader.getFloat32(pos, true)\n      pos += 4\n      m.maxThresh = reader.getFloat32(pos, true)\n      pos += 4\n      if (vers >= 4) {\n        m.includeValuesGreaterThreshMax = reader.getUint32(pos, true)\n        pos += 4\n      }\n      m.df1 = reader.getUint32(pos, true)\n      pos += 4\n      m.df2 = reader.getUint32(pos, true)\n      pos += 4\n      if (vers >= 5) {\n        m.posNegFlag = reader.getUint32(pos, true)\n        pos += 4\n      } else {\n        m.posNegFlag = 3\n      }\n      m.cortexBonferroni = reader.getUint32(pos, true)\n      pos += 4\n      m.posMinRGB = [0, 0, 0]\n      m.posMaxRGB = [0, 0, 0]\n      m.negMinRGB = [0, 0, 0]\n      m.negMaxRGB = [0, 0, 0]\n      if (vers >= 2) {\n        m.posMinRGB[0] = reader.getUint8(pos)\n        pos++\n        m.posMinRGB[1] = reader.getUint8(pos)\n        pos++\n        m.posMinRGB[2] = reader.getUint8(pos)\n        pos++\n        m.posMaxRGB[0] = reader.getUint8(pos)\n        pos++\n        m.posMaxRGB[1] = reader.getUint8(pos)\n        pos++\n        m.posMaxRGB[2] = reader.getUint8(pos)\n        pos++\n        if (vers >= 4) {\n          m.negMinRGB[0] = reader.getUint8(pos)\n          pos++\n          m.negMinRGB[1] = reader.getUint8(pos)\n          pos++\n          m.negMinRGB[2] = reader.getUint8(pos)\n          pos++\n          m.negMaxRGB[0] = reader.getUint8(pos)\n          pos++\n          m.negMaxRGB[1] = reader.getUint8(pos)\n          pos++\n          m.negMaxRGB[2] = reader.getUint8(pos)\n          pos++\n        } // vers >= 4\n        m.enableSMPColor = reader.getUint8(pos)\n        pos++\n        if (vers >= 4) {\n          m.lut = readStr()\n        }\n        m.colorAlpha = reader.getFloat32(pos, true)\n        pos += 4\n      } // vers >= 2\n      m.name = readStr()\n      const scalarsNew = new Float32Array(buffer, pos, nvert)\n      scalars.set(scalarsNew, i * nvert)\n      pos += nvert * 4\n      maps.push(m)\n    } // for i to nMaps\n    return scalars\n  } // readSMP()\n\n  // read mne stc format file, not to be confused with brainvoyager stc format\n  // https://github.com/mne-tools/mne-python/blob/main/mne/source_estimate.py#L211-L365\n  static readSTC(buffer: ArrayBuffer, n_vert: number): Float32Array {\n    // https://github.com/fahsuanlin/fhlin_toolbox/blob/400cb73cda4880d9ad7841d9dd68e4e9762976bf/codes/inverse_read_stc.m\n    // let len = buffer.byteLength;\n    const reader = new DataView(buffer)\n    // first 12 bytes are header\n    // let epoch_begin_latency = reader.getFloat32(0, false);\n    // let sample_period = reader.getFloat32(4, false);\n    const n_vertex = reader.getInt32(8, false)\n    if (n_vertex !== n_vert) {\n      throw new Error('Overlay has ' + n_vertex + ' vertices, expected ' + n_vert)\n    }\n    // next 4*n_vertex bytes are vertex IDS\n    let pos = 12 + n_vertex * 4\n    // next 4 bytes reports number of volumes/time points\n    const n_time = reader.getUint32(pos, false)\n    pos += 4\n    const f32 = new Float32Array(n_time * n_vertex)\n    // reading all floats with .slice() would be faster, but lets handle endian-ness\n    for (let i = 0; i < n_time * n_vertex; i++) {\n      f32[i] = reader.getFloat32(pos, false)\n      pos += 4\n    }\n    return f32\n  } // readSTC()\n\n  static isCurv(buffer: ArrayBuffer): boolean {\n    const view = new DataView(buffer) // ArrayBuffer to dataview\n    // ALWAYS big endian\n    const sig0 = view.getUint8(0)\n    const sig1 = view.getUint8(1)\n    const sig2 = view.getUint8(2)\n    if (sig0 !== 255 || sig1 !== 255 || sig2 !== 255) {\n      utiltiesLogger.debug('Unable to recognize file type: does not appear to be FreeSurfer format.')\n      return false\n    }\n    return true\n  }\n\n  // read freesurfer curv big-endian format\n  // https://github.com/bonilhamusclab/MRIcroS/blob/master/%2BfileUtils/%2Bpial/readPial.m\n  // http://www.grahamwideman.com/gw/brain/fs/surfacefileformats.htm\n  static readCURV(buffer: ArrayBuffer, n_vert: number): Float32Array {\n    const view = new DataView(buffer) // ArrayBuffer to dataview\n    // ALWAYS big endian\n    const sig0 = view.getUint8(0)\n    const sig1 = view.getUint8(1)\n    const sig2 = view.getUint8(2)\n    const n_vertex = view.getUint32(3, false)\n    // let num_f = view.getUint32(7, false);\n    const n_time = view.getUint32(11, false)\n    if (sig0 !== 255 || sig1 !== 255 || sig2 !== 255) {\n      utiltiesLogger.debug('Unable to recognize file type: does not appear to be FreeSurfer format.')\n    }\n    if (n_vert !== n_vertex) {\n      throw new Error('CURV file has different number of vertices ( ' + n_vertex + ')than mesh (' + n_vert + ')')\n    }\n    if (buffer.byteLength < 15 + 4 * n_vertex * n_time) {\n      throw new Error('CURV file smaller than specified')\n    }\n    const f32 = new Float32Array(n_time * n_vertex)\n    let pos = 15\n    // reading all floats with .slice() would be faster, but lets handle endian-ness\n    for (let i = 0; i < n_time * n_vertex; i++) {\n      f32[i] = view.getFloat32(pos, false)\n      pos += 4\n    }\n    let mn = f32[0]\n    let mx = f32[0]\n    for (let i = 0; i < f32.length; i++) {\n      mn = Math.min(mn, f32[i])\n      mx = Math.max(mx, f32[i])\n    }\n    // normalize\n    const scale = 1.0 / (mx - mn)\n    for (let i = 0; i < f32.length; i++) {\n      f32[i] = 1.0 - (f32[i] - mn) * scale\n    }\n    return f32\n  } // readCURV()\n\n  // read freesurfer Annotation file provides vertex colors\n  // https://surfer.nmr.mgh.harvard.edu/fswiki/LabelsClutsAnnotationFiles\n  static readANNOT(buffer: ArrayBuffer, n_vert: number, isReadColortables = false): ANNOT {\n    const view = new DataView(buffer) // ArrayBuffer to dataview\n    // ALWAYS big endian\n    const n_vertex = view.getUint32(0, false)\n    const n_vertexDecimated = this.decimateLayerVertices(n_vertex, n_vert)\n    if (n_vert !== n_vertexDecimated) {\n      throw new Error('ANNOT file has different number of vertices than mesh')\n    }\n    if (buffer.byteLength < 4 + 8 * n_vertex) {\n      throw new Error('ANNOT file smaller than specified')\n    }\n    let pos = 0\n    // reading all floats with .slice() would be faster, but lets handle endian-ness\n    const rgba32 = new Uint32Array(n_vertex)\n    for (let i = 0; i < n_vertex; i++) {\n      const idx = view.getUint32((pos += 4), false)\n      rgba32[idx] = view.getUint32((pos += 4), false)\n    }\n    if (!isReadColortables) {\n      // only read label colors, ignore labels\n      return rgba32\n    }\n    let tag = 0\n    try {\n      tag = view.getInt32((pos += 4), false)\n    } catch (error) {\n      return rgba32\n    }\n    const TAG_OLD_COLORTABLE = 1\n    if (tag !== TAG_OLD_COLORTABLE) {\n      // undocumented old format\n      return rgba32\n    }\n    const ctabversion = view.getInt32((pos += 4), false)\n    if (ctabversion > 0) {\n      // undocumented old format\n      return rgba32\n    }\n    const maxstruc = view.getInt32((pos += 4), false)\n    const len = view.getInt32((pos += 4), false)\n    pos += len\n    const num_entries = view.getInt32((pos += 4), false)\n    if (num_entries < 1) {\n      // undocumented old format\n      return rgba32\n    }\n    // preallocate lookuptable\n    const LUT = {\n      R: Array(maxstruc).fill(0),\n      G: Array(maxstruc).fill(0),\n      B: Array(maxstruc).fill(0),\n      A: Array(maxstruc).fill(0),\n      I: Array(maxstruc).fill(0),\n      labels: Array(maxstruc).fill('')\n    }\n    for (let i = 0; i < num_entries; i++) {\n      const struc = view.getInt32((pos += 4), false)\n      const labelLen = view.getInt32((pos += 4), false)\n      pos += 4\n      let txt = ''\n      for (let c = 0; c < labelLen; c++) {\n        const val = view.getUint8(pos++)\n        if (val === 0) {\n          break\n        }\n        txt += String.fromCharCode(val)\n      }\n      pos -= 4\n      const R = view.getInt32((pos += 4), false)\n      const G = view.getInt32((pos += 4), false)\n      const B = view.getInt32((pos += 4), false)\n      const A = view.getInt32((pos += 4), false)\n      if (struc < 0 || struc >= maxstruc) {\n        log.warn('annot entry out of range')\n        continue\n      }\n      LUT.R[struc] = R\n      LUT.G[struc] = G\n      LUT.B[struc] = B\n      LUT.A[struc] = A\n      LUT.I[struc] = (A << 24) + (B << 16) + (G << 8) + R\n      LUT.labels[struc] = txt\n    }\n    const scalars = new Float32Array(n_vertex)\n    scalars.fill(-1)\n    let nError = 0\n    for (let i = 0; i < n_vert; i++) {\n      const RGB = rgba32[i]\n      for (let c = 0; c < maxstruc; c++) {\n        if (LUT.I[c] === RGB) {\n          scalars[i] = c\n          break\n        }\n      } // for c\n      if (scalars[i] < 0) {\n        nError++\n        scalars[i] = 0\n      }\n    }\n    if (nError > 0) {\n      log.error(`annot vertex colors do not match ${nError} of ${n_vertex} vertices.`)\n    }\n    for (let i = 0; i < maxstruc; i++) {\n      LUT.I[i] = i\n    }\n    const colormapLabel = cmapper.makeLabelLut(LUT)\n    return {\n      scalars,\n      colormapLabel\n    }\n  } // readANNOT()\n\n  // read BrainNet viewer format\n  // https://www.nitrc.org/projects/bnv/\n  static readNV(buffer: ArrayBuffer): DefaultMeshType {\n    // n.b. clockwise triangle winding, indexed from 1\n    const len = buffer.byteLength\n    const bytes = new Uint8Array(buffer)\n    let pos = 0\n    function readStr(): string {\n      while (pos < len && bytes[pos] === 10) {\n        pos++\n      } // skip blank lines\n      const startPos = pos\n      while (pos < len && bytes[pos] !== 10) {\n        pos++\n      }\n      pos++ // skip EOLN\n      if (pos - startPos < 1) {\n        return ''\n      }\n      return new TextDecoder().decode(buffer.slice(startPos, pos - 1))\n    }\n    let nvert = 0 // 173404 346804\n    let ntri = 0\n    let v = 0\n    let t = 0\n    let positions: Float32Array\n    let indices: Uint32Array\n    while (pos < len) {\n      const line = readStr()\n      if (line.startsWith('#')) {\n        continue\n      }\n      const items = line.trim().split(/\\s+/)\n      if (nvert < 1) {\n        nvert = parseInt(items[0])\n        positions = new Float32Array(nvert * 3)\n        continue\n      }\n      if (v < nvert * 3) {\n        positions![v] = parseFloat(items[0])\n        positions![v + 1] = parseFloat(items[1])\n        positions![v + 2] = parseFloat(items[2])\n        v += 3\n        continue\n      }\n      if (ntri < 1) {\n        ntri = parseInt(items[0])\n        indices = new Uint32Array(ntri * 3)\n        continue\n      }\n      if (t >= ntri * 3) {\n        break\n      }\n      indices![t + 2] = parseInt(items[0]) - 1\n      indices![t + 1] = parseInt(items[1]) - 1\n      indices![t + 0] = parseInt(items[2]) - 1\n      t += 3\n    }\n    return {\n      positions: positions!,\n      indices: indices!\n    }\n  } // readNV()\n\n  // read ASCII Patch File format\n  // https://afni.nimh.nih.gov/pub/dist/doc/htmldoc/demos/Bootcamp/CD.html#cd\n  // http://www.grahamwideman.com/gw/brain/fs/surfacefileformats.htm\n  static readASC(buffer: ArrayBuffer): DefaultMeshType {\n    const len = buffer.byteLength\n    const bytes = new Uint8Array(buffer)\n    let pos = 0\n    function readStr(): string {\n      while (pos < len && bytes[pos] === 10) {\n        pos++\n      } // skip blank lines\n      const startPos = pos\n      while (pos < len && bytes[pos] !== 10) {\n        pos++\n      }\n      pos++ // skip EOLN\n      if (pos - startPos < 1) {\n        return ''\n      }\n      return new TextDecoder().decode(buffer.slice(startPos, pos - 1))\n    }\n    let line = readStr() // 1st line: '#!ascii version of lh.pial'\n    if (!line.startsWith('#!ascii')) {\n      log.warn('Invalid ASC mesh')\n    }\n    line = readStr() // 1st line: signature\n    let items = line.trim().split(/\\s+/)\n    const nvert = parseInt(items[0]) // 173404 346804\n    const ntri = parseInt(items[1])\n    const positions = new Float32Array(nvert * 3)\n    let j = 0\n    for (let i = 0; i < nvert; i++) {\n      line = readStr() // 1st line: signature\n      items = line.trim().split(/\\s+/)\n      positions[j] = parseFloat(items[0])\n      positions[j + 1] = parseFloat(items[1])\n      positions[j + 2] = parseFloat(items[2])\n      j += 3\n    }\n    const indices = new Uint32Array(ntri * 3)\n    j = 0\n    for (let i = 0; i < ntri; i++) {\n      line = readStr() // 1st line: signature\n      items = line.trim().split(/\\s+/)\n      indices[j] = parseInt(items[0])\n      indices[j + 1] = parseInt(items[1])\n      indices[j + 2] = parseInt(items[2])\n      j += 3\n    }\n    return {\n      positions,\n      indices\n    }\n  } // readASC()\n\n  // read legacy VTK format\n  static readVTK(buffer: ArrayBuffer): VTK {\n    const len = buffer.byteLength\n    if (len < 20) {\n      throw new Error('File too small to be VTK: bytes = ' + buffer.byteLength)\n    }\n    const bytes = new Uint8Array(buffer)\n    let pos = 0\n    function readStr(isSkipBlank = true): string {\n      if (isSkipBlank) {\n        while (pos < len && bytes[pos] === 10) {\n          pos++\n        }\n      } // skip blank lines\n      const startPos = pos\n      while (pos < len && bytes[pos] !== 10) {\n        pos++\n      }\n      pos++ // skip EOLN\n      if (pos - startPos < 1) {\n        return ''\n      }\n      return new TextDecoder().decode(buffer.slice(startPos, pos - 1))\n    }\n    let line = readStr() // 1st line: signature\n    if (!line.startsWith('# vtk DataFile')) {\n      throw new Error('Invalid VTK mesh')\n    }\n    line = readStr(false) // 2nd line comment, n.b. MRtrix stores empty line\n    line = readStr() // 3rd line ASCII/BINARY\n    if (line.startsWith('ASCII')) {\n      return NVMeshLoaders.readTxtVTK(buffer)\n    } else if (!line.startsWith('BINARY')) {\n      throw new Error('Invalid VTK image, expected ASCII or BINARY ' + line)\n    }\n    line = readStr() // 5th line \"DATASET POLYDATA\"\n    if (!line.includes('POLYDATA')) {\n      throw new Error('Only able to read VTK POLYDATA ' + line)\n    }\n    line = readStr() // 6th line \"POINTS 10261 float\"\n    if (!line.includes('POINTS') || (!line.includes('double') && !line.includes('float'))) {\n      log.warn('Only able to read VTK float or double POINTS' + line)\n    }\n    const isFloat64 = line.includes('double')\n    let items = line.trim().split(/\\s+/)\n    const nvert = parseInt(items[1]) // POINTS 10261 float\n    const nvert3 = nvert * 3\n    const positions = new Float32Array(nvert3)\n    const reader = new DataView(buffer)\n    if (isFloat64) {\n      for (let i = 0; i < nvert3; i++) {\n        positions[i] = reader.getFloat64(pos, false)\n        pos += 8\n      }\n    } else {\n      for (let i = 0; i < nvert3; i++) {\n        positions[i] = reader.getFloat32(pos, false)\n        pos += 4\n      }\n    }\n    line = readStr() // Type, \"LINES 11885 \"\n    items = line.trim().split(/\\s+/)\n    const tris = []\n    if (items[0].includes('LINES')) {\n      const n_count = parseInt(items[1])\n      // tractogaphy data: detect if borked by DiPy\n      const posOK = pos\n      line = readStr() // borked files \"OFFSETS vtktypeint64\"\n      if (line.startsWith('OFFSETS')) {\n        let isInt64 = false\n        if (line.includes('int64')) {\n          isInt64 = true\n        }\n        const offsetPt0 = new Uint32Array(n_count)\n        if (isInt64) {\n          let isOverflowInt32 = false\n          for (let c = 0; c < n_count; c++) {\n            let idx = reader.getInt32(pos, false)\n            if (idx !== 0) {\n              isOverflowInt32 = true\n            }\n            pos += 4\n            idx = reader.getInt32(pos, false)\n            pos += 4\n            offsetPt0[c] = idx\n          }\n          if (isOverflowInt32) {\n            log.warn('int32 overflow: JavaScript does not support int64')\n          }\n        } else {\n          for (let c = 0; c < n_count; c++) {\n            const idx = reader.getInt32(pos, false)\n            pos += 4\n            offsetPt0[c] = idx\n          }\n        }\n        const pts = positions\n        return {\n          pts,\n          offsetPt0\n        }\n      }\n      pos = posOK // valid VTK file\n      let npt = 0\n      const offsetPt0 = []\n      const pts = []\n      offsetPt0.push(npt) // 1st streamline starts at 0\n      for (let c = 0; c < n_count; c++) {\n        const numPoints = reader.getInt32(pos, false)\n        pos += 4\n        npt += numPoints\n        offsetPt0.push(npt)\n        for (let i = 0; i < numPoints; i++) {\n          const idx = reader.getInt32(pos, false) * 3\n          pos += 4\n          pts.push(positions[idx + 0])\n          pts.push(positions[idx + 1])\n          pts.push(positions[idx + 2])\n        } // for numPoints: number of segments in streamline\n      } // for n_count: number of streamlines\n      return {\n        pts: Float32Array.from(pts),\n        offsetPt0: Uint32Array.from(offsetPt0)\n      }\n    } else if (items[0].includes('TRIANGLE_STRIPS')) {\n      const nstrip = parseInt(items[1])\n      for (let i = 0; i < nstrip; i++) {\n        const ntri = reader.getInt32(pos, false) - 2 // -2 as triangle strip is creates pts - 2 faces\n        pos += 4\n        for (let t = 0; t < ntri; t++) {\n          if (t % 2) {\n            // preserve winding order\n            tris.push(reader.getInt32(pos + 8, false))\n            tris.push(reader.getInt32(pos + 4, false))\n            tris.push(reader.getInt32(pos, false))\n          } else {\n            tris.push(reader.getInt32(pos, false))\n            tris.push(reader.getInt32(pos + 4, false))\n            tris.push(reader.getInt32(pos + 8, false))\n          }\n          pos += 4\n        } // for each triangle\n        pos += 8\n      } // for each strip\n    } else if (items[0].includes('POLYGONS')) {\n      const npoly = parseInt(items[1])\n      const byteOffsetAfterPoly = pos\n      const maybeOffsetsLine = readStr()\n      if (maybeOffsetsLine.startsWith('OFFSETS')) {\n        let isInt64 = maybeOffsetsLine.includes('int64')\n        const offset = new Uint32Array(npoly)\n        let is32bitOverflow = false\n        for (let i = 0; i < npoly; i++) {\n          if (isInt64) {\n            if (reader.getInt32(pos, false) !== 0) {\n              is32bitOverflow = true\n            }\n            pos += 4\n          } // skip high 32 bits\n          offset[i] = reader.getInt32(pos, false)\n          pos += 4\n        }\n        if (!Number.isSafeInteger(npoly) || npoly >= 2147483648 || is32bitOverflow) {\n          throw new Error(`values exceed 2GB limit`)\n        }\n        const connLine = readStr()\n        if (!connLine.startsWith('CONNECTIVITY')) {\n          throw new Error('Expected CONNECTIVITY after OFFSETS')\n        }\n        isInt64 = connLine.includes('int64')\n        const numIndices = offset[npoly - 1]\n        const connectivity = new Uint32Array(numIndices)\n        for (let i = 0; i < numIndices; i++) {\n          if (isInt64) {\n            pos += 4\n          }\n          connectivity[i] = reader.getInt32(pos, false)\n          pos += 4\n        }\n\n        for (let i = 0; i < npoly; i++) {\n          const start = i === 0 ? 0 : offset[i - 1]\n          const end = offset[i]\n          for (let t = 1; t < end - start - 1; t++) {\n            tris.push(connectivity[start])\n            tris.push(connectivity[start + t])\n            tris.push(connectivity[start + t + 1])\n          }\n        }\n      } else {\n        // Classic binary VTK format: rewind and parse as before\n        pos = byteOffsetAfterPoly\n        for (let i = 0; i < npoly; i++) {\n          const ntri = reader.getInt32(pos, false) - 2\n          if (i === 0 && ntri > 65535) {\n            throw new Error('Invalid VTK binary polygons using little-endian data (MRtrix)')\n          }\n          pos += 4\n          const fx = reader.getInt32(pos, false)\n          pos += 4\n          let fy = reader.getInt32(pos, false)\n          pos += 4\n          for (let t = 0; t < ntri; t++) {\n            const fz = reader.getInt32(pos, false)\n            pos += 4\n            tris.push(fx, fy, fz)\n            fy = fz\n          }\n        }\n      }\n    } else {\n      throw new Error('Unsupported binary VTK datatype ' + items[0])\n    }\n    const indices = new Uint32Array(tris)\n    return {\n      positions,\n      indices\n    }\n  } // readVTK()\n\n  static readWRL(buffer: ArrayBuffer): DefaultMeshType {\n    const wrlText = new TextDecoder('utf-8').decode(buffer)\n    const coordRegex = /coord\\s+Coordinate\\s*\\{\\s*point\\s*\\[([\\s\\S]*?)\\]/\n    const indexRegex = /coordIndex\\s*\\[([\\s\\S]*?)\\]/\n    const colorRegex = /color\\s+Color\\s*\\{\\s*color\\s*\\[([\\s\\S]*?)\\]/\n    const coordMatch = coordRegex.exec(wrlText)\n    const indexMatch = indexRegex.exec(wrlText)\n    const colorMatch = colorRegex.exec(wrlText)\n\n    if (!coordMatch || !indexMatch) {\n      throw new Error('Invalid WRL file: Could not find vertices or indices.')\n    }\n    // Extract vertex positions\n    const positions = new Float32Array(\n      coordMatch[1]\n        .trim()\n        .split(/[\\s,]+/)\n        .map(Number)\n    )\n    // Extract per-vertex colors (if they exist)\n    let colors: Float32Array | null = null\n    if (colorMatch) {\n      colors = new Float32Array(\n        colorMatch[1]\n          .trim()\n          .split(/[\\s,]+/)\n          .map(Number)\n      )\n      const nVert = positions.length / 3\n      if (colors.length !== nVert * 3) {\n        console.warn(`Unexpected color count: expected ${nVert * 3}, got ${colors.length}`)\n        colors = null // Ignore malformed color data\n      }\n    }\n    // Extract triangle indices (ignoring `-1` separators)\n    const indices = new Uint32Array(\n      indexMatch[1]\n        .trim()\n        .split(/[\\s,]+/)\n        .map(Number)\n        .filter((v) => v !== -1)\n    )\n    return { positions, indices, colors }\n  } // readWRL()\n\n  // read brainsuite DFS format\n  // http://brainsuite.org/formats/dfs/\n  static readDFS(buffer: ArrayBuffer): DefaultMeshType {\n    // Does not play with other formats: vertex positions do not use Aneterior Commissure as origin\n    const reader = new DataView(buffer)\n    const magic = reader.getUint32(0, true) // \"DFS_\"\n    const LE = reader.getUint16(4, true) // \"LE\"\n    if (magic !== 1599292996 || LE !== 17740) {\n      log.warn('Not a little-endian brainsuite DFS mesh')\n    }\n    const hdrBytes = reader.getUint32(12, true)\n    // var mdoffset = reader.getUint32(16, true);\n    // var pdoffset = reader.getUint32(20, true);\n    const nface = reader.getUint32(24, true) // number of triangles\n    const nvert = reader.getUint32(28, true)\n    // var nStrips = reader.getUint32(32, true); //deprecated\n    // var stripSize = reader.getUint32(36, true); //deprecated\n    // var normals = reader.getUint32(40, true);\n    // var uvStart = reader.getUint32(44, true);\n    const vcoffset = reader.getUint32(48, true) // vertexColor offset\n    // var precision = reader.getUint32(52, true);\n    // float64 orientation[4][4]; //4x4 matrix, affine transformation to world coordinates*)\n    let pos = hdrBytes\n    const indices = new Uint32Array(buffer, pos, nface * 3)\n    pos += nface * 3 * 4\n    const positions = new Float32Array(buffer, pos, nvert * 3)\n    // oops, triangle winding opposite of CCW convention\n    for (let i = 0; i < nvert * 3; i += 3) {\n      const tmp = positions[i]\n      positions[i] = positions[i + 1]\n      positions[i + 1] = tmp\n    }\n    let colors\n    if (vcoffset >= 0) {\n      colors = new Float32Array(buffer, vcoffset, nvert * 3)\n    }\n    return {\n      positions,\n      indices,\n      colors\n    }\n  }\n\n  // read surfice MZ3 format\n  // https://github.com/neurolabusc/surf-ice/tree/master/mz3\n  static async readMZ3(buffer: ArrayBuffer, n_vert = 0): Promise<MZ3> {\n    if (buffer.byteLength < 20) {\n      throw new Error('File too small to be mz3: bytes = ' + buffer.byteLength)\n    }\n    let reader = new DataView(buffer)\n    let _buffer = buffer\n\n    // Check for gzip\n    let magic = reader.getUint16(0, true)\n    if (magic === 35615 || magic === 8075) {\n      const raw = await NVUtilities.decompress(new Uint8Array(buffer))\n      reader = new DataView(raw.buffer)\n      magic = reader.getUint16(0, true)\n      _buffer = raw.buffer\n    }\n    const attr = reader.getUint16(2, true)\n    const nface = reader.getUint32(4, true)\n    let nvert = reader.getUint32(8, true)\n    const nskip = reader.getUint32(12, true)\n    utiltiesLogger.debug('MZ3 magic %d attr %d face %d vert %d skip %d', magic, attr, nface, nvert, nskip)\n    if (magic !== 23117) {\n      throw new Error('Invalid MZ3 file')\n    }\n    const isFace = (attr & 1) !== 0\n    const isVert = (attr & 2) !== 0\n    const isRGBA = (attr & 4) !== 0\n    let isSCALAR = (attr & 8) !== 0\n    const isDOUBLE = (attr & 16) !== 0\n    const isAOMAP = (attr & 32) !== 0\n    const isLOOKUP = (attr & 64) !== 0\n    utiltiesLogger.debug(\n      `isFace=${isFace} isVert=${isVert} isRGBA=${isRGBA} isSCALAR=${isSCALAR} isDOUBLE=${isDOUBLE} isAOMAP=${isAOMAP} isLOOKUP=${isLOOKUP}`\n    )\n    if (attr > 127) {\n      throw new Error('Unsupported future version of MZ3 file')\n    }\n\n    let bytesPerScalar = 4\n    if (isDOUBLE) {\n      bytesPerScalar = 8\n    }\n\n    let NSCALAR = 0\n    if (n_vert > 0 && !isFace && nface < 1 && !isRGBA) {\n      isSCALAR = true\n    }\n    if (isSCALAR) {\n      const nv = n_vert || nvert\n      const FSizeWoScalars = 16 + nskip + (isFace ? nface * 12 : 0) + (isVert ? nv * 12 : 0) + (isRGBA ? nv * 4 : 0)\n      const scalarFloats = Math.floor((_buffer.byteLength - FSizeWoScalars) / bytesPerScalar)\n      if (nvert !== n_vert && scalarFloats % n_vert === 0) {\n        nvert = n_vert\n      }\n      NSCALAR = Math.floor(scalarFloats / nvert)\n      if (NSCALAR < 1) {\n        log.warn('Corrupt MZ3: file reports NSCALAR but not enough bytes')\n        isSCALAR = false\n      }\n    }\n\n    if (nvert < 3 && n_vert < 3) {\n      throw new Error('Not a mesh MZ3 file (maybe scalar)')\n    }\n    if (n_vert > 0 && n_vert !== nvert) {\n      log.warn('Layer has ' + nvert + 'vertices, but background mesh has ' + n_vert)\n    }\n\n    let filepos = 16 + nskip\n    const view = new DataView(_buffer)\n\n    let indices: Uint32Array | null = null\n    if (isFace) {\n      indices = new Uint32Array(nface * 3)\n      for (let i = 0; i < nface * 3; i++) {\n        indices[i] = view.getUint32(filepos, true)\n        filepos += 4\n      }\n    }\n\n    let positions: Float32Array | null = null\n    if (isVert) {\n      positions = new Float32Array(nvert * 3)\n      for (let i = 0; i < nvert * 3; i++) {\n        positions[i] = view.getFloat32(filepos, true)\n        filepos += 4\n      }\n    }\n    let colors: Float32Array | null = null\n    if (isRGBA) {\n      colors = new Float32Array(nvert * 3)\n      for (let i = 0; i < nvert; i++) {\n        for (let j = 0; j < 3; j++) {\n          colors[i * 3 + j] = view.getUint8(filepos++) / 255\n        }\n        filepos++ // skip Alpha\n      }\n    }\n    let scalars = new Float32Array()\n    if (isSCALAR && NSCALAR > 0) {\n      if (isDOUBLE) {\n        const flt64 = new Float64Array(NSCALAR * nvert)\n        for (let i = 0; i < NSCALAR * nvert; i++) {\n          flt64[i] = view.getFloat64(filepos, true)\n          filepos += 8\n        }\n        scalars = Float32Array.from(flt64)\n      } else {\n        scalars = new Float32Array(NSCALAR * nvert)\n        for (let i = 0; i < NSCALAR * nvert; i++) {\n          scalars[i] = view.getFloat32(filepos, true)\n          filepos += 4\n        }\n      }\n    }\n    if (n_vert > 0 && isLOOKUP && isSCALAR) {\n      // Read NSKIP bytes after 16-byte header\n      const decoder = new TextDecoder('utf-8')\n      const jsonBytes = new Uint8Array(_buffer, 16, nskip)\n      const jsonText = decoder.decode(jsonBytes)\n      const colormap = JSON.parse(jsonText)\n      const colormapLabel = cmapper.makeLabelLut(colormap)\n      return { scalars, colormapLabel }\n    }\n    if (n_vert > 0 && isRGBA && isSCALAR) {\n      let mx = scalars[0]\n      for (let i = 0; i < nvert; i++) {\n        mx = Math.max(mx, scalars[i])\n      }\n      const Labels: ColorMap = { R: [], G: [], B: [], A: [], I: [], labels: [] }\n      for (let i = 0; i <= mx; i++) {\n        for (let v = 0; v < nvert; v++) {\n          if (i === scalars[v]) {\n            const v3 = v * 3\n            Labels.I.push(i)\n            Labels.R.push(colors![v3] * 255)\n            Labels.G.push(colors![v3 + 1] * 255)\n            Labels.B.push(colors![v3 + 2] * 255)\n            Labels.A.push(255)\n            Labels.labels!.push(`${i}`)\n            break\n          }\n        }\n      }\n      const colormapLabel = cmapper.makeLabelLut(Labels)\n      return { scalars, colormapLabel }\n    }\n    if (n_vert > 0) {\n      return { scalars }\n    }\n    return { positions, indices, scalars, colors }\n  }\n\n  // read PLY format\n  // https://en.wikipedia.org/wiki/PLY_(file_format)\n  static readPLY(buffer: ArrayBuffer): DefaultMeshType {\n    const len = buffer.byteLength\n    const bytes = new Uint8Array(buffer)\n    let pos = 0\n    function readStr(): string {\n      while (pos < len && bytes[pos] === 10) {\n        pos++\n      } // skip blank lines\n      const startPos = pos\n      while (pos < len && bytes[pos] !== 10) {\n        pos++\n      }\n      pos++ // skip EOLN\n      if (pos - startPos < 1) {\n        return ''\n      }\n      return new TextDecoder().decode(buffer.slice(startPos, pos - 1))\n    }\n    let line = readStr() // 1st line: magic 'ply'\n    if (!line.startsWith('ply')) {\n      throw new Error('Not a valid PLY file')\n    }\n    line = readStr() // 2nd line: format 'format binary_little_endian 1.0'\n    const isAscii = line.includes('ascii')\n    function dataTypeBytes(str: string): number {\n      if (str === 'char' || str === 'uchar' || str === 'int8' || str === 'uint8') {\n        return 1\n      }\n      if (str === 'short' || str === 'ushort' || str === 'int16' || str === 'uint16') {\n        return 2\n      }\n      if (\n        str === 'int' ||\n        str === 'uint' ||\n        str === 'int32' ||\n        str === 'uint32' ||\n        str === 'float' ||\n        str === 'float32'\n      ) {\n        return 4\n      }\n      if (str === 'double') {\n        return 8\n      }\n      throw new Error('Unknown data type: ' + str)\n    }\n    const isLittleEndian = line.includes('binary_little_endian')\n    let nvert = 0\n    let vertIsDouble = false\n    let vertStride = 0 // e.g. if each vertex stores xyz as float32 and rgb as uint8, stride is 15\n    let indexStrideBytes = 0 // \"list uchar int vertex_indices\" has stride 1 + 3 * 4\n    let indexCountBytes = 0 // if \"property list uchar int vertex_index\" this is 1 (uchar)\n    let indexBytes = 0 // if \"property list uchar int vertex_index\" this is 4 (int)\n    let indexPaddingBytes = 0\n    let nIndexPadding = 0\n    let nface = 0\n    while (pos < len && !line.startsWith('end_header')) {\n      line = readStr()\n      if (line.startsWith('comment')) {\n        continue\n      }\n      // line = line.replaceAll('\\t', ' '); // ?are tabs valid white space?\n      let items = line.split(/\\s/)\n      if (line.startsWith('element vertex')) {\n        nvert = parseInt(items[items.length - 1])\n        // read vertex properties:\n        line = readStr()\n        items = line.split(/\\s/)\n        while (line.startsWith('property')) {\n          const datatype = items[1]\n          if (items[2] === 'x' && datatype.startsWith('double')) {\n            vertIsDouble = true\n          } else if (items[2] === 'x' && !datatype.startsWith('float')) {\n            log.error('Error: expect ply xyz to be float or double: ' + line)\n          }\n          vertStride += dataTypeBytes(datatype)\n          line = readStr()\n          items = line.split(/\\s/)\n        }\n      }\n      if (line.startsWith('element face')) {\n        nface = parseInt(items[items.length - 1])\n        // read face properties:\n        line = readStr()\n        items = line.split(/\\s/)\n        while (line.startsWith('property')) {\n          if (items[1] === 'list') {\n            indexCountBytes = dataTypeBytes(items[2])\n            indexBytes = dataTypeBytes(items[3])\n            indexStrideBytes += indexCountBytes + 3 * indexBytes // e.g. \"uchar int\" is 1 + 3 * 4 bytes\n          } else {\n            const bytes = dataTypeBytes(items[1])\n            indexStrideBytes += bytes\n            if (indexBytes === 0) {\n              // this index property is BEFORE the list\n              indexPaddingBytes += bytes\n              nIndexPadding++\n            }\n          }\n          line = readStr()\n          items = line.split(/\\s/)\n        }\n      }\n    } // while reading all lines of header\n    if (isAscii) {\n      if (nface < 1) {\n        log.error(`Malformed ply format: faces ${nface} `)\n      }\n      const positions = new Float32Array(nvert * 3)\n      let v = 0\n      for (let i = 0; i < nvert; i++) {\n        line = readStr()\n        const items = line.split(/\\s/)\n        positions[v] = parseFloat(items[0])\n        positions[v + 1] = parseFloat(items[1])\n        positions[v + 2] = parseFloat(items[2])\n        v += 3\n      }\n      let indices = new Uint32Array(nface * 3)\n      let f = 0\n      for (let i = 0; i < nface; i++) {\n        line = readStr()\n        const items = line.split(/\\s/)\n        const nTri = parseInt(items[nIndexPadding]) - 2\n        if (nTri < 1) {\n          break\n        } // error\n        if (f + nTri * 3 > indices.length) {\n          const c = new Uint32Array(indices.length + indices.length)\n          c.set(indices)\n          indices = c.slice()\n        }\n        const idx0 = parseInt(items[nIndexPadding + 1])\n        let idx1 = parseInt(items[nIndexPadding + 2])\n        for (let j = 0; j < nTri; j++) {\n          const idx2 = parseInt(items[nIndexPadding + 3 + j])\n          indices[f + 0] = idx0\n          indices[f + 1] = idx1\n          indices[f + 2] = idx2\n          idx1 = idx2\n          f += 3\n        }\n      }\n      if (indices.length !== f) {\n        indices = indices.slice(0, f)\n      }\n      return {\n        positions,\n        indices\n      }\n    } // if isAscii\n    if (vertStride < 12 || indexCountBytes < 1 || indexBytes < 1 || nface < 1) {\n      log.warn(\n        `Malformed ply format: stride ${vertStride} count ${indexCountBytes} iBytes ${indexBytes} iStrideBytes ${indexStrideBytes} iPadBytes ${indexPaddingBytes} faces ${nface}`\n      )\n    }\n    const reader = new DataView(buffer)\n    let positions\n    if (pos % 4 === 0 && vertStride === 12 && isLittleEndian) {\n      // optimization: vertices only store xyz position as float\n      // n.b. start offset of Float32Array must be a multiple of 4\n      positions = new Float32Array(buffer, pos, nvert * 3)\n      pos += nvert * vertStride\n    } else {\n      positions = new Float32Array(nvert * 3)\n      let v = 0\n      for (let i = 0; i < nvert; i++) {\n        if (vertIsDouble) {\n          positions[v] = reader.getFloat64(pos, isLittleEndian)\n          positions[v + 1] = reader.getFloat64(pos + 8, isLittleEndian)\n          positions[v + 2] = reader.getFloat64(pos + 16, isLittleEndian)\n        } else {\n          positions[v] = reader.getFloat32(pos, isLittleEndian)\n          positions[v + 1] = reader.getFloat32(pos + 4, isLittleEndian)\n          positions[v + 2] = reader.getFloat32(pos + 8, isLittleEndian)\n        }\n        v += 3\n        pos += vertStride\n      }\n    }\n    const indices = new Uint32Array(nface * 3) // assume triangular mesh: pre-allocation optimization\n    let isTriangular = true\n    let j = 0\n    if (indexCountBytes === 1 && indexBytes === 4 && indexStrideBytes === 13) {\n      // default mode: \"list uchar int vertex_indices\" without other properties\n      for (let i = 0; i < nface; i++) {\n        const nIdx = reader.getUint8(pos)\n        pos += indexCountBytes\n        if (nIdx !== 3) {\n          isTriangular = false\n        }\n        indices[j] = reader.getUint32(pos, isLittleEndian)\n        pos += 4\n        indices[j + 1] = reader.getUint32(pos, isLittleEndian)\n        pos += 4\n        indices[j + 2] = reader.getUint32(pos, isLittleEndian)\n        pos += 4\n        j += 3\n      }\n    } else {\n      // not 1:4 index data\n      let startPos = pos\n      for (let i = 0; i < nface; i++) {\n        pos = startPos + indexPaddingBytes\n        let nIdx = 0\n        if (indexCountBytes === 1) {\n          nIdx = reader.getUint8(pos)\n        } else if (indexCountBytes === 2) {\n          nIdx = reader.getUint16(pos, isLittleEndian)\n        } else if (indexCountBytes === 4) {\n          nIdx = reader.getUint32(pos, isLittleEndian)\n        }\n        pos += indexCountBytes\n        if (nIdx !== 3) {\n          isTriangular = false\n        }\n        for (let k = 0; k < 3; k++) {\n          if (indexBytes === 1) {\n            indices[j] = reader.getUint8(pos)\n          } else if (indexBytes === 2) {\n            indices[j] = reader.getUint16(pos, isLittleEndian)\n          } else if (indexBytes === 4) {\n            indices[j] = reader.getUint32(pos, isLittleEndian)\n          }\n          j++\n          pos += indexBytes\n        }\n        startPos += indexStrideBytes\n      } // for each face\n    } // if not 1:4 datatype\n    if (!isTriangular) {\n      log.warn('Only able to read PLY meshes limited to triangles.')\n    }\n    return {\n      positions,\n      indices\n    }\n  } // readPLY()\n\n  // FreeSurfer can convert meshes to ICO/TRI format text files\n  // https://github.com/dfsp-spirit/freesurferformats/blob/434962608108c75d4337d5e7a5096e3bd4ee6ee6/R/read_fs_surface.R#L1090\n  // detect TRI format that uses same extension\n  // http://paulbourke.net/dataformats/tri/\n  static readICO(buffer: ArrayBuffer): DefaultMeshType {\n    const enc = new TextDecoder('utf-8')\n    const txt = enc.decode(buffer)\n    const lines = txt.split('\\n')\n    let header = lines[0].trim().split(/\\s+/)\n    // read line 0: header\n    // FreeSurfer header has one item: [0]'num_verts'\n    // Bourke header has 2 items: [0]'num_verts', [1]'num_faces'\n    if (header.length > 1) {\n      log.warn('This is not a valid FreeSurfer ICO/TRI mesh.')\n    }\n    const num_v = parseInt(header[0])\n    // read vertices: each line has 4 values: index, x, y, z\n    const positions = new Float32Array(num_v * 3)\n    // let v = 0;\n    let line = 1 // line 0 is header\n    for (let i = 0; i < num_v; i++) {\n      const items = lines[line].trim().split(/\\s+/)\n      line++\n      // idx is indexed from 1, not 0\n      let idx = parseInt(items[0]) - 1\n      const x = parseFloat(items[1])\n      const y = parseFloat(items[2])\n      const z = parseFloat(items[3])\n      if (idx < 0 || idx >= num_v) {\n        log.error('ICO vertices corrupted')\n        break\n      }\n      idx *= 3\n      positions[idx] = x\n      positions[idx + 1] = y\n      positions[idx + 2] = z\n    } // read all vertices\n    // read faces\n    header = lines[line].trim().split(/\\s+/)\n    line++\n    const num_f = parseInt(header[0])\n    const indices = new Uint32Array(num_f * 3)\n    for (let i = 0; i < num_f; i++) {\n      const items = lines[line].trim().split(/\\s+/)\n      line++\n      // all values indexed from 1, not 0\n      let idx = parseInt(items[0]) - 1\n      const x = parseInt(items[1]) - 1\n      const y = parseInt(items[2]) - 1\n      const z = parseInt(items[3]) - 1\n      if (idx < 0 || idx >= num_f) {\n        log.error('ICO indices corrupted')\n        break\n      }\n      idx *= 3\n      indices[idx] = x\n      indices[idx + 1] = y\n      indices[idx + 2] = z\n    } // read all faces\n    // FreeSurfer seems to enforce clockwise winding: reverse to CCW\n    for (let j = 0; j < indices.length; j += 3) {\n      const tri = indices[j]\n      indices[j] = indices[j + 1]\n      indices[j + 1] = tri\n    }\n    return {\n      positions,\n      indices\n    }\n  } // readICO()\n\n  // While BYU and FreeSurfer GEO are related\n  // - BYU can have multiple parts\n  // - BYU faces not always triangular\n  // http://www.grahamwideman.com/gw/brain/fs/surfacefileformats.htm#GeoFile\n  // http://www.eg-models.de/formats/Format_Byu.html\n  // https://github.com/dfsp-spirit/freesurferformats/blob/dafaf88a601dac90fa3c9aae4432f003f5344546/R/read_fs_surface.R#L924\n  // https://github.com/dfsp-spirit/freesurferformats/blob/434962608108c75d4337d5e7a5096e3bd4ee6ee6/R/read_fs_surface.R#L1144\n  // n.b. AFNI uses the '.g' extension for this format 'ConvertSurface  -i_gii L.surf.gii -o_byu L'\n  static readGEO(buffer: ArrayBuffer, isFlipWinding = false): DefaultMeshType {\n    const enc = new TextDecoder('utf-8')\n    const txt = enc.decode(buffer)\n    const lines = txt.split('\\n')\n    const header = lines[0].trim().split(/\\s+/)\n    // read line 0: header\n    // header[0]='nparts', [1]'npoints/vertices', [2]'npolys/faces', [3]'nconnects'\n    const num_p = parseInt(header[0])\n    let num_v = parseInt(header[1])\n    let num_f = parseInt(header[2])\n    const num_c = parseInt(header[3])\n    if (num_p > 1 || num_c !== num_f * 3) {\n      log.warn('Multi-part BYU/GEO header or not a triangular mesh.')\n    }\n    // skip line 1: it is redundant (contains number of faces once more)\n    // next read the vertices (points)\n    const pts = []\n    num_v *= 3 // each vertex has three components (x,y,z)\n    let v = 0\n    let line = 2 // line 0 and 1 are header\n    while (v < num_v) {\n      const items = lines[line].trim().split(/\\s+/)\n      line++\n      for (let i = 0; i < items.length; i++) {\n        pts.push(parseFloat(items[i]))\n        v++\n        if (v >= num_v) {\n          break\n        }\n      } // for each item\n    } // read all vertices\n    // next read faces (triangles)\n    const t: number[] = []\n    num_f *= 3 // each triangle has three vertices (i,j,k)\n    let f = 0\n    while (f < num_f) {\n      const items = lines[line].trim().split(/\\s+/)\n      line++\n      for (let i = 0; i < items.length; i++) {\n        t.push(Math.abs(parseInt(items[i])) - 1)\n        f++\n        if (f >= num_f) {\n          break\n        }\n      } // for each item\n    } // read all faces\n    // FreeSurfer seems to enforce clockwise winding: reverse to CCW\n    if (isFlipWinding) {\n      for (let j = 0; j < t.length; j += 3) {\n        const tri = t[j]\n        t[j] = t[j + 1]\n        t[j + 1] = tri\n      }\n    }\n    // return results\n    const positions = new Float32Array(pts)\n    const indices = new Uint32Array(t)\n    return {\n      positions,\n      indices\n    }\n  } // readGEO()\n\n  // read OFF format\n  // https://en.wikipedia.org/wiki/OFF_(file_format)\n  static readOFF(buffer: ArrayBuffer): DefaultMeshType {\n    const enc = new TextDecoder('utf-8')\n    const txt = enc.decode(buffer)\n    const lines = txt.split('\\n')\n    // var n = lines.length;\n    const pts = []\n    const t = []\n    let i = 0\n    // first line signature \"OFF\", but R freesurfer package uses \"# OFF\"\n    if (!lines[i].includes('OFF')) {\n      log.warn('File does not start with OFF')\n    } else {\n      i++\n    }\n    let items = lines[i].trim().split(/\\s+/)\n    const num_v = parseInt(items[0])\n    const num_f = parseInt(items[1])\n    i++\n    for (let j = 0; j < num_v; j++) {\n      const str = lines[i]\n      items = str.trim().split(/\\s+/)\n      pts.push(parseFloat(items[0]))\n      pts.push(parseFloat(items[1]))\n      pts.push(parseFloat(items[2]))\n      i++\n    }\n    for (let j = 0; j < num_f; j++) {\n      const str = lines[i]\n      items = str.trim().split(/\\s+/)\n      const n = parseInt(items[0])\n      if (n !== 3) {\n        log.warn('Only able to read OFF files with triangular meshes')\n      }\n      t.push(parseInt(items[1]))\n      t.push(parseInt(items[2]))\n      t.push(parseInt(items[3]))\n      i++\n    }\n    const positions = new Float32Array(pts)\n    const indices = new Uint32Array(t)\n    return {\n      positions,\n      indices\n    }\n  } // readOFF()\n\n  static readOBJMNI(buffer: ArrayBuffer): DefaultMeshType {\n    // Support MNI 'P'olygon mesh format\n    // n.b. uses same .obj extension as WaveFront OBJ meshes\n    // https://bigbrain.loris.ca/main.php?test_name=brainsurfaces\n    // http://www.bic.mni.mcgill.ca/users/mishkin/mni_obj_format.pdf\n    // https://pages.stat.wisc.edu/~mchung/softwares/mesh/mesh.html\n    // https://github.com/aces/brainbrowser/tree/master\n    const enc = new TextDecoder('utf-8')\n    const txt = enc.decode(buffer)\n    const items = txt.trim().split(/\\s*,\\s*|\\s+/)\n    if (items.length < 1 || items[0] !== 'P') {\n      log.warn('This is not a valid MNI OBJ mesh.')\n    }\n    let j = 6\n    const nVert = parseInt(items[j++])\n    const nVertX3 = nVert * 3\n    const positions = new Float32Array(nVertX3)\n    for (let i = 0; i < nVertX3; i++) {\n      positions[i] = parseFloat(items[j++])\n    }\n    j += nVertX3\n    const nTri = parseInt(items[j++])\n    const colour_flag = parseInt(items[j++])\n    if (nTri < 1 || colour_flag < 0 || colour_flag > 2) {\n      log.warn('This is not a valid MNI OBJ mesh.')\n    }\n    let num_c = 1\n    if (colour_flag === 1) {\n      num_c = nTri\n    } else if (colour_flag === 1) {\n      num_c = nVert\n    }\n    j += num_c * 4\n    j += nTri\n    const nTriX3 = nTri * 3\n    const indices = new Uint32Array(nTriX3)\n    for (let i = 0; i < nTriX3; i++) {\n      indices[i] = parseInt(items[j++])\n    }\n    return {\n      positions,\n      indices\n    }\n  } // readOBJMNI()\n\n  static async readOBJ(buffer: ArrayBuffer): Promise<DefaultMeshType> {\n    // WaveFront OBJ format\n    const headerBytes = new Uint8Array(buffer, 0, 2)\n    if (headerBytes[0] === 0x1f && headerBytes[1] === 0x8b) {\n      // gzip signature 0x1F8B in little and big endian\n      buffer = await NVUtilities.decompressToBuffer(new Uint8Array(buffer))\n    }\n    const enc = new TextDecoder('utf-8')\n    const txt = enc.decode(buffer)\n    if (txt[0] === 'P') {\n      return this.readOBJMNI(buffer)\n    }\n    const lines = txt.split('\\n')\n    const n = lines.length\n    const pts = []\n    const tris = []\n    for (let i = 0; i < n; i++) {\n      const str = lines[i]\n      if (str[0] === 'v' && str[1] === ' ') {\n        // 'v ' but not 'vt' or 'vn'\n        const items = str.trim().split(/\\s+/)\n        pts.push(parseFloat(items[1]))\n        pts.push(parseFloat(items[2]))\n        pts.push(parseFloat(items[3]))\n        // v 0 -0.5 -0\n      }\n      if (str[0] === 'f') {\n        const items = str.trim().split(/\\s+/)\n        const new_t = items.length - 3 // number of new triangles created\n        if (new_t < 1) {\n          break\n        } // error\n        let tn = items[1].split('/')\n        const t0 = parseInt(tn[0]) - 1 // first vertex\n        tn = items[2].split('/')\n        let tprev = parseInt(tn[0]) - 1 // previous vertex\n        for (let j = 0; j < new_t; j++) {\n          tn = items[3 + j].split('/')\n          const tcurr = parseInt(tn[0]) - 1 // current vertex\n          tris.push(t0)\n          tris.push(tprev)\n          tris.push(tcurr)\n          tprev = tcurr\n        }\n      }\n    } // for all lines\n    const positions = new Float32Array(pts)\n    const indices = new Uint32Array(tris)\n    // next vertex indices are supposed to be from 1, not 0\n    let min = indices[0]\n    let max = indices[0]\n    for (let i = 1; i < indices.length; i++) {\n      if (indices[i] < min) {\n        min = indices[i]\n      }\n      if (indices[i] > max) {\n        max = indices[i]\n      }\n    }\n    if (max - min + 1 > positions.length / 3) {\n      throw new Error('Not a valid OBJ file')\n    }\n    for (let i = 0; i < indices.length; i++) {\n      indices[i] -= min\n    }\n    return {\n      positions,\n      indices\n    }\n  } // readOBJ()\n\n  // read FreeSurfer big endian format\n  static readFreeSurfer(buffer: ArrayBuffer): DefaultMeshType {\n    const bytes = new Uint8Array(buffer)\n    if (bytes[0] === 35 && bytes[1] === 33 && bytes[2] === 97) {\n      return NVMeshLoaders.readASC(buffer) // \"#!ascii version\"\n    }\n    const view = new DataView(buffer) // ArrayBuffer to dataview\n    const sig0 = view.getUint32(0, false)\n    const sig1 = view.getUint32(4, false)\n    if (sig0 !== 4294966883 || sig1 !== 1919246708) {\n      utiltiesLogger.debug('Unable to recognize file type: does not appear to be FreeSurfer format.')\n    }\n    let offset = 0\n    while (view.getUint8(offset) !== 10) {\n      offset++\n    }\n    offset += 2\n    let nv = view.getUint32(offset, false) // number of vertices\n    offset += 4\n    let nf = view.getUint32(offset, false) // number of faces\n    offset += 4\n    nv *= 3 // each vertex has 3 positions: XYZ\n    const positions = new Float32Array(nv)\n    for (let i = 0; i < nv; i++) {\n      positions[i] = view.getFloat32(offset, false)\n      offset += 4\n    }\n    nf *= 3 // each triangle face indexes 3 triangles\n    const indices = new Uint32Array(nf)\n    for (let i = 0; i < nf; i++) {\n      indices[i] = view.getUint32(offset, false)\n      offset += 4\n    }\n    // read undocumented footer\n    // https://github.com/nipy/nibabel/blob/8fea2a8e50aaf4d8b0d4bfff7a21b132914120ee/nibabel/freesurfer/io.py#L58C5-L58C9\n    const head0 = view.getUint32(offset, false)\n    offset += 4\n    let isHeadOK = head0 === 20\n    if (!isHeadOK) {\n      // read two more int32s\n      const head1 = view.getUint32(offset, false)\n      offset += 4\n      const head2 = view.getUint32(offset, false)\n      offset += 4\n      isHeadOK = head0 === 2 && head1 === 0 && head2 === 20\n    }\n    if (!isHeadOK) {\n      log.warn('Unknown FreeSurfer Mesh extension code.')\n    } else {\n      const footer = new TextDecoder().decode(buffer.slice(offset)).trim()\n      const strings = footer.split('\\n')\n      for (let s = 0; s < strings.length; s++) {\n        if (!strings[s].startsWith('cras')) {\n          continue\n        }\n        const cras = strings[s].split('=')[1].trim()\n        const FreeSurferTranlate = cras.split(' ').map(Number)\n        const nvert = Math.floor(positions.length / 3)\n        let i = 0\n        for (let v = 0; v < nvert; v++) {\n          positions[i] += FreeSurferTranlate[0]\n          i++\n          positions[i] += FreeSurferTranlate[1]\n          i++\n          positions[i] += FreeSurferTranlate[2]\n          i++\n        }\n      }\n    }\n    return {\n      positions,\n      indices\n    }\n  } // readFreeSurfer()\n\n  // read brainvoyager SRF format\n  // https://support.brainvoyager.com/brainvoyager/automation-development/84-file-formats/344-users-guide-2-3-the-format-of-srf-files\n  static async readSRF(buffer: ArrayBuffer): Promise<DefaultMeshType> {\n    const bytes = new Uint8Array(buffer)\n    if (bytes[0] === 35 && bytes[1] === 33 && bytes[2] === 97) {\n      // .srf also used for freesurfer https://brainder.org/research/brain-for-blender/\n      return NVMeshLoaders.readASC(buffer) // \"#!ascii version\"\n    }\n    if (bytes[0] === 31 && bytes[1] === 139) {\n      // handle .srf.gz\n      const raw = await NVUtilities.decompress(new Uint8Array(buffer))\n      buffer = raw.buffer\n    }\n    const reader = new DataView(buffer)\n    const ver = reader.getFloat32(0, true)\n    const nVert = reader.getUint32(8, true)\n    const nTri = reader.getUint32(12, true)\n    const oriX = reader.getFloat32(16, true)\n    const oriY = reader.getFloat32(20, true)\n    const oriZ = reader.getFloat32(24, true)\n    const positions = new Float32Array(nVert * 3)\n    // BrainVoyager does not use Talairach coordinates for XYZ!\n    // read X component of each vertex\n    let pos = 28\n    let j = 1 // BrainVoyager X is Talairach Y\n    for (let i = 0; i < nVert; i++) {\n      positions[j] = -reader.getFloat32(pos, true) + oriX\n      j += 3 // read one of 3 components: XYZ\n      pos += 4 // read one float32\n    }\n    // read Y component of each vertex\n    j = 2 // BrainVoyager Y is Talairach Z\n    for (let i = 0; i < nVert; i++) {\n      positions[j] = -reader.getFloat32(pos, true) + oriY\n      j += 3 // read one of 3 components: XYZ\n      pos += 4 // read one float32\n    }\n    // read Z component of each vertex\n    j = 0 // BrainVoyager Z is Talairach X\n    for (let i = 0; i < nVert; i++) {\n      positions[j] = -reader.getFloat32(pos, true) + oriZ\n      j += 3 // read one of 3 components: XYZ\n      pos += 4 // read one float32\n    }\n    // not sure why normals are stored, does bulk up file size\n    pos = 28 + 4 * 6 * nVert // each vertex has 6 float32s: XYZ for position and normal\n    // read concave and convex colors:\n    const rVex = reader.getFloat32(pos, true)\n    const gVex = reader.getFloat32(pos + 4, true)\n    const bVex = reader.getFloat32(pos + 8, true)\n    const rCave = reader.getFloat32(pos + 16, true)\n    const gCave = reader.getFloat32(pos + 20, true)\n    const bCave = reader.getFloat32(pos + 24, true)\n    pos += 8 * 4 // skip 8 floats (RGBA convex/concave)\n    // read per-vertex colors\n    const colors = new Float32Array(nVert * 3)\n    const colorsIdx = new Uint32Array(buffer, pos, nVert)\n    j = 0 // convert RGBA -> RGB\n    for (let i = 0; i < nVert; i++) {\n      const c = colorsIdx[i]\n      if (c > 1056964608) {\n        colors[j + 0] = ((c >> 16) & 0xff) / 255\n        colors[j + 1] = ((c >> 8) & 0xff) / 255\n        colors[j + 2] = (c & 0xff) / 255\n      }\n      if (c === 0) {\n        // convex\n        colors[j + 0] = rVex\n        colors[j + 1] = gVex\n        colors[j + 2] = bVex\n      }\n      if (c === 1) {\n        // concave\n        colors[j + 0] = rCave\n        colors[j + 1] = gCave\n        colors[j + 2] = bCave\n      }\n      j += 3\n    }\n    pos += nVert * 4 // MeshColor, sequence of color indices\n    // not sure why nearest neighbors are stored, slower and bigger files\n    for (let i = 0; i < nVert; i++) {\n      const nNearest = reader.getUint32(pos, true)\n      pos += 4 + 4 * nNearest\n    }\n    const indices = new Uint32Array(nTri * 3)\n    for (let i = 0; i < nTri * 3; i++) {\n      indices[i] = reader.getInt32(pos, true)\n      pos += 4\n    }\n    if (ver !== 4) {\n      log.warn('Not valid SRF')\n    }\n\n    return {\n      positions,\n      indices,\n      colors\n    }\n  } // readSRF()\n\n  // read STL ASCII format file\n  // http://paulbourke.net/dataformats/stl/\n  static readTxtSTL(buffer: ArrayBuffer): DefaultMeshType {\n    const enc = new TextDecoder('utf-8')\n    const txt = enc.decode(buffer)\n    const lines = txt.split('\\n')\n    if (!lines[0].startsWith('solid')) {\n      throw new Error('Not a valid STL file')\n    }\n    const pts = []\n    for (let i = 1; i < lines.length; i++) {\n      if (!lines[i].includes('vertex')) {\n        continue\n      }\n      const items = lines[i].trim().split(/\\s+/)\n      for (let j = 1; j < items.length; j++) {\n        pts.push(parseFloat(items[j]))\n      }\n    }\n    const npts = Math.floor(pts.length / 3) // each vertex has x,y,z\n    if (npts * 3 !== pts.length) {\n      throw new Error('Unable to parse ASCII STL file.')\n    }\n    const positions = new Float32Array(pts)\n    const indices = new Uint32Array(npts)\n    for (let i = 0; i < npts; i++) {\n      indices[i] = i\n    }\n    return {\n      positions,\n      indices\n    }\n  } // readTxtSTL()\n\n  // read STL format, nb this format does not reuse vertices\n  // https://en.wikipedia.org/wiki/STL_(file_format)\n  static readSTL(buffer: ArrayBuffer): DefaultMeshType {\n    if (buffer.byteLength < 80 + 4 + 50) {\n      throw new Error('File too small to be STL: bytes = ' + buffer.byteLength)\n    }\n    const reader = new DataView(buffer)\n    const sig = reader.getUint32(0, true)\n    if (sig === 1768714099) {\n      return NVMeshLoaders.readTxtSTL(buffer)\n    }\n    const ntri = reader.getUint32(80, true)\n    const ntri3 = 3 * ntri\n    if (buffer.byteLength < 80 + 4 + ntri * 50) {\n      throw new Error('STL file too small to store triangles = ' + ntri)\n    }\n    const indices = new Uint32Array(ntri3)\n    const positions = new Float32Array(ntri3 * 3)\n    let pos = 80 + 4 + 12\n    let v = 0 // vertex\n    for (let i = 0; i < ntri; i++) {\n      for (let j = 0; j < 9; j++) {\n        positions[v] = reader.getFloat32(pos, true)\n        v += 1\n        pos += 4\n      }\n      pos += 14 // 50 bytes for triangle, only 36 used for position\n    }\n    for (let i = 0; i < ntri3; i++) {\n      indices[i] = i\n    }\n    return {\n      positions,\n      indices\n    }\n  } // readSTL()\n\n  static decimateLayerVertices(nVertLayer: number, nVertMesh: number): number {\n    // downsample layer vertices if the mesh has been decimated\n    if (nVertLayer % nVertMesh === 0) {\n      return nVertLayer\n    }\n    const V0 = 12\n    const orderLayer = Math.round(Math.log((nVertLayer - 2) / (V0 - 2)) / Math.log(4))\n    const orderMesh = Math.round(Math.log((nVertMesh - 2) / (V0 - 2)) / Math.log(4))\n    // sanity check\n    const nVLayer = Math.pow(4, orderLayer) * (V0 - 2) + 2\n    const nVMesh = Math.pow(4, orderMesh) * (V0 - 2) + 2\n    if (nVLayer !== nVertLayer || nVMesh !== nVertMesh) {\n      return nVertLayer\n    }\n    return nVertMesh\n  }\n\n  // read NIfTI2 format with embedded CIfTI\n  // this variation very specific to connectome workbench\n  // https://brainder.org/2015/04/03/the-nifti-2-file-format/\n  static async readNII2(\n    buffer: ArrayBuffer,\n    n_vert = 0,\n    anatomicalStructurePrimary = ''\n  ): Promise<Int32Array | Float32Array | Int16Array | Uint8Array> {\n    let scalars: Float32Array | Int32Array | Int16Array | Uint8Array = new Float32Array()\n    const len = buffer.byteLength\n    let isLittleEndian = true\n    const reader = new DataView(buffer)\n    let magic = reader.getUint16(0, isLittleEndian)\n    if (magic === 469893120) {\n      isLittleEndian = false\n      magic = reader.getUint16(0, isLittleEndian)\n    }\n    if (magic !== 540) {\n      throw new Error('Not a valid NIfTI-2 dataset')\n    }\n    const voxoffset = Number(reader.getBigInt64(168, isLittleEndian))\n    const scl_slope = reader.getFloat64(176, isLittleEndian)\n    const scl_inter = reader.getFloat64(184, isLittleEndian)\n    if (scl_slope !== 1 || scl_inter !== 0) {\n      log.warn('ignoring scale slope and intercept')\n    }\n    const intent_code = reader.getUint32(504, isLittleEndian)\n    const datatype = reader.getUint16(12, isLittleEndian)\n    if (datatype !== 2 && datatype !== 4 && datatype !== 8 && datatype !== 16) {\n      throw new Error('Unsupported NIfTI datatype ' + datatype)\n    }\n    let nvert = 1\n    const dim = [1, 1, 1, 1, 1, 1, 1, 1]\n    for (let i = 1; i < 8; i++) {\n      dim[i] = Math.max(Number(reader.getBigInt64(16 + i * 8, isLittleEndian)), 1)\n      nvert *= dim[i]\n    }\n    if (intent_code >= 3000 && intent_code <= 3099 && voxoffset > 580) {\n      // CIFTI ConnDenseScalar\n      let indexOffset = 0\n      let indexCount = 0\n      let surfaceNumberOfVertices = 0\n      let brainStructure = ''\n      let vertexIndices: Uint32Array = new Uint32Array()\n      const bytes = new Uint8Array(buffer)\n      let pos = 552\n\n      function readStrX(): string {\n        while (pos < len && bytes[pos] === 10) {\n          pos++\n        } // skip blank lines\n        const startPos = pos\n        while (pos < len && bytes[pos] !== 10) {\n          pos++\n        }\n        pos++ // skip EOLN\n        if (pos - startPos < 1) {\n          return ''\n        }\n        return new TextDecoder().decode(buffer.slice(startPos, pos - 1)).trim()\n      }\n\n      function readStr(): string {\n        // concatenate lines to return tag <...>\n        let line = readStrX()\n        if (!line.startsWith('<') || line.endsWith('>')) {\n          return line\n        }\n        while (pos < len && !line.endsWith('>')) {\n          line += readStrX()\n        }\n        return line\n      }\n      let line: string\n\n      function readNumericTag(TagName: string, asString = false): string | number {\n        // Tag 'Dim1' will return 3 for Dim1=\"3\"\n        const tpos = line.indexOf(TagName)\n        if (tpos < 0) {\n          return 1\n        }\n        const spos = line.indexOf('\"', tpos) + 1\n        const epos = line.indexOf('\"', spos)\n        const str = line.slice(spos, epos)\n        if (asString) {\n          return str\n        }\n        return parseInt(str)\n      } // readNumericTag\n\n      const nFrame4D = dim[5] // number of timepoints/frames per vertex\n      const scalars = new Float32Array(n_vert * nFrame4D)\n\n      // eslint-disable-next-line no-unmodified-loop-condition -- pos is modified within readStr\n      while (pos < len) {\n        line = readStr()\n        if (line.includes('</CIFTI>')) {\n          break\n        }\n        if (line.includes('<BrainModel')) {\n          const nv = readNumericTag('SurfaceNumberOfVertices=') as number\n          const bStruct = (readNumericTag('BrainStructure=', true) as string).toUpperCase()\n          if (nv % n_vert !== 0) {\n            continue\n          }\n          // a single CIfTI file can contain multiple structures, but only one structure per mesh\n          // The big kludge: try to find CIfTI structure that matches GIfTI mesh\n          let isMatch = false\n          if (anatomicalStructurePrimary.includes('CORTEX') && bStruct.includes('CORTEX')) {\n            isMatch = true\n          }\n          // to do: other anatomy: cerebellum\n          if (!isMatch) {\n            continue\n          }\n          isMatch = false\n          if (anatomicalStructurePrimary.includes('LEFT') && bStruct.includes('LEFT')) {\n            isMatch = true\n          }\n          if (anatomicalStructurePrimary.includes('RIGHT') && bStruct.includes('RIGHT')) {\n            isMatch = true\n          }\n          if (!isMatch) {\n            continue\n          }\n          surfaceNumberOfVertices = nv\n          indexOffset = readNumericTag('IndexOffset=') as number\n          indexCount = readNumericTag('IndexCount=') as number\n          brainStructure = bStruct\n          if (!line.includes('<VertexIndices>')) {\n            line = readStr()\n          }\n          if (!line.startsWith('<VertexIndices>') || !line.endsWith('</VertexIndices>')) {\n            log.warn('Unable to find CIfTI <VertexIndices>')\n            return scalars\n          }\n          line = line.slice(15, -16)\n          const items = line.trim().split(/\\s+/)\n          if (items.length < indexCount) {\n            log.error('Error parsing VertexIndices')\n          }\n          vertexIndices = new Uint32Array(indexCount)\n          for (let i = 0; i < indexCount; i++) {\n            vertexIndices[i] = parseInt(items[i])\n          }\n        } // read <BrainModel\n      } // while (pos < len) or reached </CIFTI>\n\n      if (surfaceNumberOfVertices === 0 || vertexIndices.length === 0) {\n        log.warn('Unable to find CIfTI structure that matches the mesh.')\n        return scalars\n      }\n      if (datatype !== 16) {\n        log.warn('Only able to read float32 CIfTI (only known datatype).')\n        return scalars\n      }\n\n      const vals = new Float32Array(indexCount * nFrame4D)\n      const off = voxoffset + nFrame4D * indexOffset * 4\n      for (let i = 0; i < indexCount * nFrame4D; i++) {\n        vals[i] = reader.getFloat32(off + i * 4, isLittleEndian)\n      }\n      // }\n      let j = 0\n\n      for (let i = 0; i < indexCount; i++) {\n        for (let f = 0; f < nFrame4D; f++) {\n          scalars[vertexIndices[i] + f * n_vert] = vals[j]\n          j++\n        }\n      }\n      log.debug(\n        'CIfTI diagnostics',\n        surfaceNumberOfVertices,\n        brainStructure,\n        indexOffset,\n        indexCount,\n        indexOffset,\n        anatomicalStructurePrimary\n      )\n      //\n      return scalars\n    } // is CIfTI\n    nvert = this.decimateLayerVertices(nvert, n_vert)\n    if (nvert % n_vert !== 0) {\n      throw new Error('Vertices in layer (' + nvert + ') is not a multiple of number of vertices (' + n_vert + ')')\n    }\n    if (isLittleEndian) {\n      // block read native endian\n      if (datatype === 16) {\n        scalars = new Float32Array(buffer, voxoffset, nvert)\n      } else if (datatype === 8) {\n        scalars = new Int32Array(buffer, voxoffset, nvert)\n      } else if (datatype === 4) {\n        scalars = new Int16Array(buffer, voxoffset, nvert)\n      }\n    } else {\n      // if isLittleEndian\n      if (datatype === 16) {\n        scalars = new Float32Array(nvert)\n        for (let i = 0; i < nvert; i++) {\n          scalars[i] = reader.getFloat32(voxoffset + i * 4, isLittleEndian)\n        }\n      } else if (datatype === 8) {\n        scalars = new Int32Array(nvert)\n        for (let i = 0; i < nvert; i++) {\n          scalars[i] = reader.getInt32(voxoffset + i * 4, isLittleEndian)\n        }\n      } else if (datatype === 4) {\n        scalars = new Int16Array(nvert)\n        for (let i = 0; i < nvert; i++) {\n          scalars[i] = reader.getInt16(voxoffset + i * 2, isLittleEndian)\n        }\n      }\n    } // if isLittleEndian else big end\n    if (datatype === 2) {\n      scalars = new Uint8Array(buffer, voxoffset, nvert)\n    }\n    return scalars\n  } // readNII2()\n\n  // read NIfTI1/2 as vertex colors\n  // https://brainder.org/2012/09/23/the-nifti-file-format/#:~:text=In%20the%20nifti%20format%2C%20the,seventh%2C%20are%20for%20other%20uses.\n  static async readNII(\n    buffer: ArrayBuffer,\n    n_vert = 0,\n    anatomicalStructurePrimary = ''\n  ): Promise<Float32Array | Uint8Array | Int32Array | Int16Array> {\n    // TODO clean up number types\n    let scalars: Float32Array | Int32Array | Int16Array | Uint8Array = new Float32Array()\n    let isLittleEndian = true\n    let reader = new DataView(buffer)\n    let magic = reader.getUint16(0, isLittleEndian)\n    if (magic === 540 || magic === 469893120) {\n      return NVMeshLoaders.readNII2(buffer, n_vert, anatomicalStructurePrimary)\n    }\n    if (magic === 23553) {\n      isLittleEndian = false\n      magic = reader.getUint16(0, isLittleEndian)\n    }\n    if (magic !== 348) {\n      // gzip signature 0x1F8B in little and big endian\n      const raw = await NVUtilities.decompress(new Uint8Array(buffer))\n      reader = new DataView(raw.buffer)\n      buffer = raw.buffer\n      magic = reader.getUint16(0, isLittleEndian)\n      if (magic === 540 || magic === 469893120) {\n        return NVMeshLoaders.readNII2(buffer, n_vert, anatomicalStructurePrimary)\n      }\n      if (magic === 23553) {\n        isLittleEndian = false\n        magic = reader.getUint16(0, isLittleEndian)\n      }\n    }\n    if (magic !== 348) {\n      log.error('Not a valid NIfTI image.')\n    }\n    const voxoffset = reader.getFloat32(108, isLittleEndian)\n    const scl_slope = reader.getFloat32(112, isLittleEndian)\n    const scl_inter = reader.getFloat32(116, isLittleEndian)\n    if (scl_slope !== 1 || scl_inter !== 0) {\n      log.warn('ignoring scale slope and intercept')\n    }\n    const datatype = reader.getUint16(70, isLittleEndian)\n    if (datatype !== 2 && datatype !== 4 && datatype !== 8 && datatype !== 16) {\n      throw new Error('Unsupported NIfTI datatype ' + datatype)\n    }\n    let nvert = 1\n    for (let i = 1; i < 8; i++) {\n      const dim = reader.getUint16(40 + i * 2, isLittleEndian)\n      nvert *= Math.max(dim, 1)\n    }\n    nvert = this.decimateLayerVertices(nvert, n_vert)\n    if (nvert % n_vert !== 0) {\n      throw new Error('Vertices in layer (' + nvert + ') is not a multiple of number of vertices (' + n_vert + ')')\n    }\n    if (isLittleEndian) {\n      // block read native endian\n      if (datatype === 16) {\n        scalars = new Float32Array(buffer, voxoffset, nvert)\n      } else if (datatype === 8) {\n        scalars = new Int32Array(buffer, voxoffset, nvert)\n      } else if (datatype === 4) {\n        scalars = new Int16Array(buffer, voxoffset, nvert)\n      }\n    } else {\n      // if isLittleEndian\n      if (datatype === 16) {\n        scalars = new Float32Array(nvert)\n        for (let i = 0; i < nvert; i++) {\n          scalars[i] = reader.getFloat32(voxoffset + i * 4, isLittleEndian)\n        }\n      } else if (datatype === 8) {\n        scalars = new Int32Array(nvert)\n        for (let i = 0; i < nvert; i++) {\n          scalars[i] = reader.getInt32(voxoffset + i * 4, isLittleEndian)\n        }\n      } else if (datatype === 4) {\n        scalars = new Int16Array(nvert)\n        for (let i = 0; i < nvert; i++) {\n          scalars[i] = reader.getInt16(voxoffset + i * 2, isLittleEndian)\n        }\n      }\n    } // if isLittleEndian else big end\n    if (datatype === 2) {\n      scalars = new Uint8Array(buffer, voxoffset, nvert)\n    }\n    return scalars\n  } // readNII();\n\n  // read MGH format as vertex colors (not voxel-based image)\n  // https://surfer.nmr.mgh.harvard.edu/fswiki/FsTutorial/MghFormat\n  static async readMGH(buffer: ArrayBuffer, n_vert = 0, isReadColortables = false): Promise<MGH> {\n    let reader = new DataView(buffer)\n    let raw = buffer\n    if (reader.getUint8(0) === 31 && reader.getUint8(1) === 139) {\n      const decompressed = await NVUtilities.decompress(new Uint8Array(buffer))\n      raw = new ArrayBuffer(decompressed.byteLength)\n      new Uint8Array(raw).set(new Uint8Array(decompressed))\n      reader = new DataView(decompressed.buffer)\n    }\n    const version = reader.getInt32(0, false)\n    const width = Math.max(1, reader.getInt32(4, false))\n    const height = Math.max(1, reader.getInt32(8, false))\n    const depth = Math.max(1, reader.getInt32(12, false))\n    const nframes = Math.max(1, reader.getInt32(16, false))\n    const mtype = reader.getInt32(20, false)\n    let voxoffset = 284 // ALWAYS fixed header size\n    const isLittleEndian = false // ALWAYS byte order is BIG ENDIAN\n    if (version !== 1 || mtype < 0 || mtype > 4) {\n      log.warn('Not a valid MGH file')\n    }\n    let nvert = width * height * depth * nframes\n    let scalars: AnyNumberArray = []\n    nvert = this.decimateLayerVertices(nvert, n_vert)\n    if (nvert % n_vert !== 0) {\n      log.warn('Vertices in layer (' + nvert + ') is not a multiple of number of vertices (' + n_vert + ')')\n      return scalars\n    }\n    if (mtype === 3) {\n      scalars = new Float32Array(nvert)\n      for (let i = 0; i < nvert; i++) {\n        scalars[i] = reader.getFloat32(voxoffset + i * 4, isLittleEndian)\n      }\n    } else if (mtype === 1) {\n      scalars = new Int32Array(nvert)\n      for (let i = 0; i < nvert; i++) {\n        scalars[i] = reader.getInt32(voxoffset + i * 4, isLittleEndian)\n      }\n    } else if (mtype === 4) {\n      scalars = new Int16Array(nvert)\n      for (let i = 0; i < nvert; i++) {\n        scalars[i] = reader.getInt16(voxoffset + i * 2, isLittleEndian)\n      }\n    } else if (mtype === 0) {\n      scalars = new Uint8Array(buffer, voxoffset, nvert)\n    }\n    if (!isReadColortables) {\n      return scalars\n    }\n    // next: read footer\n    let bytesPerVertex = 4\n    if (mtype === 4) {\n      bytesPerVertex = 2\n    }\n    if (mtype === 0) {\n      bytesPerVertex = 1\n    }\n    voxoffset += bytesPerVertex * nvert\n    voxoffset += 4 * 4 // skip TR, FlipAngle, TE, TI, FOV\n    const TAG_OLD_COLORTABLE = 1\n    const TAG_OLD_USEREALRAS = 2\n    // const TAG_CMDLINE = 3;\n    // const TAG_USEREALRAS = 4;\n    // const TAG_COLORTABLE = 5;\n    // const TAG_GCAMORPH_GEOM = 10;\n    // const TAG_GCAMORPH_TYPE = 11;\n    // const TAG_GCAMORPH_LABELS = 12;\n    const TAG_OLD_SURF_GEOM = 20\n    // const TAG_SURF_GEOM = 21;\n    const TAG_OLD_MGH_XFORM = 30\n    // const TAG_MGH_XFORM = 31;\n    // const TAG_GROUP_AVG_SURFACE_AREA = 32;\n    // const TAG_AUTO_ALIGN = 33;\n    // const TAG_SCALAR_DOUBLE = 40;\n    // const TAG_PEDIR = 41;\n    // const TAG_MRI_FRAME = 42;\n    // const TAG_FIELDSTRENGTH = 43;\n    // const TAG_ORIG_RAS2VOX = 44;\n    const nBytes = raw.byteLength\n    let colormapLabel: LUT\n\n    while (voxoffset < nBytes - 8) {\n      // let vx = voxoffset;\n      const tagType = reader.getInt32((voxoffset += 4), isLittleEndian)\n      let plen = 0\n      switch (tagType) {\n        case TAG_OLD_MGH_XFORM:\n          // doesn't include null\n          plen = reader.getInt32((voxoffset += 4), isLittleEndian) - 1\n          break\n        case TAG_OLD_SURF_GEOM: // these don't take lengths at all\n        case TAG_OLD_USEREALRAS:\n          plen = 0\n          break\n        case TAG_OLD_COLORTABLE:\n          plen = 0\n          // CTABreadFromBinary()\n          {\n            let version = reader.getInt32((voxoffset += 4), isLittleEndian)\n            if (version > 0) {\n              log.warn('unsupported CTABreadFromBinaryV1')\n              return scalars\n            }\n            version = -version\n            if (version !== 2) {\n              log.warn('CTABreadFromBinary: unknown version')\n              return scalars\n            }\n            // CTABreadFromBinaryV2() follows\n            const nentries = reader.getInt32((voxoffset += 4), isLittleEndian)\n            if (nentries < 0) {\n              log.warn('CTABreadFromBinaryV2: nentries was ', nentries)\n              return scalars\n            }\n            // skip the file name\n            const len = reader.getInt32((voxoffset += 4), isLittleEndian)\n            voxoffset += len\n            const num_entries_to_read = reader.getInt32((voxoffset += 4), isLittleEndian)\n            if (num_entries_to_read < 0) {\n              return scalars\n            }\n            // Allocate our table.\n            const Labels: ColorMap = { R: [], G: [], B: [], A: [], I: [], labels: [] }\n            for (let i = 0; i < num_entries_to_read; i++) {\n              const structure = reader.getInt32((voxoffset += 4), isLittleEndian)\n              const labelLen = reader.getInt32((voxoffset += 4), isLittleEndian)\n              let pos = voxoffset + 4\n              let txt = ''\n              for (let c = 0; c < labelLen; c++) {\n                const val = reader.getUint8(pos++)\n                if (val === 0) {\n                  break\n                }\n                txt += String.fromCharCode(val)\n              } // for labelLen\n              voxoffset += labelLen\n              const R = reader.getInt32((voxoffset += 4), isLittleEndian)\n              const G = reader.getInt32((voxoffset += 4), isLittleEndian)\n              const B = reader.getInt32((voxoffset += 4), isLittleEndian)\n              const A = 255 - reader.getInt32((voxoffset += 4), isLittleEndian)\n              Labels.I.push(structure)\n              Labels.R.push(R)\n              Labels.G.push(G)\n              Labels.B.push(B)\n              Labels.A.push(A)\n              Labels.labels!.push(txt)\n              // break\n            } // for num_entries_to_read\n            colormapLabel = cmapper.makeLabelLut(Labels)\n          }\n          break\n        default:\n          plen = reader.getInt32((voxoffset += 8), isLittleEndian)\n      }\n      voxoffset += plen\n    }\n    return {\n      scalars,\n      colormapLabel: colormapLabel! // TODO can we guarantee this?\n    }\n  } // readMGH()\n\n  // read X3D format mesh\n  // https://en.wikipedia.org/wiki/X3D\n  static readX3D(buffer: ArrayBuffer): X3D {\n    // n.b. only plain text \".x3d\", not binary \".x3db\"\n    // beware: The values of XML attributes are delimited by either single or double quotes\n    const len = buffer.byteLength\n    if (len < 20) {\n      throw new Error('File too small to be X3D: bytes = ' + len)\n    }\n    const bytes = new Uint8Array(buffer)\n    let pos = 0\n    function readStr(): string {\n      while (pos < len && bytes[pos] !== 60) {\n        pos++\n      }\n      const startP = pos\n      while (pos < len && bytes[pos] !== 62) {\n        pos++\n      }\n      const endP = pos\n      return new TextDecoder().decode(buffer.slice(startP, endP + 1)).trim()\n    }\n    let line = readStr() // detect XML signature: '<?xml version=...'\n    function readStringTag(TagName: string): string {\n      // Tag 'DEF' will return l3 for DEF='l3'\n      const fpos = line.indexOf(TagName + '=')\n      if (fpos < 0) {\n        return ''\n      }\n      const delimiter = line[fpos + TagName.length + 1]\n      const spos = line.indexOf(delimiter, fpos) + 1\n      const epos = line.indexOf(delimiter, spos)\n      return line.slice(spos, epos)\n    }\n    function readNumericTag(TagName: string): number | number[] {\n      // Tag 'Dim1' will return 3 for Dim1=\"3\"\n      const fpos = line.indexOf(TagName + '=')\n      if (fpos < 0) {\n        return 1\n      }\n      const delimiter = line[fpos + TagName.length + 1]\n      const spos = line.indexOf(delimiter, fpos) + 1\n      const epos = line.indexOf(delimiter, spos)\n      let str = line.slice(spos, epos).trim()\n      str = str.replace(/,\\s*$/, '')\n      const items = str.trim().split(/\\s*,\\s*|\\s+/)\n      if (items.length < 2) {\n        return parseFloat(str)\n      }\n      let ret = new Array(items.length)\n      let j = 0\n      for (let i = 0; i < items.length; i++) {\n        const v = parseFloat(items[i])\n        if (!isFinite(v)) {\n          continue\n        }\n        ret[j] = v\n        j++\n      }\n      ret = ret.slice(0, j)\n      return ret\n    }\n    if (!line.includes('xml version')) {\n      log.warn('Not a X3D image')\n    }\n    let positions: number[] = []\n    let indices: number[] = []\n    let rgba255: number[] = []\n    let color: number[] = []\n    let translation: vec4 = [0, 0, 0, 0]\n    let rotation = [0, 0, 0, 0]\n    let rgba = [255, 255, 255, 255]\n    let rgbaGlobal = [255, 255, 255, 255]\n    const appearanceStyles: Record<string, number[]> = {}\n    function readAppearance(): void {\n      if (!line.endsWith('/>')) {\n        if (line.startsWith('<Appearance>')) {\n          // eslint-disable-next-line no-unmodified-loop-condition -- modified within readStr\n          while (pos < len && !line.endsWith('</Appearance>')) {\n            line += readStr()\n          }\n        } else {\n          // eslint-disable-next-line no-unmodified-loop-condition -- modified within readStr\n          while (pos < len && !line.endsWith('/>')) {\n            line += readStr()\n          }\n        }\n      }\n      const ref = readStringTag('USE')\n      if (ref.length > 1) {\n        if (ref in appearanceStyles) {\n          rgba = appearanceStyles[ref as keyof typeof appearanceStyles] as number[]\n        } else {\n          log.warn('Unable to find DEF for ' + ref)\n        }\n        return\n      }\n      const diffuseColor = readNumericTag('diffuseColor') as number[]\n      if (diffuseColor.length < 3) {\n        return\n      }\n      rgba[0] = Math.round(diffuseColor[0] * 255)\n      rgba[1] = Math.round(diffuseColor[1] * 255)\n      rgba[2] = Math.round(diffuseColor[2] * 255)\n      const def = readStringTag('DEF')\n      if (def.length < 1) {\n        return\n      }\n      appearanceStyles[def] = rgba\n    }\n    // eslint-disable-next-line no-unmodified-loop-condition -- modified within readStr\n    while (pos < len) {\n      line = readStr()\n      rgba = rgbaGlobal.slice()\n      if (line.startsWith('<Transform')) {\n        translation = readNumericTag('translation') as vec4\n        rotation = readNumericTag('rotation') as number[]\n      }\n      if (line.startsWith('<Appearance')) {\n        readAppearance()\n        rgbaGlobal = rgba.slice()\n      }\n      if (line.startsWith('<Shape')) {\n        let radius = 1.0\n        let height = 1.0\n        let coordIndex: number[] = []\n        let point: number[] = []\n\n        // eslint-disable-next-line no-unmodified-loop-condition -- modified within readAppearance\n        while (pos < len) {\n          line = readStr()\n          if (line.startsWith('<Appearance')) {\n            readAppearance()\n          }\n          if (line.startsWith('</Shape')) {\n            break\n          }\n          if (line.startsWith('<Sphere')) {\n            radius = readNumericTag('radius') as number\n            height = -1.0\n          }\n          if (line.startsWith('<Cylinder')) {\n            radius = readNumericTag('radius') as number\n            height = readNumericTag('height') as number\n          }\n          if (line.startsWith('<IndexedFaceSet')) {\n            height = -2\n            // https://www.web3d.org/specifications/X3Dv4Draft/ISO-IEC19775-1v4-CD/Part01/components/geometry3D.html#IndexedFaceSet\n            coordIndex = readNumericTag('coordIndex') as number[]\n          }\n          if (line.startsWith('<IndexedTriangleSet')) {\n            height = -7\n            coordIndex = readNumericTag('index') as number[]\n          }\n          if (line.startsWith('<IndexedTriangleStripSet')) {\n            height = -3\n            // https://www.web3d.org/specifications/X3Dv4Draft/ISO-IEC19775-1v4-CD/Part01/components/geometry3D.html#IndexedFaceSet\n            coordIndex = readNumericTag('index') as number[]\n          }\n          if (line.startsWith('<Coordinate')) {\n            point = readNumericTag('point') as number[]\n            const rem = point.length % 3\n            if (rem !== 0) {\n              point = point.slice(0, -rem)\n            }\n          } // Coordinate point\n          if (line.startsWith('<Color')) {\n            color = readNumericTag('color') as number[]\n          }\n          if (line.startsWith('<Box')) {\n            height = -4\n            log.warn('Unsupported x3d shape: Box')\n          }\n          if (line.startsWith('<Cone')) {\n            height = -5\n            log.warn('Unsupported x3d shape: Cone')\n          }\n          if (line.startsWith('<ElevationGrid')) {\n            height = -6\n            log.warn('Unsupported x3d shape: ElevationGrid')\n          }\n        }\n        if (height < -3 && height !== -7) {\n          // cone, box, elevation grid\n          // unsupported\n        } else if (height < -1) {\n          // indexed triangle mesh or strip\n          if (coordIndex.length < 1 || point.length < 3 || point.length === undefined) {\n            log.warn('Indexed mesh must specify indices and points')\n            break\n          }\n          const idx0 = Math.floor(positions.length / 3) // first new vertex will be AFTER previous vertices\n          let j = 2\n          if (height === -7) {\n            indices = [...indices, ...coordIndex]\n          } else if (height === -2) {\n            let triStart = 0\n            while (j < coordIndex.length) {\n              if (coordIndex[j] >= 0) {\n                indices.push(coordIndex[triStart] + idx0)\n                indices.push(coordIndex[j - 1] + idx0)\n                indices.push(coordIndex[j - 0] + idx0)\n                j += 1\n              } else {\n                j += 3\n                triStart = j - 2\n              }\n            }\n          } else {\n            while (j < coordIndex.length) {\n              if (coordIndex[j] >= 0) {\n                indices.push(coordIndex[j - 2] + idx0)\n                indices.push(coordIndex[j - 1] + idx0)\n                indices.push(coordIndex[j - 0] + idx0)\n                j += 1\n              } else {\n                // coordIndex[j] === -1, next polygon\n                j += 3\n              }\n            }\n          }\n          // n.b. positions.push(...point) can generate \"Maximum call stack size exceeded\"\n          positions = [...positions, ...point]\n          const npt = Math.floor(point.length / 3)\n          const rgbas = Array(npt).fill(rgba).flat()\n          if (color.length === npt * 3) {\n            // colors are rgb 0..1, rgbas are RGBA 0..255\n            let c3 = 0\n            let c4 = 0\n            for (let i = 0; i < npt; i++) {\n              for (let j2 = 0; j2 < 3; j2++) {\n                rgbas[c4] = Math.round(color[c3] * 255.0)\n                c3++\n                c4++\n              }\n              c4++\n            }\n          }\n          rgba255 = [...rgba255, ...rgbas]\n        } else if (height < 0.0) {\n          // sphere\n          NiivueObject3D.makeColoredSphere(positions, indices, rgba255, radius, translation, rgba)\n        } else {\n          // https://www.andre-gaschler.com/rotationconverter/\n          const r = mat4.create() // rotation mat4x4\n          mat4.fromRotation(r, rotation[3], [rotation[0], rotation[1], rotation[2]])\n          const pti = vec4.fromValues(0, -height * 0.5, 0, 1)\n          const ptj = vec4.fromValues(0, +height * 0.5, 0, 1)\n          vec4.transformMat4(pti, pti, r)\n          vec4.transformMat4(ptj, ptj, r)\n          vec4.add(pti, pti, translation)\n          vec4.add(ptj, ptj, translation)\n          const pti3 = vec3.fromValues(pti[0], pti[1], pti[2])\n          const ptj3 = vec3.fromValues(ptj[0], ptj[1], ptj[2])\n          // https://www.web3d.org/specifications/X3Dv4Draft/ISO-IEC19775-1v4-CD/Part01/components/geometry3D.html#Cylinder\n          NiivueObject3D.makeColoredCylinder(positions, indices, rgba255, pti3, ptj3, radius, rgba)\n        }\n      } // while <shape\n    }\n    return {\n      positions: Float32Array.from(positions),\n      indices: Uint32Array.from(indices),\n      rgba255: Uint8Array.from(rgba255)\n    }\n  } // readX3D()\n\n  // read GIfTI format mesh\n  // https://www.nitrc.org/projects/gifti/\n  static async readGII(buffer: ArrayBuffer, n_vert = 0): Promise<GII> {\n    let len = buffer.byteLength\n    if (len < 20) {\n      throw new Error('File too small to be GII: bytes = ' + len)\n    }\n    let chars = new TextDecoder('ascii').decode(buffer)\n    if (chars[0].charCodeAt(0) === 31) {\n      // raw GIFTI saved as .gii.gz is smaller than gz GIFTI due to base64 overhead\n      const raw = await NVUtilities.decompress(new Uint8Array(buffer))\n      buffer = raw.buffer\n      chars = new TextDecoder('ascii').decode(raw.buffer)\n    }\n    let pos = 0\n    function readXMLtag(): XmlTag {\n      let isEmptyTag = true\n      let startPos = pos\n      while (isEmptyTag) {\n        // while (pos < len && chars[pos] === 10) pos++; //skip blank lines\n        while (pos < len && chars[pos] !== '<') {\n          pos++\n        } // find tag start symbol: '<' e.g. \"<tag>\"\n        startPos = pos\n        while (pos < len && chars[pos] !== '>') {\n          pos++\n        } // find tag end symbol: '>' e.g. \"<tag>\"\n        isEmptyTag = chars[pos - 1] === '/' // empty tag ends \"/>\" e.g. \"<br/>\"\n        if (startPos + 1 < len && chars[startPos + 1] === '/') {\n          // skip end tag \"</\"\n          pos += 1\n          isEmptyTag = true\n        }\n        // let endTagPos = pos;\n        if (pos >= len) {\n          break\n        }\n      }\n      const tagString = new TextDecoder().decode(buffer.slice(startPos + 1, pos)).trim()\n      const startTag = tagString.split(' ')[0].trim()\n      // ignore declarations https://stackoverflow.com/questions/60801060/what-does-mean-in-xml\n      const contentStartPos = pos\n      let contentEndPos = pos\n      let endPos = pos\n      if (chars[startPos + 1] !== '?' && chars[startPos + 1] !== '!') {\n        // ignore declarations \"<?\" and \"<!\"\n        const endTag = '</' + startTag + '>'\n        contentEndPos = chars.indexOf(endTag, contentStartPos)\n        endPos = contentEndPos + endTag.length - 1\n      }\n      // <name>content</name>\n      // a    b      c      d\n      // a: startPos\n      // b: contentStartPos\n      // c: contentEndPos\n      // d: endPos\n      return {\n        name: tagString,\n        startPos,\n        contentStartPos,\n        contentEndPos,\n        endPos\n      } //, 'startTagLastPos': startTagLastPos, 'endTagFirstPos': endTagFirstPos, 'endTagLastPos': endTagLastPos];\n    }\n    let tag = readXMLtag()\n    if (!tag.name.startsWith('?xml')) {\n      throw new Error('readGII: Invalid XML file')\n    }\n    while (!tag.name.startsWith('GIFTI') && tag.endPos < len) {\n      tag = readXMLtag()\n    }\n    if (!tag.name.startsWith('GIFTI') || tag.contentStartPos === tag.contentEndPos) {\n      throw new Error('readGII: XML file does not include GIFTI tag')\n    }\n    len = tag.contentEndPos // only read contents of GIfTI tag\n    let positions = new Float32Array()\n    let indices = new Uint32Array()\n    let scalars = new Float32Array()\n    let anatomicalStructurePrimary = ''\n    let isIdx = false\n    let isPts = false\n    let isVectors = false\n    let isColMajor = false\n    let Dims = [1, 1, 1]\n    const FreeSurferTranlate = [0, 0, 0] // https://gist.github.com/alexisthual/f0b2f9eb2a67b8f61798f2c138dda981\n    let dataType = 0\n    // let isLittleEndian = true;\n    let isGzip = false\n    let isASCII = false\n    let nvert = 0\n    // FreeSurfer versions after 20221225 disambiguate if transform has been applied\n    // \"./mris_convert --to-scanner\" store raw vertex positions in scanner space, so transforms should be ignored.\n    //  FreeSurfer versions after 20221225 report that the transform is applied by reporting:\n    //   <DataSpace><![CDATA[NIFTI_XFORM_SCANNER_ANAT\n    let isDataSpaceScanner = false\n    tag.endPos = tag.contentStartPos // read the children of the 'GIFTI' tag\n    let line = ''\n    function readNumericTag(TagName: string, isFloat = false): number {\n      // Tag 'Dim1' will return 3 for Dim1=\"3\"\n      const pos = line.indexOf(TagName)\n      if (pos < 0) {\n        return 1\n      }\n      const spos = line.indexOf('\"', pos) + 1\n      const epos = line.indexOf('\"', spos)\n      const str = line.slice(spos, epos)\n      if (isFloat) {\n        return parseFloat(str)\n      } else {\n        return parseInt(str)\n      }\n    }\n    function readBracketTag(TagName: string): string {\n      const pos = line.indexOf(TagName)\n      if (pos < 0) {\n        return ''\n      }\n      const spos = pos + TagName.length\n      const epos = line.indexOf(']', spos)\n      return line.slice(spos, epos)\n    }\n    const Labels: ColorMap = { R: [], G: [], B: [], A: [], I: [], labels: [] }\n    while (tag.endPos < len && tag.name.length > 1) {\n      tag = readXMLtag()\n      if (tag.name.startsWith('Label Key')) {\n        line = tag.name\n        Labels.I.push(readNumericTag('Key='))\n        Labels.R.push(Math.round(255 * readNumericTag('Red=', true)))\n        Labels.G.push(Math.round(255 * readNumericTag('Green=', true)))\n        Labels.B.push(Math.round(255 * readNumericTag('Blue=', true)))\n        Labels.A.push(Math.round(255 * readNumericTag('Alpha', true)))\n        line = new TextDecoder().decode(buffer.slice(tag.contentStartPos + 1, tag.contentEndPos)).trim()\n        Labels.labels!.push(readBracketTag('<![CDATA['))\n      }\n      if (tag.name.trim() === 'Data') {\n        if (isVectors) {\n          continue\n        }\n        line = new TextDecoder().decode(buffer.slice(tag.contentStartPos + 1, tag.contentEndPos)).trim()\n        // Data can be on one to three lines...\n        let datBin: Int32Array | Float32Array | Uint8Array\n        if (isASCII) {\n          const nvert = Dims[0] * Dims[1] * Dims[2]\n          const lines = line.split(/\\s+/) // .split(/[ ,]+/);\n          if (nvert !== lines.length) {\n            throw new Error('Unable to parse ASCII GIfTI')\n          }\n          if (dataType === 2) {\n            dataType = 8\n          } // UInt8 -> Int32\n          if (dataType === 32) {\n            dataType = 16\n          } // float64 -> float32\n          if (dataType === 8) {\n            datBin = new Int32Array(nvert)\n            for (let v = 0; v < nvert; v++) {\n              datBin[v] = parseInt(lines[v])\n            }\n          }\n          if (dataType === 16) {\n            datBin = new Float32Array(nvert)\n            for (let v = 0; v < nvert; v++) {\n              datBin[v] = parseFloat(lines[v])\n            }\n          }\n        } else if (typeof Buffer === 'undefined') {\n          // raw.gii\n          function base64ToUint8(base64: string): Uint8Array {\n            const binary_string = atob(base64)\n            const len = binary_string.length\n            const bytes = new Uint8Array(len)\n            for (let i = 0; i < len; i++) {\n              bytes[i] = binary_string.charCodeAt(i)\n            }\n            return bytes\n          }\n          if (isGzip) {\n            const datZ = base64ToUint8(line.slice())\n            datBin = await NVUtilities.decompress(new Uint8Array(datZ))\n          } else {\n            datBin = base64ToUint8(line.slice())\n          }\n        } else {\n          // if Buffer not defined\n          if (isGzip) {\n            const datZ = Buffer.from(line.slice(), 'base64')\n            datBin = await NVUtilities.decompress(new Uint8Array(datZ))\n          } else {\n            datBin = Buffer.from(line.slice(), 'base64')\n          }\n        }\n        if (isPts) {\n          if (dataType !== 16) {\n            log.warn('expect positions as FLOAT32')\n          }\n          positions = new Float32Array(datBin!.buffer) // TODO can we guarantee this?\n          if (isColMajor) {\n            const tmp = positions.slice()\n            const np = tmp.length / 3\n            let j = 0\n            for (let p = 0; p < np; p++) {\n              for (let i = 0; i < 3; i++) {\n                positions[j] = tmp[i * np + p]\n                j++\n              }\n            }\n          } // isColMajor\n        } else if (isIdx) {\n          if (dataType !== 8) {\n            log.warn('expect indices as INT32')\n          }\n          indices = new Uint32Array(datBin!.buffer)\n          if (isColMajor) {\n            const tmp = indices.slice()\n            const np = tmp.length / 3\n            let j = 0\n            for (let p = 0; p < np; p++) {\n              for (let i = 0; i < 3; i++) {\n                indices[j] = tmp[i * np + p]\n                j++\n              }\n            }\n          } // isColMajor\n        } else {\n          // not position or indices: assume scalars NIFTI_INTENT_NONE\n          nvert = Dims[0] * Dims[1] * Dims[2]\n          if (n_vert !== 0) {\n            if (nvert % n_vert !== 0) {\n              log.warn('Number of vertices in scalar overlay (' + nvert + ') does not match mesh (' + n_vert + ')')\n            }\n          }\n          function Float32Concat(first: Float32Array, second: Float32Array): Float32Array {\n            const firstLength = first.length\n            const result = new Float32Array(firstLength + second.length)\n            result.set(first)\n            result.set(second, firstLength)\n            return result\n          } // Float32Concat()\n          let scalarsNew\n          if (dataType === 2) {\n            const scalarsInt = new Uint8Array(datBin!.buffer)\n            scalarsNew = Float32Array.from(scalarsInt)\n          } else if (dataType === 8) {\n            const scalarsInt = new Int32Array(datBin!.buffer)\n            scalarsNew = Float32Array.from(scalarsInt)\n          } else if (dataType === 16) {\n            scalarsNew = new Float32Array(datBin!.buffer)\n          } else if (dataType === 32) {\n            const scalarFloat = new Float64Array(datBin!.buffer)\n            scalarsNew = Float32Array.from(scalarFloat)\n          } else {\n            throw new Error(`Invalid dataType: ${dataType}`)\n          }\n          scalars = Float32Concat(scalars as Float32Array, scalarsNew)\n        }\n        continue\n      }\n      if (tag.name.trim() === 'DataSpace') {\n        line = new TextDecoder().decode(buffer.slice(tag.contentStartPos + 1, tag.contentEndPos)).trim()\n        if (line.includes('NIFTI_XFORM_SCANNER_ANAT')) {\n          isDataSpaceScanner = true\n        }\n      }\n      if (tag.name.trim() === 'MD') {\n        line = new TextDecoder().decode(buffer.slice(tag.contentStartPos + 1, tag.contentEndPos)).trim()\n        if (line.includes('AnatomicalStructurePrimary') && line.includes('CDATA[')) {\n          anatomicalStructurePrimary = readBracketTag('<Value><![CDATA[').toUpperCase()\n          // this.AnatomicalStructurePrimary  = anatomicalStructurePrimary\n        }\n        if (line.includes('VolGeom') && line.includes('CDATA[')) {\n          let e = -1\n          if (line.includes('VolGeomC_R')) {\n            e = 0\n          }\n          if (line.includes('VolGeomC_A')) {\n            e = 1\n          }\n          if (line.includes('VolGeomC_S')) {\n            e = 2\n          }\n          if (e < 0) {\n            continue\n          }\n          FreeSurferTranlate[e] = parseFloat(readBracketTag('<Value><![CDATA['))\n        }\n      }\n      // read DataArray properties\n      if (!tag.name.startsWith('DataArray')) {\n        continue\n      }\n      line = tag.name\n      Dims = [1, 1, 1]\n      isGzip = line.includes('Encoding=\"GZipBase64Binary\"')\n      isASCII = line.includes('Encoding=\"ASCII\"')\n      isIdx = line.includes('Intent=\"NIFTI_INTENT_TRIANGLE\"')\n      isPts = line.includes('Intent=\"NIFTI_INTENT_POINTSET\"')\n      isVectors = line.includes('Intent=\"NIFTI_INTENT_VECTOR\"')\n      isColMajor = line.includes('ArrayIndexingOrder=\"ColumnMajorOrder\"')\n      // isLittleEndian = line.includes('Endian=\"LittleEndian\"');\n      if (line.includes('DataType=\"NIFTI_TYPE_UINT8\"')) {\n        dataType = 2\n      } // DT_UINT8\n      if (line.includes('DataType=\"NIFTI_TYPE_INT32\"')) {\n        dataType = 8\n      } // DT_INT32\n      if (line.includes('DataType=\"NIFTI_TYPE_FLOAT32\"')) {\n        dataType = 16\n      } // DT_FLOAT32\n      if (line.includes('DataType=\"NIFTI_TYPE_FLOAT64\"')) {\n        dataType = 32\n      } // DT_FLOAT64\n      Dims[0] = readNumericTag('Dim0=')\n      Dims[1] = readNumericTag('Dim1=')\n      Dims[2] = readNumericTag('Dim2=')\n    }\n    let colormapLabel\n    if (Labels.I.length > 1) {\n      colormapLabel = cmapper.makeLabelLut(Labels)\n    }\n    if (n_vert > 0) {\n      return { scalars, colormapLabel, anatomicalStructurePrimary }\n    }\n    if (\n      positions!.length > 2 &&\n      !isDataSpaceScanner &&\n      (FreeSurferTranlate[0] !== 0 || FreeSurferTranlate[1] !== 0 || FreeSurferTranlate[2] !== 0)\n    ) {\n      nvert = Math.floor(positions!.length / 3)\n      let i = 0\n      for (let v = 0; v < nvert; v++) {\n        positions![i] += FreeSurferTranlate[0]\n        i++\n        positions[i] += FreeSurferTranlate[1]\n        i++\n        positions[i] += FreeSurferTranlate[2]\n        i++\n      }\n    } // issue416: apply FreeSurfer translation\n    return {\n      positions,\n      indices,\n      scalars,\n      colormapLabel,\n      anatomicalStructurePrimary\n    } // MatrixData\n  } // readGII()\n}\n","export enum LabelTextAlignment {\n  LEFT = 'left',\n  RIGHT = 'right',\n  CENTER = 'center'\n}\n\nexport enum LabelLineTerminator {\n  NONE = 'none',\n  CIRCLE = 'circle',\n  RING = 'ring'\n}\n\nexport enum LabelAnchorFlag {\n  NONE = 0,\n  LEFT = 1 << 0,\n  CENTER = 1 << 1,\n  RIGHT = 1 << 2,\n  TOP = 1 << 3,\n  MIDDLE = 1 << 4,\n  BOTTOM = 1 << 5\n}\n\nexport enum LabelAnchorPoint {\n  NONE = LabelAnchorFlag.NONE,\n  TOPLEFT = LabelAnchorFlag.TOP | LabelAnchorFlag.LEFT,\n  TOPCENTER = LabelAnchorFlag.TOP | LabelAnchorFlag.CENTER,\n  TOPRIGHT = LabelAnchorFlag.TOP | LabelAnchorFlag.RIGHT,\n  MIDDLELEFT = LabelAnchorFlag.MIDDLE | LabelAnchorFlag.LEFT,\n  MIDDLECENTER = LabelAnchorFlag.MIDDLE | LabelAnchorFlag.CENTER,\n  MIDDLERIGHT = LabelAnchorFlag.MIDDLE | LabelAnchorFlag.RIGHT,\n  BOTTOMLEFT = LabelAnchorFlag.BOTTOM | LabelAnchorFlag.LEFT,\n  BOTTOMCENTER = LabelAnchorFlag.BOTTOM | LabelAnchorFlag.CENTER,\n  BOTTOMRIGHT = LabelAnchorFlag.BOTTOM | LabelAnchorFlag.RIGHT\n}\n\n/**\n * Class representing label style.\n * @ignore\n */\nexport class NVLabel3DStyle {\n  textColor: number[]\n  textScale: number\n  textAlignment?: LabelTextAlignment\n  lineWidth: number\n  lineColor: number[]\n  lineTerminator: LabelLineTerminator\n  bulletScale?: number\n  bulletColor?: number[]\n  backgroundColor?: number[]\n\n  /**\n   * @param textColor - Color of text\n   * @param textScale - Text Size (0.0..1.0)\n   * @param lineWidth - Line width\n   * @param lineColor - Line color\n   * @param bulletScale - Bullet size respective of text\n   * @param bulletColor - Bullet color\n   * @param backgroundColor - Background color of label\n   */\n  constructor(\n    textColor = [1.0, 1.0, 1.0, 1.0],\n    textScale = 1.0,\n    textAlignment = LabelTextAlignment.LEFT,\n    lineWidth = 0.0,\n    lineColor = [0.0, 0.0, 0.0],\n    lineTerminator = LabelLineTerminator.NONE,\n    bulletScale?: number,\n    bulletColor?: number[],\n    backgroundColor?: number[]\n  ) {\n    this.textColor = textColor\n    this.textScale = textScale\n    this.textAlignment = textAlignment\n    this.lineWidth = lineWidth\n    this.lineColor = lineColor\n    this.lineTerminator = lineTerminator\n    this.bulletScale = bulletScale\n    this.bulletColor = bulletColor\n    this.backgroundColor = backgroundColor\n  }\n}\n\n/**\n * Label class\n * @ignore\n */\nexport class NVLabel3D {\n  text: string\n  style: NVLabel3DStyle\n  points?: number[] | number[][]\n  anchor: LabelAnchorPoint\n  onClick?: (label: NVLabel3D, e?: MouseEvent) => void\n\n  /**\n   * @param text - The text of the label\n   * @param style - The style of the label\n   * @param points - An array of points label for label lines\n   */\n  constructor(\n    text: string,\n    style: NVLabel3DStyle,\n    points?: number[] | number[][],\n    anchor?: LabelAnchorPoint,\n    onClick?: (label: NVLabel3D, e?: MouseEvent) => void\n  ) {\n    this.text = text\n    this.style = style\n    this.points = points\n    this.anchor = anchor || LabelAnchorPoint.NONE\n    this.onClick = onClick\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import { vec3 } from 'gl-matrix'\nimport { log } from '../logger.js'\nimport { NiftiHeader } from '../types.js'\nimport { LUT } from '../colortables.js'\n\nexport const isPlatformLittleEndian = (): boolean => {\n  // inspired by https://github.com/rii-mango/Papaya\n  const buffer = new ArrayBuffer(2)\n  new DataView(buffer).setInt16(0, 256, true)\n  return new Int16Array(buffer)[0] === 256\n}\n\n/**\n * Enum for NIfTI datatype codes\n *   // https://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1.h\n */\nexport enum NiiDataType {\n  DT_NONE = 0,\n  DT_BINARY = 1,\n  DT_UINT8 = 2,\n  DT_INT16 = 4,\n  DT_INT32 = 8,\n  DT_FLOAT32 = 16,\n  DT_COMPLEX64 = 32,\n  DT_FLOAT64 = 64,\n  DT_RGB24 = 128,\n  DT_INT8 = 256,\n  DT_UINT16 = 512,\n  DT_UINT32 = 768,\n  DT_INT64 = 1024,\n  DT_UINT64 = 1280,\n  DT_FLOAT128 = 1536,\n  DT_COMPLEX128 = 1792,\n  DT_COMPLEX256 = 2048,\n  DT_RGBA32 = 2304\n}\n\n/**\n * Enum for NIfTI intent codes\n *   // https://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1.h\n */\nexport enum NiiIntentCode {\n  NIFTI_INTENT_LABEL = 1002,\n  NIFTI_INTENT_VECTOR = 1007,\n  NIFTI_INTENT_RGB_VECTOR = 2003\n}\n\n/**\n * Enum for supported image types (e.g. NII, NRRD, DICOM)\n */\nexport enum ImageType {\n  UNKNOWN = 0,\n  NII = 1,\n  DCM = 2,\n  DCM_MANIFEST = 3,\n  MIH = 4,\n  MIF = 5,\n  NHDR = 6,\n  NRRD = 7,\n  MHD = 8,\n  MHA = 9,\n  MGH = 10,\n  MGZ = 11,\n  V = 12,\n  V16 = 13,\n  VMR = 14,\n  HEAD = 15,\n  DCM_FOLDER = 16,\n  SRC = 17,\n  FIB = 18,\n  BMP = 19,\n  ZARR = 20,\n  NPY = 21,\n  NPZ = 22\n}\n\nexport const NVIMAGE_TYPE = Object.freeze({\n  ...ImageType,\n  parse: (ext: string) => {\n    let imageType: ImageType = ImageType.UNKNOWN\n    switch (ext.toUpperCase()) {\n      case '':\n      case 'DCM':\n        imageType = ImageType.DCM\n        break\n      case 'TXT':\n        imageType = ImageType.DCM_MANIFEST\n        break\n      case 'FZ':\n      case 'GQI':\n      case 'QSDR':\n      case 'FIB':\n        imageType = ImageType.FIB\n        break\n      case 'NII':\n        imageType = ImageType.NII\n        break\n      case 'MIH':\n        imageType = ImageType.MIH\n        break\n      case 'MIF':\n        imageType = ImageType.MIF\n        break\n      case 'NHDR':\n        imageType = ImageType.NHDR\n        break\n      case 'NRRD':\n        imageType = ImageType.NRRD\n        break\n      case 'MHD':\n        imageType = ImageType.MHD\n        break\n      case 'MHA':\n        imageType = ImageType.MHA\n        break\n      case 'MGH':\n        imageType = ImageType.MGH\n        break\n      case 'MGZ':\n        imageType = ImageType.MGZ\n        break\n      case 'NPY':\n        imageType = ImageType.NPY\n        break\n      case 'NPZ':\n        imageType = ImageType.NPZ\n        break\n      case 'SRC':\n        imageType = ImageType.SRC\n        break\n      case 'V':\n        imageType = ImageType.V\n        break\n      case 'V16':\n        imageType = ImageType.V16\n        break\n      case 'VMR':\n        imageType = ImageType.VMR\n        break\n      case 'HEAD':\n        imageType = ImageType.HEAD\n        break\n      case 'PNG':\n      case 'BMP':\n      case 'GIF':\n      case 'JPG':\n      case 'JPEG':\n        imageType = ImageType.BMP\n        break\n      case 'ZARR':\n        imageType = ImageType.ZARR\n        break\n    }\n    return imageType\n  }\n})\n\nexport type ImageFromUrlOptions = {\n  // the resolvable URL pointing to a nifti image to load\n  url: string\n  // Allows loading formats where header and image are separate files (e.g. nifti.hdr, nifti.img)\n  urlImageData?: string\n  // headers to use in the fetch call\n  headers?: Record<string, string>\n  // a name for this image (defaults to empty)\n  name?: string\n  // a color map to use (defaults to gray)\n  colorMap?: string\n  // TODO see duplicate usage in niivue/loadDocument\n  colormap?: string\n  // the opacity for this image (defaults to 1)\n  opacity?: number\n  // minimum intensity for color brightness/contrast\n  cal_min?: number\n  // maximum intensity for color brightness/contrast\n  cal_max?: number\n  // whether or not to trust cal_min and cal_max from the nifti header (trusting results in faster loading, defaults to true)\n  trustCalMinMax?: boolean\n  // the percentile to use for setting the robust range of the display values (smart intensity setting for images with large ranges, defaults to 0.02)\n  percentileFrac?: number\n  // whether or not to use QForm over SForm constructing the NVImage instance (defaults to false)\n  useQFormNotSForm?: boolean\n  // if true, values below cal_min are shown as translucent, not transparent (defaults to false)\n  alphaThreshold?: boolean\n  // a color map to use for negative intensities\n  colormapNegative?: string\n  // backwards compatible option\n  colorMapNegative?: string\n  // minimum intensity for colormapNegative brightness/contrast (NaN for symmetrical cal_min)\n  cal_minNeg?: number\n  // maximum intensity for colormapNegative brightness/contrast (NaN for symmetrical cal_max)\n  cal_maxNeg?: number\n  // show/hide colormaps (defaults to true)\n  colorbarVisible?: boolean\n  // TODO the following fields were not documented\n  ignoreZeroVoxels?: boolean\n  imageType?: ImageType\n  frame4D?: number\n  colormapLabel?: LUT | null\n  pairedImgData?: null\n  limitFrames4D?: number\n  isManifest?: boolean\n  urlImgData?: string\n  buffer?: ArrayBuffer\n}\n\n// TODO centralize shared options\nexport type ImageFromFileOptions = {\n  // the file object\n  file: File | File[]\n  // a name for this image. Default is an empty string\n  name?: string\n  // a color map to use. default is gray\n  colormap?: string\n  // the opacity for this image. default is 1\n  opacity?: number\n  // Allows loading formats where header and image are separate files (e.g. nifti.hdr, nifti.img)\n  urlImgData?: File | null | FileSystemEntry\n  // minimum intensity for color brightness/contrast\n  cal_min?: number\n  // maximum intensity for color brightness/contrast\n  cal_max?: number\n  // whether or not to trust cal_min and cal_max from the nifti header (trusting results in faster loading)\n  trustCalMinMax?: boolean\n  // the percentile to use for setting the robust range of the display values (smart intensity setting for images with large ranges)\n  percentileFrac?: number\n  // whether or not to ignore zero voxels in setting the robust range of display values\n  ignoreZeroVoxels?: boolean\n  // whether or not to use QForm instead of SForm during construction\n  useQFormNotSForm?: boolean\n  // colormap negative for the image\n  colormapNegative?: string\n  // image type\n  imageType?: ImageType\n  frame4D?: number\n  limitFrames4D?: number\n}\n\nexport type ImageFromBase64 = {\n  // base64 string\n  base64: string\n  // a name for this image. Default is an empty string\n  name?: string\n  // a color map to use. default is gray\n  colormap?: string\n  // the opacity for this image. default is 1\n  opacity?: number\n  // minimum intensity for color brightness/contrast\n  cal_min?: number\n  // maximum intensity for color brightness/contrast\n  cal_max?: number\n  // whether or not to trust cal_min and cal_max from the nifti header (trusting results in faster loading)\n  trustCalMinMax?: boolean\n  // the percentile to use for setting the robust range of the display values (smart intensity setting for images with large ranges)\n  percentileFrac?: number\n  // whether or not to ignore zero voxels in setting the robust range of display values\n  ignoreZeroVoxels?: boolean\n  // whether or not use QForm instead of SForm\n  useQFormNotSForm?: boolean\n  colormapNegative?: string\n  frame4D?: number\n  imageType?: ImageType\n  cal_minNeg?: number\n  cal_maxNeg?: number\n  colorbarVisible?: boolean\n  colormapLabel?: LUT | null\n}\n\nexport type ImageMetadata = {\n  // unique if of image\n  id: string\n  // data type\n  datatypeCode: number\n  // number of columns\n  nx: number\n  // number of rows\n  ny: number\n  // number of slices\n  nz: number\n  // number of volumes\n  nt: number\n  // space between columns\n  dx: number\n  // space between rows\n  dy: number\n  // space between slices\n  dz: number\n  // time between volumes\n  dt: number\n  // bits per voxel\n  // TODO was documented as bpx\n  bpv: number\n}\n\nexport const NVImageFromUrlOptions = (\n  url: string,\n  urlImageData = '',\n  name = '',\n  colormap = 'gray',\n  opacity = 1.0,\n  cal_min = NaN,\n  cal_max = NaN,\n  trustCalMinMax = true,\n  percentileFrac = 0.02,\n  ignoreZeroVoxels = false,\n  useQFormNotSForm = false,\n  colormapNegative = '',\n  frame4D = 0,\n  imageType = NVIMAGE_TYPE.UNKNOWN,\n  cal_minNeg = NaN,\n  cal_maxNeg = NaN,\n  colorbarVisible = true,\n  alphaThreshold = false,\n  colormapLabel = null\n): ImageFromUrlOptions => {\n  return {\n    url,\n    urlImageData,\n    name,\n    colormap,\n    colorMap: colormap,\n    opacity,\n    cal_min,\n    cal_max,\n    trustCalMinMax,\n    percentileFrac,\n    ignoreZeroVoxels,\n    useQFormNotSForm,\n    colormapNegative,\n    imageType,\n    cal_minNeg,\n    cal_maxNeg,\n    colorbarVisible,\n    frame4D,\n    alphaThreshold,\n    colormapLabel\n  }\n}\n\n// not included in public docs\n// create NIfTI format SForm from DICOM frame of reference\nexport function getBestTransform(\n  imageDirections: number[],\n  voxelDimensions: number[],\n  imagePosition: number[]\n): number[][] | null {\n  // https://github.com/rii-mango/Papaya/blob/782a19341af77a510d674c777b6da46afb8c65f1/src/js/volume/dicom/header-dicom.js#L605\n  /* Copyright (c) 2012-2015, RII-UTHSCSA\nAll rights reserved.\n\nTHIS PRODUCT IS NOT FOR CLINICAL USE.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the\nfollowing conditions are met:\n\n - Redistributions of source code must retain the above copyright notice, this list of conditions and the following\n   disclaimer.\n\n - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following\n   disclaimer in the documentation and/or other materials provided with the distribution.\n\n - Neither the name of the RII-UTHSCSA nor the names of its contributors may be used to endorse or promote products\n   derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n  const cosines = imageDirections\n  let m = null\n  if (cosines) {\n    const vs = {\n      colSize: voxelDimensions[0],\n      rowSize: voxelDimensions[1],\n      sliceSize: voxelDimensions[2]\n    }\n    const coord = imagePosition\n    const cosx = [cosines[0], cosines[1], cosines[2]]\n    const cosy = [cosines[3], cosines[4], cosines[5]]\n    const cosz = [\n      cosx[1] * cosy[2] - cosx[2] * cosy[1],\n      cosx[2] * cosy[0] - cosx[0] * cosy[2],\n      cosx[0] * cosy[1] - cosx[1] * cosy[0]\n    ]\n    m = [\n      [cosx[0] * vs.colSize * -1, cosy[0] * vs.rowSize * -1, cosz[0] * vs.sliceSize * -1, -1 * coord[0]],\n      [cosx[1] * vs.colSize * -1, cosy[1] * vs.rowSize * -1, cosz[1] * vs.sliceSize * -1, -1 * coord[1]],\n      [cosx[2] * vs.colSize, cosy[2] * vs.rowSize, cosz[2] * vs.sliceSize, coord[2]],\n      [0, 0, 0, 1]\n    ]\n  }\n  return m\n}\n\nfunction str2Buffer(str: string, maxLen: number = 80): number[] {\n  // emulate node.js Buffer.from\n  // remove characters than could be used for shell expansion\n  str = str.replace(/[`$]/g, '')\n  const bytes = []\n  const len = Math.min(maxLen, str.length)\n  for (let i = 0; i < len; i++) {\n    const char = str.charCodeAt(i)\n    bytes.push(char & 0xff)\n  }\n  return bytes\n}\n\n// save NIfTI header into UINT8 array for saving to disk\nexport function hdrToArrayBuffer(hdr: NiftiHeader, isDrawing8 = false, isInputEndian = false): Uint8Array {\n  const SHORT_SIZE = 2\n  const FLOAT32_SIZE = 4\n  let isLittleEndian = true\n  if (isInputEndian) {\n    isLittleEndian = hdr.littleEndian\n  }\n  const byteArray = new Uint8Array(348)\n  const view = new DataView(byteArray.buffer)\n  // sizeof_hdr\n  view.setInt32(0, 348, isLittleEndian)\n\n  // data_type, db_name, extents, session_error, regular are not used\n  // regular set to 'r' (ASCII 114) for Analyze compatibility\n  view.setUint8(38, 114)\n  // dim_info\n  view.setUint8(39, hdr.dim_info)\n\n  // dims\n  for (let i = 0; i < 8; i++) {\n    view.setUint16(40 + SHORT_SIZE * i, hdr.dims[i], isLittleEndian)\n  }\n\n  // intent_p1, intent_p2, intent_p3\n  view.setFloat32(56, hdr.intent_p1, isLittleEndian)\n  view.setFloat32(60, hdr.intent_p2, isLittleEndian)\n  view.setFloat32(64, hdr.intent_p3, isLittleEndian)\n  // intent_code, datatype, bitpix, slice_start\n  view.setInt16(68, hdr.intent_code, isLittleEndian)\n  if (isDrawing8) {\n    view.setInt16(70, 2, isLittleEndian) // 2 = DT_UINT8\n    view.setInt16(72, 8, isLittleEndian)\n  } else {\n    view.setInt16(70, hdr.datatypeCode, isLittleEndian)\n    view.setInt16(72, hdr.numBitsPerVoxel, isLittleEndian)\n  }\n  view.setInt16(74, hdr.slice_start, isLittleEndian)\n\n  // pixdim[8], vox_offset, scl_slope, scl_inter\n  for (let i = 0; i < 8; i++) {\n    view.setFloat32(76 + FLOAT32_SIZE * i, hdr.pixDims[i], isLittleEndian)\n  }\n  if (isDrawing8) {\n    view.setFloat32(108, 352, isLittleEndian)\n    view.setFloat32(112, 1.0, isLittleEndian)\n    view.setFloat32(116, 0.0, isLittleEndian)\n  } else {\n    // view.setFloat32(108, hdr.vox_offset, isLittleEndian)\n    view.setFloat32(108, 352, isLittleEndian)\n    view.setFloat32(112, hdr.scl_slope, isLittleEndian)\n    view.setFloat32(116, hdr.scl_inter, isLittleEndian)\n  }\n  // slice_end\n  view.setInt16(120, hdr.slice_end, isLittleEndian)\n\n  // slice_code, xyzt_units\n  view.setUint8(122, hdr.slice_code)\n  if (hdr.xyzt_units === 0) {\n    view.setUint8(123, 10)\n  } else {\n    view.setUint8(123, hdr.xyzt_units)\n  }\n\n  // cal_max, cal_min, slice_duration, toffset\n  if (isDrawing8) {\n    view.setFloat32(124, 0, isLittleEndian)\n    view.setFloat32(128, 0, isLittleEndian)\n  } else {\n    view.setFloat32(124, hdr.cal_max, isLittleEndian)\n    view.setFloat32(128, hdr.cal_min, isLittleEndian)\n  }\n  view.setFloat32(132, hdr.slice_duration, isLittleEndian)\n  view.setFloat32(136, hdr.toffset, isLittleEndian)\n\n  // glmax, glmin are unused\n\n  // descrip and aux_file\n  // node.js byteArray.set(Buffer.from(hdr.description), 148);\n  byteArray.set(str2Buffer(hdr.description), 148)\n  // node.js: byteArray.set(Buffer.from(hdr.aux_file), 228);\n  byteArray.set(str2Buffer(hdr.aux_file), 228)\n  // qform_code, sform_code\n  view.setInt16(252, hdr.qform_code, isLittleEndian)\n  // if sform unknown, assume NIFTI_XFORM_SCANNER_ANAT\n  if (hdr.sform_code < 1 || hdr.sform_code < 1) {\n    view.setInt16(254, 1, isLittleEndian)\n  } else {\n    view.setInt16(254, hdr.sform_code, isLittleEndian)\n  }\n\n  // quatern_b, quatern_c, quatern_d, qoffset_x, qoffset_y, qoffset_z, srow_x[4], srow_y[4], and srow_z[4]\n  view.setFloat32(256, hdr.quatern_b, isLittleEndian)\n  view.setFloat32(260, hdr.quatern_c, isLittleEndian)\n  view.setFloat32(264, hdr.quatern_d, isLittleEndian)\n  view.setFloat32(268, hdr.qoffset_x, isLittleEndian)\n  view.setFloat32(272, hdr.qoffset_y, isLittleEndian)\n  view.setFloat32(276, hdr.qoffset_z, isLittleEndian)\n  const flattened = hdr.affine.flat()\n  // we only want the first three rows\n  for (let i = 0; i < 12; i++) {\n    view.setFloat32(280 + FLOAT32_SIZE * i, flattened[i], isLittleEndian)\n  }\n  // node.js https://www.w3schools.com/nodejs/met_buffer_from.asp\n  // intent_name and magic\n  // node.js byteArray.set(Buffer.from(hdr.intent_name), 328);\n  //  byteArray.set(str2Buffer(hdr.intent_name), 328)\n  // node.js byteArray.set(Buffer.from(hdr.magic), 344);\n  // byteArray.set(str2Buffer(hdr.magic), 344)\n  view.setInt32(344, 3222382, true) // \"n+1\\0\"\n\n  return byteArray\n  // return byteArray.buffer;\n}\n\ntype Extents = {\n  // min bounding point\n  min: number[]\n  // max bounding point\n  max: number[]\n  // point furthest from origin\n  furthestVertexFromOrigin: number\n  // origin\n  origin: vec3\n}\n\nexport function getExtents(positions: number[], forceOriginInVolume = true): Extents {\n  const nV = Math.round(positions.length / 3) // each vertex has 3 components: XYZ\n  const origin = vec3.fromValues(0, 0, 0) // default center of rotation\n  const mn = vec3.create()\n  const mx = vec3.create()\n  let mxDx = 0.0\n  let nLoops = 1\n  if (forceOriginInVolume) {\n    nLoops = 2\n  } // second pass to reposition origin\n  for (let loop = 0; loop < nLoops; loop++) {\n    mxDx = 0.0\n    for (let i = 0; i < nV; i++) {\n      const v = vec3.fromValues(positions[i * 3], positions[i * 3 + 1], positions[i * 3 + 2])\n      if (i === 0) {\n        vec3.copy(mn, v)\n        vec3.copy(mx, v)\n      }\n      vec3.min(mn, mn, v)\n      vec3.max(mx, mx, v)\n      vec3.subtract(v, v, origin)\n      const dx = vec3.len(v)\n      mxDx = Math.max(mxDx, dx)\n    }\n    if (loop + 1 >= nLoops) {\n      break\n    }\n    let ok = true\n    for (let j = 0; j < 3; ++j) {\n      if (mn[j] > origin[j]) {\n        ok = false\n      }\n      if (mx[j] < origin[j]) {\n        ok = false\n      }\n    }\n    if (ok) {\n      break\n    }\n    vec3.lerp(origin, mn, mx, 0.5)\n    log.debug('origin moved inside volume: ', origin)\n  }\n  const min = [mn[0], mn[1], mn[2]]\n  const max = [mx[0], mx[1], mx[2]]\n  const furthestVertexFromOrigin = mxDx\n  return { min, max, furthestVertexFromOrigin, origin }\n}\n\nexport function isAffineOK(mtx: number[][]): boolean {\n  // A good matrix should not have any components that are not a number\n  // A good spatial transformation matrix should not have a row or column that is all zeros\n  const iOK = [false, false, false, false]\n  const jOK = [false, false, false, false]\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      if (isNaN(mtx[i][j])) {\n        return false\n      }\n    }\n  }\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      if (mtx[i][j] === 0.0) {\n        continue\n      }\n      iOK[i] = true\n      jOK[j] = true\n    }\n  }\n  for (let i = 0; i < 3; i++) {\n    if (!iOK[i]) {\n      return false\n    }\n    if (!jOK[i]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport async function uncompressStream(stream: ReadableStream<Uint8Array>): Promise<ReadableStream<Uint8Array>> {\n  const reader = stream.getReader()\n  const { done, value } = await reader.read()\n\n  // If the first read is done, return an empty stream\n  if (done) {\n    reader.releaseLock()\n    return new ReadableStream({\n      start(controller): void {\n        controller.close()\n      }\n    })\n  }\n\n  // Too short to be compressed\n  if (!value || value.length < 2) {\n    reader.releaseLock()\n    return new ReadableStream({\n      start(controller): void {\n        if (value) {\n          controller.enqueue(value)\n        }\n        controller.close()\n      }\n    })\n  }\n\n  const isGzip = value[0] === 31 && value[1] === 139\n\n  // Create new stream starting with the first chunk\n  const uncompressedStream = new ReadableStream<Uint8Array>({\n    async start(controller): Promise<void> {\n      try {\n        // Enqueue the first chunk we already read\n        controller.enqueue(value)\n\n        // Process remaining chunks\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) {\n            controller.close()\n            reader.releaseLock()\n            break\n          }\n          controller.enqueue(value)\n        }\n      } catch (error) {\n        controller.error(error)\n        reader.releaseLock()\n      }\n    }\n  })\n\n  if (isGzip) {\n    return uncompressedStream.pipeThrough(new DecompressionStream('gzip'))\n  }\n  return uncompressedStream\n}\n","// src/nvimage/ImageWriter.ts\nimport { NIFTI1, NIFTI2 } from 'nifti-reader-js'\nimport { log } from '../logger.js'\nimport { NVUtilities } from '../nvutilities.js'\nimport { hdrToArrayBuffer, NiiDataType } from './utils.js'\nimport type { NVImage, TypedVoxelArray } from './index.js'\n/**\n * Creates a NIFTI1 header object with basic properties.\n */\nexport function createNiftiHeader(\n  dims: number[] = [256, 256, 256],\n  pixDims: number[] = [1, 1, 1],\n  affine: number[] = [1, 0, 0, -128, 0, 1, 0, -128, 0, 0, 1, -128, 0, 0, 0, 1],\n  datatypeCode = NiiDataType.DT_UINT8\n): NIFTI1 {\n  const hdr = new NIFTI1()\n  hdr.littleEndian = true\n  hdr.dims = [3, 1, 1, 1, 0, 0, 0, 0]\n  hdr.dims[0] = Math.max(3, dims.length)\n  for (let i = 0; i < dims.length; i++) {\n    hdr.dims[i + 1] = dims[i]\n  }\n  hdr.pixDims = [1, 1, 1, 1, 1, 0, 0, 0]\n  for (let i = 0; i < dims.length; i++) {\n    hdr.pixDims[i + 1] = pixDims[i]\n  }\n  if (affine.length === 16) {\n    let k = 0\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        hdr.affine[i][j] = affine[k]\n        k++\n      }\n    }\n  }\n  let bpv = 8\n  if (datatypeCode === NiiDataType.DT_INT8 || datatypeCode === NiiDataType.DT_UINT8) {\n    bpv = 8\n  } else if (datatypeCode === NiiDataType.DT_UINT16 || datatypeCode === NiiDataType.DT_INT16) {\n    bpv = 16\n  } else if (\n    datatypeCode === NiiDataType.DT_FLOAT32 ||\n    datatypeCode === NiiDataType.DT_UINT32 ||\n    datatypeCode === NiiDataType.DT_INT32 ||\n    datatypeCode === NiiDataType.DT_RGBA32\n  ) {\n    bpv = 32\n  } else if (datatypeCode === NiiDataType.DT_FLOAT64) {\n    bpv = 64\n  } else {\n    log.warn('Unsupported NIfTI datatypeCode for header creation: ' + datatypeCode)\n  }\n  hdr.datatypeCode = datatypeCode\n  hdr.numBitsPerVoxel = bpv\n  hdr.scl_inter = 0\n  hdr.scl_slope = 1 // Default slope should be 1\n  hdr.sform_code = 2 // Assume affine is RAS\n  hdr.magic = 'n+1'\n  hdr.vox_offset = 352 // Standard offset for NIfTI-1 with no extensions\n  return hdr\n}\n\n/**\n * Creates a Uint8Array representing a NIFTI file (header + optional image data).\n */\nexport function createNiftiArray(\n  dims: number[] = [256, 256, 256],\n  pixDims: number[] = [1, 1, 1],\n  affine: number[] = [1, 0, 0, -128, 0, 1, 0, -128, 0, 0, 1, -128, 0, 0, 0, 1],\n  datatypeCode = NiiDataType.DT_UINT8,\n  img: TypedVoxelArray | Uint8Array = new Uint8Array()\n): Uint8Array {\n  const hdr = createNiftiHeader(dims, pixDims, affine, datatypeCode)\n  // hdrToArrayBuffer should handle creating the byte array correctly based on header info\n  const hdrBytes = hdrToArrayBuffer(hdr, false) // Pass header directly\n\n  // Ensure the header reports the correct offset, usually 352 for simple NIfTI-1\n  hdr.vox_offset = Math.max(352, hdrBytes.length) // Ensure offset is at least header size\n  // Re-generate header bytes if vox_offset changed header size itself (unlikely but possible with extensions)\n  const finalHdrBytes = hdrToArrayBuffer(hdr, false)\n\n  if (img.length < 1) {\n    // Return just the header if no image data\n    return finalHdrBytes\n  }\n\n  // Calculate padding needed to reach vox_offset\n  const paddingSize = Math.max(0, hdr.vox_offset - finalHdrBytes.length)\n  const padding = new Uint8Array(paddingSize)\n\n  // Get the image data bytes correctly\n  const imgBytes = new Uint8Array(img.buffer, img.byteOffset, img.byteLength)\n\n  // Combine header, padding, and image data\n  const totalLength = hdr.vox_offset + imgBytes.length\n  const outputData = new Uint8Array(totalLength)\n\n  outputData.set(finalHdrBytes, 0)\n  outputData.set(padding, finalHdrBytes.length)\n  outputData.set(imgBytes, hdr.vox_offset) // Place image data at the offset\n\n  return outputData\n}\n\n/**\n * Converts NVImage data (header and image) to a NIfTI compliant Uint8Array.\n * Handles potential re-orientation of drawing data if necessary.\n * @param nvImage - The NVImage instance\n * @param drawingBytes - Optional Uint8Array for drawing overlay (assumed to be in RAS order)\n * @returns Uint8Array representing the NIfTI file\n */\nexport function toUint8Array(nvImage: NVImage, drawingBytes: Uint8Array | null = null): Uint8Array {\n  if (!nvImage.hdr) {\n    throw new Error('NVImage header is not defined for toUint8Array')\n  }\n  if (!nvImage.img && drawingBytes === null) {\n    throw new Error('NVImage image data is not defined for toUint8Array')\n  }\n\n  const isDrawing = drawingBytes !== null\n  // Create a deep copy of the header to modify safely for output\n  const hdrCopy = JSON.parse(JSON.stringify(nvImage.hdr)) as NIFTI1 | NIFTI2\n  hdrCopy.vox_offset = Math.max(352, hdrCopy.vox_offset) // Ensure standard offset at least\n\n  // If saving a drawing, ensure output header reflects drawing data type (UINT8) and resets scaling\n  if (isDrawing) {\n    hdrCopy.datatypeCode = NiiDataType.DT_UINT8\n    hdrCopy.numBitsPerVoxel = 8\n    hdrCopy.scl_slope = 1.0\n    hdrCopy.scl_inter = 0.0\n  }\n\n  // Generate header bytes using the potentially modified copy\n  const hdrBytes = hdrToArrayBuffer(hdrCopy, isDrawing)\n\n  let imageBytesToSave: Uint8Array\n\n  if (isDrawing) {\n    const drawingBytesCurrent = drawingBytes! // Not null asserted by isDrawing check\n    const perm = nvImage.permRAS as number[] | undefined\n\n    // Check if reorientation from RAS (drawing space) to native space is needed\n    if (perm && (perm[0] !== 1 || perm[1] !== 2 || perm[2] !== 3)) {\n      log.debug('Reorienting drawing bytes back to native space for saving...')\n      const dims = nvImage.hdr!.dims // Use original native dimensions\n      const nVox = dims[1] * dims[2] * dims[3] // Total native voxels\n\n      // Ensure drawing length matches expected RAS voxel count based on calculated dimsRAS\n      const nVoxRAS = nvImage.dimsRAS ? nvImage.dimsRAS[1] * nvImage.dimsRAS[2] * nvImage.dimsRAS[3] : nVox\n      if (drawingBytesCurrent.length !== nVoxRAS) {\n        console.warn(\n          `Drawing length (${drawingBytesCurrent.length}) does not match expected RAS voxel count (${nVoxRAS}). Cannot reorient drawing reliably.`\n        )\n        imageBytesToSave = drawingBytesCurrent // Use original as fallback\n        // Ensure necessary transformation arrays exist\n      } else if (!nvImage.img2RASstep || !nvImage.img2RASstart || !nvImage.dimsRAS) {\n        console.warn(\n          `Missing RAS transformation info (img2RASstep, img2RASstart, dimsRAS). Cannot reorient drawing reliably.`\n        )\n        imageBytesToSave = drawingBytesCurrent // Use original as fallback\n      } else {\n        const step = nvImage.img2RASstep // [stepX, stepY, stepZ] in native index space for RAS increments\n        const start = nvImage.img2RASstart // [startX, startY, startZ] starting native index for RAS[0,0,0]\n        const dimsRAS = nvImage.dimsRAS // [4, dimRX, dimRY, dimRZ]\n\n        const nativeData = new Uint8Array(nVox)\n        nativeData.fill(0) // Initialize with background value (e.g., 0)\n        const inputDrawingRAS = drawingBytesCurrent // Source data is RAS ordered\n        let rasIndex = 0 // Index for the flat inputDrawingRAS array\n\n        // Iterate through the source RAS dimensions\n        for (let rz = 0; rz < dimsRAS[3]; rz++) {\n          const zi = start[2] + rz * step[2] // Native offset component for this RAS Z\n          for (let ry = 0; ry < dimsRAS[2]; ry++) {\n            const yi = start[1] + ry * step[1] // Native offset component for this RAS Y\n            for (let rx = 0; rx < dimsRAS[1]; rx++) {\n              const xi = start[0] + rx * step[0] // Native offset component for this RAS X\n              const nativeIndex = xi + yi + zi // Calculate the final index in the native orientation buffer\n\n              // Check bounds for safety before writing\n              if (nativeIndex >= 0 && nativeIndex < nVox) {\n                nativeData[nativeIndex] = inputDrawingRAS[rasIndex] // Place RAS voxel into calculated native position\n              } else if (rasIndex < inputDrawingRAS.length) {\n                // Log if we calculate an invalid native index but still have RAS data\n                console.warn(\n                  `Calculated native index ${nativeIndex} is out of bounds [0..${nVox - 1}] during drawing reorientation.`\n                )\n              }\n              rasIndex++ // Increment index into the flat RAS drawing array\n            }\n          }\n        }\n        imageBytesToSave = nativeData // Use the reoriented data\n      }\n    } else {\n      // No reorientation needed (image is already native/RAS or drawing is meant to be native)\n      imageBytesToSave = drawingBytesCurrent\n    }\n  } else {\n    // Not a drawing, use the main image data directly\n    if (!nvImage.img) {\n      throw new Error('NVImage image data is null when trying to save non-drawing.')\n    }\n    imageBytesToSave = new Uint8Array(nvImage.img.buffer, nvImage.img.byteOffset, nvImage.img.byteLength)\n  }\n\n  // Calculate padding needed to reach the specified vox_offset in the header\n  const headerSize = hdrBytes.length\n  const paddingSize = Math.max(0, hdrCopy.vox_offset - headerSize)\n  const padding = new Uint8Array(paddingSize)\n\n  // Combine header, padding, and the selected image data (main or reoriented drawing)\n  const totalLength = hdrCopy.vox_offset + imageBytesToSave.length\n  const outputData = new Uint8Array(totalLength)\n\n  outputData.set(hdrBytes, 0) // Place header at the beginning\n  outputData.set(padding, headerSize) // Place padding after header\n  outputData.set(imageBytesToSave, hdrCopy.vox_offset) // Place image data at the offset\n\n  return outputData\n}\n\n/**\n * Generates the NIfTI file as a Uint8Array and optionally compresses it.\n * @param nvImage - The NVImage instance\n * @param fnm - Filename (used to determine if compression is needed, .gz suffix)\n * @param drawing8 - Optional drawing overlay data\n * @returns Uint8Array (potentially compressed)\n */\nexport async function saveToUint8Array(\n  nvImage: NVImage,\n  fnm: string,\n  drawing8: Uint8Array | null = null\n): Promise<Uint8Array> {\n  // Generate the core NIfTI byte array first\n  const odata = toUint8Array(nvImage, drawing8)\n  // Check filename extension for compression request\n  const compress = fnm.toLowerCase().endsWith('.gz')\n\n  if (compress) {\n    try {\n      // Use NVUtilities to compress the data\n      const compressedData = await NVUtilities.compress(odata, 'gzip')\n      return new Uint8Array(compressedData)\n    } catch (error) {\n      log.error('Compression failed:', error)\n      log.warn('Returning uncompressed data due to compression error.')\n      return odata // Return uncompressed data as fallback\n    }\n  } else {\n    // No compression needed\n    return odata\n  }\n}\n\n/**\n * Generates the NIfTI file data and triggers a browser download.\n * @param nvImage - The NVImage instance\n * @param fnm - Filename for the downloaded file. If empty, returns data only.\n * @param drawing8 - Optional drawing overlay data\n * @returns The generated Uint8Array (potentially compressed)\n */\nexport async function saveToDisk(\n  nvImage: NVImage,\n  fnm: string = '',\n  drawing8: Uint8Array | null = null\n): Promise<Uint8Array> {\n  // Always generate the data first, handling potential compression based on filename\n  const saveData = await saveToUint8Array(nvImage, fnm, drawing8)\n\n  if (!fnm) {\n    log.debug('saveToDisk: empty file name, returning data as Uint8Array rather than triggering download')\n    return saveData // Return data if filename is empty\n  }\n\n  try {\n    // Create a Blob from the final data (compressed or not)\n    const blob = new Blob([saveData.buffer], {\n      type: 'application/octet-stream' // Standard type for binary download\n    })\n    // Create a temporary URL for the Blob\n    const blobUrl = URL.createObjectURL(blob)\n    // Create a link element to trigger the download\n    const link = document.createElement('a')\n    link.setAttribute('href', blobUrl)\n    link.setAttribute('download', fnm) // Set the filename for the download\n    link.style.visibility = 'hidden' // Hide the link\n    document.body.appendChild(link) // Add link to the document\n    link.click() // Simulate a click to trigger download\n    document.body.removeChild(link) // Remove the link from the document\n    // Revoke the temporary URL after a short delay to allow download initiation\n    setTimeout(() => URL.revokeObjectURL(blobUrl), 100)\n  } catch (e) {\n    log.error('Failed to trigger download:', e)\n  }\n\n  return saveData // Return the data regardless of download success/triggering\n}\n","import { vec4 } from 'gl-matrix'\nimport { log } from '../logger.js'\nimport { NiiDataType } from './utils.js'\nimport type { NVImage, TypedVoxelArray } from './index.js'\n\n/**\n * Returns voxel intensity at specified coordinates.\n * @param nvImage - The NVImage instance\n * @param x - X coordinate (0-indexed)\n * @param y - Y coordinate (0-indexed)\n * @param z - Z coordinate (0-indexed)\n * @param frame4D - 4D frame index (0-indexed)\n * @param isReadImaginary - Flag to read from imaginary data array if complex\n * @returns Scaled voxel intensity\n */\nexport function getValue(\n  nvImage: NVImage,\n  x: number,\n  y: number,\n  z: number,\n  frame4D = 0,\n  isReadImaginary = false\n): number {\n  if (!nvImage.hdr) {\n    throw new Error('getValue: NVImage header is not defined.')\n  }\n  if (!isReadImaginary && !nvImage.img) {\n    throw new Error('getValue: NVImage image data is not defined.')\n  }\n  if (isReadImaginary && !nvImage.imaginary) {\n    log.warn('getValue: Attempted to read imaginary data, but none exists.')\n    return 0\n  }\n\n  const nx = nvImage.hdr.dims[1]\n  const ny = nvImage.hdr.dims[2]\n  const nz = nvImage.hdr.dims[3]\n\n  const perm = nvImage.permRAS!.slice()\n  if (perm[0] !== 1 || perm[1] !== 2 || perm[2] !== 3) {\n    const pos = vec4.fromValues(x, y, z, 1)\n    vec4.transformMat4(pos, pos, nvImage.toRASvox!)\n    x = pos[0]\n    y = pos[1]\n    z = pos[2]\n  }\n\n  // Clamp coordinates to valid range\n  x = Math.max(0, Math.min(Math.round(x), nx - 1))\n  y = Math.max(0, Math.min(Math.round(y), ny - 1))\n  z = Math.max(0, Math.min(Math.round(z), nz - 1))\n  frame4D = Math.max(0, frame4D)\n\n  let vx = x + y * nx + z * nx * ny // voxel index within a 3D volume\n\n  // Handle RGB(A) data - calculate luminance\n  if (nvImage.hdr.datatypeCode === NiiDataType.DT_RGBA32) {\n    if (!nvImage.img) {\n      return 0\n    }\n    vx *= 4 // 4 bytes per voxel\n    // Check bounds for RGBA index access\n    if (vx + 2 >= nvImage.img.length) {\n      log.warn(`getValue: Calculated index ${vx} out of bounds for RGBA data.`)\n      return 0 // Or throw? Return 0 for safety.\n    }\n    // convert rgb to luminance Y = 0.2126 R + 0.7152 G + 0.0722 B (Rec. 709)\n    const lum = nvImage.img[vx] * 0.2126 + nvImage.img[vx + 1] * 0.7152 + nvImage.img[vx + 2] * 0.0722\n    return Math.round(lum)\n  }\n  if (nvImage.hdr.datatypeCode === NiiDataType.DT_RGB24) {\n    if (!nvImage.img) {\n      return 0\n    }\n    vx *= 3 // 3 bytes per voxel\n    if (vx + 2 >= nvImage.img.length) {\n      log.warn(`getValue: Calculated index ${vx} out of bounds for RGB data.`)\n      return 0\n    }\n    const lum = nvImage.img[vx] * 0.2126 + nvImage.img[vx + 1] * 0.7152 + nvImage.img[vx + 2] * 0.0722\n    return Math.round(lum)\n  }\n\n  // Calculate offset for 4D frame\n  const nVox3D = nx * ny * nz\n  const volOffset = frame4D * nVox3D\n  const finalVxIndex = vx + volOffset\n\n  // Select the correct data array\n  const dataArray = isReadImaginary ? nvImage.imaginary! : nvImage.img!\n\n  // Check final index bounds\n  if (finalVxIndex < 0 || finalVxIndex >= dataArray.length) {\n    return 0\n  }\n\n  const rawValue = dataArray[finalVxIndex]\n\n  // Apply scaling slope and intercept\n  // Use default 1.0 slope if hdr value is 0 or NaN, default 0.0 intercept if NaN\n  const slope = isNaN(nvImage.hdr.scl_slope) || nvImage.hdr.scl_slope === 0 ? 1.0 : nvImage.hdr.scl_slope\n  const inter = isNaN(nvImage.hdr.scl_inter) ? 0.0 : nvImage.hdr.scl_inter\n\n  return slope * rawValue + inter\n}\n\n/**\n * Reads a 3D slab of voxels from a volume, specified in RAS coordinates.\n * @param nvImage - The NVImage instance\n * @param voxStartRAS - First row, column, slice (RAS order, 0-indexed) for selection\n * @param voxEndRAS - Final row, column, slice (RAS order, 0-indexed) for selection\n * @param dataType - Output array type: 'same', 'uint8', 'float32', 'scaled', 'normalized', 'windowed'\n * @returns Tuple: [TypedVoxelArray, slabDimensions]\n */\nexport function getVolumeData(\n  nvImage: NVImage,\n  voxStartRAS: number[] = [-1, 0, 0],\n  voxEndRAS: number[] = [0, 0, 0],\n  dataType = 'same'\n): [TypedVoxelArray, number[]] {\n  const defaultResult: [TypedVoxelArray, number[]] = [new Uint8Array(), [0, 0, 0]]\n\n  if (!nvImage.hdr || !nvImage.img || !nvImage.dimsRAS || !nvImage.img2RASstep || !nvImage.img2RASstart) {\n    log.error('getVolumeData: Missing required NVImage properties (hdr, img, dimsRAS, img2RASstep/start).')\n    return defaultResult\n  }\n  // Ensure input arrays have 3 elements\n  voxStartRAS = voxStartRAS.slice(0, 3)\n  voxEndRAS = voxEndRAS.slice(0, 3)\n\n  if (Math.min(...voxStartRAS) < 0 || Math.min(...voxEndRAS) < 0) {\n    log.warn('getVolumeData: Invalid start or end coordinates provided.')\n    return defaultResult\n  }\n\n  const dimsRAS = nvImage.dimsRAS.slice(1, 4) // Get RAS dimensions [nx, ny, nz]\n\n  // Clamp coordinates to valid RAS range and ensure start <= end\n  for (let i = 0; i < 3; i++) {\n    voxStartRAS[i] = Math.max(0, Math.min(Math.round(voxStartRAS[i]), dimsRAS[i] - 1))\n    voxEndRAS[i] = Math.max(0, Math.min(Math.round(voxEndRAS[i]), dimsRAS[i] - 1))\n    if (voxEndRAS[i] < voxStartRAS[i]) {\n      const tmp = voxEndRAS[i]\n      voxEndRAS[i] = voxStartRAS[i]\n      voxStartRAS[i] = tmp\n    }\n  }\n\n  const slabDims = [\n    voxEndRAS[0] - voxStartRAS[0] + 1,\n    voxEndRAS[1] - voxStartRAS[1] + 1,\n    voxEndRAS[2] - voxStartRAS[2] + 1\n  ]\n  const slabNVox = slabDims[0] * slabDims[1] * slabDims[2]\n\n  if (slabNVox <= 0) {\n    log.warn('getVolumeData: Calculated slab size is zero or negative.')\n    return defaultResult\n  }\n\n  let OutputArrayConstructor: new (length: number) => TypedVoxelArray = nvImage.img.constructor as new (\n    length: number\n  ) => TypedVoxelArray // Default to same as input\n\n  if (dataType === 'uint8') {\n    OutputArrayConstructor = Uint8Array\n  } else if (dataType === 'int16') {\n    OutputArrayConstructor = Int16Array\n  } else if (dataType === 'uint16') {\n    OutputArrayConstructor = Uint16Array\n  } else if (dataType === 'float32' || dataType === 'scaled' || dataType === 'normalized' || dataType === 'windowed') {\n    OutputArrayConstructor = Float32Array\n  } else if (dataType === 'float64') {\n    OutputArrayConstructor = Float64Array\n  } else if (dataType !== 'same') {\n    log.warn(`getVolumeData: Unsupported dataType '${dataType}'. Using 'same'.`)\n  }\n\n  // Create the output array\n  let outputImg: TypedVoxelArray\n  try {\n    outputImg = new OutputArrayConstructor(slabNVox)\n  } catch (e) {\n    log.error(`getVolumeData: Failed to create output array for dataType '${dataType}'.`, e)\n    return defaultResult\n  }\n\n  // Get transformation parameters\n  const step = nvImage.img2RASstep\n  const start = nvImage.img2RASstart\n  const sourceImg = nvImage.img // Source data in native orientation\n\n  let outputIndex = 0\n  // Iterate through the requested RAS slab dimensions\n  for (let rz = voxStartRAS[2]; rz <= voxEndRAS[2]; rz++) {\n    const zi = start[2] + rz * step[2] // Native offset component for RAS Z\n    for (let ry = voxStartRAS[1]; ry <= voxEndRAS[1]; ry++) {\n      const yi = start[1] + ry * step[1] // Native offset component for RAS Y\n      for (let rx = voxStartRAS[0]; rx <= voxEndRAS[0]; rx++) {\n        const xi = start[0] + rx * step[0] // Native offset component for RAS X\n        const nativeIndex = xi + yi + zi // Final index in the native source buffer\n\n        let value = 0\n        // Safely read from source image\n        if (nativeIndex >= 0 && nativeIndex < sourceImg.length) {\n          value = sourceImg[nativeIndex]\n        }\n\n        // Store the raw value in the output array\n        outputImg[outputIndex++] = value\n      }\n    }\n  }\n\n  // Apply post-processing based on dataType AFTER extracting raw values\n  const slope = isNaN(nvImage.hdr.scl_slope) || nvImage.hdr.scl_slope === 0 ? 1.0 : nvImage.hdr.scl_slope\n  const inter = isNaN(nvImage.hdr.scl_inter) ? 0.0 : nvImage.hdr.scl_inter\n\n  if (dataType === 'scaled' || dataType === 'normalized' || dataType === 'windowed') {\n    // Ensure output is Float32 if scaling is requested but wasn't the original type\n    if (!(outputImg instanceof Float32Array)) {\n      log.warn(`getVolumeData: Converting output to Float32 for scaling type '${dataType}'.`)\n      outputImg = Float32Array.from(outputImg)\n    }\n    for (let i = 0; i < outputImg.length; i++) {\n      outputImg[i] = outputImg[i] * slope + inter\n    }\n  }\n\n  if (dataType === 'normalized' || dataType === 'windowed') {\n    let minVal = nvImage.cal_min\n    let maxVal = nvImage.cal_max\n\n    if (dataType === 'normalized') {\n      minVal = nvImage.global_min\n      maxVal = nvImage.global_max\n    }\n\n    const range = maxVal - minVal\n    const scale = range === 0 ? 0 : 1 / range\n\n    for (let i = 0; i < outputImg.length; i++) {\n      outputImg[i] = (outputImg[i] - minVal) * scale\n      outputImg[i] = Math.max(0, Math.min(outputImg[i], 1))\n    }\n  }\n\n  return [outputImg, slabDims]\n}\n\n/**\n * Writes a 3D slab of voxels into a volume, specified in RAS coordinates.\n * @param nvImage - The NVImage instance to modify\n * @param voxStartRAS - First row, column, slice (RAS order, 0-indexed) for selection\n * @param voxEndRAS - Final row, column, slice (RAS order, 0-indexed) for selection\n * @param slabData - Array of voxel values (TypedVoxelArray) matching slab dimensions\n */\nexport function setVolumeData(\n  nvImage: NVImage,\n  voxStartRAS: number[] = [-1, 0, 0],\n  voxEndRAS: number[] = [0, 0, 0],\n  slabData: TypedVoxelArray = new Uint8Array()\n): void {\n  if (!nvImage.hdr || !nvImage.img || !nvImage.dimsRAS || !nvImage.img2RASstep || !nvImage.img2RASstart) {\n    log.error('setVolumeData: Missing required NVImage properties (hdr, img, dimsRAS, img2RASstep/start).')\n    return\n  }\n\n  if (slabData.length < 1) {\n    log.warn('setVolumeData: Input slabData is empty.')\n    return\n  }\n  // Ensure input arrays have 3 elements\n  voxStartRAS = voxStartRAS.slice(0, 3)\n  voxEndRAS = voxEndRAS.slice(0, 3)\n\n  if (Math.min(...voxStartRAS) < 0 || Math.min(...voxEndRAS) < 0) {\n    log.warn('setVolumeData: Invalid start or end coordinates provided.')\n    return\n  }\n\n  const dimsRAS = nvImage.dimsRAS.slice(1, 4) // Get RAS dimensions [nx, ny, nz]\n\n  // Clamp coordinates to valid RAS range and ensure start <= end\n  for (let i = 0; i < 3; i++) {\n    voxStartRAS[i] = Math.max(0, Math.min(Math.round(voxStartRAS[i]), dimsRAS[i] - 1))\n    voxEndRAS[i] = Math.max(0, Math.min(Math.round(voxEndRAS[i]), dimsRAS[i] - 1))\n    if (voxEndRAS[i] < voxStartRAS[i]) {\n      const tmp = voxEndRAS[i]\n      voxEndRAS[i] = voxStartRAS[i]\n      voxStartRAS[i] = tmp\n    }\n  }\n\n  const slabDims = [\n    voxEndRAS[0] - voxStartRAS[0] + 1,\n    voxEndRAS[1] - voxStartRAS[1] + 1,\n    voxEndRAS[2] - voxStartRAS[2] + 1\n  ]\n  const slabNVox = slabDims[0] * slabDims[1] * slabDims[2]\n\n  if (slabNVox <= 0) {\n    log.warn('setVolumeData: Calculated slab size is zero or negative.')\n    return\n  }\n\n  if (slabData.length < slabNVox) {\n    log.error(\n      `setVolumeData: Input slabData length (${slabData.length}) is less than the calculated slab size (${slabNVox}).`\n    )\n    return\n  }\n\n  // Get transformation parameters\n  const step = nvImage.img2RASstep\n  const start = nvImage.img2RASstart\n  const targetImg = nvImage.img // Target data in native orientation\n\n  let sourceIndex = 0\n  // Iterate through the requested RAS slab dimensions\n  for (let rz = voxStartRAS[2]; rz <= voxEndRAS[2]; rz++) {\n    const zi = start[2] + rz * step[2] // Native offset component for RAS Z\n    for (let ry = voxStartRAS[1]; ry <= voxEndRAS[1]; ry++) {\n      const yi = start[1] + ry * step[1] // Native offset component for RAS Y\n      for (let rx = voxStartRAS[0]; rx <= voxEndRAS[0]; rx++) {\n        const xi = start[0] + rx * step[0] // Native offset component for RAS X\n        const nativeIndex = xi + yi + zi // Final index in the native target buffer\n\n        if (nativeIndex >= 0 && nativeIndex < targetImg.length) {\n          targetImg[nativeIndex] = slabData[sourceIndex]\n        }\n        sourceIndex++\n      }\n    }\n  }\n  // Note: This function does NOT handle inverse scaling (converting scaled slabData back to raw).\n  // The input slabData is assumed to be in the correct raw data type for the target nvImage.img.\n}\n","import { NIFTI1 } from 'nifti-reader-js'\nimport { mat4, vec4, vec3 } from 'gl-matrix'\nimport { log } from '../../logger.js'\nimport { NVUtilities } from '../../nvutilities.js'\nimport type { NVImage } from '../index.js'\nimport { NiiDataType } from '../utils.js'\n\n// not included in public docs\n// MGH images can contain strings in the optional footer\nfunction readFirstTag1String(view: DataView, offset: number, footerLength: number): string {\n  const end = offset + footerLength\n  let pos = offset\n\n  while (pos + 12 <= end) {\n    const tag = view.getInt32(pos, false) // tag (little-endian)\n    // skip 4 bytes (padding), read 4-byte length\n    const length = view.getInt32(pos + 8, false) // length of data\n    pos += 12\n    if (tag !== 1) {\n      pos += length // skip non-tag-1 data\n      continue\n    }\n    // Found tag 1, now decode the first length-prefixed string\n    if (pos + 4 > end) {\n      return ''\n    }\n    const strLen = view.getInt32(pos, false) // >>> 0 // big-endian\n    pos += 4\n    if (strLen <= 1 || pos + strLen > end) {\n      return ''\n    }\n    const raw = new Uint8Array(view.buffer, pos, strLen)\n    return new TextDecoder('utf-8').decode(raw.slice(0, -1)) // remove null terminator\n  }\n  return ''\n}\n\n/**\n * Reads FreeSurfer MGH/MGZ format image, modifying the provided NVImage header\n * and returning the raw image data buffer.\n * @param nvImage - The NVImage instance whose header will be modified.\n * @param buffer - ArrayBuffer containing the MGH/MGZ file data.\n * @returns Promise resolving to the imgRaw ArrayBuffer or null on critical error.\n */\nexport async function readMgh(nvImage: NVImage, buffer: ArrayBuffer): Promise<ArrayBuffer | null> {\n  if (!nvImage.hdr) {\n    log.warn('readMgh called before nvImage.hdr was initialized. Creating default.')\n    nvImage.hdr = new NIFTI1() // Ensure header object exists\n  }\n  const hdr = nvImage.hdr\n  hdr.littleEndian = false\n\n  let raw = buffer\n  let reader = new DataView(raw)\n\n  // Decompression logic\n  if (raw.byteLength >= 2 && reader.getUint8(0) === 31 && reader.getUint8(1) === 139) {\n    try {\n      raw = await NVUtilities.decompressToBuffer(new Uint8Array(buffer))\n      reader = new DataView(raw)\n    } catch (err) {\n      log.error('Failed to decompress MGZ file.', err)\n      return null\n    }\n  }\n\n  if (raw.byteLength < 284) {\n    log.error('File too small to be a valid MGH/MGZ header.')\n    return null\n  }\n\n  // --- Read MGH Header Fields ---\n  const version = reader.getInt32(0, false)\n  const width = reader.getInt32(4, false)\n  const height = reader.getInt32(8, false)\n  const depth = reader.getInt32(12, false)\n  const nframes = reader.getInt32(16, false)\n  const mtype = reader.getInt32(20, false)\n  const spacingX = reader.getFloat32(30, false)\n  const spacingY = reader.getFloat32(34, false)\n  const spacingZ = reader.getFloat32(38, false)\n  const xr = reader.getFloat32(42, false)\n  const xa = reader.getFloat32(46, false)\n  const xs = reader.getFloat32(50, false)\n  const yr = reader.getFloat32(54, false)\n  const ya = reader.getFloat32(58, false)\n  const ys = reader.getFloat32(62, false)\n  const zr = reader.getFloat32(66, false)\n  const za = reader.getFloat32(70, false)\n  const zs = reader.getFloat32(74, false)\n  const cr = reader.getFloat32(78, false)\n  const ca = reader.getFloat32(82, false)\n  const cs = reader.getFloat32(86, false)\n\n  if (version !== 1) {\n    log.warn(`Unexpected MGH version: ${version}.`)\n  }\n  if (width <= 0 || height <= 0 || depth <= 0) {\n    log.error(`Invalid MGH dimensions: ${width}x${height}x${depth}`)\n    return null\n  }\n\n  // Map MGH data type directly onto nvImage.hdr\n  switch (mtype) {\n    case 0:\n      hdr.numBitsPerVoxel = 8\n      hdr.datatypeCode = NiiDataType.DT_UINT8\n      break\n    case 4:\n      hdr.numBitsPerVoxel = 16\n      hdr.datatypeCode = NiiDataType.DT_INT16\n      break\n    case 1:\n      hdr.numBitsPerVoxel = 32\n      hdr.datatypeCode = NiiDataType.DT_INT32\n      break\n    case 3:\n      hdr.numBitsPerVoxel = 32\n      hdr.datatypeCode = NiiDataType.DT_FLOAT32\n      break\n    default:\n      log.error(`Unsupported MGH data type: ${mtype}`)\n      return null\n  }\n\n  // Set dimensions directly onto nvImage.hdr\n  hdr.dims[1] = width\n  hdr.dims[2] = height\n  hdr.dims[3] = depth\n  hdr.dims[4] = Math.max(1, nframes)\n  hdr.dims[0] = hdr.dims[4] > 1 ? 4 : 3\n\n  // Set pixel dimensions directly onto nvImage.hdr (using abs)\n  hdr.pixDims[1] = Math.abs(spacingX)\n  hdr.pixDims[2] = Math.abs(spacingY)\n  hdr.pixDims[3] = Math.abs(spacingZ)\n  hdr.pixDims[4] = 0\n\n  hdr.sform_code = 1\n  hdr.qform_code = 0\n  const rot44 = mat4.fromValues(\n    xr * hdr.pixDims[1],\n    yr * hdr.pixDims[2],\n    zr * hdr.pixDims[3],\n    0,\n    xa * hdr.pixDims[1],\n    ya * hdr.pixDims[2],\n    za * hdr.pixDims[3],\n    0,\n    xs * hdr.pixDims[1],\n    ys * hdr.pixDims[2],\n    zs * hdr.pixDims[3],\n    0,\n    0,\n    0,\n    0,\n    1\n  )\n\n  const PcrsVec = vec4.fromValues(hdr.dims[1] / 2.0, hdr.dims[2] / 2.0, hdr.dims[3] / 2.0, 1)\n  const PxyzOffsetVec = vec4.create()\n  vec4.transformMat4(PxyzOffsetVec, PcrsVec, rot44)\n  const translation = vec3.fromValues(cr - PxyzOffsetVec[0], ca - PxyzOffsetVec[1], cs - PxyzOffsetVec[2])\n\n  hdr.affine = [\n    [rot44[0], rot44[1], rot44[2], translation[0]],\n    [rot44[4], rot44[5], rot44[6], translation[1]],\n    [rot44[8], rot44[9], rot44[10], translation[2]],\n    [0, 0, 0, 1]\n  ]\n\n  hdr.vox_offset = 284\n  hdr.magic = 'n+1'\n\n  // Check data size\n  const nBytesPerVoxel = hdr.numBitsPerVoxel / 8\n  const nVoxels = width * height * depth * hdr.dims[4]\n  const expectedBytes = nVoxels * nBytesPerVoxel\n  const remainingBytes = raw.byteLength - hdr.vox_offset\n\n  if (remainingBytes < expectedBytes) {\n    log.error(`MGH image data size mismatch: expected ${expectedBytes}, found ${remainingBytes}`)\n    return null\n  } else if (remainingBytes > expectedBytes) {\n    log.warn(`MGH file has extra ${remainingBytes - expectedBytes} bytes after image data. Truncating.`)\n    // n.b. ignore first 20 bytes of footer (5 * float32)\n    const footerStart = hdr.vox_offset + expectedBytes + 20\n    const footerLength = raw.byteLength - footerStart\n    if (footerLength > 12) {\n      const firstTag1String = readFirstTag1String(reader, footerStart, footerLength)\n      const isLUT = firstTag1String.toLowerCase().endsWith('lut.txt')\n      if (isLUT) {\n        // TODO: we assume labels are integers, not floats!\n        // TODO: we could support specific FreeSurfer LUTs\n        hdr.intent_code = 1002\n      }\n      log.debug(`First tag 1 string: ${firstTag1String} isLUT: ${isLUT}`)\n    }\n  }\n\n  // Return only the raw image data buffer\n  const imgRaw = raw.slice(hdr.vox_offset, hdr.vox_offset + expectedBytes)\n  return imgRaw\n}\n","import { isCompressed, decompressAsync, readHeaderAsync, readImage } from 'nifti-reader-js'\nimport { log } from '../../logger.js'\nimport type { NVImage } from '../index.js'\nimport { NiiDataType } from '../utils.js'\n\n/**\n * Reads NIfTI format image (.nii, .nii.gz), modifying the provided NVImage header\n * and returning the raw image data buffer.\n * @param nvImage - The NVImage instance whose header will be modified.\n * @param buffer - ArrayBuffer containing the NIfTI file data.\n * @returns Promise resolving to the imgRaw ArrayBufferLike or null on critical error.\n */\nexport async function readNifti(nvImage: NVImage, buffer: ArrayBuffer): Promise<ArrayBufferLike | null> {\n  let dataBuffer = buffer // Work with a local variable\n  let imgRaw: ArrayBufferLike | null = null\n\n  try {\n    if (isCompressed(dataBuffer as ArrayBuffer)) {\n      log.debug(`Decompressing NIfTI file: ${nvImage.name}`) // Use name from nvImage instance\n      dataBuffer = await decompressAsync(dataBuffer as ArrayBuffer)\n      log.debug(`Decompression complete for: ${nvImage.name}`)\n    }\n\n    // Ensure buffer is still valid after potential decompression\n    if (!dataBuffer || dataBuffer.byteLength === 0) {\n      throw new Error('Buffer became invalid after decompression attempt.')\n    }\n\n    nvImage.hdr = await readHeaderAsync(dataBuffer as ArrayBuffer)\n\n    if (nvImage.hdr === null) {\n      throw new Error(`Failed to read NIfTI header: ${nvImage.name}`)\n    }\n\n    if (nvImage.hdr.cal_min === 0 && nvImage.hdr.cal_max === 255 && nvImage.hdr.datatypeCode !== NiiDataType.DT_UINT8) {\n      log.debug(`Resetting suspicious cal_min/max (0/255) for non-uint8 NIfTI: ${nvImage.name}`)\n      nvImage.hdr.cal_min = 0.0 // Use 0.0 to signal unset/recalculate later\n      nvImage.hdr.cal_max = 0.0\n    }\n\n    imgRaw = readImage(nvImage.hdr, dataBuffer as ArrayBuffer)\n\n    if (imgRaw === null) {\n      throw new Error(`nifti-reader-js readImage returned null for ${nvImage.name}`)\n    }\n\n    return imgRaw\n  } catch (err) {\n    log.error(`Error processing NIfTI file ${nvImage.name}:`, err)\n    nvImage.hdr = null\n    return null\n  }\n}\n","import { NIFTI1 } from 'nifti-reader-js'\nimport { mat3, mat4, vec3 } from 'gl-matrix'\nimport { log } from '../../logger.js'\nimport { NVUtilities } from '../../nvutilities.js'\nimport type { NVImage } from '../index.js'\nimport { NiiDataType } from '../utils.js'\n\n/**\n * Reads NRRD/NHDR format image, modifying the provided NVImage header\n * and returning the raw image data buffer.\n * @param nvImage - The NVImage instance whose header will be modified.\n * @param dataBuffer - ArrayBuffer containing the NRRD header or full file.\n * @param pairedImgData - Optional ArrayBuffer for detached data file (used by NHDR).\n * @returns Promise resolving to the imgRaw ArrayBuffer or null on critical error.\n */\nexport async function readNrrd(\n  nvImage: NVImage,\n  dataBuffer: ArrayBuffer,\n  pairedImgData: ArrayBuffer | null = null\n): Promise<ArrayBuffer | null> {\n  if (!nvImage.hdr) {\n    log.warn('readNrrd called before nvImage.hdr was initialized. Creating default.')\n    nvImage.hdr = new NIFTI1()\n  }\n  const hdr = nvImage.hdr // Use nvImage.hdr directly\n  hdr.pixDims = [1, 1, 1, 1, 1, 0, 0, 0]\n\n  const len = dataBuffer.byteLength\n  let txt: string | null = null\n  const bytes = new Uint8Array(dataBuffer)\n\n  for (let i = 1; i < len; i++) {\n    if (bytes[i - 1] === 10 && bytes[i] === 10) {\n      const v = dataBuffer.slice(0, i - 1)\n      txt = new TextDecoder().decode(v)\n      hdr.vox_offset = i + 1 // Set based on header end position\n      break\n    }\n  }\n\n  if (txt === null) {\n    log.error('readNrrd: could not extract txt')\n    return null\n  }\n\n  const lines = txt.split('\\n')\n  if (!lines[0].startsWith('NRRD')) {\n    log.error('Invalid NRRD image (magic signature missing)')\n    return null\n  }\n\n  const n = lines.length\n  let isGz = false\n  let isMicron = false\n  let isDetached = false\n  const mat33 = mat3.fromValues(NaN, 0, 0, 0, 1, 0, 0, 0, 1)\n  const offset = vec3.fromValues(0, 0, 0)\n  let rot33 = mat3.create() // Initialize space correction matrix\n\n  for (let i = 1; i < n; i++) {\n    let str = lines[i]\n    if (str.length === 0 || str[0] === '#') {\n      if (str.startsWith('#')) {\n        continue\n      }\n      if (str.trim().length === 0) {\n        continue\n      }\n    }\n    str = str.toLowerCase()\n    const items = str.split(':')\n    if (items.length < 2) {\n      continue\n    }\n    const key = items[0].trim()\n    let value = items[1].trim()\n\n    value = value.replaceAll(')', ' ')\n    value = value.replaceAll('(', ' ')\n    value = value.trim()\n\n    switch (key) {\n      case 'data file':\n        isDetached = true\n        break\n      case 'encoding':\n        if (value.includes('raw')) {\n          isGz = false\n        } else if (value.includes('gz')) {\n          isGz = true\n        } else {\n          log.error('Unsupported NRRD encoding')\n          return null\n        }\n        break\n      case 'type':\n        switch (value) {\n          case 'uchar':\n          case 'unsigned char':\n          case 'uint8':\n          case 'uint8_t':\n            hdr.numBitsPerVoxel = 8\n            hdr.datatypeCode = NiiDataType.DT_UINT8\n            break\n          case 'signed char':\n          case 'int8':\n          case 'int8_t':\n            hdr.numBitsPerVoxel = 8\n            hdr.datatypeCode = NiiDataType.DT_INT8\n            break\n          case 'short':\n          case 'short int':\n          case 'signed short':\n          case 'signed short int':\n          case 'int16':\n          case 'int16_t':\n            hdr.numBitsPerVoxel = 16\n            hdr.datatypeCode = NiiDataType.DT_INT16\n            break\n          case 'ushort':\n          case 'unsigned short':\n          case 'unsigned short int':\n          case 'uint16':\n          case 'uint16_t':\n            hdr.numBitsPerVoxel = 16\n            hdr.datatypeCode = NiiDataType.DT_UINT16\n            break\n          case 'int':\n          case 'signed int':\n          case 'int32':\n          case 'int32_t':\n            hdr.numBitsPerVoxel = 32\n            hdr.datatypeCode = NiiDataType.DT_INT32\n            break\n          case 'uint':\n          case 'unsigned int':\n          case 'uint32':\n          case 'uint32_t':\n            hdr.numBitsPerVoxel = 32\n            hdr.datatypeCode = NiiDataType.DT_UINT32\n            break\n          case 'float':\n            hdr.numBitsPerVoxel = 32\n            hdr.datatypeCode = NiiDataType.DT_FLOAT32\n            break\n          case 'double':\n            hdr.numBitsPerVoxel = 64\n            hdr.datatypeCode = NiiDataType.DT_FLOAT64\n            break\n          default:\n            log.error('Unsupported NRRD data type: ' + value)\n            return null\n        }\n        break\n      case 'spacings':\n        {\n          const values = value.split(/[ ,]+/)\n          for (let d = 0; d < values.length; d++) {\n            hdr.pixDims[d + 1] = parseFloat(values[d])\n          }\n        }\n        break\n      case 'sizes':\n        {\n          const dims = value.split(/[ ,]+/)\n          hdr.dims[0] = dims.length\n          for (let d = 0; d < dims.length; d++) {\n            hdr.dims[d + 1] = parseInt(dims[d])\n          }\n        }\n        break\n      case 'endian':\n        if (value.includes('little')) {\n          hdr.littleEndian = true\n        } else if (value.includes('big')) {\n          hdr.littleEndian = false\n        }\n        break\n      case 'space directions':\n        {\n          const vs = value.split(/[ ,]+/)\n          if (vs.length === 9) {\n            for (let d = 0; d < 9; d++) {\n              mat33[d] = parseFloat(vs[d])\n            }\n          }\n        }\n        break\n      case 'space origin':\n        {\n          const ts = value.split(/[ ,]+/)\n          if (ts.length === 3) {\n            offset[0] = parseFloat(ts[0])\n            offset[1] = parseFloat(ts[1])\n            offset[2] = parseFloat(ts[2])\n          }\n        }\n        break\n      case 'space units':\n        if (value.includes('microns')) {\n          isMicron = true\n        }\n        break\n      case 'space':\n        if (value.includes('right-anterior-superior') || value.includes('ras')) {\n          rot33 = mat3.fromValues(1, 0, 0, 0, 1, 0, 0, 0, 1)\n        } else if (value.includes('left-anterior-superior') || value.includes('las')) {\n          rot33 = mat3.fromValues(-1, 0, 0, 0, 1, 0, 0, 0, 1)\n        } else if (value.includes('left-posterior-superior') || value.includes('lps')) {\n          rot33 = mat3.fromValues(-1, 0, 0, 0, -1, 0, 0, 0, 1)\n        } else {\n          log.warn('Unsupported NRRD space value:', value)\n        }\n        break\n      default:\n        log.warn('Unknown:', key)\n        break\n    }\n  }\n\n  if (!isNaN(mat33[0])) {\n    hdr.sform_code = 2\n    if (isMicron) {\n      // @ts-expect-error FIXME: converting mat3 to mat4\n      mat4.multiplyScalar(mat33, mat33, 0.001)\n      offset[0] *= 0.001\n      offset[1] *= 0.001\n      offset[2] *= 0.001\n    }\n    if (rot33[0] < 0) {\n      offset[0] = -offset[0]\n    }\n    if (rot33[4] < 0) {\n      offset[1] = -offset[1]\n    }\n    if (rot33[8] < 0) {\n      offset[2] = -offset[2]\n    }\n    mat3.multiply(mat33, rot33, mat33)\n\n    const mat = mat4.fromValues(\n      mat33[0],\n      mat33[3],\n      mat33[6],\n      offset[0],\n      mat33[1],\n      mat33[4],\n      mat33[7],\n      offset[1],\n      mat33[2],\n      mat33[5],\n      mat33[8],\n      offset[2],\n      0,\n      0,\n      0,\n      1\n    )\n\n    // Ensure vox2mm function is accessible via nvImage\n    if (!nvImage.vox2mm) {\n      return null\n    }\n    const mm000 = nvImage.vox2mm([0, 0, 0], mat)\n    const mm100 = nvImage.vox2mm([1, 0, 0], mat)\n    vec3.subtract(mm100, mm100, mm000)\n    const mm010 = nvImage.vox2mm([0, 1, 0], mat)\n    vec3.subtract(mm010, mm010, mm000)\n    const mm001 = nvImage.vox2mm([0, 0, 1], mat)\n    vec3.subtract(mm001, mm001, mm000)\n    hdr.pixDims[1] = vec3.length(mm100)\n    hdr.pixDims[2] = vec3.length(mm010)\n    hdr.pixDims[3] = vec3.length(mm001)\n\n    hdr.affine = [\n      [mat[0], mat[1], mat[2], mat[3]],\n      [mat[4], mat[5], mat[6], mat[7]],\n      [mat[8], mat[9], mat[10], mat[11]],\n      [0, 0, 0, 1]\n    ]\n  }\n  let imgRaw: ArrayBuffer | null = null // Use null for error case\n\n  // Data source depends on whether header was detached\n  const sourceBuffer = isDetached ? pairedImgData : dataBuffer\n  // Offset where data starts within the sourceBuffer\n  const sourceOffset = isDetached ? 0 : hdr.vox_offset // Use hdr.vox_offset set during header parsing\n\n  if (isDetached && !sourceBuffer) {\n    log.warn('Missing data: NRRD header describes detached data file but only one URL provided')\n    return null\n  }\n\n  if (!sourceBuffer || sourceOffset >= sourceBuffer.byteLength) {\n    log.error(`NRRD data offset (${sourceOffset}) invalid for buffer length (${sourceBuffer?.byteLength ?? 0})`)\n    return null\n  }\n\n  // Slice the data section\n  let dataSection = sourceBuffer.slice(sourceOffset)\n\n  // Decompress if necessary\n  if (isGz) {\n    try {\n      log.debug('Decompressing NRRD data...')\n      dataSection = await NVUtilities.decompressToBuffer(new Uint8Array(dataSection))\n      log.debug('Decompression complete.')\n    } catch (err) {\n      log.error('Failed to decompress NRRD data.', err)\n      return null\n    }\n  }\n\n  const nBytesPerVoxel = hdr.numBitsPerVoxel / 8\n  const nVoxels = hdr.dims.slice(1, hdr.dims[0] + 1).reduce((acc, dim) => acc * Math.max(1, dim), 1)\n  const expectedBytes = nVoxels * nBytesPerVoxel\n  if (dataSection.byteLength < expectedBytes) {\n    log.error(`NRRD image data size mismatch: expected ${expectedBytes}, found ${dataSection.byteLength}`)\n    return null\n  } else if (dataSection.byteLength > expectedBytes) {\n    log.warn(`NRRD has extra ${dataSection.byteLength - expectedBytes} bytes after expected image data. Truncating.`)\n    dataSection = dataSection.slice(0, expectedBytes)\n  }\n\n  imgRaw = dataSection // Assign the final buffer\n\n  // Ensure header has essential NIFTI fields if missing defaults\n  if (!hdr.datatypeCode) {\n    log.error('NRRD parsing failed to set datatypeCode.')\n    return null\n  }\n  if (!hdr.numBitsPerVoxel) {\n    log.error('NRRD parsing failed to set numBitsPerVoxel.')\n    return null\n  }\n\n  return imgRaw // Return the image data buffer\n}\n","import { NIFTI1, NIFTI2, NIFTIEXTENSION, readHeaderAsync } from 'nifti-reader-js'\nimport * as zarr from 'zarrita'\nimport { mat3, mat4, vec3, vec4 } from 'gl-matrix'\nimport { v4 as uuidv4 } from '@lukeed/uuid'\nimport { Gunzip } from 'fflate'\nimport { ColorMap, LUT, cmapper } from '../colortables.js'\nimport { log } from '../logger.js'\nimport { NVUtilities, Zip } from '../nvutilities.js'\nimport {\n  ImageFromBase64,\n  ImageFromFileOptions,\n  ImageFromUrlOptions,\n  ImageMetadata,\n  ImageType,\n  NVIMAGE_TYPE,\n  NiiDataType,\n  NiiIntentCode,\n  NVImageFromUrlOptions,\n  hdrToArrayBuffer,\n  isAffineOK,\n  isPlatformLittleEndian,\n  uncompressStream\n} from './utils.js'\nimport * as ImageWriter from './ImageWriter.js'\nimport * as VolumeUtils from './VolumeUtils.js'\nimport * as ImageReaders from './ImageReaders/index.js'\n\nexport * from './utils.js'\nexport type TypedVoxelArray = Float32Array | Uint8Array | Int16Array | Float64Array | Uint16Array\n\n/**\n * a NVImage encapsulates some images data and provides methods to query and operate on images\n */\nexport class NVImage {\n  name: string\n  id: string\n  url?: string\n  headers?: Record<string, string>\n  _colormap: string\n  _opacity: number\n  percentileFrac: number\n  ignoreZeroVoxels: boolean\n  trustCalMinMax: boolean\n  colormapNegative: string\n  // TODO see niivue/loadDocument\n  colormapLabel: LUT | null\n  colormapInvert?: boolean\n  nFrame4D?: number\n  frame4D: number // indexed from 0!\n  nTotalFrame4D?: number\n  cal_minNeg: number\n  cal_maxNeg: number\n  colorbarVisible = true\n  modulationImage: number | null = null\n  modulateAlpha = 0 // if !=0, mod transparency with expon power |Alpha|\n  // TODO this is some Daikon internal thing\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  series: any = [] // for concatenating dicom images\n  nVox3D?: number\n  oblique_angle?: number\n  maxShearDeg?: number\n  useQFormNotSForm: boolean\n\n  colormapType?: number\n\n  pixDims?: number[]\n  matRAS?: mat4\n  pixDimsRAS?: number[]\n  obliqueRAS?: mat4\n  dimsRAS?: number[]\n  permRAS?: number[]\n  img2RASstep?: number[]\n  img2RASstart?: number[]\n  toRAS?: mat4\n  toRASvox?: mat4\n\n  frac2mm?: mat4\n  frac2mmOrtho?: mat4\n  extentsMinOrtho?: number[]\n  extentsMaxOrtho?: number[]\n  mm2ortho?: mat4\n\n  hdr: NIFTI1 | NIFTI2 | null = null\n  imageType?: ImageType\n  img?: TypedVoxelArray\n  imaginary?: Float32Array // only for complex data\n  v1?: Float32Array // only for FIB files\n  fileObject?: File | File[]\n  dims?: number[]\n\n  onColormapChange: (img: NVImage) => void = () => {}\n  onOpacityChange: (img: NVImage) => void = () => {}\n\n  mm000?: vec3\n  mm100?: vec3\n  mm010?: vec3\n  mm001?: vec3\n\n  cal_min?: number\n  cal_max?: number\n  robust_min?: number\n  robust_max?: number\n  global_min?: number\n  global_max?: number\n\n  // TODO referenced by niivue/loadVolumes\n  urlImgData?: string\n  isManifest?: boolean\n  limitFrames4D?: number\n\n  /**\n   *\n   * @param dataBuffer - an array buffer of image data to load (there are also methods that abstract this more. See loadFromUrl, and loadFromFile)\n   * @param name - a name for this image. Default is an empty string\n   * @param colormap - a color map to use. default is gray\n   * @param opacity - the opacity for this image. default is 1\n   * @param pairedImgData - Allows loading formats where header and image are separate files (e.g. nifti.hdr, nifti.img)\n   * @param cal_min - minimum intensity for color brightness/contrast\n   * @param cal_max - maximum intensity for color brightness/contrast\n   * @param trustCalMinMax - whether or not to trust cal_min and cal_max from the nifti header (trusting results in faster loading)\n   * @param percentileFrac - the percentile to use for setting the robust range of the display values (smart intensity setting for images with large ranges)\n   * @param ignoreZeroVoxels - whether or not to ignore zero voxels in setting the robust range of display values\n   * @param useQFormNotSForm - give precedence to QForm (Quaternion) or SForm (Matrix)\n   * @param colormapNegative - a color map to use for symmetrical negative intensities\n   * @param frame4D - volume displayed, 0 indexed, must be less than nFrame4D\n   *\n   * FIXME the following params are documented but not included in the actual constructor\n   * @param onColormapChange - callback for color map change\n   * @param onOpacityChange -callback for color map change\n   *\n   * TODO the following parameters were not documented\n   * @param imageType - TODO\n   * @param cal_minNeg - TODO\n   * @param cal_maxNeg - TODO\n   * @param colorbarVisible - TODO\n   * @param colormapLabel - TODO\n   */\n\n  constructor(\n    // can be an array of Typed arrays or just a typed array. If an array of Typed arrays then it is assumed you are loading DICOM (perhaps the only real use case?)\n    dataBuffer: ArrayBuffer | ArrayBuffer[] | ArrayBufferLike | null = null,\n    name = '',\n    colormap = 'gray',\n    opacity = 1.0,\n    pairedImgData: ArrayBuffer | null = null,\n    cal_min = NaN,\n    cal_max = NaN,\n    trustCalMinMax = true,\n    percentileFrac = 0.02,\n    ignoreZeroVoxels = false,\n    // TODO this was marked as true by default in the docs!\n    useQFormNotSForm = false,\n    colormapNegative = '',\n    frame4D = 0,\n    imageType = NVIMAGE_TYPE.UNKNOWN,\n    cal_minNeg = NaN,\n    cal_maxNeg = NaN,\n    colorbarVisible = true,\n    colormapLabel: LUT | null = null,\n    colormapType = 0\n  ) {\n    this.init(\n      dataBuffer,\n      name,\n      colormap,\n      opacity,\n      pairedImgData,\n      cal_min,\n      cal_max,\n      trustCalMinMax,\n      percentileFrac,\n      ignoreZeroVoxels,\n      useQFormNotSForm,\n      colormapNegative,\n      frame4D,\n      imageType,\n      cal_minNeg,\n      cal_maxNeg,\n      colorbarVisible,\n      colormapLabel,\n      colormapType\n    )\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  init(\n    // can be an array of Typed arrays or just a typed array. If an array of Typed arrays then it is assumed you are loading DICOM (perhaps the only real use case?)\n    dataBuffer: ArrayBuffer | ArrayBuffer[] | ArrayBufferLike | null = null,\n    name = '',\n    colormap = '',\n    opacity = 1.0,\n    _pairedImgData: ArrayBuffer | null = null,\n    cal_min = NaN,\n    cal_max = NaN,\n    trustCalMinMax = true,\n    percentileFrac = 0.02,\n    ignoreZeroVoxels = false,\n    useQFormNotSForm = false,\n    colormapNegative = '',\n    frame4D = 0,\n    imageType = NVIMAGE_TYPE.UNKNOWN,\n    cal_minNeg = NaN,\n    cal_maxNeg = NaN,\n    colorbarVisible = true,\n    colormapLabel: LUT | null = null,\n    colormapType = 0,\n    imgRaw: ArrayBuffer | ArrayBufferLike | null = null\n  ): void {\n    const isNoColormap = colormap === ''\n    if (isNoColormap) {\n      colormap = 'gray'\n    }\n    this.name = name\n    this.imageType = imageType\n    this.id = uuidv4()\n    this._colormap = colormap\n    this._opacity = opacity > 1.0 ? 1.0 : opacity // make sure opacity can't be initialized greater than 1 see: #107 and #117 on github\n    this.percentileFrac = percentileFrac\n    this.ignoreZeroVoxels = ignoreZeroVoxels\n    this.trustCalMinMax = trustCalMinMax\n    this.colormapNegative = colormapNegative\n    this.colormapLabel = colormapLabel\n    this.frame4D = frame4D // indexed from 0!\n    this.cal_minNeg = cal_minNeg\n    this.cal_maxNeg = cal_maxNeg\n    this.colorbarVisible = colorbarVisible\n    this.colormapType = colormapType // COLORMAP_TYPE MIN_TO_MAX\n    // TODO this was missing\n    this.useQFormNotSForm = useQFormNotSForm\n    // Added to support zerosLike\n    // TODO this line causes an absurd amount of handling undefined fields - it would probably be better to isolate this as a separate class.\n    if (!dataBuffer) {\n      return\n    }\n    if (isNoColormap && this.hdr && this.hdr.intent_code === 1002) {\n      colormap = 'random'\n      this._colormap = colormap\n    }\n    if (this.hdr && typeof this.hdr.magic === 'number') {\n      this.hdr.magic = 'n+1'\n    } // fix for issue 481, where magic is set to the number 1 rather than a string\n    this.nFrame4D = 1\n    if (this.hdr) {\n      for (let i = 4; i < 7; i++) {\n        if (this.hdr.dims[i] > 1) {\n          this.nFrame4D *= this.hdr.dims[i]\n        }\n      }\n    }\n    this.frame4D = Math.min(this.frame4D, this.nFrame4D - 1)\n    this.nTotalFrame4D = this.nFrame4D\n\n    if (!this.hdr || !imgRaw) {\n      return\n    }\n\n    this.nVox3D = this.hdr.dims[1] * this.hdr.dims[2] * this.hdr.dims[3]\n    const bytesPerVol = this.nVox3D * (this.hdr.numBitsPerVoxel / 8)\n    const nVol4D = imgRaw.byteLength / bytesPerVol\n    if (nVol4D !== this.nFrame4D) {\n      if (nVol4D > 0 && nVol4D * bytesPerVol === imgRaw.byteLength) {\n        log.debug('Loading the first ' + nVol4D + ' of ' + this.nFrame4D + ' volumes')\n      } else {\n        log.warn('This header does not match voxel data', this.hdr, imgRaw.byteLength)\n      }\n      this.nFrame4D = nVol4D\n    }\n\n    // n.b. NIfTI standard says \"NIFTI_INTENT_RGB_VECTOR\" should be RGBA, but FSL only stores RGB\n    if (\n      (this.hdr.intent_code === NiiIntentCode.NIFTI_INTENT_VECTOR ||\n        this.hdr.intent_code === NiiIntentCode.NIFTI_INTENT_RGB_VECTOR) &&\n      this.nFrame4D === 3 &&\n      this.hdr.datatypeCode === NiiDataType.DT_FLOAT32\n    ) {\n      // change data from float32 to rgba32\n      imgRaw = this.float32V1asRGBA(new Float32Array(imgRaw)).buffer as ArrayBuffer\n    } // NIFTI_INTENT_VECTOR: this is a RGB tensor\n    if (this.hdr.pixDims[1] === 0.0 || this.hdr.pixDims[2] === 0.0 || this.hdr.pixDims[3] === 0.0) {\n      log.error('pixDims not plausible', this.hdr)\n    }\n    if (isNaN(this.hdr.scl_slope) || this.hdr.scl_slope === 0.0) {\n      this.hdr.scl_slope = 1.0\n    } // https://github.com/nipreps/fmriprep/issues/2507\n    if (isNaN(this.hdr.scl_inter)) {\n      this.hdr.scl_inter = 0.0\n    }\n    let affineOK = isAffineOK(this.hdr.affine)\n    if (useQFormNotSForm || !affineOK || this.hdr.qform_code > this.hdr.sform_code) {\n      log.debug('spatial transform based on QForm')\n      // https://github.com/rii-mango/NIFTI-Reader-JS/blob/6908287bf99eb3bc4795c1591d3e80129da1e2f6/src/nifti1.js#L238\n      // Define a, b, c, d for coding convenience\n      const b = this.hdr.quatern_b\n      const c = this.hdr.quatern_c\n      const d = this.hdr.quatern_d\n      // quatern_a is a parameter in quaternion [a, b, c, d], which is required in affine calculation (METHOD 2)\n      // mentioned in the nifti1.h file\n      // It can be calculated by a = sqrt(1.0-(b*b+c*c+d*d))\n      const a = Math.sqrt(1.0 - (Math.pow(b, 2) + Math.pow(c, 2) + Math.pow(d, 2)))\n      const qfac = this.hdr.pixDims[0] === 0 ? 1 : this.hdr.pixDims[0]\n      const quatern_R = [\n        [a * a + b * b - c * c - d * d, 2 * b * c - 2 * a * d, 2 * b * d + 2 * a * c],\n        [2 * b * c + 2 * a * d, a * a + c * c - b * b - d * d, 2 * c * d - 2 * a * b],\n        [2 * b * d - 2 * a * c, 2 * c * d + 2 * a * b, a * a + d * d - c * c - b * b]\n      ]\n      const affine = this.hdr.affine\n      for (let ctrOut = 0; ctrOut < 3; ctrOut += 1) {\n        for (let ctrIn = 0; ctrIn < 3; ctrIn += 1) {\n          affine[ctrOut][ctrIn] = quatern_R[ctrOut][ctrIn] * this.hdr.pixDims[ctrIn + 1]\n          if (ctrIn === 2) {\n            affine[ctrOut][ctrIn] *= qfac\n          }\n        }\n      }\n      // The last row of affine matrix is the offset vector\n      affine[0][3] = this.hdr.qoffset_x\n      affine[1][3] = this.hdr.qoffset_y\n      affine[2][3] = this.hdr.qoffset_z\n      this.hdr.affine = affine\n    }\n    affineOK = isAffineOK(this.hdr.affine)\n    if (!affineOK) {\n      log.debug('Defective NIfTI: spatial transform does not make sense')\n      let x = this.hdr.pixDims[1]\n      let y = this.hdr.pixDims[2]\n      let z = this.hdr.pixDims[3]\n      if (isNaN(x) || x === 0.0) {\n        x = 1.0\n      }\n      if (isNaN(y) || y === 0.0) {\n        y = 1.0\n      }\n      if (isNaN(z) || z === 0.0) {\n        z = 1.0\n      }\n      this.hdr.pixDims[1] = x\n      this.hdr.pixDims[2] = y\n      this.hdr.pixDims[3] = z\n      const affine = [\n        [x, 0, 0, 0],\n        [0, y, 0, 0],\n        [0, 0, z, 0],\n        [0, 0, 0, 1]\n      ]\n      this.hdr.affine = affine\n    } // defective affine\n    // swap data if foreign endian:\n    if (\n      this.hdr.datatypeCode !== NiiDataType.DT_RGB24 &&\n      this.hdr.datatypeCode !== NiiDataType.DT_RGBA32 &&\n      this.hdr.littleEndian !== isPlatformLittleEndian() &&\n      this.hdr.numBitsPerVoxel > 8\n    ) {\n      if (this.hdr.numBitsPerVoxel === 16) {\n        // inspired by https://github.com/rii-mango/Papaya\n        const u16 = new Uint16Array(imgRaw)\n        for (let i = 0; i < u16.length; i++) {\n          const val = u16[i]\n          u16[i] = ((((val & 0xff) << 8) | ((val >> 8) & 0xff)) << 16) >> 16 // since JS uses 32-bit  when bit shifting\n        }\n      } else if (this.hdr.numBitsPerVoxel === 32) {\n        // inspired by https://github.com/rii-mango/Papaya\n        const u32 = new Uint32Array(imgRaw)\n        for (let i = 0; i < u32.length; i++) {\n          const val = u32[i]\n          u32[i] = ((val & 0xff) << 24) | ((val & 0xff00) << 8) | ((val >> 8) & 0xff00) | ((val >> 24) & 0xff)\n        }\n      } else if (this.hdr.numBitsPerVoxel === 64) {\n        // inspired by MIT licensed code: https://github.com/rochars/endianness\n        const numBytesPerVoxel = this.hdr.numBitsPerVoxel / 8\n        const u8 = new Uint8Array(imgRaw)\n        for (let index = 0; index < u8.length; index += numBytesPerVoxel) {\n          let offset = numBytesPerVoxel - 1\n          for (let x = 0; x < offset; x++) {\n            const theByte = u8[index + x]\n            u8[index + x] = u8[index + offset]\n            u8[index + offset] = theByte\n            offset--\n          }\n        }\n      } // if 64-bits\n    } // swap byte order\n    switch (this.hdr.datatypeCode) {\n      case NiiDataType.DT_UINT8:\n        this.img = new Uint8Array(imgRaw)\n        break\n      case NiiDataType.DT_INT16:\n        this.img = new Int16Array(imgRaw)\n        break\n      case NiiDataType.DT_FLOAT32:\n        this.img = new Float32Array(imgRaw)\n        break\n      case NiiDataType.DT_FLOAT64:\n        this.img = new Float64Array(imgRaw)\n        break\n      case NiiDataType.DT_RGB24:\n        this.img = new Uint8Array(imgRaw)\n        break\n      case NiiDataType.DT_UINT16:\n        this.img = new Uint16Array(imgRaw)\n        break\n      case NiiDataType.DT_RGBA32:\n        this.img = new Uint8Array(imgRaw)\n        break\n      case NiiDataType.DT_INT8: {\n        const i8 = new Int8Array(imgRaw)\n        const vx8 = i8.length\n        this.img = new Int16Array(vx8)\n        for (let i = 0; i < vx8; i++) {\n          this.img[i] = i8[i]\n        }\n        this.hdr.datatypeCode = NiiDataType.DT_INT16\n        this.hdr.numBitsPerVoxel = 16\n        break\n      }\n      case NiiDataType.DT_BINARY: {\n        const nvox = this.hdr.dims[1] * this.hdr.dims[2] * Math.max(1, this.hdr.dims[3]) * Math.max(1, this.hdr.dims[4])\n        const img1 = new Uint8Array(imgRaw)\n        this.img = new Uint8Array(nvox)\n        const lut = new Uint8Array(8)\n        for (let i = 0; i < 8; i++) {\n          lut[i] = Math.pow(2, i)\n        }\n        let i1 = -1\n        for (let i = 0; i < nvox; i++) {\n          const bit = i % 8\n          if (bit === 0) {\n            i1++\n          }\n          if ((img1[i1] & lut[bit]) !== 0) {\n            this.img[i] = 1\n          }\n        }\n        this.hdr.datatypeCode = NiiDataType.DT_UINT8\n        this.hdr.numBitsPerVoxel = 8\n        break\n      }\n      case NiiDataType.DT_UINT32: {\n        const u32 = new Uint32Array(imgRaw)\n        const vx32 = u32.length\n        this.img = new Float64Array(vx32)\n        for (let i = 0; i < vx32 - 1; i++) {\n          this.img[i] = u32[i]\n        }\n        this.hdr.datatypeCode = NiiDataType.DT_FLOAT64\n        break\n      }\n      case NiiDataType.DT_INT32: {\n        const i32 = new Int32Array(imgRaw)\n        const vxi32 = i32.length\n        this.img = new Float64Array(vxi32)\n        for (let i = 0; i < vxi32 - 1; i++) {\n          this.img[i] = i32[i]\n        }\n        this.hdr.datatypeCode = NiiDataType.DT_FLOAT64\n        break\n      }\n      case NiiDataType.DT_INT64: {\n        const i64 = new BigInt64Array(imgRaw)\n        const vx = i64.length\n        this.img = new Float64Array(vx)\n        for (let i = 0; i < vx - 1; i++) {\n          this.img[i] = Number(i64[i])\n        }\n        this.hdr.datatypeCode = NiiDataType.DT_FLOAT64\n        break\n      }\n      case NiiDataType.DT_COMPLEX64: {\n        // saved as real/imaginary pairs: show real following fsleyes/MRIcroGL convention\n        const f32 = new Float32Array(imgRaw)\n        const nvx = Math.floor(f32.length / 2)\n        this.imaginary = new Float32Array(nvx)\n        this.img = new Float32Array(nvx)\n        let r = 0\n        for (let i = 0; i < nvx - 1; i++) {\n          this.img[i] = f32[r]\n          this.imaginary[i] = f32[r + 1]\n          r += 2\n        }\n        this.hdr.datatypeCode = NiiDataType.DT_FLOAT32\n        break\n      }\n      default:\n        throw new Error('datatype ' + this.hdr.datatypeCode + ' not supported')\n    }\n    this.calculateRAS()\n    if (!isNaN(cal_min)) {\n      this.hdr.cal_min = cal_min\n    }\n    if (!isNaN(cal_max)) {\n      this.hdr.cal_max = cal_max\n    }\n    this.calMinMax()\n  }\n\n  static async new(\n    // can be an array of Typed arrays or just a typed array. If an array of Typed arrays then it is assumed you are loading DICOM (perhaps the only real use case?)\n    dataBuffer: ArrayBuffer | ArrayBuffer[] | ArrayBufferLike | null = null,\n    name = '',\n    colormap = '',\n    opacity = 1.0,\n    pairedImgData: ArrayBuffer | null = null,\n    cal_min = NaN,\n    cal_max = NaN,\n    trustCalMinMax = true,\n    percentileFrac = 0.02,\n    ignoreZeroVoxels = false,\n    useQFormNotSForm = false,\n    colormapNegative = '',\n    frame4D = 0,\n    imageType = NVIMAGE_TYPE.UNKNOWN,\n    cal_minNeg = NaN,\n    cal_maxNeg = NaN,\n    colorbarVisible = true,\n    colormapLabel: LUT | null = null,\n    colormapType = 0,\n    zarrData: null | unknown\n  ): Promise<NVImage> {\n    const newImg = new NVImage()\n    const re = /(?:\\.([^.]+))?$/\n    let ext = re.exec(name)![1] || '' // TODO ! guaranteed?\n    ext = ext.toUpperCase()\n    if (ext === 'GZ') {\n      ext = re.exec(name.slice(0, -3))![1] // img.trk.gz -> img.trk\n      ext = ext.toUpperCase()\n    }\n    let imgRaw: ArrayBufferLike | Uint8Array | null = null\n    if (imageType === NVIMAGE_TYPE.UNKNOWN) {\n      imageType = NVIMAGE_TYPE.parse(ext)\n    }\n    if (dataBuffer instanceof ArrayBuffer && dataBuffer.byteLength >= 2 && imageType === NVIMAGE_TYPE.DCM) {\n      // unknown extension defaults to DICOM, which starts `dcm`\n      // since NIfTI1 is popular, lets make sure the filename has not been mangled\n      const u8s = new Uint8Array(dataBuffer) // Create a view of the buffer\n      const isNifti1 = (u8s[0] === 92 && u8s[1] === 1) || (u8s[1] === 92 && u8s[0] === 1)\n      if (isNifti1) {\n        imageType = NVIMAGE_TYPE.NII\n      }\n    }\n    newImg.imageType = imageType\n    switch (imageType) {\n      case NVIMAGE_TYPE.DCM_FOLDER:\n      case NVIMAGE_TYPE.DCM_MANIFEST:\n      case NVIMAGE_TYPE.DCM:\n        return\n      case NVIMAGE_TYPE.FIB:\n        ;[imgRaw, newImg.v1] = await newImg.readFIB(dataBuffer as ArrayBuffer)\n        break\n      case NVIMAGE_TYPE.MIH:\n      case NVIMAGE_TYPE.MIF:\n        imgRaw = await newImg.readMIF(dataBuffer as ArrayBuffer, pairedImgData) // detached\n        break\n      case NVIMAGE_TYPE.NHDR:\n      case NVIMAGE_TYPE.NRRD:\n        imgRaw = await ImageReaders.Nrrd.readNrrd(newImg, dataBuffer as ArrayBuffer)\n        if (imgRaw === null) {\n          throw new Error(`Failed to parse NHDR/NRRD file ${name}`)\n        }\n        break\n      case NVIMAGE_TYPE.MHD:\n      case NVIMAGE_TYPE.MHA:\n        imgRaw = await newImg.readMHA(dataBuffer as ArrayBuffer, pairedImgData)\n        break\n      case NVIMAGE_TYPE.MGH:\n      case NVIMAGE_TYPE.MGZ:\n        imgRaw = await ImageReaders.Mgh.readMgh(newImg, dataBuffer as ArrayBuffer)\n        if (imgRaw === null) {\n          throw new Error(`Failed to parse MGH/MGZ file ${name}`)\n        }\n        break\n      case NVIMAGE_TYPE.SRC:\n        imgRaw = await newImg.readSRC(dataBuffer as ArrayBuffer)\n        break\n      case NVIMAGE_TYPE.V:\n        imgRaw = newImg.readECAT(dataBuffer as ArrayBuffer)\n        break\n      case NVIMAGE_TYPE.V16:\n        imgRaw = newImg.readV16(dataBuffer as ArrayBuffer)\n        break\n      case NVIMAGE_TYPE.VMR:\n        imgRaw = newImg.readVMR(dataBuffer as ArrayBuffer)\n        break\n      case NVIMAGE_TYPE.HEAD:\n        imgRaw = await newImg.readHEAD(dataBuffer as ArrayBuffer, pairedImgData) // paired = .BRIK\n        break\n      case NVIMAGE_TYPE.BMP:\n        imgRaw = await newImg.readBMP(dataBuffer as ArrayBuffer)\n        break\n      case NVIMAGE_TYPE.NPY:\n        imgRaw = await newImg.readNPY(dataBuffer as ArrayBuffer)\n        break\n      case NVIMAGE_TYPE.NPZ:\n        imgRaw = await newImg.readNPZ(dataBuffer as ArrayBuffer)\n        break\n      case NVIMAGE_TYPE.ZARR:\n        imgRaw = await newImg.readZARR(dataBuffer as ArrayBuffer, zarrData)\n        break\n      case NVIMAGE_TYPE.NII:\n        imgRaw = await ImageReaders.Nii.readNifti(newImg, dataBuffer as ArrayBuffer)\n        if (imgRaw === null) {\n          throw new Error(`Failed to parse NIfTI file ${name}.`)\n        }\n        break\n      default:\n        throw new Error('Image type not supported')\n    }\n    newImg.init(\n      dataBuffer,\n      name,\n      colormap,\n      opacity,\n      pairedImgData,\n      cal_min,\n      cal_max,\n      trustCalMinMax,\n      percentileFrac,\n      ignoreZeroVoxels,\n      useQFormNotSForm,\n      colormapNegative,\n      frame4D,\n      imageType,\n      cal_minNeg,\n      cal_maxNeg,\n      colorbarVisible,\n      colormapLabel,\n      colormapType,\n      imgRaw\n    )\n    return newImg\n  }\n\n  // not included in public docs\n  // detect difference between voxel grid and world space\n  // https://github.com/afni/afni/blob/25e77d564f2c67ff480fa99a7b8e48ec2d9a89fc/src/thd_coords.c#L717\n  computeObliqueAngle(mtx44: mat4): number {\n    const mtx = mat4.clone(mtx44)\n    mat4.transpose(mtx, mtx44)\n    const dxtmp = Math.sqrt(mtx[0] * mtx[0] + mtx[1] * mtx[1] + mtx[2] * mtx[2])\n    const xmax = Math.max(Math.max(Math.abs(mtx[0]), Math.abs(mtx[1])), Math.abs(mtx[2])) / dxtmp\n    const dytmp = Math.sqrt(mtx[4] * mtx[4] + mtx[5] * mtx[5] + mtx[6] * mtx[6])\n    const ymax = Math.max(Math.max(Math.abs(mtx[4]), Math.abs(mtx[5])), Math.abs(mtx[6])) / dytmp\n    const dztmp = Math.sqrt(mtx[8] * mtx[8] + mtx[9] * mtx[9] + mtx[10] * mtx[10])\n    const zmax = Math.max(Math.max(Math.abs(mtx[8]), Math.abs(mtx[9])), Math.abs(mtx[10])) / dztmp\n    const fig_merit = Math.min(Math.min(xmax, ymax), zmax)\n    let oblique_angle = Math.abs((Math.acos(fig_merit) * 180.0) / 3.141592653)\n    if (oblique_angle > 0.01) {\n      log.warn('Warning voxels not aligned with world space: ' + oblique_angle + ' degrees from plumb.\\n')\n    } else {\n      oblique_angle = 0.0\n    }\n    return oblique_angle\n  }\n\n  float32V1asRGBA(inImg: Float32Array): Uint8Array {\n    if (inImg.length !== this.nVox3D * 3) {\n      log.warn('float32V1asRGBA() expects ' + this.nVox3D * 3 + 'voxels, got ', +inImg.length)\n    }\n    const f32 = inImg.slice()\n    // Note we will use RGBA rather than RGB and use least significant bits to store vector polarity\n    // this allows a single bitmap to store BOTH (unsigned) color magnitude and signed vector direction\n    this.hdr.datatypeCode = NiiDataType.DT_RGBA32\n    this.nFrame4D = 1\n    for (let i = 4; i < 7; i++) {\n      this.hdr.dims[i] = 1\n    }\n    this.hdr.dims[0] = 3 // 3D\n    const imgRaw = new Uint8Array(this.nVox3D * 4) //* 3 for RGB\n    let mx = 1.0\n    for (let i = 0; i < this.nVox3D * 3; i++) {\n      // n.b. NaN values created by dwi2tensor and tensor2metric tensors.mif -vector v1.mif\n      if (isNaN(f32[i])) {\n        continue\n      }\n      mx = Math.max(mx, Math.abs(f32[i]))\n    }\n    const slope = 255 / mx\n    const nVox3D2 = this.nVox3D * 2\n    let j = 0\n    for (let i = 0; i < this.nVox3D; i++) {\n      // n.b. it is really necessary to overwrite imgRaw with a new datatype mid-method\n      const x = f32[i]\n      const y = f32[i + this.nVox3D]\n      const z = f32[i + nVox3D2]\n      ;(imgRaw as Uint8Array)[j] = Math.abs(x * slope)\n      ;(imgRaw as Uint8Array)[j + 1] = Math.abs(y * slope)\n      ;(imgRaw as Uint8Array)[j + 2] = Math.abs(z * slope)\n      const xNeg = Number(x > 0) * 1\n      const yNeg = Number(y > 0) * 2\n      const zNeg = Number(z > 0) * 4\n      let alpha = 248 + xNeg + yNeg + zNeg\n      if (Math.abs(x) + Math.abs(y) + Math.abs(z) < 0.1) {\n        alpha = 0\n      }\n      ;(imgRaw as Uint8Array)[j + 3] = alpha\n      j += 4\n    }\n    return imgRaw\n  }\n\n  loadImgV1(isFlipX: boolean = false, isFlipY: boolean = false, isFlipZ: boolean = false): boolean {\n    let v1 = this.v1\n    if (!v1 && this.nFrame4D === 3 && this.img.constructor === Float32Array) {\n      v1 = this.img.slice()\n    }\n    if (!v1) {\n      log.warn('Image does not have V1 data')\n      return false\n    }\n    if (isFlipX) {\n      for (let i = 0; i < this.nVox3D; i++) {\n        v1[i] = -v1[i]\n      }\n    }\n    if (isFlipY) {\n      for (let i = this.nVox3D; i < 2 * this.nVox3D; i++) {\n        v1[i] = -v1[i]\n      }\n    }\n    if (isFlipZ) {\n      for (let i = 2 * this.nVox3D; i < 3 * this.nVox3D; i++) {\n        v1[i] = -v1[i]\n      }\n    }\n    this.img = this.float32V1asRGBA(v1)\n    return true\n  }\n\n  // not included in public docs\n  // detect difference between voxel grid and world space\n  calculateOblique(): void {\n    if (!this.matRAS) {\n      throw new Error('matRAS not defined')\n    }\n    if (this.pixDimsRAS === undefined) {\n      throw new Error('pixDimsRAS not defined')\n    }\n    if (!this.dimsRAS) {\n      throw new Error('dimsRAS not defined')\n    }\n\n    this.oblique_angle = this.computeObliqueAngle(this.matRAS)\n    const LPI = this.vox2mm([0.0, 0.0, 0.0], this.matRAS)\n    const X1mm = this.vox2mm([1.0 / this.pixDimsRAS[1], 0.0, 0.0], this.matRAS)\n    const Y1mm = this.vox2mm([0.0, 1.0 / this.pixDimsRAS[2], 0.0], this.matRAS)\n    const Z1mm = this.vox2mm([0.0, 0.0, 1.0 / this.pixDimsRAS[3]], this.matRAS)\n    vec3.subtract(X1mm, X1mm, LPI)\n    vec3.subtract(Y1mm, Y1mm, LPI)\n    vec3.subtract(Z1mm, Z1mm, LPI)\n    const oblique = mat4.fromValues(\n      X1mm[0],\n      X1mm[1],\n      X1mm[2],\n      0,\n      Y1mm[0],\n      Y1mm[1],\n      Y1mm[2],\n      0,\n      Z1mm[0],\n      Z1mm[1],\n      Z1mm[2],\n      0,\n      0,\n      0,\n      0,\n      1\n    )\n    this.obliqueRAS = mat4.clone(oblique)\n    const XY = Math.abs(90 - vec3.angle(X1mm, Y1mm) * (180 / Math.PI))\n    const XZ = Math.abs(90 - vec3.angle(X1mm, Z1mm) * (180 / Math.PI))\n    const YZ = Math.abs(90 - vec3.angle(Y1mm, Z1mm) * (180 / Math.PI))\n    this.maxShearDeg = Math.max(Math.max(XY, XZ), YZ)\n    if (this.maxShearDeg > 0.1) {\n      log.warn('Warning: voxels are rhomboidal, maximum shear is %f degrees.', this.maxShearDeg)\n    }\n    // compute a matrix to transform vectors from factional space to mm:\n    const dim = vec4.fromValues(this.dimsRAS[1], this.dimsRAS[2], this.dimsRAS[3], 1)\n    const sform = mat4.clone(this.matRAS)\n    mat4.transpose(sform, sform)\n    const shim = vec4.fromValues(-0.5, -0.5, -0.5, 0) // bitmap with 5 voxels scaled 0..1, voxel centers are 0.1,0.3,0.5,0.7,0.9\n    mat4.translate(sform, sform, vec3.fromValues(shim[0], shim[1], shim[2]))\n    // mat.mat4.scale(sform, sform, dim);\n    sform[0] *= dim[0]\n    sform[1] *= dim[0]\n    sform[2] *= dim[0]\n    sform[4] *= dim[1]\n    sform[5] *= dim[1]\n    sform[6] *= dim[1]\n    sform[8] *= dim[2]\n    sform[9] *= dim[2]\n    sform[10] *= dim[2]\n    this.frac2mm = mat4.clone(sform)\n    const pixdimX = this.pixDimsRAS[1] // vec3.length(X1mm);\n    const pixdimY = this.pixDimsRAS[2] // vec3.length(Y1mm);\n    const pixdimZ = this.pixDimsRAS[3] // vec3.length(Z1mm);\n    // orthographic view\n    const oform = mat4.clone(sform)\n    oform[0] = pixdimX * dim[0]\n    oform[1] = 0\n    oform[2] = 0\n    oform[4] = 0\n    oform[5] = pixdimY * dim[1]\n    oform[6] = 0\n    oform[8] = 0\n    oform[9] = 0\n    oform[10] = pixdimZ * dim[2]\n    const originVoxel = this.mm2vox([0, 0, 0], true)\n    // set matrix translation for distance from origin\n    oform[12] = (-originVoxel[0] - 0.5) * pixdimX\n    oform[13] = (-originVoxel[1] - 0.5) * pixdimY\n    oform[14] = (-originVoxel[2] - 0.5) * pixdimZ\n    this.frac2mmOrtho = mat4.clone(oform)\n    this.extentsMinOrtho = [oform[12], oform[13], oform[14]]\n    this.extentsMaxOrtho = [oform[0] + oform[12], oform[5] + oform[13], oform[10] + oform[14]]\n    this.mm2ortho = mat4.create()\n    mat4.invert(this.mm2ortho, oblique)\n  }\n\n  // not included in public docs\n  // convert AFNI head/brik space to NIfTI format\n  // https://github.com/afni/afni/blob/d6997e71f2b625ac1199460576d48f3136dac62c/src/thd_niftiwrite.c#L315\n  THD_daxes_to_NIFTI(xyzDelta: number[], xyzOrigin: number[], orientSpecific: number[]): void {\n    const hdr = this.hdr\n\n    if (hdr === null) {\n      throw new Error('HDR is not set')\n    }\n\n    hdr.sform_code = 2\n    const ORIENT_xyz = 'xxyyzzg' // note strings indexed from 0!\n    let nif_x_axnum = -1\n    let nif_y_axnum = -1\n    let nif_z_axnum = -1\n    const axcode = ['x', 'y', 'z']\n    axcode[0] = ORIENT_xyz[orientSpecific[0]]\n    axcode[1] = ORIENT_xyz[orientSpecific[1]]\n    axcode[2] = ORIENT_xyz[orientSpecific[2]]\n    const axstep = xyzDelta.slice(0, 3)\n    const axstart = xyzOrigin.slice(0, 3)\n    for (let ii = 0; ii < 3; ii++) {\n      if (axcode[ii] === 'x') {\n        nif_x_axnum = ii\n      } else if (axcode[ii] === 'y') {\n        nif_y_axnum = ii\n      } else {\n        nif_z_axnum = ii\n      }\n    }\n    if (nif_x_axnum < 0 || nif_y_axnum < 0 || nif_z_axnum < 0) {\n      return\n    } // not assigned\n    if (nif_x_axnum === nif_y_axnum || nif_x_axnum === nif_z_axnum || nif_y_axnum === nif_z_axnum) {\n      return\n    } // not assigned\n    hdr.pixDims[1] = Math.abs(axstep[0])\n    hdr.pixDims[2] = Math.abs(axstep[1])\n    hdr.pixDims[3] = Math.abs(axstep[2])\n    hdr.affine = [\n      [1, 0, 0, 0],\n      [0, 1, 0, 0],\n      [0, 0, 1, 0],\n      [0, 0, 0, 1]\n    ]\n    hdr.affine[0][nif_x_axnum] = -axstep[nif_x_axnum]\n    hdr.affine[1][nif_y_axnum] = -axstep[nif_y_axnum]\n    hdr.affine[2][nif_z_axnum] = axstep[nif_z_axnum]\n    hdr.affine[0][3] = -axstart[nif_x_axnum]\n    hdr.affine[1][3] = -axstart[nif_y_axnum]\n    hdr.affine[2][3] = axstart[nif_z_axnum]\n  }\n\n  // not included in public docs\n  // determine spacing voxel centers (rows, columns, slices)\n  SetPixDimFromSForm(): void {\n    if (!this.hdr) {\n      throw new Error('hdr not defined')\n    }\n    const m = this.hdr.affine\n    const mat = mat4.fromValues(\n      m[0][0],\n      m[0][1],\n      m[0][2],\n      m[0][3],\n      m[1][0],\n      m[1][1],\n      m[1][2],\n      m[1][3],\n      m[2][0],\n      m[2][1],\n      m[2][2],\n      m[2][3],\n      m[3][0],\n      m[3][1],\n      m[3][2],\n      m[3][3]\n    )\n    const mm000 = this.vox2mm([0, 0, 0], mat)\n    const mm100 = this.vox2mm([1, 0, 0], mat)\n    vec3.subtract(mm100, mm100, mm000)\n    const mm010 = this.vox2mm([0, 1, 0], mat)\n    vec3.subtract(mm010, mm010, mm000)\n    const mm001 = this.vox2mm([0, 0, 1], mat)\n    vec3.subtract(mm001, mm001, mm000)\n    this.hdr.pixDims[1] = vec3.length(mm100)\n    this.hdr.pixDims[2] = vec3.length(mm010)\n    this.hdr.pixDims[3] = vec3.length(mm001)\n  }\n\n  // not included in public docs\n  // read DICOM format image and treat it like a NIfTI\n  // -----------------\n  // readDICOM(buf: ArrayBuffer | ArrayBuffer[]): ArrayBuffer {\n  //   this.series = new daikon.Series()\n  //   // parse DICOM file\n  //   if (Array.isArray(buf)) {\n  //     for (let i = 0; i < buf.length; i++) {\n  //       const dataview = new DataView(buf[i])\n  //       const image = daikon.Series.parseImage(dataview)\n  //       if (image === null) {\n  //         log.error(daikon.Series.parserError)\n  //       } else if (image.hasPixelData()) {\n  //         // if it's part of the same series, add it\n  //         if (this.series.images.length === 0 || image.getSeriesId() === this.series.images[0].getSeriesId()) {\n  //           this.series.addImage(image)\n  //         }\n  //       } // if hasPixelData\n  //     } // for i\n  //   } else {\n  //     // not a dicom folder drop\n  //     const image = daikon.Series.parseImage(new DataView(buf))\n  //     if (image === null) {\n  //       log.error(daikon.Series.parserError)\n  //     } else if (image.hasPixelData()) {\n  //       // if it's part of the same series, add it\n  //       if (this.series.images.length === 0 || image.getSeriesId() === this.series.images[0].getSeriesId()) {\n  //         this.series.addImage(image)\n  //       }\n  //     }\n  //   }\n  //   // order the image files, determines number of frames, etc.\n  //   this.series.buildSeries()\n  //   // output some header info\n  //   this.hdr = new nifti.NIFTI1()\n  //   const hdr = this.hdr\n  //   hdr.scl_inter = 0\n  //   hdr.scl_slope = 1\n  //   if (this.series.images[0].getDataScaleIntercept()) {\n  //     hdr.scl_inter = this.series.images[0].getDataScaleIntercept()\n  //   }\n  //   if (this.series.images[0].getDataScaleSlope()) {\n  //     hdr.scl_slope = this.series.images[0].getDataScaleSlope()\n  //   }\n  //   hdr.dims = [3, 1, 1, 1, 0, 0, 0, 0]\n  //   hdr.pixDims = [1, 1, 1, 1, 1, 0, 0, 0]\n  //   hdr.dims[1] = this.series.images[0].getCols()\n  //   hdr.dims[2] = this.series.images[0].getRows()\n  //   hdr.dims[3] = this.series.images[0].getNumberOfFrames()\n  //   if (this.series.images.length > 1) {\n  //     if (hdr.dims[3] > 1) {\n  //       log.debug('To Do: multiple slices per file and multiple files (XA30 DWI)')\n  //     }\n  //     hdr.dims[3] = this.series.images.length\n  //   }\n  //   const rc = this.series.images[0].getPixelSpacing() // TODO: order?\n  //   hdr.pixDims[1] = rc[0]\n  //   hdr.pixDims[2] = rc[1]\n  //   if (this.series.images.length > 1) {\n  //     // Multiple slices. The depth of a pixel is the physical distance between offsets. This is not the same as slice\n  //     // spacing for tilted slices (skew).\n  //     const p0 = vec3.fromValues(...(this.series.images[0].getImagePosition() as [number, number, number]))\n  //     const p1 = vec3.fromValues(...(this.series.images[1].getImagePosition() as [number, number, number]))\n  //     const n = vec3.fromValues(0, 0, 0)\n  //     vec3.subtract(n, p0, p1)\n  //     hdr.pixDims[3] = vec3.length(n)\n  //   } else {\n  //     // Single slice. Use the slice thickness as pixel depth.\n  //     hdr.pixDims[3] = this.series.images[0].getSliceThickness()\n  //   }\n  //   hdr.pixDims[4] = this.series.images[0].getTR() / 1000.0 // msec -> sec\n  //   const dt = this.series.images[0].getDataType() // 2=int,3=uint,4=float,\n  //   const bpv = this.series.images[0].getBitsAllocated()\n  //   hdr.numBitsPerVoxel = bpv\n  //   this.hdr.littleEndian = this.series.images[0].littleEndian\n  //   if (bpv === 8 && dt === 2) {\n  //     hdr.datatypeCode = NiiDataType.DT_INT8\n  //   } else if (bpv === 8 && dt === 3) {\n  //     hdr.datatypeCode = NiiDataType.DT_UINT8\n  //   } else if (bpv === 16 && dt === 2) {\n  //     hdr.datatypeCode = NiiDataType.DT_INT16\n  //   } else if (bpv === 16 && dt === 3) {\n  //     hdr.datatypeCode = NiiDataType.DT_UINT16\n  //   } else if (bpv === 32 && dt === 2) {\n  //     hdr.datatypeCode = NiiDataType.DT_INT32\n  //   } else if (bpv === 32 && dt === 3) {\n  //     hdr.datatypeCode = NiiDataType.DT_UINT32\n  //   } else if (bpv === 32 && dt === 4) {\n  //     hdr.datatypeCode = NiiDataType.DT_FLOAT32\n  //   } else if (bpv === 64 && dt === 4) {\n  //     hdr.datatypeCode = NiiDataType.DT_FLOAT64\n  //   } else if (bpv === 1) {\n  //     hdr.datatypeCode = NiiDataType.DT_BINARY\n  //   } else {\n  //     log.warn('Unsupported DICOM format: ' + dt + ' ' + bpv)\n  //   }\n  //   const voxelDimensions = hdr.pixDims.slice(1, 4)\n  //   const m = getBestTransform(\n  //     this.series.images[0].getImageDirections(),\n  //     voxelDimensions,\n  //     this.series.images[0].getImagePosition()\n  //   )\n  //   if (m) {\n  //     hdr.sform_code = 1\n  //     hdr.affine = [\n  //       [m[0][0], m[0][1], m[0][2], m[0][3]],\n  //       [m[1][0], m[1][1], m[1][2], m[1][3]],\n  //       [m[2][0], m[2][1], m[2][2], m[2][3]],\n  //       [0, 0, 0, 1]\n  //     ]\n  //   }\n  //   let data\n  //   let length = this.series.validatePixelDataLength(this.series.images[0])\n  //   const buffer = new Uint8Array(new ArrayBuffer(length * this.series.images.length))\n  //   // implementation copied from:\n  //   // https://github.com/rii-mango/Daikon/blob/bbe08bad9758dfbdf31ca22fb79048c7bad85706/src/series.js#L496\n  //   for (let i = 0; i < this.series.images.length; i++) {\n  //     if (this.series.isMosaic) {\n  //       data = this.series.getMosaicData(this.series.images[i], this.series.images[i].getPixelDataBytes())\n  //     } else {\n  //       data = this.series.images[i].getPixelDataBytes()\n  //     }\n  //     length = this.series.validatePixelDataLength(this.series.images[i])\n  //     this.series.images[i].clearPixelData()\n  //     buffer.set(new Uint8Array(data, 0, length), length * i)\n  //   } // for images.length\n  //   return buffer.buffer\n  // } // readDICOM()\n  // -----------------------\n\n  // not included in public docs\n  // read ECAT7 format image\n  // https://github.com/openneuropet/PET2BIDS/tree/28aae3fab22309047d36d867c624cd629c921ca6/ecat_validation/ecat_info\n  readECAT(buffer: ArrayBuffer): ArrayBuffer {\n    this.hdr = new NIFTI1()\n    const hdr = this.hdr\n    hdr.dims = [3, 1, 1, 1, 0, 0, 0, 0]\n    hdr.pixDims = [1, 1, 1, 1, 1, 0, 0, 0]\n    const reader = new DataView(buffer)\n\n    const signature = reader.getInt32(0, false) // \"MATR\"\n    const filetype = reader.getInt16(50, false)\n    if (signature !== 1296127058 || filetype < 1 || filetype > 14) {\n      throw new Error('Not a valid ECAT file')\n    }\n    // list header, starts at 512 bytes: int32_t hdr[4], r[31][4];\n    let pos = 512 // 512=main header, 4*32-bit hdr\n    let vols = 0\n    const frame_duration = []\n    let rawImg = new Float32Array()\n    while (true) {\n      // read 512 block lists\n      const hdr0 = reader.getInt32(pos, false)\n      const hdr3 = reader.getInt32(pos + 12, false)\n      if (hdr0 + hdr3 !== 31) {\n        break\n      }\n      let lpos = pos + 20 // skip hdr and read slice offset (r[0][1])\n      let r = 0\n      let voloffset = 0\n      while (r < 31) {\n        // r[0][1]...r[30][1]\n        voloffset = reader.getInt32(lpos, false)\n        lpos += 16 // e.g. r[0][1] to r[1][1]\n        if (voloffset === 0) {\n          break\n        }\n        r++\n        let ipos = voloffset * 512 // image start position\n        const spos = ipos - 512 // subheader for matrix image, immediately before image\n        const data_type = reader.getUint16(spos, false)\n        hdr.dims[1] = reader.getUint16(spos + 4, false)\n        hdr.dims[2] = reader.getUint16(spos + 6, false)\n        hdr.dims[3] = reader.getUint16(spos + 8, false)\n        const scale_factor = reader.getFloat32(spos + 26, false)\n        hdr.pixDims[1] = reader.getFloat32(spos + 34, false) * 10.0 // cm -> mm\n        hdr.pixDims[2] = reader.getFloat32(spos + 38, false) * 10.0 // cm -> mm\n        hdr.pixDims[3] = reader.getFloat32(spos + 42, false) * 10.0 // cm -> mm\n        hdr.pixDims[4] = reader.getUint32(spos + 46, false) / 1000.0 // ms -> sec\n        frame_duration.push(hdr.pixDims[4])\n        const nvox3D = hdr.dims[1] * hdr.dims[2] * hdr.dims[3]\n        const newImg = new Float32Array(nvox3D) // convert to float32 as scale varies\n        if (data_type === 1) {\n          // uint8\n          for (let i = 0; i < nvox3D; i++) {\n            newImg[i] = reader.getUint8(ipos) * scale_factor\n            ipos++\n          }\n        } else if (data_type === 6) {\n          // uint16\n          for (let i = 0; i < nvox3D; i++) {\n            newImg[i] = reader.getUint16(ipos, false) * scale_factor\n            ipos += 2\n          }\n        } else if (data_type === 7) {\n          // uint32\n          for (let i = 0; i < nvox3D; i++) {\n            newImg[i] = reader.getUint32(ipos, false) * scale_factor\n            ipos += 4\n          }\n        } else {\n          log.warn('Unknown ECAT data type ' + data_type)\n        }\n        const prevImg = rawImg.slice(0)\n        rawImg = new Float32Array(prevImg.length + newImg.length)\n        rawImg.set(prevImg)\n        rawImg.set(newImg, prevImg.length)\n        vols++\n      }\n      if (voloffset === 0) {\n        break\n      }\n      pos += 512 // possible to have multiple 512-byte lists of images\n    }\n    hdr.dims[4] = vols\n    hdr.pixDims[4] = frame_duration[0]\n    if (vols > 1) {\n      hdr.dims[0] = 4\n      let isFDvaries = false\n      for (let i = 0; i < vols; i++) {\n        if (frame_duration[i] !== frame_duration[0]) {\n          isFDvaries = true\n        }\n      }\n      if (isFDvaries) {\n        log.warn('Frame durations vary')\n      }\n    }\n    hdr.sform_code = 1\n    hdr.affine = [\n      [-hdr.pixDims[1], 0, 0, (hdr.dims[1] - 2) * 0.5 * hdr.pixDims[1]],\n      [0, -hdr.pixDims[2], 0, (hdr.dims[2] - 2) * 0.5 * hdr.pixDims[2]],\n      [0, 0, -hdr.pixDims[3], (hdr.dims[3] - 2) * 0.5 * hdr.pixDims[3]],\n      [0, 0, 0, 1]\n    ]\n    hdr.numBitsPerVoxel = 32\n    hdr.datatypeCode = NiiDataType.DT_FLOAT32\n    return rawImg.buffer as ArrayBuffer\n  } // readECAT()\n\n  readV16(buffer: ArrayBuffer): ArrayBuffer {\n    this.hdr = new NIFTI1()\n    const hdr = this.hdr\n    hdr.dims = [3, 1, 1, 1, 0, 0, 0, 0]\n    hdr.pixDims = [1, 1, 1, 1, 1, 0, 0, 0]\n    const reader = new DataView(buffer)\n    hdr.dims[1] = reader.getUint16(0, true)\n    hdr.dims[2] = reader.getUint16(2, true)\n    hdr.dims[3] = reader.getUint16(4, true)\n    const nBytes = 2 * hdr.dims[1] * hdr.dims[2] * hdr.dims[3]\n    if (nBytes + 6 !== buffer.byteLength) {\n      log.warn('This does not look like a valid BrainVoyager V16 file')\n    }\n    hdr.numBitsPerVoxel = 16\n    hdr.datatypeCode = NiiDataType.DT_UINT16\n    log.warn('Warning: V16 files have no spatial transforms')\n    hdr.affine = [\n      [0, 0, -hdr.pixDims[1], (hdr.dims[1] - 2) * 0.5 * hdr.pixDims[1]],\n      [-hdr.pixDims[2], 0, 0, (hdr.dims[2] - 2) * 0.5 * hdr.pixDims[2]],\n      [0, -hdr.pixDims[3], 0, (hdr.dims[3] - 2) * 0.5 * hdr.pixDims[3]],\n      [0, 0, 0, 1]\n    ]\n    hdr.littleEndian = true\n    return buffer.slice(6)\n  } // readV16()\n\n  async readNPY(buffer: ArrayBuffer): Promise<ArrayBuffer> {\n    // Helper function to determine byte size per element\n    function getTypeSize(dtype: string): number {\n      const typeMap: Record<string, number> = {\n        '|b1': 1, // Boolean\n        '<i1': 1, // Int8\n        '<u1': 1, // UInt8\n        '<i2': 2, // Int16\n        '<u2': 2, // UInt16\n        '<i4': 4, // Int32\n        '<u4': 4, // UInt32\n        '<f4': 4, // Float32\n        '<f8': 8 // Float64\n      }\n      return typeMap[dtype] ?? 1\n    }\n\n    // Helper function to determine NIfTI datatype code\n    function getDataTypeCode(dtype: string): number {\n      const typeMap: Record<string, number> = {\n        '|b1': 2, // DT_BINARY\n        '<i1': 256, // DT_INT8\n        '<u1': 2, // DT_UINT8\n        '<i2': 4, // DT_INT16\n        '<u2': 512, // DT_UINT16\n        '<i4': 8, // DT_INT32\n        '<u4': 768, // DT_UINT32\n        '<f4': 16, // DT_FLOAT32\n        '<f8': 64 // DT_FLOAT64\n      }\n      return typeMap[dtype] ?? 16 // Default to FLOAT32\n    }\n\n    const dv = new DataView(buffer)\n    // Verify magic number\n    const magicBytes = [dv.getUint8(0), dv.getUint8(1), dv.getUint8(2), dv.getUint8(3), dv.getUint8(4), dv.getUint8(5)]\n\n    // Expected magic number: [0x93, 0x4E, 0x55, 0x4D, 0x50, 0x59] ('\\x93NUMPY')\n    const expectedMagic = [0x93, 0x4e, 0x55, 0x4d, 0x50, 0x59]\n\n    if (!magicBytes.every((byte, i) => byte === expectedMagic[i])) {\n      throw new Error('Not a valid NPY file: Magic number mismatch')\n    }\n\n    // Extract version and header length\n    // const _version = dv.getUint8(6)\n    // const _minorVersion = dv.getUint8(7)\n    const headerLen = dv.getUint16(8, true) // Little-endian\n    // Decode header as ASCII string\n    const headerText = new TextDecoder('utf-8').decode(buffer.slice(10, 10 + headerLen))\n\n    // Extract shape from header\n    const shapeMatch = headerText.match(/'shape': \\((.*?)\\)/)\n    if (!shapeMatch) {\n      throw new Error('Invalid NPY header: Shape not found')\n    }\n    const shape = shapeMatch[1]\n      .split(',')\n      .map((s) => s.trim())\n      .filter((s) => s !== '')\n      .map(Number)\n\n    // Determine data type (assumes '|b1' (bool), '<f4' (float32), etc.)\n    const dtypeMatch = headerText.match(/'descr': '([^']+)'/)\n    if (!dtypeMatch) {\n      throw new Error('Invalid NPY header: Data type not found')\n    }\n    const dtype = dtypeMatch[1]\n    // Compute number of elements\n    const numElements = shape.reduce((a, b) => a * b, 1)\n    // Extract data start position\n    const dataStart = 10 + headerLen\n    // Read data as an ArrayBuffer\n    const dataBuffer = buffer.slice(dataStart, dataStart + numElements * getTypeSize(dtype))\n    // Interpret as 2D/3D data\n    const width = shape.length > 0 ? shape[shape.length - 1] : 1\n    const height = shape.length > 1 ? shape[shape.length - 2] : 1\n    const slices = shape.length > 2 ? shape[shape.length - 3] : 1\n    // Create NIFTI header\n    this.hdr = new NIFTI1()\n    const hdr = this.hdr\n    hdr.dims = [3, width, height, slices, 0, 0, 0, 0]\n    hdr.pixDims = [1, 1, 1, 1, 1, 0, 0, 0]\n    hdr.affine = [\n      [hdr.pixDims[1], 0, 0, -(hdr.dims[1] - 2) * 0.5 * hdr.pixDims[1]],\n      [0, -hdr.pixDims[2], 0, (hdr.dims[2] - 2) * 0.5 * hdr.pixDims[2]],\n      [0, 0, -hdr.pixDims[3], (hdr.dims[3] - 2) * 0.5 * hdr.pixDims[3]],\n      [0, 0, 0, 1]\n    ]\n    hdr.numBitsPerVoxel = getTypeSize(dtype) * 8\n    hdr.datatypeCode = getDataTypeCode(dtype)\n    return dataBuffer\n  }\n\n  async readNPZ(buffer: ArrayBuffer): Promise<ArrayBuffer> {\n    // todo: a single NPZ file can contain multiple NPY images\n    const zip = new Zip(buffer)\n    for (let i = 0; i < zip.entries.length; i++) {\n      const entry = zip.entries[i]\n      if (entry.fileName.toLowerCase().endsWith('.npy')) {\n        const data = await entry.extract()\n        return await this.readNPY(data.buffer as ArrayBuffer)\n      }\n    }\n  }\n\n  async imageDataFromArrayBuffer(buffer: ArrayBuffer): Promise<ImageData> {\n    return new Promise<ImageData>((resolve, reject): void => {\n      const blob = new Blob([buffer]) // Convert ArrayBuffer to Blob\n      const url = URL.createObjectURL(blob) // Create a Blob URL\n      const img = new Image()\n      img.crossOrigin = 'Anonymous' // Allow CORS if needed\n      img.src = url\n      img.onload = (): void => {\n        URL.revokeObjectURL(url) // Clean up the object URL\n        const canvas = document.createElement('canvas')\n        canvas.width = img.width\n        canvas.height = img.height\n        const ctx = canvas.getContext('2d')\n        if (!ctx) {\n          reject(new Error('Failed to get 2D context'))\n          return\n        }\n        ctx.drawImage(img, 0, 0)\n        resolve(ctx.getImageData(0, 0, img.width, img.height))\n      }\n      img.onerror = (err): void => {\n        URL.revokeObjectURL(url) // Ensure cleanup on error\n        reject(err)\n      }\n    })\n  }\n\n  async readBMP(buffer: ArrayBuffer): Promise<ArrayBuffer> {\n    const imageData = await this.imageDataFromArrayBuffer(buffer)\n    const { width, height, data } = imageData\n    this.hdr = new NIFTI1()\n    const hdr = this.hdr\n    hdr.dims = [3, width, height, 1, 0, 0, 0, 0]\n    hdr.pixDims = [1, 1, 1, 1, 1, 0, 0, 0]\n    hdr.affine = [\n      [hdr.pixDims[1], 0, 0, -(hdr.dims[1] - 2) * 0.5 * hdr.pixDims[1]],\n      [0, -hdr.pixDims[2], 0, (hdr.dims[2] - 2) * 0.5 * hdr.pixDims[2]],\n      [0, 0, -hdr.pixDims[3], (hdr.dims[3] - 2) * 0.5 * hdr.pixDims[3]],\n      [0, 0, 0, 1]\n    ]\n    hdr.numBitsPerVoxel = 8\n    hdr.datatypeCode = NiiDataType.DT_RGBA32\n    let isGrayscale = true\n    for (let i = 0; i < data.length; i += 4) {\n      if (data[i] !== data[i + 1] || data[i] !== data[i + 2]) {\n        isGrayscale = false\n        break\n      }\n    }\n    if (isGrayscale) {\n      hdr.datatypeCode = NiiDataType.DT_UINT8\n      const grayscaleData = new Uint8Array(width * height)\n      for (let i = 0, j = 0; i < data.length; i += 4, j++) {\n        grayscaleData[j] = data[i]\n      }\n      return grayscaleData.buffer\n    }\n    return data.buffer as ArrayBuffer\n  }\n\n  async readZARR(buffer: ArrayBuffer, zarrData: unknown): Promise<ArrayBufferLike> {\n    let { width, height, depth = 1, data } = (zarrData ?? {}) as any\n    let expectedLength = width * height * depth * 3\n    let isRGB = expectedLength === data.length\n    if (!isRGB) {\n      expectedLength = width * height * depth\n      if (depth === 3) {\n        // see https://zarrita.dev/get-started.html R,G,B channels returns as depth!\n        isRGB = true\n        depth = 1\n      }\n    }\n    if (expectedLength !== data.length) {\n      throw new Error(`Expected RGB ${width}×${height}×${depth}×3 =  ${expectedLength}, but ZARR length ${data.length}`)\n    }\n    this.hdr = new NIFTI1()\n    const hdr = this.hdr\n    hdr.dims = [3, width, height, depth, 1, 1, 1, 1]\n    hdr.pixDims = [1, 1, 1, 1, 0, 0, 0, 0]\n\n    hdr.affine = [\n      [hdr.pixDims[1], 0, 0, -(hdr.dims[1] - 2) * 0.5 * hdr.pixDims[1]],\n      [0, -hdr.pixDims[2], 0, (hdr.dims[2] - 2) * 0.5 * hdr.pixDims[2]],\n      [0, 0, -hdr.pixDims[3], (hdr.dims[3] - 2) * 0.5 * hdr.pixDims[3]],\n      [0, 0, 0, 1]\n    ]\n    if (!isRGB) {\n      hdr.numBitsPerVoxel = 8\n      hdr.datatypeCode = NiiDataType.DT_UINT8\n      // if data is a Uint8Array, convert to ArrayBuffer\n      if (data instanceof Uint8Array) {\n        const retBuffer = new ArrayBuffer(data.length)\n        const retView = new Uint8Array(retBuffer)\n        retView.set(data)\n        return retBuffer\n      }\n      return data\n    }\n    hdr.numBitsPerVoxel = 24\n    hdr.datatypeCode = NiiDataType.DT_RGB24\n    function zxy2xyz(data, X, Y, Z): Uint8Array {\n      const voxelCount = X * Y\n      const rgb = new Uint8Array(voxelCount * Z * 3)\n      const offsets = new Array(Z)\n      for (let s = 0; s < Z; s++) {\n        offsets[s] = voxelCount * 3 * s\n      }\n      let srcIndex = 0\n      let dstIndex = 0\n      for (let v = 0; v < voxelCount; v++) {\n        for (let s = 0; s < Z; s++) {\n          rgb[offsets[s] + dstIndex] = data[srcIndex++] // R\n          rgb[offsets[s] + dstIndex + 1] = data[srcIndex++] // G\n          rgb[offsets[s] + dstIndex + 2] = data[srcIndex++] // B\n        }\n        dstIndex += 3\n      }\n      return rgb\n    }\n    const retData = zxy2xyz(data, hdr.dims[1], hdr.dims[2], hdr.dims[3])\n    // convert retData Uint8Array to ArrayBuffer\n    const retBuffer = new ArrayBuffer(retData.length)\n    const retView = new Uint8Array(retBuffer)\n    retView.set(retData)\n    return retBuffer\n  }\n\n  // not included in public docs\n  // read brainvoyager format VMR image\n  // https://support.brainvoyager.com/brainvoyager/automation-development/84-file-formats/343-developer-guide-2-6-the-format-of-vmr-files\n  readVMR(buffer: ArrayBuffer): ArrayBuffer {\n    this.hdr = new NIFTI1()\n    const hdr = this.hdr\n    hdr.dims = [3, 1, 1, 1, 0, 0, 0, 0]\n    hdr.pixDims = [1, 1, 1, 1, 1, 0, 0, 0]\n    const reader = new DataView(buffer)\n    const version = reader.getUint16(0, true)\n    if (version !== 4) {\n      log.warn('Not a valid version 4 VMR image')\n    }\n    hdr.dims[1] = reader.getUint16(2, true)\n    hdr.dims[2] = reader.getUint16(4, true)\n    hdr.dims[3] = reader.getUint16(6, true)\n    const nBytes = hdr.dims[1] * hdr.dims[2] * hdr.dims[3]\n    if (version >= 4) {\n      let pos = 8 + nBytes // offset to post header\n      // let xoff = reader.getUint16(pos, true);\n      // let yoff = reader.getUint16(pos + 2, true);\n      // let zoff = reader.getUint16(pos + 4, true);\n      // let framingCube = reader.getUint16(pos + 6, true);\n      // let posInfo = reader.getUint32(pos + 8, true);\n      // let coordSys = reader.getUint32(pos + 12, true);\n      // let XmmStart = reader.getFloat32(pos + 16, true);\n      // let YmmStart = reader.getFloat32(pos + 20, true);\n      // let ZmmStart = reader.getFloat32(pos + 24, true);\n      // let XmmEnd = reader.getFloat32(pos + 28, true);\n      // let YmmEnd = reader.getFloat32(pos + 32, true);\n      // let ZmmEnd = reader.getFloat32(pos + 36, true);\n      // let Xsl = reader.getFloat32(pos + 40, true);\n      // let Ysl = reader.getFloat32(pos + 44, true);\n      // let Zsl = reader.getFloat32(pos + 48, true);\n      // let colDirX = reader.getFloat32(pos + 52, true);\n      // let colDirY = reader.getFloat32(pos + 56, true);\n      // let colDirZ = reader.getFloat32(pos + 60, true);\n      // let nRow = reader.getUint32(pos + 64, true);\n      // let nCol = reader.getUint32(pos + 68, true);\n      // let FOVrow = reader.getFloat32(pos + 72, true);\n      // let FOVcol = reader.getFloat32(pos + 76, true);\n      // let sliceThickness = reader.getFloat32(pos + 80, true);\n      // let gapThickness = reader.getFloat32(pos + 84, true);\n      const nSpatialTransforms = reader.getUint32(pos + 88, true)\n      pos = pos + 92\n      if (nSpatialTransforms > 0) {\n        const len = buffer.byteLength\n        for (let i = 0; i < nSpatialTransforms; i++) {\n          // read variable length name name...\n          while (pos < len && reader.getUint8(pos) !== 0) {\n            pos++\n          }\n          pos++\n          // let typ = reader.getUint32(pos, true);\n          pos += 4\n          // read variable length name name...\n          while (pos < len && reader.getUint8(pos) !== 0) {\n            pos++\n          }\n          pos++\n          const nValues = reader.getUint32(pos, true)\n          pos += 4\n          for (let j = 0; j < nValues; j++) {\n            pos += 4\n          }\n        }\n      }\n      // let LRconv = reader.getUint8(pos);\n      // let ref = reader.getUint8(pos + 1);\n      hdr.pixDims[1] = reader.getFloat32(pos + 2, true)\n      hdr.pixDims[2] = reader.getFloat32(pos + 6, true)\n      hdr.pixDims[3] = reader.getFloat32(pos + 10, true)\n      // let isVer = reader.getUint8(pos + 14);\n      // let isTal = reader.getUint8(pos + 15);\n      // let minInten = reader.getInt32(pos + 16, true);\n      // let meanInten = reader.getInt32(pos + 20, true);\n      // let maxInten = reader.getInt32(pos + 24, true);\n    }\n    log.warn('Warning: VMR spatial transform not implemented')\n    // if (XmmStart === XmmEnd) { // https://brainvoyager.com/bv/sampledata/index.html??\n    hdr.affine = [\n      [0, 0, -hdr.pixDims[1], (hdr.dims[1] - 2) * 0.5 * hdr.pixDims[1]],\n      [-hdr.pixDims[2], 0, 0, (hdr.dims[2] - 2) * 0.5 * hdr.pixDims[2]],\n      [0, -hdr.pixDims[3], 0, (hdr.dims[3] - 2) * 0.5 * hdr.pixDims[3]],\n      [0, 0, 0, 1]\n    ]\n    // }\n    log.debug(hdr)\n    hdr.numBitsPerVoxel = 8\n    hdr.datatypeCode = NiiDataType.DT_UINT8\n    return buffer.slice(8, 8 + nBytes)\n  } // readVMR()\n\n  // not included in public docs\n  // read DSI-Studio FIB format image\n  // https://dsi-studio.labsolver.org/doc/cli_data.html\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async readFIB(buffer: ArrayBuffer): Promise<[ArrayBuffer, Float32Array]> {\n    this.hdr = new NIFTI1()\n    const hdr = this.hdr\n    hdr.littleEndian = false // MGH always big ending\n    hdr.dims = [3, 1, 1, 1, 0, 0, 0, 0]\n    hdr.pixDims = [1, 1, 1, 1, 1, 0, 0, 0]\n    const mat = await NVUtilities.readMatV4(buffer, true)\n    if (!('dimension' in mat) || !('dti_fa' in mat)) {\n      throw new Error('Not a valid DSIstudio FIB file')\n    }\n    const hasV1 = 'index0' in mat && 'index1' in mat && 'index2' in mat && 'odf_vertices' in mat\n    // const hasV1 = false\n    hdr.numBitsPerVoxel = 32\n    hdr.datatypeCode = NiiDataType.DT_FLOAT32\n    hdr.dims[1] = mat.dimension[0]\n    hdr.dims[2] = mat.dimension[1]\n    hdr.dims[3] = mat.dimension[2]\n    hdr.dims[4] = 1\n    hdr.pixDims[1] = mat.voxel_size[0]\n    hdr.pixDims[2] = mat.voxel_size[1]\n    hdr.pixDims[3] = mat.voxel_size[2]\n    hdr.sform_code = 1\n    const xmm = (hdr.dims[1] - 1) * 0.5 * hdr.pixDims[1]\n    const ymm = (hdr.dims[2] - 1) * 0.5 * hdr.pixDims[2]\n    const zmm = (hdr.dims[3] - 1) * 0.5 * hdr.pixDims[3]\n    hdr.affine = [\n      [hdr.pixDims[1], 0, 0, -xmm],\n      [0, -hdr.pixDims[2], 0, ymm],\n      [0, 0, hdr.pixDims[2], -zmm],\n      [0, 0, 0, 1]\n    ]\n    hdr.littleEndian = true\n    const nVox3D = hdr.dims[1] * hdr.dims[2] * hdr.dims[3]\n    const nBytes3D = nVox3D * Math.ceil(hdr.numBitsPerVoxel / 8)\n    const nBytes = nBytes3D * hdr.dims[4]\n    const buff8v1 = new Uint8Array(new ArrayBuffer(nVox3D * 4 * 3)) // 4=Float32, 3=x,y,z\n    if (hasV1) {\n      // read directions, stored as index\n      const nvox = hdr.dims[1] * hdr.dims[2] * hdr.dims[3]\n      const dir0 = new Float32Array(nvox)\n      const dir1 = new Float32Array(nvox)\n      const dir2 = new Float32Array(nvox)\n      const idxs = mat.index0\n      const dirs = mat.odf_vertices\n      for (let i = 0; i < nvox; i++) {\n        const idx = idxs[i] * 3\n        dir0[i] = dirs[idx + 0]\n        dir1[i] = dirs[idx + 1]\n        dir2[i] = -dirs[idx + 2]\n      }\n      buff8v1.set(new Uint8Array(dir0.buffer, dir0.byteOffset, dir0.byteLength), 0 * nBytes3D)\n      buff8v1.set(new Uint8Array(dir1.buffer, dir1.byteOffset, dir1.byteLength), 1 * nBytes3D)\n      buff8v1.set(new Uint8Array(dir2.buffer, dir2.byteOffset, dir2.byteLength), 2 * nBytes3D)\n    }\n    if ('report' in mat) {\n      hdr.description = new TextDecoder().decode(mat.report.subarray(0, Math.min(79, mat.report.byteLength)))\n    }\n    const buff8 = new Uint8Array(new ArrayBuffer(nBytes))\n    const arrFA = Float32Array.from(mat.dti_fa)\n    if ('mask' in mat) {\n      let slope = 1\n      if ('dti_fa_slope' in mat) {\n        slope = mat.dti_fa_slope[0]\n      }\n      let inter = 1\n      if ('dti_fa_inter' in mat) {\n        inter = mat.dti_fa_inter[0]\n      }\n      const nvox = hdr.dims[1] * hdr.dims[2] * hdr.dims[3]\n      const mask = mat.mask\n      const f32 = new Float32Array(nvox)\n      let j = 0\n      for (let i = 0; i < nvox; i++) {\n        if (mask[i] !== 0) {\n          f32[i] = arrFA[j] * slope + inter\n          j++\n        }\n      }\n      return [f32.buffer, new Float32Array(buff8v1.buffer)]\n    }\n    // read FA\n    const imgFA = new Uint8Array(arrFA.buffer, arrFA.byteOffset, arrFA.byteLength)\n    buff8.set(imgFA, 0)\n    return [buff8.buffer, new Float32Array(buff8v1.buffer)]\n  } // readFIB()\n\n  // not included in public docs\n  // read DSI-Studio SRC format image\n  // https://dsi-studio.labsolver.org/doc/cli_data.html\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async readSRC(buffer: ArrayBuffer): Promise<ArrayBuffer> {\n    this.hdr = new NIFTI1()\n    const hdr = this.hdr\n    hdr.littleEndian = false // MGH always big ending\n    hdr.dims = [3, 1, 1, 1, 0, 0, 0, 0]\n    hdr.pixDims = [1, 1, 1, 1, 1, 0, 0, 0]\n    const mat = await NVUtilities.readMatV4(buffer)\n    if (!('dimension' in mat) || !('image0' in mat)) {\n      throw new Error('Not a valid DSIstudio SRC file')\n    }\n    let n = 0\n    let len = 0\n    for (const [key, value] of Object.entries(mat)) {\n      if (!key.startsWith('image')) {\n        continue\n      }\n      if (n === 0) {\n        len = value.length\n      } else if (len !== value.length) {\n        len = -1\n      }\n      if (value.constructor !== Uint16Array) {\n        throw new Error('DSIstudio SRC files always use Uint16 datatype')\n      }\n      n++\n    }\n    if (len < 1 || n < 1) {\n      throw new Error('SRC file not valid DSI Studio data. The image(s) should have the same length')\n    }\n    hdr.numBitsPerVoxel = 16\n    hdr.datatypeCode = NiiDataType.DT_UINT16\n    hdr.dims[1] = mat.dimension[0]\n    hdr.dims[2] = mat.dimension[1]\n    hdr.dims[3] = mat.dimension[2]\n    hdr.dims[4] = n\n    if (hdr.dims[4] > 1) {\n      hdr.dims[0] = 4\n    }\n    hdr.pixDims[1] = mat.voxel_size[0]\n    hdr.pixDims[2] = mat.voxel_size[1]\n    hdr.pixDims[3] = mat.voxel_size[2]\n    hdr.sform_code = 1\n    const xmm = (hdr.dims[1] - 1) * 0.5 * hdr.pixDims[1]\n    const ymm = (hdr.dims[2] - 1) * 0.5 * hdr.pixDims[2]\n    const zmm = (hdr.dims[3] - 1) * 0.5 * hdr.pixDims[3]\n    hdr.affine = [\n      [hdr.pixDims[1], 0, 0, -xmm],\n      [0, -hdr.pixDims[2], 0, ymm],\n      [0, 0, hdr.pixDims[2], -zmm],\n      [0, 0, 0, 1]\n    ]\n    hdr.littleEndian = true\n    const nBytes3D = hdr.dims[1] * hdr.dims[2] * hdr.dims[3] * (hdr.numBitsPerVoxel / 8)\n    const nBytes = nBytes3D * hdr.dims[4]\n    const buff8 = new Uint8Array(new ArrayBuffer(nBytes))\n    let offset = 0\n    for (let i = 0; i < n; i++) {\n      const arr = mat[`image${i}`]\n      const img8 = new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength)\n      buff8.set(img8, offset)\n      offset += nBytes3D\n    }\n    if ('report' in mat) {\n      hdr.description = new TextDecoder().decode(mat.report.subarray(0, Math.min(79, mat.report.byteLength)))\n    }\n    return buff8.buffer\n  } // readSRC()\n\n  // not included in public docs\n  // read AFNI head/brik format image\n  async readHEAD(dataBuffer: ArrayBuffer, pairedImgData: ArrayBuffer | null): Promise<ArrayBuffer> {\n    this.hdr = new NIFTI1()\n    const hdr = this.hdr\n    hdr.dims[0] = 3\n    hdr.pixDims = [1, 1, 1, 1, 1, 0, 0, 0]\n    let orientSpecific = [0, 0, 0]\n    let xyzOrigin = [0, 0, 0]\n    let xyzDelta = [1, 1, 1]\n    const txt = new TextDecoder().decode(dataBuffer)\n    const lines = txt.split(/\\r?\\n/)\n    // embed entire AFNI HEAD text as NIfTI extension\n    const mod = (dataBuffer.byteLength + 8) % 16\n    const len = dataBuffer.byteLength + (16 - mod)\n    log.debug(dataBuffer.byteLength, 'len', len)\n    const extBuffer = new ArrayBuffer(len)\n    new Uint8Array(extBuffer).set(new Uint8Array(dataBuffer))\n    const newExtension = new NIFTIEXTENSION(len + 8, 42, extBuffer, true)\n    hdr.addExtension(newExtension)\n    hdr.extensionCode = 42\n    hdr.extensionFlag[0] = 1\n    hdr.extensionSize = len + 8\n    // Done creating an extension\n    const nlines = lines.length\n    let i = 0\n    let hasIJK_TO_DICOM_REAL = false\n    while (i < nlines) {\n      let line = lines[i] // e.g. 'type = string-attribute'\n      i++\n      if (!line.startsWith('type')) {\n        continue\n      } // n.b. white space varies, \"type =\" vs \"type  =\"\n      const isInt = line.includes('integer-attribute')\n      const isFloat = line.includes('float-attribute')\n      line = lines[i] // e.g. 'name = IDCODE_DATE'\n      i++\n      if (!line.startsWith('name')) {\n        continue\n      }\n      let items: Array<string | number> = line.split('= ')\n      const key = items[1] // e.g. 'IDCODE_DATE'\n      line = lines[i] // e.g. 'count = 5'\n      i++\n      items = line.split('= ')\n      let count = parseInt(items[1] as string) // e.g. '5'\n      if (count < 1) {\n        continue\n      }\n      line = lines[i] // e.g. ''LSB_FIRST~'\n      i++\n      items = line.trim().split(/\\s+/)\n      if (isFloat || isInt) {\n        // read arrays written on multiple lines\n        while (items.length < count) {\n          line = lines[i] // e.g. ''LSB_FIRST~'\n          i++\n          const items2 = line.trim().split(/\\s+/)\n          items.push(...items2)\n        }\n        for (let j = 0; j < count; j++) {\n          items[j] = parseFloat(items[j] as string)\n        }\n      }\n      switch (key) {\n        case 'BYTEORDER_STRING':\n          if ((items[0] as string).includes('LSB_FIRST')) {\n            hdr.littleEndian = true\n          } else if ((items[0] as string).includes('MSB_FIRST')) {\n            hdr.littleEndian = false\n          }\n          break\n        case 'BRICK_TYPES':\n          {\n            hdr.dims[4] = count\n            const datatype = parseInt(items[0] as string)\n            if (datatype === 0) {\n              hdr.numBitsPerVoxel = 8\n              hdr.datatypeCode = NiiDataType.DT_UINT8\n            } else if (datatype === 1) {\n              hdr.numBitsPerVoxel = 16\n              hdr.datatypeCode = NiiDataType.DT_INT16\n            } else if (datatype === 3) {\n              hdr.numBitsPerVoxel = 32\n              hdr.datatypeCode = NiiDataType.DT_FLOAT32\n            } else {\n              log.warn('Unknown BRICK_TYPES ', datatype)\n            }\n          }\n          break\n        case 'IJK_TO_DICOM_REAL':\n          if (count < 12) {\n            break\n          }\n          hasIJK_TO_DICOM_REAL = true\n          hdr.sform_code = 2\n          // note DICOM space is LPS while NIfTI is RAS\n          hdr.affine = [\n            [-items[0], -items[1], -items[2], -items[3]],\n            [-items[4], -items[5], -items[6], -items[7]],\n            // TODO don't reuse items for numeric values\n            [items[8] as number, items[9] as number, items[10] as number, items[11] as number],\n            [0, 0, 0, 1]\n          ]\n          break\n        case 'DATASET_DIMENSIONS':\n          count = Math.max(count, 3)\n          for (let j = 0; j < count; j++) {\n            hdr.dims[j + 1] = items[j] as number\n          }\n          break\n        case 'ORIENT_SPECIFIC':\n          orientSpecific = items as number[]\n          break\n        case 'ORIGIN':\n          xyzOrigin = items as number[]\n          break\n        case 'DELTA':\n          xyzDelta = items as number[]\n          break\n        case 'TAXIS_FLOATS':\n          hdr.pixDims[4] = items[0] as number\n          break\n        default:\n          log.warn('Unknown:', key)\n      } // read item\n    } // read all lines\n    if (!hasIJK_TO_DICOM_REAL) {\n      this.THD_daxes_to_NIFTI(xyzDelta, xyzOrigin, orientSpecific)\n    } else {\n      this.SetPixDimFromSForm()\n    }\n    const nBytes = (hdr.numBitsPerVoxel / 8) * hdr.dims[1] * hdr.dims[2] * hdr.dims[3] * hdr.dims[4]\n    if (!pairedImgData) {\n      throw new Error('pairedImgData not set')\n    }\n    if (pairedImgData.byteLength < nBytes) {\n      // n.b. npm run dev implicitly extracts gz, npm run demo does not!\n      return await NVUtilities.decompressToBuffer(new Uint8Array(pairedImgData))\n    }\n    return pairedImgData.slice(0)\n  }\n\n  // not included in public docs\n  // read ITK MHA format image\n  // https://itk.org/Wiki/ITK/MetaIO/Documentation#Reading_a_Brick-of-Bytes_.28an_N-Dimensional_volume_in_a_single_file.29\n  async readMHA(buffer: ArrayBuffer, pairedImgData: ArrayBuffer | null): Promise<ArrayBuffer> {\n    const len = buffer.byteLength\n    if (len < 20) {\n      throw new Error('File too small to be VTK: bytes = ' + buffer.byteLength)\n    }\n    const bytes = new Uint8Array(buffer)\n    let pos = 0\n    function eol(c: number): boolean {\n      return c === 10 || c === 13 // c is either a line feed character (10) or carriage return character (13)\n    }\n    function readStr(): string {\n      while (pos < len && eol(bytes[pos])) {\n        pos++\n      } // Skip blank lines\n      const startPos = pos\n      while (pos < len && !eol(bytes[pos])) {\n        pos++\n      } // Forward until end of line\n      if (pos - startPos < 2) {\n        return ''\n      }\n      return new TextDecoder().decode(buffer.slice(startPos, pos))\n    }\n    let line = readStr() // 1st line: signature\n    this.hdr = new NIFTI1()\n    const hdr = this.hdr\n    hdr.pixDims = [1, 1, 1, 1, 1, 0, 0, 0]\n    hdr.dims = [1, 1, 1, 1, 1, 1, 1, 1]\n    hdr.littleEndian = true\n    let isGz = false\n    let isDetached = false\n    const mat33 = mat3.fromValues(NaN, 0, 0, 0, 1, 0, 0, 0, 1)\n    const offset = vec3.fromValues(0, 0, 0)\n    while (line !== '') {\n      let items = line.split(' ')\n      if (items.length > 2) {\n        items = items.slice(2)\n      }\n      if (line.startsWith('BinaryDataByteOrderMSB') && items[0].includes('False')) {\n        hdr.littleEndian = true\n      }\n      if (line.startsWith('BinaryDataByteOrderMSB') && items[0].includes('True')) {\n        hdr.littleEndian = false\n      }\n      if (line.startsWith('CompressedData') && items[0].includes('True')) {\n        isGz = true\n      }\n      if (line.startsWith('TransformMatrix')) {\n        for (let d = 0; d < 9; d++) {\n          mat33[d] = parseFloat(items[d])\n        }\n      }\n      if (line.startsWith('Offset')) {\n        for (let d = 0; d < Math.min(items.length, 3); d++) {\n          offset[d] = parseFloat(items[d])\n        }\n      }\n      // if (line.startsWith(\"AnatomicalOrientation\")) //we can ignore, tested with Slicer3D converting NIfTIspace images\n      if (line.startsWith('ElementSpacing')) {\n        for (let d = 0; d < items.length; d++) {\n          hdr.pixDims[d + 1] = parseFloat(items[d])\n        }\n      }\n      if (line.startsWith('DimSize')) {\n        hdr.dims[0] = items.length\n        for (let d = 0; d < items.length; d++) {\n          hdr.dims[d + 1] = parseInt(items[d])\n        }\n      }\n      if (line.startsWith('ElementType')) {\n        switch (items[0]) {\n          case 'MET_UCHAR':\n            hdr.numBitsPerVoxel = 8\n            hdr.datatypeCode = NiiDataType.DT_UINT8\n            break\n          case 'MET_CHAR':\n            hdr.numBitsPerVoxel = 8\n            hdr.datatypeCode = NiiDataType.DT_INT8\n            break\n          case 'MET_SHORT':\n            hdr.numBitsPerVoxel = 16\n            hdr.datatypeCode = NiiDataType.DT_INT16\n            break\n          case 'MET_USHORT':\n            hdr.numBitsPerVoxel = 16\n            hdr.datatypeCode = NiiDataType.DT_UINT16\n            break\n          case 'MET_INT':\n            hdr.numBitsPerVoxel = 32\n            hdr.datatypeCode = NiiDataType.DT_INT32\n            break\n          case 'MET_UINT':\n            hdr.numBitsPerVoxel = 32\n            hdr.datatypeCode = NiiDataType.DT_UINT32\n            break\n          case 'MET_FLOAT':\n            hdr.numBitsPerVoxel = 32\n            hdr.datatypeCode = NiiDataType.DT_FLOAT32\n            break\n          case 'MET_DOUBLE':\n            hdr.numBitsPerVoxel = 64\n            hdr.datatypeCode = NiiDataType.DT_FLOAT64\n            break\n          default:\n            throw new Error('Unsupported MHA data type: ' + items[0])\n        }\n      }\n      if (line.startsWith('ObjectType') && !items[0].includes('Image')) {\n        log.warn('Only able to read ObjectType = Image, not ' + line)\n      }\n      if (line.startsWith('ElementDataFile')) {\n        if (items[0] !== 'LOCAL') {\n          isDetached = true\n        }\n        break\n      }\n      line = readStr()\n    }\n    const mmMat = mat3.fromValues(hdr.pixDims[1], 0, 0, 0, hdr.pixDims[2], 0, 0, 0, hdr.pixDims[3])\n    mat3.multiply(mat33, mat33, mmMat)\n    hdr.affine = [\n      [-mat33[0], -mat33[3], -mat33[6], -offset[0]],\n      [-mat33[1], -mat33[4], -mat33[7], -offset[1]],\n      [mat33[2], mat33[5], mat33[8], offset[2]],\n      [0, 0, 0, 1]\n    ]\n    while (bytes[pos] === 10) {\n      pos++\n    }\n    hdr.vox_offset = pos\n    if (isDetached && pairedImgData) {\n      if (isGz) {\n        return await NVUtilities.decompressToBuffer(new Uint8Array(pairedImgData.slice(0)))\n      }\n      return pairedImgData.slice(0)\n    }\n    if (isGz) {\n      return await NVUtilities.decompressToBuffer(new Uint8Array(buffer.slice(hdr.vox_offset)))\n    }\n    return buffer.slice(hdr.vox_offset)\n  } // readMHA()\n\n  // not included in public docs\n  // read mrtrix MIF format image\n  // https://mrtrix.readthedocs.io/en/latest/getting_started/image_data.html#mrtrix-image-formats\n  async readMIF(buffer: ArrayBuffer, pairedImgData: ArrayBuffer | null): Promise<ArrayBuffer> {\n    // MIF files typically 3D (e.g. anatomical), 4D (fMRI, DWI). 5D rarely seen\n    // This read currently supports up to 5D. To create test: \"mrcat -axis 4 a4d.mif b4d.mif out5d.mif\"\n    this.hdr = new NIFTI1()\n    const hdr = this.hdr\n    hdr.pixDims = [1, 1, 1, 1, 1, 0, 0, 0]\n    hdr.dims = [1, 1, 1, 1, 1, 1, 1, 1]\n    let len = buffer.byteLength\n    if (len < 20) {\n      throw new Error('File too small to be MIF: bytes = ' + len)\n    }\n    const bytes = new Uint8Array(buffer)\n    if (bytes[0] === 31 && bytes[1] === 139) {\n      log.debug('MIF with GZ decompression')\n      // const raw = decompressSync(new Uint8Array(buffer))\n      // buffer = raw.buffer\n      buffer = await NVUtilities.decompressToBuffer(new Uint8Array(buffer))\n      len = buffer.byteLength\n    }\n    let pos = 0\n    function readStr(): string {\n      while (pos < len && bytes[pos] === 10) {\n        pos++\n      } // skip blank lines\n      const startPos = pos\n      while (pos < len && bytes[pos] !== 10) {\n        pos++\n      }\n      pos++ // skip EOLN\n      if (pos - startPos < 1) {\n        return ''\n      }\n      return new TextDecoder().decode(buffer.slice(startPos, pos - 1))\n    }\n    let line = readStr() // 1st line: signature 'mrtrix tracks'\n    if (!line.startsWith('mrtrix image')) {\n      throw new Error('Not a valid MIF file')\n    }\n    const layout = []\n    let isBit = false\n    let nTransform = 0\n    let TR = 0\n    let isDetached = false\n    // let isTensor = false\n    line = readStr()\n    while (pos < len && !line.startsWith('END')) {\n      let items = line.split(':') // \"vox: 1,1,1\" -> \"vox\", \" 1,1,1\"\n      line = readStr()\n      if (items.length < 2) {\n        break\n      } //\n      const tag = items[0] // \"datatype\", \"dim\"\n      items = items[1].split(',') // \" 1,1,1\" -> \" 1\", \"1\", \"1\"\n      for (let i = 0; i < items.length; i++) {\n        items[i] = items[i].trim()\n      } // \" 1\", \"1\", \"1\" -> \"1\", \"1\", \"1\"\n      switch (tag) {\n        case 'dim':\n          hdr.dims[0] = items.length\n          for (let i = 0; i < items.length; i++) {\n            hdr.dims[i + 1] = parseInt(items[i])\n          }\n          break\n        case 'vox':\n          for (let i = 0; i < items.length; i++) {\n            hdr.pixDims[i + 1] = parseFloat(items[i])\n            if (isNaN(hdr.pixDims[i + 1])) {\n              hdr.pixDims[i + 1] = 0.0\n            }\n          }\n          break\n        case 'layout':\n          for (let i = 0; i < items.length; i++) {\n            layout.push(parseInt(items[i]))\n          } // n.b. JavaScript preserves sign for -0\n          break\n        case 'datatype':\n          {\n            const dt = items[0]\n            if (dt.startsWith('Bit')) {\n              isBit = true\n              hdr.datatypeCode = NiiDataType.DT_UINT8\n            } else if (dt.startsWith('Int8')) {\n              hdr.datatypeCode = NiiDataType.DT_INT8\n            } else if (dt.startsWith('UInt8')) {\n              hdr.datatypeCode = NiiDataType.DT_UINT8\n            } else if (dt.startsWith('Int16')) {\n              hdr.datatypeCode = NiiDataType.DT_INT16\n            } else if (dt.startsWith('UInt16')) {\n              hdr.datatypeCode = NiiDataType.DT_UINT16\n            } else if (dt.startsWith('Int32')) {\n              hdr.datatypeCode = NiiDataType.DT_INT32\n            } else if (dt.startsWith('UInt32')) {\n              hdr.datatypeCode = NiiDataType.DT_UINT32\n            } else if (dt.startsWith('Float32')) {\n              hdr.datatypeCode = NiiDataType.DT_FLOAT32\n            } else if (dt.startsWith('Float64')) {\n              hdr.datatypeCode = NiiDataType.DT_FLOAT64\n            } else {\n              log.warn('Unsupported datatype ' + dt)\n            }\n            if (dt.includes('8')) {\n              hdr.numBitsPerVoxel = 8\n            } else if (dt.includes('16')) {\n              hdr.numBitsPerVoxel = 16\n            } else if (dt.includes('32')) {\n              hdr.numBitsPerVoxel = 32\n            } else if (dt.includes('64')) {\n              hdr.numBitsPerVoxel = 64\n            }\n            hdr.littleEndian = true // native, to do support big endian readers\n            if (dt.endsWith('LE')) {\n              hdr.littleEndian = true\n            }\n            if (dt.endsWith('BE')) {\n              hdr.littleEndian = false\n            }\n          }\n          break\n        case 'transform':\n          if (nTransform > 2 || items.length !== 4) {\n            break\n          }\n          hdr.affine[nTransform][0] = parseFloat(items[0])\n          hdr.affine[nTransform][1] = parseFloat(items[1])\n          hdr.affine[nTransform][2] = parseFloat(items[2])\n          hdr.affine[nTransform][3] = parseFloat(items[3])\n          nTransform++\n          break\n        case 'comments':\n          hdr.description = items[0].substring(0, Math.min(79, items[0].length))\n          break\n        /* case 'command_history':\n          if (items[0].startsWith('dwi2tensor')) {\n            isTensor = true\n          }\n          break */\n        case 'RepetitionTime':\n          TR = parseFloat(items[0])\n          break\n        case 'file':\n          isDetached = !items[0].startsWith('. ')\n          if (!isDetached) {\n            items = items[0].split(' ') // \". 2336\" -> \". \", \"2336\"\n            hdr.vox_offset = parseInt(items[1])\n          }\n          break\n      }\n    }\n    const ndim = hdr.dims[0]\n    if (ndim > 5) {\n      log.warn('reader only designed for a maximum of 5 dimensions (XYZTD)')\n    }\n    let nvox = 1\n    for (let i = 0; i < ndim; i++) {\n      nvox *= Math.max(hdr.dims[i + 1], 1)\n    }\n    // let nvox = hdr.dims[1] * hdr.dims[2] * hdr.dims[3] * hdr.dims[4];\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        // hdr.affine[i][j] *= hdr.pixDims[i + 1];\n        hdr.affine[i][j] *= hdr.pixDims[j + 1]\n      }\n    }\n    log.debug('mif affine:' + hdr.affine[0])\n    if (TR > 0) {\n      hdr.pixDims[4] = TR\n    }\n    if (isDetached && !pairedImgData) {\n      log.warn('MIH header provided without paired image data')\n    }\n    let rawImg: ArrayBuffer\n    if (pairedImgData && isDetached) {\n      rawImg = pairedImgData.slice(0)\n    } else if (isBit) {\n      hdr.numBitsPerVoxel = 8\n      const img8 = new Uint8Array(nvox)\n      const buffer1 = buffer.slice(hdr.vox_offset, hdr.vox_offset + Math.ceil(nvox / 8))\n      const img1 = new Uint8Array(buffer1)\n      let j = 0\n      for (let i = 0; i < nvox; i++) {\n        const bit = i % 8\n        img8[i] = (img1[j] >> (7 - bit)) & 1\n        if (bit === 7) {\n          j++\n        }\n      }\n      rawImg = img8.buffer\n    } else {\n      // n.b. mrconvert can pad files? See dtitest_Siemens_SC 4_dti_nopf_x2_pitch\n      rawImg = buffer.slice(hdr.vox_offset, hdr.vox_offset + nvox * (hdr.numBitsPerVoxel / 8))\n    }\n    if (layout.length !== hdr.dims[0]) {\n      log.warn('dims does not match layout')\n    }\n    // estimate strides:\n    let stride = 1\n    const instride = [1, 1, 1, 1, 1]\n    const inflip = [false, false, false, false, false]\n    for (let i = 0; i < layout.length; i++) {\n      for (let j = 0; j < layout.length; j++) {\n        const a = Math.abs(layout[j])\n        if (a !== i) {\n          continue\n        }\n        instride[j] = stride\n        // detect -0: https://medium.com/coding-at-dawn/is-negative-zero-0-a-number-in-javascript-c62739f80114\n        if (layout[j] < 0 || Object.is(layout[j], -0)) {\n          inflip[j] = true\n        }\n        stride *= hdr.dims[j + 1]\n      }\n    }\n    // lookup table for flips and stride offsets:\n    let xlut = NVUtilities.range(0, hdr.dims[1] - 1, 1)\n    if (inflip[0]) {\n      xlut = NVUtilities.range(hdr.dims[1] - 1, 0, -1)\n    }\n    for (let i = 0; i < hdr.dims[1]; i++) {\n      xlut[i] *= instride[0]\n    }\n    let ylut = NVUtilities.range(0, hdr.dims[2] - 1, 1)\n    if (inflip[1]) {\n      ylut = NVUtilities.range(hdr.dims[2] - 1, 0, -1)\n    }\n    for (let i = 0; i < hdr.dims[2]; i++) {\n      ylut[i] *= instride[1]\n    }\n    let zlut = NVUtilities.range(0, hdr.dims[3] - 1, 1)\n    if (inflip[2]) {\n      zlut = NVUtilities.range(hdr.dims[3] - 1, 0, -1)\n    }\n    for (let i = 0; i < hdr.dims[3]; i++) {\n      zlut[i] *= instride[2]\n    }\n    let tlut = NVUtilities.range(0, hdr.dims[4] - 1, 1)\n    if (inflip[3]) {\n      tlut = NVUtilities.range(hdr.dims[4] - 1, 0, -1)\n    }\n    for (let i = 0; i < hdr.dims[4]; i++) {\n      tlut[i] *= instride[3]\n    }\n    let dlut = NVUtilities.range(0, hdr.dims[5] - 1, 1)\n    if (inflip[4]) {\n      dlut = NVUtilities.range(hdr.dims[5] - 1, 0, -1)\n    }\n    for (let i = 0; i < hdr.dims[5]; i++) {\n      dlut[i] *= instride[4]\n    }\n    // input and output arrays\n    let j = 0\n    let inVs: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array | Float32Array | Float64Array\n    let outVs:\n      | Int8Array\n      | Uint8Array\n      | Int16Array\n      | Uint16Array\n      | Int32Array\n      | Uint32Array\n      | Float32Array\n      | Float64Array\n    switch (hdr.datatypeCode) {\n      case NiiDataType.DT_INT8:\n        inVs = new Int8Array(rawImg)\n        outVs = new Int8Array(nvox)\n        break\n      case NiiDataType.DT_UINT8:\n        inVs = new Uint8Array(rawImg)\n        outVs = new Uint8Array(nvox)\n        break\n      case NiiDataType.DT_INT16:\n        inVs = new Int16Array(rawImg)\n        outVs = new Int16Array(nvox)\n        break\n      case NiiDataType.DT_UINT16:\n        inVs = new Uint16Array(rawImg)\n        outVs = new Uint16Array(nvox)\n        break\n      case NiiDataType.DT_INT32:\n        inVs = new Int32Array(rawImg)\n        outVs = new Int32Array(nvox)\n        break\n      case NiiDataType.DT_UINT32:\n        inVs = new Uint32Array(rawImg)\n        outVs = new Uint32Array(nvox)\n        break\n      case NiiDataType.DT_FLOAT32:\n        inVs = new Float32Array(rawImg)\n        outVs = new Float32Array(nvox)\n        break\n      case NiiDataType.DT_FLOAT64:\n        inVs = new Float64Array(rawImg)\n        outVs = new Float64Array(nvox)\n        break\n      default:\n        throw new Error('unknown datatypeCode')\n    }\n    for (let d = 0; d < hdr.dims[5]; d++) {\n      for (let t = 0; t < hdr.dims[4]; t++) {\n        for (let z = 0; z < hdr.dims[3]; z++) {\n          for (let y = 0; y < hdr.dims[2]; y++) {\n            for (let x = 0; x < hdr.dims[1]; x++) {\n              outVs[j] = inVs[xlut[x] + ylut[y] + zlut[z] + tlut[t] + dlut[d]]\n              j++\n            } // for x\n          } // for y\n        } // for z\n      } // for t (time)\n    } // for d (direction, phase/real, etc)\n    /*\n    \n    let v1s = new Float32Array(0)\n    if (isTensor && isDerived && hdr.datatypeCode === NiiDataType.DT_FLOAT32 && hdr.dims[4] === 6) {\n      // https://community.mrtrix.org/t/dti-volumes-storage-formats-and-conversion/4502\n      // https://mrtrix.readthedocs.io/en/latest/reference/commands/dwi2tensor.html\n      // volumes 0-5: D11, D22, D33, D12, D13, D23\n      // https://github.com/ANTsX/ANTs/wiki/Importing-diffusion-tensor-data-from-other-software\n      // mrtrix xx, yy, zz, xy, xz, yz\n      // ants xx, xy, yy, xz, yz, zz (NIfTI, lower)\n      // NIFTI_INTENT_SYMMATRIX https://nifti.nimh.nih.gov/pub/dist/src/niftilib/nifti1.h\n      hdr.dims[0] = 3\n      hdr.dims[4] = 1\n      const nVox3D = hdr.dims[1] * hdr.dims[2] * hdr.dims[3]\n      const rawImg = outVs.slice()\n      outVs = new Float32Array(nVox3D)\n      v1s = new Float32Array(nVox3D * 3)\n      const offsets = [0, nVox3D, 2 * nVox3D, 3 * nVox3D, 4 * nVox3D, 5 * nVox3D]\n      for (let i = 0; i < nVox3D; i++) {\n        const tensor = [\n          rawImg[i + offsets[0]],\n          rawImg[i + offsets[1]],\n          rawImg[i + offsets[2]],\n          rawImg[i + offsets[5]],\n          rawImg[i + offsets[3]],\n          rawImg[i + offsets[4]]\n        ]\n        let allZeros = true\n        for (let j = 0; j < 6; j++) {\n          if (tensor[j] !== 0) {\n            allZeros = false\n            break\n          }\n        }\n        if (allZeros) {\n          continue\n        }\n        const v1 = tensorToPrincipalAxesAndFA(tensor)\n        outVs[i] = v1[3]\n        v1s[i] = v1[0]\n        v1s[i + offsets[1]] = v1[1]\n        v1s[i + offsets[2]] = v1[2]\n      }\n    }\n    return [outVs, v1s] */\n    return outVs.buffer as ArrayBuffer\n  } // readMIF()\n\n  // not included in public docs\n  // Transform to orient NIfTI image to Left->Right,Posterior->Anterior,Inferior->Superior (48 possible permutations)\n  calculateRAS(): void {\n    if (!this.hdr) {\n      throw new Error('hdr not set')\n    }\n    // port of Matlab reorient() https://github.com/xiangruili/dicm2nii/blob/master/nii_viewer.m\n    // not elegant, as JavaScript arrays are always 1D\n    const a = this.hdr.affine\n    const header = this.hdr\n    const absR = mat3.fromValues(\n      Math.abs(a[0][0]),\n      Math.abs(a[0][1]),\n      Math.abs(a[0][2]),\n      Math.abs(a[1][0]),\n      Math.abs(a[1][1]),\n      Math.abs(a[1][2]),\n      Math.abs(a[2][0]),\n      Math.abs(a[2][1]),\n      Math.abs(a[2][2])\n    )\n    // 1st column = x\n    const ixyz = [1, 1, 1]\n    if (absR[3] > absR[0]) {\n      ixyz[0] = 2 // (absR[1][0] > absR[0][0]) ixyz[0] = 2;\n    }\n    if (absR[6] > absR[0] && absR[6] > absR[3]) {\n      ixyz[0] = 3 // ((absR[2][0] > absR[0][0]) && (absR[2][0]> absR[1][0])) ixyz[0] = 3;\n    } // 2nd column = y\n    ixyz[1] = 1\n    if (ixyz[0] === 1) {\n      if (absR[4] > absR[7]) {\n        // (absR[1][1] > absR[2][1])\n        ixyz[1] = 2\n      } else {\n        ixyz[1] = 3\n      }\n    } else if (ixyz[0] === 2) {\n      if (absR[1] > absR[7]) {\n        // (absR[0][1] > absR[2][1])\n        ixyz[1] = 1\n      } else {\n        ixyz[1] = 3\n      }\n    } else {\n      if (absR[1] > absR[4]) {\n        // (absR[0][1] > absR[1][1])\n        ixyz[1] = 1\n      } else {\n        ixyz[1] = 2\n      }\n    }\n    // 3rd column = z: constrained as x+y+z = 1+2+3 = 6\n    ixyz[2] = 6 - ixyz[1] - ixyz[0]\n    let perm = [1, 2, 3]\n    perm[ixyz[0] - 1] = 1\n    perm[ixyz[1] - 1] = 2\n    perm[ixyz[2] - 1] = 3\n    let rotM = mat4.fromValues(\n      a[0][0],\n      a[0][1],\n      a[0][2],\n      a[0][3],\n      a[1][0],\n      a[1][1],\n      a[1][2],\n      a[1][3],\n      a[2][0],\n      a[2][1],\n      a[2][2],\n      a[2][3],\n      0,\n      0,\n      0,\n      1\n    )\n    // n.b. 0.5 in these values to account for voxel centers, e.g. a 3-pixel wide bitmap in unit space has voxel centers at 0.25, 0.5 and 0.75\n    this.mm000 = this.vox2mm([-0.5, -0.5, -0.5], rotM)\n    this.mm100 = this.vox2mm([header.dims[1] - 0.5, -0.5, -0.5], rotM)\n    this.mm010 = this.vox2mm([-0.5, header.dims[2] - 0.5, -0.5], rotM)\n    this.mm001 = this.vox2mm([-0.5, -0.5, header.dims[3] - 0.5], rotM)\n    const R = mat4.create()\n    mat4.copy(R, rotM)\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        R[i * 4 + j] = rotM[i * 4 + perm[j] - 1] // rotM[i+(4*(perm[j]-1))];//rotM[i],[perm[j]-1];\n      }\n    }\n    const flip = [0, 0, 0]\n    if (R[0] < 0) {\n      flip[0] = 1\n    } // R[0][0]\n    if (R[5] < 0) {\n      flip[1] = 1\n    } // R[1][1]\n    if (R[10] < 0) {\n      flip[2] = 1\n    } // R[2][2]\n    this.dimsRAS = [header.dims[0], header.dims[perm[0]], header.dims[perm[1]], header.dims[perm[2]]]\n    this.pixDimsRAS = [header.pixDims[0], header.pixDims[perm[0]], header.pixDims[perm[1]], header.pixDims[perm[2]]]\n    this.permRAS = perm.slice()\n    for (let i = 0; i < 3; i++) {\n      if (flip[i] === 1) {\n        this.permRAS[i] = -this.permRAS[i]\n      }\n    }\n    if (this.arrayEquals(perm, [1, 2, 3]) && this.arrayEquals(flip, [0, 0, 0])) {\n      this.toRAS = mat4.create() // aka fromValues(1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1);\n      this.matRAS = mat4.clone(rotM)\n      this.calculateOblique()\n      this.img2RASstep = [1, this.dimsRAS[1], this.dimsRAS[1] * this.dimsRAS[2]]\n      this.img2RASstart = [0, 0, 0]\n      return // no rotation required!\n    }\n    mat4.identity(rotM)\n    rotM[0 + 0 * 4] = 1 - flip[0] * 2\n    rotM[1 + 1 * 4] = 1 - flip[1] * 2\n    rotM[2 + 2 * 4] = 1 - flip[2] * 2\n    rotM[3 + 0 * 4] = (header.dims[perm[0]] - 1) * flip[0]\n    rotM[3 + 1 * 4] = (header.dims[perm[1]] - 1) * flip[1]\n    rotM[3 + 2 * 4] = (header.dims[perm[2]] - 1) * flip[2]\n    const residualR = mat4.create()\n    mat4.invert(residualR, rotM)\n    mat4.multiply(residualR, residualR, R)\n    this.matRAS = mat4.clone(residualR)\n    rotM = mat4.fromValues(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1)\n    rotM[perm[0] - 1 + 0 * 4] = -flip[0] * 2 + 1\n    rotM[perm[1] - 1 + 1 * 4] = -flip[1] * 2 + 1\n    rotM[perm[2] - 1 + 2 * 4] = -flip[2] * 2 + 1\n    rotM[3 + 0 * 4] = flip[0]\n    rotM[3 + 1 * 4] = flip[1]\n    rotM[3 + 2 * 4] = flip[2]\n    this.toRAS = mat4.clone(rotM) // webGL unit textures\n    // voxel based column-major,\n    rotM[3] = 0\n    rotM[7] = 0\n    rotM[11] = 0\n    rotM[12] = 0\n    if (this.permRAS[0] === -1 || this.permRAS[1] === -1 || this.permRAS[2] === -1) {\n      rotM[12] = header.dims[1] - 1\n    }\n    rotM[13] = 0\n    if (this.permRAS[0] === -2 || this.permRAS[1] === -2 || this.permRAS[2] === -2) {\n      rotM[13] = header.dims[2] - 1\n    }\n    rotM[14] = 0\n    if (this.permRAS[0] === -3 || this.permRAS[1] === -3 || this.permRAS[2] === -3) {\n      rotM[14] = header.dims[3] - 1\n    }\n    this.toRASvox = mat4.clone(rotM)\n    log.debug(this.hdr.dims)\n    log.debug(this.dimsRAS)\n\n    // compute img2RASstep[] and img2RASstart[] for rapid native<->RAS conversion\n    // TODO: replace all other outStep/outStart calculations with img2RASstep/img2RASstart\n    const hdr = this.hdr\n    perm = this.permRAS\n    const aperm = [Math.abs(perm[0]), Math.abs(perm[1]), Math.abs(perm[2])]\n    const outdim = [hdr.dims[aperm[0]], hdr.dims[aperm[1]], hdr.dims[aperm[2]]]\n    const inStep = [1, hdr.dims[1], hdr.dims[1] * hdr.dims[2]] // increment i,j,k\n    const outStep = [inStep[aperm[0] - 1], inStep[aperm[1] - 1], inStep[aperm[2] - 1]]\n    const outStart = [0, 0, 0]\n    for (let p = 0; p < 3; p++) {\n      // flip dimensions\n      if (perm[p] < 0) {\n        outStart[p] = outStep[p] * (outdim[p] - 1)\n        outStep[p] = -outStep[p]\n      }\n    }\n    this.img2RASstep = outStep\n    this.img2RASstart = outStart\n\n    this.calculateOblique()\n  }\n\n  // Reorient raw header data to RAS\n  // assume single volume, use nVolumes to specify, set nVolumes = 0 for same as input\n\n  async hdr2RAS(nVolumes: number = 1): Promise<NIFTI1 | NIFTI2> {\n    if (!this.permRAS) {\n      throw new Error('permRAS undefined')\n    }\n    if (!this.hdr) {\n      throw new Error('hdr undefined')\n    }\n    // make a deep clone\n    const hdrBytes = hdrToArrayBuffer({ ...this.hdr!, vox_offset: 352 }, false)\n    const hdr = await readHeaderAsync(hdrBytes.buffer as ArrayBuffer, true)\n    // n.b. if nVolumes < 1, input volumes = output volumess\n    if (nVolumes === 1) {\n      // 3D\n      hdr.dims[0] = 3\n      hdr.dims[4] = 1\n    } else if (nVolumes > 1) {\n      // 4D\n      hdr.dims[0] = 4\n      hdr.dims[4] = nVolumes\n    }\n    const perm = this.permRAS.slice()\n    if (perm[0] === 1 && perm[1] === 2 && perm[2] === 3) {\n      return hdr\n    } // header is already in RAS\n    hdr.qform_code = 0\n    for (let i = 1; i < 4; i++) {\n      hdr.dims[i] = this.dimsRAS[i]\n    }\n\n    for (let i = 0; i < this.pixDimsRAS.length; i++) {\n      hdr.pixDims[i] = this.pixDimsRAS[i]\n    }\n    let k = 0\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        hdr.affine[i][j] = this.matRAS[k]\n        k++\n      }\n    }\n    return hdr\n  }\n\n  // Reorient raw image data to RAS\n  // note that GPU-based orient shader is much faster\n  // returns single 3D volume even for 4D input. Use nVolume to select volume (0 indexed)\n  img2RAS(nVolume: number = 0): TypedVoxelArray {\n    if (!this.permRAS) {\n      throw new Error('permRAS undefined')\n    }\n    if (!this.img) {\n      throw new Error('img undefined')\n    }\n    if (!this.hdr) {\n      throw new Error('hdr undefined')\n    }\n\n    const perm = this.permRAS.slice()\n    if (perm[0] === 1 && perm[1] === 2 && perm[2] === 3) {\n      return this.img\n    } // image is already in RAS\n    const hdr = this.hdr\n    const nVox = hdr.dims[1] * hdr.dims[2] * hdr.dims[3]\n    let volSkip = nVolume * nVox\n    if (volSkip + nVox > this.img.length || volSkip < 0) {\n      volSkip = 0\n      log.warn(`img2RAS nVolume (${nVolume}) out of bounds (${nVolume}+1)×${nVox} > ${this.img.length}`)\n    }\n    // preallocate/clone image (only 3D for 4D datasets!)\n    const imgRAS = this.img.slice(0, nVox)\n    const aperm = [Math.abs(perm[0]), Math.abs(perm[1]), Math.abs(perm[2])]\n    const outdim = [hdr.dims[aperm[0]], hdr.dims[aperm[1]], hdr.dims[aperm[2]]]\n    const inStep = [1, hdr.dims[1], hdr.dims[1] * hdr.dims[2]] // increment i,j,k\n    const outStep = [inStep[aperm[0] - 1], inStep[aperm[1] - 1], inStep[aperm[2] - 1]]\n    const outStart = [0, 0, 0]\n    for (let p = 0; p < 3; p++) {\n      // flip dimensions\n      if (perm[p] < 0) {\n        outStart[p] = outStep[p] * (outdim[p] - 1)\n        outStep[p] = -outStep[p]\n      }\n    }\n    let j = 0\n    for (let z = 0; z < outdim[2]; z++) {\n      const zi = outStart[2] + z * outStep[2]\n      for (let y = 0; y < outdim[1]; y++) {\n        const yi = outStart[1] + y * outStep[1]\n        for (let x = 0; x < outdim[0]; x++) {\n          const xi = outStart[0] + x * outStep[0]\n          imgRAS[j] = this.img[xi + yi + zi + volSkip]\n          j++\n        } // for x\n      } // for y\n    } // for z\n    return imgRAS\n  } // img2RAS()\n\n  // not included in public docs\n  // convert voxel location (row, column slice, indexed from 0) to world space\n  vox2mm(XYZ: number[], mtx: mat4): vec3 {\n    const sform = mat4.clone(mtx)\n    mat4.transpose(sform, sform)\n    const pos = vec4.fromValues(XYZ[0], XYZ[1], XYZ[2], 1)\n    vec4.transformMat4(pos, pos, sform)\n    const pos3 = vec3.fromValues(pos[0], pos[1], pos[2])\n    return pos3\n  } // vox2mm()\n\n  // not included in public docs\n  // convert world space to voxel location (row, column slice, indexed from 0)\n  mm2vox(mm: number[], frac = false): Float32Array | vec3 {\n    if (!this.matRAS) {\n      throw new Error('matRAS undefined')\n    }\n\n    const sform = mat4.clone(this.matRAS)\n    const out = mat4.clone(sform)\n    mat4.transpose(out, sform)\n    mat4.invert(out, out)\n    const pos = vec4.fromValues(mm[0], mm[1], mm[2], 1)\n    vec4.transformMat4(pos, pos, out)\n    const pos3 = vec3.fromValues(pos[0], pos[1], pos[2])\n    if (frac) {\n      return pos3\n    }\n    return [Math.round(pos3[0]), Math.round(pos3[1]), Math.round(pos3[2])]\n  } // vox2mm()\n\n  // not included in public docs\n  // returns boolean: are two arrays identical?\n  // TODO this won't work for complex objects. Maybe use array-equal from NPM\n  arrayEquals(a: unknown[], b: unknown[]): boolean {\n    return Array.isArray(a) && Array.isArray(b) && a.length === b.length && a.every((val, index) => val === b[index])\n  }\n\n  // not included in public docs\n  // base function for niivue.setColormap()\n  // colormaps are continuously interpolated between 256 values (0..256)\n  setColormap(cm: string): void {\n    this._colormap = cm\n    this.calMinMax()\n    if (this.onColormapChange) {\n      this.onColormapChange(this)\n    }\n  }\n\n  // not included in public docs\n  // base function for niivue.setColormap()\n  // label colormaps are discretely sampled from an arbitrary number of colors\n  setColormapLabel(cm: ColorMap): void {\n    this.colormapLabel = cmapper.makeLabelLut(cm)\n  }\n\n  async setColormapLabelFromUrl(url: string): Promise<void> {\n    this.colormapLabel = await cmapper.makeLabelLutFromUrl(url)\n  }\n\n  get colormap(): string {\n    return this._colormap\n  }\n\n  get colorMap(): string {\n    return this._colormap\n  }\n\n  // TODO duplicate fields, see niivue/loadDocument\n  set colormap(cm: string) {\n    this.setColormap(cm)\n  }\n\n  set colorMap(cm: string) {\n    this.setColormap(cm)\n  }\n\n  get opacity(): number {\n    return this._opacity\n  }\n\n  set opacity(opacity) {\n    this._opacity = opacity\n    if (this.onOpacityChange) {\n      this.onOpacityChange(this)\n    }\n  }\n\n  /**\n   * set contrast/brightness to robust range (2%..98%)\n   * @param vol - volume for estimate (use -1 to use estimate on all loaded volumes; use INFINITY for current volume)\n   * @param isBorder - if true (default) only center of volume used for estimate\n   * @returns volume brightness and returns array [pct2, pct98, mnScale, mxScale]\n   * @see {@link https://niivue.github.io/niivue/features/timeseries2.html | live demo usage}\n   */\n  calMinMax(vol: number = Number.POSITIVE_INFINITY, isBorder: boolean = true): number[] {\n    if (!this.hdr) {\n      throw new Error('hdr undefined')\n    }\n    if (!this.img) {\n      throw new Error('img undefined')\n    }\n    // determine full range: min..max\n    let mn = Number.POSITIVE_INFINITY // not this.img[0] in case ignoreZeroVoxels\n    let mx = Number.NEGATIVE_INFINITY // this.img[0] in case ignoreZeroVoxels\n    let nZero = 0\n    let nNan = 0\n    let nVox3D = this.hdr.dims[1] * this.hdr.dims[2] * this.hdr.dims[3]\n    // n.b. due to limitFrames4D nVol may not equal dims[4]\n    const nVol = Math.floor(this.img.length / nVox3D)\n    if (vol >= nVol) {\n      vol = this.frame4D\n    }\n    vol = Math.min(vol, nVol - 1)\n    const skipVox = vol * nVox3D\n    let img = []\n    if (!isBorder) {\n      img = new (this.img.constructor as new (length: number) => any)(nVox3D)\n      for (let i = 0; i < nVox3D; i++) {\n        img[i] = this.img[i + skipVox]\n      }\n    } else {\n      const borderFrac = 0.25\n      const borders = [\n        Math.floor(borderFrac * this.hdr.dims[1]),\n        Math.floor(borderFrac * this.hdr.dims[2]),\n        Math.floor(borderFrac * this.hdr.dims[3])\n      ]\n      const dims = [\n        this.hdr.dims[1] - 2 * borders[0],\n        this.hdr.dims[2] - 2 * borders[1],\n        this.hdr.dims[3] - 2 * borders[2]\n      ]\n      const bordersHi = [dims[0] + borders[0], dims[1] + borders[1], dims[2] + borders[2]]\n      nVox3D = dims[0] * dims[1] * dims[2]\n      img = new (this.img.constructor as new (length: number) => any)(nVox3D)\n      let j = -1\n      let i = 0\n      for (let z = 0; z < this.hdr.dims[3]; z++) {\n        for (let y = 0; y < this.hdr.dims[2]; y++) {\n          for (let x = 0; x < this.hdr.dims[1]; x++) {\n            j++\n            if (x < borders[0] || y < borders[1] || z < borders[2]) {\n              continue\n            }\n            if (x >= bordersHi[0] || y >= bordersHi[1] || z >= bordersHi[2]) {\n              continue\n            }\n            img[i] = this.img[j + skipVox]\n            i++\n          }\n        }\n      }\n    }\n    /* for (let i = 0; i < nVox3D; i++) {\n      img[i] = this.img[i + skipVox]\n    } */\n    // we can accelerate loops for integer data (which can not store NaN)\n    // n.b. do to stack size, we can not use Math.max.apply()\n    const isFastCalc = img.constructor !== Float64Array && img.constructor !== Float32Array && this.ignoreZeroVoxels\n    if (isFastCalc) {\n      for (let i = 0; i < nVox3D; i++) {\n        mn = Math.min(img[i], mn)\n        mx = Math.max(img[i], mx)\n        if (img[i] === 0) {\n          nZero++\n        }\n      }\n    } else {\n      for (let i = 0; i < nVox3D; i++) {\n        if (isNaN(img[i])) {\n          nNan++\n          continue\n        }\n        if (img[i] === 0) {\n          nZero++\n          if (this.ignoreZeroVoxels) {\n            continue\n          }\n        }\n        mn = Math.min(img[i], mn)\n        mx = Math.max(img[i], mx)\n      }\n    }\n    if (this.ignoreZeroVoxels && mn === mx && nZero > 0) {\n      mn = 0\n    }\n    const mnScale = this.intensityRaw2Scaled(mn)\n    const mxScale = this.intensityRaw2Scaled(mx)\n    const cmap = cmapper.colormapFromKey(this._colormap)\n    let cmMin = 0\n    let cmMax = 0\n    if (cmap.min !== undefined) {\n      cmMin = cmap.min\n    }\n    if (cmap.max !== undefined) {\n      cmMax = cmap.max\n    }\n    if (\n      cmMin === cmMax &&\n      this.trustCalMinMax &&\n      isFinite(this.hdr.cal_min) &&\n      isFinite(this.hdr.cal_max) &&\n      this.hdr.cal_max > this.hdr.cal_min\n    ) {\n      this.cal_min = this.hdr.cal_min\n      this.cal_max = this.hdr.cal_max\n      this.robust_min = this.cal_min\n      this.robust_max = this.cal_max\n      this.global_min = mnScale\n      this.global_max = mxScale\n      return [this.hdr.cal_min, this.hdr.cal_max, this.hdr.cal_min, this.hdr.cal_max]\n    }\n    // if color map specifies non zero values for min and max then use them\n    if (cmMin !== cmMax) {\n      this.cal_min = cmMin\n      this.cal_max = cmMax\n      this.robust_min = this.cal_min\n      this.robust_max = this.cal_max\n      return [cmMin, cmMax, cmMin, cmMax]\n    }\n    const percentZero = (100 * nZero) / (nVox3D - 0)\n    let isOverrideIgnoreZeroVoxels = false\n    if (percentZero > 60 && !this.ignoreZeroVoxels) {\n      log.warn(`${Math.round(percentZero)}% of voxels are zero: ignoring zeros for cal_max`)\n      isOverrideIgnoreZeroVoxels = true\n      this.ignoreZeroVoxels = true\n    }\n    if (!this.ignoreZeroVoxels) {\n      nZero = 0\n    }\n    nZero += nNan\n    const n2pct = Math.round((nVox3D - 0 - nZero) * this.percentileFrac)\n    if (n2pct < 1 || mn === mx) {\n      log.debug('no variability in image intensity?')\n      this.cal_min = mnScale\n      this.cal_max = mxScale\n      this.robust_min = this.cal_min\n      this.robust_max = this.cal_max\n      this.global_min = mnScale\n      this.global_max = mxScale\n      return [mnScale, mxScale, mnScale, mxScale]\n    }\n    const nBins = 1001\n    const scl = (nBins - 1) / (mx - mn)\n    const hist = new Array(nBins)\n    for (let i = 0; i < nBins; i++) {\n      hist[i] = 0\n    }\n    if (isFastCalc) {\n      for (let i = 0; i < nVox3D; i++) {\n        hist[Math.round((img[i] - mn) * scl)]++\n      }\n    } else if (this.ignoreZeroVoxels) {\n      for (let i = 0; i < nVox3D; i++) {\n        if (img[i] === 0) {\n          continue\n        }\n        if (isNaN(img[i])) {\n          continue\n        }\n        hist[Math.round((img[i] - mn) * scl)]++\n      }\n    } else {\n      for (let i = 0; i < nVox3D; i++) {\n        if (isNaN(img[i])) {\n          continue\n        }\n        hist[Math.round((img[i] - mn) * scl)]++\n      }\n    }\n    let n = 0\n    let lo = 0\n    while (n < n2pct) {\n      n += hist[lo]\n      lo++\n    }\n    lo-- // remove final increment\n    n = 0\n    let hi = nBins\n    while (n < n2pct) {\n      hi--\n      n += hist[hi]\n    }\n    if (lo === hi) {\n      // MAJORITY are not black or white\n      let ok = -1\n      while (ok !== 0) {\n        if (lo > 0) {\n          lo--\n          if (hist[lo] > 0) {\n            ok = 0\n          }\n        }\n        if (ok !== 0 && hi < nBins - 1) {\n          hi++\n          if (hist[hi] > 0) {\n            ok = 0\n          }\n        }\n        if (lo === 0 && hi === nBins - 1) {\n          ok = 0\n        }\n      } // while not ok\n    } // if lo === hi\n    let pct2 = this.intensityRaw2Scaled(lo / scl + mn)\n    let pct98 = this.intensityRaw2Scaled(hi / scl + mn)\n    if (this.hdr.cal_min < this.hdr.cal_max && this.hdr.cal_min >= mnScale && this.hdr.cal_max <= mxScale) {\n      pct2 = this.hdr.cal_min\n      pct98 = this.hdr.cal_max\n    }\n    if (isOverrideIgnoreZeroVoxels) {\n      pct2 = Math.min(pct2, 0)\n    }\n    this.cal_min = pct2\n    this.cal_max = pct98\n    if (this.hdr.intent_code === NiiIntentCode.NIFTI_INTENT_LABEL) {\n      this.cal_min = mnScale\n      this.cal_max = mxScale\n    }\n    this.robust_min = this.cal_min\n    this.robust_max = this.cal_max\n    this.global_min = mnScale\n    this.global_max = mxScale\n    return [pct2, pct98, mnScale, mxScale]\n  } // calMinMax\n\n  // not included in public docs\n  // convert voxel intensity from stored value to scaled intensity\n  intensityRaw2Scaled(raw: number): number {\n    if (!this.hdr) {\n      throw new Error('hdr undefined')\n    }\n\n    if (this.hdr.scl_slope === 0) {\n      this.hdr.scl_slope = 1.0\n    }\n    return raw * this.hdr.scl_slope + this.hdr.scl_inter\n  }\n\n  // convert voxel intensity from scaled intensity to stored value\n  intensityScaled2Raw(scaled: number): number {\n    if (!this.hdr) {\n      throw new Error('hdr undefined')\n    }\n\n    if (this.hdr.scl_slope === 0) {\n      this.hdr.scl_slope = 1.0\n    }\n    return (scaled - this.hdr.scl_inter) / this.hdr.scl_slope\n  }\n\n  /**\n   * Converts NVImage to NIfTI compliant byte array, potentially compressed.\n   * Delegates to ImageWriter.saveToUint8Array.\n   * @param fnm - Filename (determines if compression is needed via .gz suffix)\n   * @param drawing8 - Optional Uint8Array drawing overlay\n   * @returns Promise<Uint8Array>\n   */\n  async saveToUint8Array(fnm: string, drawing8: Uint8Array | null = null): Promise<Uint8Array> {\n    // Delegate to the writer module, passing the instance 'this'\n    // **** UPDATED DELEGATION ****\n    return ImageWriter.saveToUint8Array(this, fnm, drawing8)\n  }\n\n  /**\n   * save image as NIfTI volume and trigger download.\n   * Delegates to ImageWriter.saveToDisk.\n   * @param fnm - Filename for download. If empty, returns data without download.\n   * @param drawing8 - Optional Uint8Array drawing overlay\n   * @returns Promise<Uint8Array>\n   */\n  async saveToDisk(fnm: string = '', drawing8: Uint8Array | null = null): Promise<Uint8Array> {\n    // Delegate to the writer module, passing the instance 'this'\n    // **** UPDATED DELEGATION ****\n    return ImageWriter.saveToDisk(this, fnm, drawing8)\n  }\n\n  static async fetchDicomData(\n    url: string,\n    headers: Record<string, string> = {}\n  ): Promise<Array<{ name: string; data: ArrayBuffer }>> {\n    if (url === '') {\n      throw Error('url must not be empty')\n    }\n\n    // https://stackoverflow.com/questions/10687099/how-to-test-if-a-url-string-is-absolute-or-relative\n    const absoluteUrlRE = /^(?:[a-z+]+:)?\\/\\//i\n\n    let manifestUrl = absoluteUrlRE.test(url) ? url : new URL(url, window.location.href)\n    const extensionRE = /(?:.([^.]+))?$/\n    const extension = extensionRE.exec((manifestUrl as URL).pathname)\n    if (!extension) {\n      manifestUrl = new URL('niivue-manifest.txt', url)\n    }\n\n    let response = await fetch(manifestUrl, { headers })\n    if (!response.ok) {\n      throw Error(response.statusText)\n    }\n    const text = await response.text()\n    const lines = text.split('\\n')\n\n    const baseUrlRE = /(.*\\/).*/\n    const folderUrl = baseUrlRE.exec(manifestUrl as string)![0]\n    const dataBuffer = []\n    for (const line of lines) {\n      const fileUrl = new URL(line, folderUrl)\n      response = await fetch(fileUrl, { headers })\n      if (!response.ok) {\n        throw Error(response.statusText)\n      }\n      const contents = await response.arrayBuffer()\n      dataBuffer.push({ name: line, data: contents })\n    }\n    return dataBuffer\n  }\n\n  static async readFirstDecompressedBytes(stream: ReadableStream<Uint8Array>, minBytes: number): Promise<Uint8Array> {\n    const reader: ReadableStreamDefaultReader<Uint8Array> = stream.getReader()\n    const gunzip = new Gunzip()\n\n    const decompressedChunks: Uint8Array[] = []\n    let totalDecompressed = 0\n    let doneReading = false\n\n    let resolveFn: (value: Uint8Array) => void\n    let rejectFn: (reason?: any) => void\n\n    const promise = new Promise<Uint8Array>((resolve, reject): undefined => {\n      resolveFn = resolve\n      rejectFn = reject\n      return undefined\n    })\n\n    function finalize(): void {\n      // Combine chunks into a single Uint8Array\n      const result = new Uint8Array(totalDecompressed)\n      let offset = 0\n      for (const chunk of decompressedChunks) {\n        result.set(chunk, offset)\n        offset += chunk.length\n      }\n      resolveFn(result)\n    }\n\n    gunzip.ondata = (chunk: Uint8Array): void => {\n      decompressedChunks.push(chunk)\n      totalDecompressed += chunk.length\n      if (totalDecompressed >= minBytes) {\n        doneReading = true\n        reader.cancel().catch(() => {})\n        finalize()\n      }\n    }\n    ;(async (): Promise<void> => {\n      try {\n        while (!doneReading) {\n          const { done, value } = await reader.read()\n          if (done) {\n            doneReading = true\n            gunzip.push(new Uint8Array(), true) // Signal end-of-stream\n            return\n          }\n          gunzip.push(value, false) // Push data into fflate\n        }\n      } catch (err) {\n        rejectFn(err)\n      }\n    })().catch(() => {})\n\n    return promise\n  }\n\n  static extractFilenameFromUrl(url: string): string | null {\n    const params = new URL(url).searchParams\n    const contentDisposition = params.get('response-content-disposition')\n    if (contentDisposition) {\n      const match = contentDisposition.match(/filename\\*?=(?:UTF-8'')?\"?([^\";]+)\"?/)\n      if (match) {\n        return decodeURIComponent(match[1])\n      }\n    }\n    // Fallback: extract from pathname if possible\n    return url.split('/').pop().split('?')[0]\n  }\n\n  static async loadInitialVolumesGz(url = '', headers = {}, limitFrames4D = NaN): Promise<ArrayBuffer | null> {\n    if (isNaN(limitFrames4D)) {\n      return null\n    }\n    const response = await fetch(url, { headers, cache: 'force-cache' })\n    let hdrBytes = 352\n    let hdrU8s = await this.readFirstDecompressedBytes(response.body, hdrBytes)\n    const hdrView = new DataView(hdrU8s.buffer, hdrU8s.byteOffset, hdrU8s.byteLength)\n    const u16 = hdrView.getUint16(0, true)\n    const isNIfTI1 = u16 === 348\n    const isNIfTI1be = u16 === 23553\n    if (!isNIfTI1 && !isNIfTI1be) {\n      return null\n    }\n    // start of edge cases: huge header extensions with small gz block size\n    if (hdrU8s.length > 111) {\n      hdrBytes = hdrView.getFloat32(108, isNIfTI1)\n    }\n    if (hdrBytes > hdrU8s.length) {\n      hdrU8s = await this.readFirstDecompressedBytes(response.body, hdrBytes)\n    }\n    // end of edge case\n    const isNifti1 = (hdrU8s[0] === 92 && hdrU8s[1] === 1) || (hdrU8s[1] === 92 && hdrU8s[0] === 1)\n    if (!isNifti1) {\n      return null\n    }\n    const hdr = await readHeaderAsync(hdrU8s.buffer as ArrayBuffer)\n    if (!hdr) {\n      throw new Error('Could not read NIfTI header')\n    }\n    // Calculate required data size\n    const nBytesPerVoxel = hdr.numBitsPerVoxel / 8\n    const nVox3D = [1, 2, 3].reduce((acc, i) => acc * (hdr.dims[i] > 1 ? hdr.dims[i] : 1), 1)\n    const nFrame4D = [4, 5, 6].reduce((acc, i) => acc * (hdr.dims[i] > 1 ? hdr.dims[i] : 1), 1)\n    const volsToLoad = Math.max(Math.min(limitFrames4D, nFrame4D), 1)\n    const bytesToLoad = hdr.vox_offset + volsToLoad * nVox3D * nBytesPerVoxel\n    if (volsToLoad === nFrame4D) {\n      // read entire file: compression streams is faster than fflate\n      return null\n    }\n    const responseImg = await fetch(url, { headers, cache: 'force-cache' })\n    const dataBytes = await this.readFirstDecompressedBytes(responseImg.body, bytesToLoad)\n    return dataBytes.buffer.slice(0, bytesToLoad) as ArrayBuffer\n  }\n\n  static async loadInitialVolumes(url = '', headers = {}, limitFrames4D = NaN): Promise<ArrayBuffer | null> {\n    if (isNaN(limitFrames4D)) {\n      return null\n    }\n    const response = await fetch(url, { headers, cache: 'force-cache' })\n    const reader = response.body.getReader()\n    const { value, done } = await reader.read()\n    let hdrU8s = value\n    if (done || !hdrU8s || hdrU8s.length < 2) {\n      throw new Error('Not enough data to determine compression')\n    }\n    const hdrView = new DataView(hdrU8s.buffer, hdrU8s.byteOffset, hdrU8s.byteLength)\n    const u16 = hdrView.getUint16(0, true)\n    const isGz = u16 === 35615\n    if (isGz) {\n      await reader.cancel() // Stop streaming and release the lock\n      return this.loadInitialVolumesGz(url, headers, limitFrames4D)\n    }\n    const isNIfTI1 = u16 === 348\n    const isNIfTI1be = u16 === 23553\n    if (!isNIfTI1 && !isNIfTI1be) {\n      await reader.cancel()\n      return null\n    }\n    // start of edge cases: huge header extensions with degraded packet size\n    let hdrBytes = 352\n    if (hdrU8s.length > 111) {\n      hdrBytes = hdrView.getFloat32(108, isNIfTI1)\n    }\n    while (hdrU8s.length < hdrBytes) {\n      const { value, done } = await reader.read()\n      if (done || !value) {\n        break\n      }\n      function concatU8s(arr1: Uint8Array, arr2: Uint8Array): Uint8Array {\n        const result = new Uint8Array(arr1.length + arr2.length)\n        result.set(arr1, 0)\n        result.set(arr2, arr1.length)\n        return result\n      }\n      hdrU8s = concatU8s(hdrU8s, value)\n    }\n    // end of edge cases\n    const hdr = await readHeaderAsync(hdrU8s.buffer as ArrayBuffer)\n    if (!hdr) {\n      throw new Error('Could not read NIfTI header')\n    }\n    // Calculate required data size\n    const nBytesPerVoxel = hdr.numBitsPerVoxel / 8\n    const nVox3D = [1, 2, 3].reduce((acc, i) => acc * (hdr.dims[i] > 1 ? hdr.dims[i] : 1), 1)\n    const nFrame4D = [4, 5, 6].reduce((acc, i) => acc * (hdr.dims[i] > 1 ? hdr.dims[i] : 1), 1)\n    const volsToLoad = Math.max(Math.min(limitFrames4D, nFrame4D), 1)\n    const bytesToLoad = hdr.vox_offset + volsToLoad * nVox3D * nBytesPerVoxel\n    const imgU8s = new Uint8Array(bytesToLoad)\n    // Ensure we don't copy more than needed from hdrU8s\n    const hdrCopyLength = Math.min(hdrU8s.length, bytesToLoad)\n    imgU8s.set(hdrU8s.subarray(0, hdrCopyLength), 0)\n    let bytesRead = hdrCopyLength\n    while (bytesRead < bytesToLoad) {\n      const { value, done } = await reader.read()\n      if (done || !value) {\n        await reader.cancel()\n        return null\n      }\n      // Ensure we only copy up to bytesToLoad\n      const remaining = Math.min(value.length, bytesToLoad - bytesRead)\n      imgU8s.set(value.subarray(0, remaining), bytesRead)\n      bytesRead += remaining\n    }\n    await reader.cancel()\n    return imgU8s.buffer\n  }\n\n  /**\n   * factory function to load and return a new NVImage instance from a given URL\n   * @returns  NVImage instance\n   */\n  static async loadFromUrl({\n    url = '',\n    urlImgData = '',\n    headers = {},\n    name = '',\n    colormap = '',\n    opacity = 1.0,\n    cal_min = NaN,\n    cal_max = NaN,\n    trustCalMinMax = true,\n    percentileFrac = 0.02,\n    ignoreZeroVoxels = false,\n    useQFormNotSForm = false,\n    colormapNegative = '',\n    frame4D = 0,\n    isManifest = false,\n    limitFrames4D = NaN,\n    imageType = NVIMAGE_TYPE.UNKNOWN,\n    colorbarVisible = true,\n    buffer = new ArrayBuffer(0)\n  }: Partial<Omit<ImageFromUrlOptions, 'url'>> & { url?: string | Uint8Array | ArrayBuffer } = {}): Promise<NVImage> {\n    if (url === '') {\n      throw Error('url must not be empty')\n    }\n    let nvimage = null\n    let dataBuffer = null\n    let zarrData: null | unknown = null\n\n    // Handle input buffer types\n    if (url instanceof Uint8Array) {\n      url = url.slice().buffer as ArrayBuffer\n    }\n    if (buffer.byteLength > 0) {\n      url = buffer\n    }\n    if (url instanceof ArrayBuffer) {\n      dataBuffer = url\n      if (name !== '') {\n        url = name\n      } else {\n        const bytes = new Uint8Array(dataBuffer)\n        url = bytes[0] === 31 && bytes[1] === 139 ? 'array.nii.gz' : 'array.nii'\n      }\n    }\n    function getPrimaryExtension(filename: string): string {\n      // .nii.gz -> .nii\n      const match = filename.match(/\\.([^.]+)(?:\\.gz|\\.bz2|\\.xz)?$/)\n      return match ? match[1] : ''\n    }\n    // Resolve paired image URL if necessary\n    let ext = ''\n    if (name === '') {\n      ext = getPrimaryExtension(url)\n    } else {\n      ext = getPrimaryExtension(name)\n    }\n    if (imageType === NVIMAGE_TYPE.UNKNOWN) {\n      imageType = NVIMAGE_TYPE.parse(ext)\n    }\n    if (imageType === NVIMAGE_TYPE.UNKNOWN && typeof url === 'string') {\n      // perhaps we are not identifying an extension because the url is a redirect\n      const response = await fetch(url, {})\n      if (response.redirected) {\n        const rname = this.extractFilenameFromUrl(response.url)\n        if (rname && rname.length > 0) {\n          if (name === '') {\n            name = rname\n            ext = getPrimaryExtension(name)\n            imageType = NVIMAGE_TYPE.parse(ext)\n          }\n        }\n      }\n    }\n    // try url and name attributes to test for .zarr\n    if (imageType === NVIMAGE_TYPE.ZARR) {\n      // get the z, x, y slice indices from the query string\n      const urlParams = new URL(url).searchParams\n      const zIndex = urlParams.get('z')\n      const yIndex = urlParams.get('y')\n      const xIndex = urlParams.get('x')\n      const zRange = zIndex ? zarr.slice(parseInt(zIndex), parseInt(zIndex) + 1) : null\n      const yRange = yIndex ? zarr.slice(parseInt(yIndex), parseInt(yIndex) + 1) : null\n      const xRange = xIndex ? zarr.slice(parseInt(xIndex), parseInt(xIndex) + 1) : null\n      // remove the query string from the original URL\n      const zarrUrl = url.split('?')[0]\n      // if multiscale, must provide the full path to the zarr array data\n      const store = new zarr.FetchStore(zarrUrl)\n      const root = zarr.root(store)\n      let arr\n      try {\n        // TODO: probably remove this, since it's not needed\n        arr = await zarr.open(root.resolve(url), { kind: 'array' })\n      } catch (e) {\n        arr = await zarr.open(root, { kind: 'array' })\n      }\n      let view\n      if (arr.shape.length === 4) {\n        const cRange = null\n        // make sure we are not exceeding the array shape. If so, set to max\n        const zDim = arr.shape[2]\n        const yDim = arr.shape[1]\n        const xDim = arr.shape[0]\n        if (zRange && zRange[0] >= zDim) {\n          zRange[0] = zDim - 1\n        }\n        if (yRange && yRange[0] >= yDim) {\n          yRange[0] = yDim - 1\n        }\n        if (xRange && xRange[0] >= xDim) {\n          xRange[0] = xDim - 1\n        }\n        view = await zarr.get(arr, [xRange, yRange, zRange, cRange])\n      } else {\n        view = await zarr.get(arr, [xRange, yRange, zRange])\n      }\n      dataBuffer = view.data\n      const [height, width, zDim, cDim] = view.shape\n      zarrData = {\n        data: dataBuffer,\n        width,\n        height,\n        depth: zDim,\n        channels: cDim\n      }\n    }\n    // DICOM assigned for unknown extensions: therefore test signature to see if mystery file is NIfTI\n    const isTestNIfTI = imageType === NVIMAGE_TYPE.DCM || NVIMAGE_TYPE.NII\n    if (!dataBuffer && isTestNIfTI) {\n      dataBuffer = await this.loadInitialVolumes(url, headers, limitFrames4D)\n    }\n    // Handle non-limited cases\n    if (!dataBuffer) {\n      if (isManifest) {\n        dataBuffer = await NVImage.fetchDicomData(url, headers)\n        imageType = NVIMAGE_TYPE.DCM_MANIFEST\n      } else {\n        const response = await fetch(url, { headers })\n        if (!response.ok) {\n          throw Error(response.statusText)\n        }\n        if (!response.body) {\n          throw new Error('No readable stream available')\n        }\n        const stream = await uncompressStream(response.body)\n        const chunks: Uint8Array[] = []\n        const reader = stream.getReader()\n\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) {\n            break\n          }\n          chunks.push(value)\n        }\n        const totalLength = chunks.reduce((sum, chunk) => sum + chunk.length, 0)\n        dataBuffer = new ArrayBuffer(totalLength)\n        const dataView = new Uint8Array(dataBuffer)\n        let offset = 0\n        for (const chunk of chunks) {\n          dataView.set(chunk, offset)\n          offset += chunk.length\n        }\n      }\n    }\n    // read paired header image files\n    if (ext.toUpperCase() === 'HEAD') {\n      if (urlImgData === '') {\n        urlImgData = url.substring(0, url.lastIndexOf('HEAD')) + 'BRIK'\n      }\n    }\n    // Handle paired image data if necessary\n    let pairedImgData = null\n    if (urlImgData) {\n      try {\n        let response = await fetch(urlImgData, { headers })\n        if (response.status === 404 && urlImgData.includes('BRIK')) {\n          response = await fetch(`${urlImgData}.gz`, { headers })\n        }\n        if (response.ok && response.body) {\n          const stream = await uncompressStream(response.body)\n          const chunks: Uint8Array[] = []\n          const reader = stream.getReader()\n          while (true) {\n            const { done, value } = await reader.read()\n            if (done) {\n              break\n            }\n            chunks.push(value)\n          }\n\n          const totalLength = chunks.reduce((sum, chunk) => sum + chunk.length, 0)\n          pairedImgData = new ArrayBuffer(totalLength)\n          const dataView = new Uint8Array(pairedImgData)\n          let offset = 0\n          for (const chunk of chunks) {\n            dataView.set(chunk, offset)\n            offset += chunk.length\n          }\n        }\n      } catch (error) {\n        console.error('Error loading paired image data:', error)\n      }\n    }\n\n    if (!dataBuffer) {\n      throw new Error('Unable to load buffer properly from volume')\n    }\n\n    // Get filename from URL if not provided\n    if (!name) {\n      let urlParts: string[]\n      try {\n        // if a full url like https://domain/path/file.nii.gz?query=filter\n        // parse the url and get the pathname component without the query\n        urlParts = new URL(url).pathname.split('/')\n      } catch (e) {\n        // if a relative url then parse the path (assuming no query)\n        urlParts = url.split('/')\n      }\n      name = urlParts.slice(-1)[0] // name will be last part of url (e.g. some/url/image.nii.gz --> image.nii.gz\n      if (name.indexOf('?') > -1) {\n        name = name.slice(0, name.indexOf('?')) // remove query string if any\n      }\n    }\n    nvimage = await this.new(\n      dataBuffer,\n      name,\n      colormap,\n      opacity,\n      pairedImgData,\n      cal_min,\n      cal_max,\n      trustCalMinMax,\n      percentileFrac,\n      ignoreZeroVoxels,\n      useQFormNotSForm,\n      colormapNegative,\n      frame4D,\n      imageType,\n      NaN,\n      NaN,\n      true,\n      null,\n      0,\n      zarrData\n    )\n    nvimage.url = url\n    nvimage.colorbarVisible = colorbarVisible\n    return nvimage\n  }\n\n  // not included in public docs\n  // loading Nifti files\n  static async readFileAsync(file: File, bytesToLoad = NaN): Promise<ArrayBuffer> {\n    let stream = file.stream()\n\n    if (!isNaN(bytesToLoad)) {\n      let bytesRead = 0\n      const limiter = new TransformStream({\n        transform(chunk: Uint8Array, controller: TransformStreamDefaultController): void {\n          if (bytesRead >= bytesToLoad) {\n            controller.terminate()\n            return\n          }\n          const remainingBytes = bytesToLoad - bytesRead\n          if (chunk.length > remainingBytes) {\n            controller.enqueue(chunk.slice(0, remainingBytes))\n            controller.terminate()\n          } else {\n            controller.enqueue(chunk)\n          }\n          bytesRead += chunk.length\n        }\n      })\n      stream = stream.pipeThrough(limiter)\n    }\n\n    const uncompressedStream = await uncompressStream(stream)\n\n    const chunks: Uint8Array[] = []\n    const reader = uncompressedStream.getReader()\n\n    while (true) {\n      const { done, value } = await reader.read()\n      if (done) {\n        break\n      }\n      chunks.push(value)\n    }\n\n    const totalLength = chunks.reduce((sum, chunk) => sum + chunk.length, 0)\n    const result = new ArrayBuffer(totalLength)\n    const resultView = new Uint8Array(result)\n\n    let offset = 0\n    for (const chunk of chunks) {\n      resultView.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return result\n  }\n\n  /**\n   * factory function to load and return a new NVImage instance from a file in the browser\n   */\n  static async loadFromFile({\n    file, // file can be an array of file objects or a single file object\n    name = '',\n    colormap = '',\n    opacity = 1.0,\n    urlImgData = null,\n    cal_min = NaN,\n    cal_max = NaN,\n    trustCalMinMax = true,\n    percentileFrac = 0.02,\n    ignoreZeroVoxels = false,\n    useQFormNotSForm = false,\n    colormapNegative = '',\n    frame4D = 0,\n    limitFrames4D = NaN,\n    imageType = NVIMAGE_TYPE.UNKNOWN\n  }: ImageFromFileOptions): Promise<NVImage> {\n    let nvimage: NVImage | null = null\n    let dataBuffer: ArrayBuffer | ArrayBuffer[] = []\n    try {\n      if (Array.isArray(file)) {\n        dataBuffer = await Promise.all(file.map((f) => this.readFileAsync(f)))\n      } else {\n        if (!isNaN(limitFrames4D)) {\n          const headerBuffer = await this.readFileAsync(file, 512)\n          const headerView = new Uint8Array(headerBuffer)\n\n          const isNifti1 =\n            (headerView[0] === 92 && headerView[1] === 1) || (headerView[1] === 92 && headerView[0] === 1)\n\n          if (!isNifti1) {\n            dataBuffer = await this.readFileAsync(file)\n          } else {\n            const hdr = await readHeaderAsync(headerBuffer)\n            if (!hdr) {\n              throw new Error('could not read nifti header')\n            }\n\n            const nBytesPerVoxel = hdr.numBitsPerVoxel / 8\n            const nVox3D = [1, 2, 3].reduce((acc, i) => acc * (hdr.dims[i] > 1 ? hdr.dims[i] : 1), 1)\n            const nFrame4D = [4, 5, 6].reduce((acc, i) => acc * (hdr.dims[i] > 1 ? hdr.dims[i] : 1), 1)\n\n            const volsToLoad = Math.max(Math.min(limitFrames4D, nFrame4D), 1)\n            const bytesToLoad = hdr.vox_offset + volsToLoad * nVox3D * nBytesPerVoxel\n            dataBuffer = await this.readFileAsync(file, bytesToLoad)\n          }\n        } else {\n          dataBuffer = await this.readFileAsync(file)\n        }\n        name = file.name\n      }\n      let pairedImgData = null\n      if (urlImgData) {\n        // @ts-expect-error check data type?\n        pairedImgData = await this.readFileAsync(urlImgData)\n      }\n      nvimage = await this.new(\n        dataBuffer,\n        name,\n        colormap,\n        opacity,\n        pairedImgData,\n        cal_min,\n        cal_max,\n        trustCalMinMax,\n        percentileFrac,\n        ignoreZeroVoxels,\n        useQFormNotSForm,\n        colormapNegative,\n        frame4D,\n        imageType,\n        NaN,\n        NaN,\n        true,\n        null,\n        0,\n        null\n      )\n      // add a reference to the file object as a new property of the NVImage instance\n      // is this too hacky?\n      nvimage.fileObject = file\n    } catch (err) {\n      log.error(err)\n      throw new Error('could not build NVImage')\n    }\n    if (nvimage === null) {\n      throw new Error('could not build NVImage')\n    }\n    return nvimage\n  }\n\n  /**\n   * Creates a Uint8Array representing a NIFTI file (header + optional image data).\n   * Delegates to ImageWriter.createNiftiArray.\n   */\n  static createNiftiArray(\n    dims: number[] = [256, 256, 256],\n    pixDims: number[] = [1, 1, 1],\n    affine: number[] = [1, 0, 0, -128, 0, 1, 0, -128, 0, 0, 1, -128, 0, 0, 0, 1],\n    datatypeCode = NiiDataType.DT_UINT8,\n    img: TypedVoxelArray | Uint8Array = new Uint8Array()\n  ): Uint8Array {\n    return ImageWriter.createNiftiArray(dims, pixDims, affine, datatypeCode, img)\n  }\n\n  /**\n   * Creates a NIFTI1 header object with basic properties.\n   * Delegates to ImageWriter.createNiftiHeader.\n   */\n  static createNiftiHeader(\n    dims: number[] = [256, 256, 256],\n    pixDims: number[] = [1, 1, 1],\n    affine: number[] = [1, 0, 0, -128, 0, 1, 0, -128, 0, 0, 1, -128, 0, 0, 0, 1],\n    datatypeCode = NiiDataType.DT_UINT8\n  ): NIFTI1 {\n    return ImageWriter.createNiftiHeader(dims, pixDims, affine, datatypeCode)\n  }\n\n  /**\n   * read a 3D slab of voxels from a volume\n   * @param voxStart - first row, column and slice (RAS order) for selection\n   * @param voxEnd - final row, column and slice (RAS order) for selection\n   * @param dataType - array data type. Options: 'same' (default), 'uint8', 'float32', 'scaled', 'normalized', 'windowed'\n   * @returns the an array where ret[0] is the voxel values and ret[1] is dimension of selection\n   * @see {@link https://niivue.github.io/niivue/features/slab_selection.html | live demo usage}\n   */\n\n  /**\n   * read a 3D slab of voxels from a volume, specified in RAS coordinates.\n   * Delegates to VolumeUtils.getVolumeData.\n   * @param voxStart - first row, column and slice (RAS order) for selection\n   * @param voxEnd - final row, column and slice (RAS order) for selection\n   * @param dataType - array data type. Options: 'same' (default), 'uint8', 'float32', 'scaled', 'normalized', 'windowed'\n   * @returns the an array where ret[0] is the voxel values and ret[1] is dimension of selection\n   */\n  getVolumeData(\n    voxStart: number[] = [-1, 0, 0],\n    voxEnd: number[] = [0, 0, 0],\n    dataType = 'same'\n  ): [TypedVoxelArray, number[]] {\n    return VolumeUtils.getVolumeData(this, voxStart, voxEnd, dataType)\n  }\n\n  /**\n   * write a 3D slab of voxels from a volume\n   * @param voxStart - first row, column and slice (RAS order) for selection\n   * @param voxEnd - final row, column and slice (RAS order) for selection\n   * @param img - array of voxel values to insert (RAS order)\n   * @see {@link https://niivue.github.io/niivue/features/slab_selection.html | live demo usage}\n   */\n\n  /**\n   * write a 3D slab of voxels from a volume, specified in RAS coordinates.\n   * Delegates to VolumeUtils.setVolumeData.\n   * Input slabData is assumed to be in the correct raw data type for the target image.\n   * @param voxStart - first row, column and slice (RAS order) for selection\n   * @param voxEnd - final row, column and slice (RAS order) for selection\n   * @param img - array of voxel values to insert (RAS order, raw data type)\n   */\n  setVolumeData(\n    voxStart: number[] = [-1, 0, 0],\n    voxEnd: number[] = [0, 0, 0],\n    img: TypedVoxelArray = new Uint8Array()\n  ): void {\n    VolumeUtils.setVolumeData(this, voxStart, voxEnd, img)\n  }\n\n  /**\n   * factory function to load and return a new NVImage instance from a base64 encoded string\n   *\n   * @returns NVImage instance\n   * @example\n   * myImage = NVImage.loadFromBase64('SomeBase64String')\n   */\n  static async loadFromBase64({\n    base64,\n    name = '',\n    colormap = '',\n    opacity = 1.0,\n    cal_min = NaN,\n    cal_max = NaN,\n    trustCalMinMax = true,\n    percentileFrac = 0.02,\n    ignoreZeroVoxels = false,\n    useQFormNotSForm = false,\n    colormapNegative = '',\n    frame4D = 0,\n    imageType = NVIMAGE_TYPE.UNKNOWN,\n    cal_minNeg = NaN,\n    cal_maxNeg = NaN,\n    colorbarVisible = true,\n    colormapLabel = null\n  }: ImageFromBase64): Promise<NVImage> {\n    // https://stackoverflow.com/questions/21797299/convert-base64-string-to-arraybuffer\n    function base64ToArrayBuffer(base64: string): ArrayBuffer {\n      const binary_string = window.atob(base64)\n      const len = binary_string.length\n      const bytes = new Uint8Array(len)\n      for (let i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i)\n      }\n      return bytes.buffer\n    }\n    let nvimage = null\n    try {\n      const dataBuffer = base64ToArrayBuffer(base64)\n      const pairedImgData = null\n      nvimage = await this.new(\n        dataBuffer,\n        name,\n        colormap,\n        opacity,\n        pairedImgData,\n        cal_min,\n        cal_max,\n        trustCalMinMax,\n        percentileFrac,\n        ignoreZeroVoxels,\n        useQFormNotSForm,\n        colormapNegative,\n        frame4D,\n        imageType,\n        cal_minNeg,\n        cal_maxNeg,\n        colorbarVisible,\n        colormapLabel,\n        0,\n        null\n      )\n    } catch (err) {\n      log.debug(err)\n    }\n\n    if (nvimage === null) {\n      throw new Error('could not load NVImage')\n    }\n\n    return nvimage\n  }\n\n  /**\n   * make a clone of a NVImage instance and return a new NVImage\n   * @returns NVImage instance\n   * @example\n   * myImage = NVImage.loadFromFile(SomeFileObject) // files can be from dialogs or drag and drop\n   * clonedImage = myImage.clone()\n   */\n  clone(): NVImage {\n    const clonedImage = new NVImage()\n    // important! the clone should have a new ID to avoid conflicts\n    // when referencing images by ID. A user could add the cloned\n    // image as a viewable volume in any order.\n    clonedImage.id = uuidv4()\n    clonedImage.hdr = Object.assign({}, this.hdr)\n    clonedImage.img = this.img!.slice()\n    clonedImage.calculateRAS()\n    clonedImage.calMinMax()\n    return clonedImage\n  }\n\n  /**\n   * fill a NVImage instance with zeros for the image data\n   * @example\n   * myImage = NVImage.loadFromFile(SomeFileObject) // files can be from dialogs or drag and drop\n   * clonedImageWithZeros = myImage.clone().zeroImage()\n   */\n  zeroImage(): void {\n    this.img!.fill(0)\n  }\n\n  /**\n   * get nifti specific metadata about the image\n   */\n  getImageMetadata(): ImageMetadata {\n    if (!this.hdr) {\n      throw new Error('hdr undefined')\n    }\n    const id = this.id\n    const datatypeCode = this.hdr.datatypeCode\n    const dims = this.hdr.dims\n    const nx = dims[1]\n    const ny = dims[2]\n    const nz = dims[3]\n    const nt = Math.max(1, dims[4])\n    const pixDims = this.hdr.pixDims\n    const dx = pixDims[1]\n    const dy = pixDims[2]\n    const dz = pixDims[3]\n    const dt = pixDims[4]\n    const bpv = Math.floor(this.hdr.numBitsPerVoxel / 8)\n\n    return { id, datatypeCode, nx, ny, nz, nt, dx, dy, dz, dt, bpv }\n  }\n\n  /**\n   * a factory function to make a zero filled image given a NVImage as a reference\n   * @param nvImage - an existing NVImage as a reference\n   * @param dataType - the output data type. Options: 'same', 'uint8'\n   * @returns new NVImage filled with zeros for the image data\n   * @example\n   * myImage = NVImage.loadFromFile(SomeFileObject) // files can be from dialogs or drag and drop\n   * newZeroImage = NVImage.zerosLike(myImage)\n   */\n  static zerosLike(nvImage: NVImage, dataType = 'same'): NVImage {\n    // dataType can be: 'same', 'uint8'\n    // 'same' means that the zeroed image data type is the same as the input image\n    const zeroClone = nvImage.clone()\n    zeroClone.zeroImage()\n    if (dataType === 'uint8') {\n      zeroClone.img = Uint8Array.from(zeroClone.img!)\n      zeroClone.hdr!.datatypeCode = NiiDataType.DT_UINT8\n      zeroClone.hdr!.numBitsPerVoxel = 8\n    }\n    if (dataType === 'float32') {\n      zeroClone.img = Float32Array.from(zeroClone.img!)\n      zeroClone.hdr!.datatypeCode = NiiDataType.DT_FLOAT32\n      zeroClone.hdr!.numBitsPerVoxel = 32\n    }\n    return zeroClone\n  }\n\n  /**\n   * Returns voxel intensity at specific native coordinates.\n   * Delegates to VolumeUtils.getValue.\n   * @param x - Native X coordinate (0-indexed)\n   * @param y - Native Y coordinate (0-indexed)\n   * @param z - Native Z coordinate (0-indexed)\n   * @param frame4D - 4D frame index (0-indexed)\n   * @param isReadImaginary - Flag to read from imaginary data array\n   * @returns Scaled voxel intensity\n   */\n  getValue(x: number, y: number, z: number, frame4D = 0, isReadImaginary = false): number {\n    // **** DELEGATE TO VolumeUtils ****\n    return VolumeUtils.getValue(this, x, y, z, frame4D, isReadImaginary)\n  }\n\n  /**\n   * Update options for image\n   */\n  applyOptionsUpdate(options: ImageFromUrlOptions): void {\n    this.hdr!.cal_min = options.cal_min!\n    this.hdr!.cal_max = options.cal_max!\n    Object.assign(this, options)\n  }\n\n  getImageOptions(): ImageFromUrlOptions {\n    const options = NVImageFromUrlOptions(\n      '', // url,\n      '', // urlImageData\n      this.name, // name\n      this._colormap, // colormap\n      this.opacity, // opacity\n      this.hdr!.cal_min, // cal_min\n      this.hdr!.cal_max, // cal_max\n      this.trustCalMinMax, // trustCalMinMax,\n      this.percentileFrac, // percentileFrac\n      this.ignoreZeroVoxels, // ignoreZeroVoxels\n      this.useQFormNotSForm, // useQFormNotSForm\n      this.colormapNegative, // colormapNegative\n      this.frame4D,\n      this.imageType, // imageType\n      this.colormapType\n    )\n    return options\n  }\n\n  /**\n   * Converts NVImage to NIfTI compliant byte array.\n   * Handles potential re-orientation of drawing data.\n   * Delegates to ImageWriter.toUint8Array.\n   * @param drawingBytes - Optional Uint8Array drawing overlay\n   * @returns Uint8Array\n   */\n  toUint8Array(drawingBytes: Uint8Array | null = null): Uint8Array {\n    // Delegate to the writer module, passing the instance 'this'\n    // **** UPDATED DELEGATION ****\n    return ImageWriter.toUint8Array(this, drawingBytes)\n  }\n\n  // not included in public docs\n  convertVox2Frac(vox: vec3): vec3 {\n    // convert from  0-index voxel space [0..dim[1]-1, 0..dim[2]-1, 0..dim[3]-1] to normalized texture space XYZ= [0..1, 0..1 ,0..1]\n    // consider dimension with 3 voxels, the voxel centers are at 0.25, 0.5, 0.75 corresponding to 0,1,2\n    const frac = vec3.fromValues(\n      (vox[0] + 0.5) / this.dimsRAS![1],\n      (vox[1] + 0.5) / this.dimsRAS![2],\n      (vox[2] + 0.5) / this.dimsRAS![3]\n    )\n    return frac\n  }\n\n  // not included in public docs\n  convertFrac2Vox(frac: vec3): vec3 {\n    const vox = vec3.fromValues(\n      Math.round(frac[0] * this.dims![1] - 0.5), // dims === RAS\n      Math.round(frac[1] * this.dims![2] - 0.5), // dims === RAS\n      Math.round(frac[2] * this.dims![3] - 0.5) // dims === RAS\n    )\n    return vox\n  }\n\n  // not included in public docs\n  convertFrac2MM(frac: vec3, isForceSliceMM = false): vec4 {\n    const pos = vec4.fromValues(frac[0], frac[1], frac[2], 1)\n    if (isForceSliceMM) {\n      vec4.transformMat4(pos, pos, this.frac2mm!)\n    } else {\n      vec4.transformMat4(pos, pos, this.frac2mmOrtho!)\n    }\n    return pos\n  }\n\n  // not included in public docs\n  convertMM2Frac(mm: vec3 | vec4, isForceSliceMM = false): vec3 {\n    // given mm, return volume fraction\n    // convert from object space in millimeters to normalized texture space XYZ= [0..1, 0..1 ,0..1]\n    const mm4 = vec4.fromValues(mm[0], mm[1], mm[2], 1)\n    const d = this.dimsRAS\n    const frac = vec3.fromValues(0, 0, 0)\n    if (typeof d === 'undefined') {\n      return frac\n    }\n    if (!isForceSliceMM) {\n      const xform = mat4.clone(this.frac2mmOrtho!)\n      mat4.invert(xform, xform)\n      vec4.transformMat4(mm4, mm4, xform)\n      frac[0] = mm4[0]\n      frac[1] = mm4[1]\n      frac[2] = mm4[2]\n      return frac\n    }\n    if (d[1] < 1 || d[2] < 1 || d[3] < 1) {\n      return frac\n    }\n    const sform = mat4.clone(this.matRAS!)\n    mat4.invert(sform, sform)\n    mat4.transpose(sform, sform)\n    vec4.transformMat4(mm4, mm4, sform)\n    frac[0] = (mm4[0] + 0.5) / d[1]\n    frac[1] = (mm4[1] + 0.5) / d[2]\n    frac[2] = (mm4[2] + 0.5) / d[3]\n    return frac\n  }\n}\n","import { serialize, deserialize } from '@ungap/structured-clone'\nimport { vec3, vec4 } from 'gl-matrix'\nimport { NVUtilities } from './nvutilities.js'\nimport { ImageFromUrlOptions, NVIMAGE_TYPE, NVImage } from './nvimage/index.js'\nimport { MeshType, NVMesh } from './nvmesh.js'\nimport { NVLabel3D } from './nvlabel.js'\nimport { NVConnectome } from './nvconnectome.js'\nimport { log } from './logger.js'\n\n/**\n * Slice Type\n * @ignore\n */\nexport enum SLICE_TYPE {\n  AXIAL = 0,\n  CORONAL = 1,\n  SAGITTAL = 2,\n  MULTIPLANAR = 3,\n  RENDER = 4\n}\n\nexport enum SHOW_RENDER {\n  NEVER = 0,\n  ALWAYS = 1,\n  AUTO = 2\n}\n\n/**\n * Multi-planar layout\n * @ignore\n */\nexport enum MULTIPLANAR_TYPE {\n  AUTO = 0,\n  COLUMN = 1,\n  GRID = 2,\n  ROW = 3\n}\n\n/**\n * Drag mode\n * @ignore\n */\nexport enum DRAG_MODE {\n  none = 0,\n  contrast = 1,\n  measurement = 2,\n  pan = 3,\n  slicer3D = 4,\n  callbackOnly = 5,\n  roiSelection = 6\n}\n\nexport enum DRAG_MODE_SECONDARY {\n  none = 0,\n  contrast = 1,\n  measurement = 2,\n  pan = 3,\n  slicer3D = 4,\n  callbackOnly = 5,\n  roiSelection = 6\n}\n\nexport enum DRAG_MODE_PRIMARY {\n  crosshair = 0,\n  windowing = 1\n}\n\nexport enum COLORMAP_TYPE {\n  MIN_TO_MAX = 0,\n  ZERO_TO_MAX_TRANSPARENT_BELOW_MIN = 1,\n  ZERO_TO_MAX_TRANSLUCENT_BELOW_MIN = 2\n}\n\n// make mutable type\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P]\n}\n\n/**\n * NVConfigOptions\n */\nexport type NVConfigOptions = {\n  // 0 for no text, fraction of canvas min(height,width)\n  textHeight: number\n  // 0 for no colorbars, fraction of Nifti j dimension\n  colorbarHeight: number\n  // -1 for automatic (full width), positive number for custom width in pixels\n  colorbarWidth: number\n  showColorbarBorder: boolean // show border around the colorbar\n  // 0 for no crosshairs\n  crosshairWidth: number\n  crosshairWidthUnit: 'voxels' | 'mm' | 'percent'\n  crosshairGap: number\n  rulerWidth: number\n  show3Dcrosshair: boolean\n  backColor: number[]\n  crosshairColor: number[]\n  fontColor: Float32List\n  selectionBoxColor: number[]\n  clipPlaneColor: number[]\n  clipThick: number\n  clipVolumeLow: number[]\n  clipVolumeHigh: number[]\n  rulerColor: number[]\n  // x axis margin around color bar, clip space coordinates\n  colorbarMargin: number\n  // if true do not calculate cal_min or cal_max if set in image header. If false, always calculate display intensity range.\n  trustCalMinMax: boolean\n  // keyboard short cut to activate the clip plane\n  clipPlaneHotKey: string\n  // keyboard shortcut to switch view modes\n  viewModeHotKey: string\n  doubleTouchTimeout: number\n  longTouchTimeout: number\n  // default debounce time used in keyup listeners\n  keyDebounceTime: number\n  isNearestInterpolation: boolean\n  atlasOutline: number\n  isRuler: boolean\n  isColorbar: boolean\n  isOrientCube: boolean\n  tileMargin: number\n  multiplanarPadPixels: number\n  // @deprecated\n  multiplanarForceRender: boolean\n  multiplanarEqualSize: boolean\n  multiplanarShowRender: SHOW_RENDER\n  isRadiologicalConvention: boolean\n  // string to allow infinity\n  meshThicknessOn2D: number | string\n  dragMode: DRAG_MODE | DRAG_MODE_SECONDARY\n  dragModePrimary: DRAG_MODE_PRIMARY\n  yoke3Dto2DZoom: boolean\n  isDepthPickMesh: boolean\n  isCornerOrientationText: boolean\n  isOrientationTextVisible: boolean\n  heroImageFraction: number\n  heroSliceType: SLICE_TYPE\n  // sagittal slices can have Y+ going left or right\n  sagittalNoseLeft: boolean\n  isSliceMM: boolean\n  // V1 image overlays can show vectors as per-pixel lines\n  isV1SliceShader: boolean\n  forceDevicePixelRatio: number\n  logLevel: 'debug' | 'info' | 'warn' | 'error' | 'fatal' | 'silent'\n  loadingText: string\n  isForceMouseClickToVoxelCenters: boolean\n  dragAndDropEnabled: boolean\n  // drawing disabled by default\n  drawingEnabled: boolean\n  // sets drawing color. see \"drawPt\"\n  penValue: number\n  // does a voxel have 6 (face), 18 (edge) or 26 (corner) neighbors\n  floodFillNeighbors: number\n  isFilledPen: boolean\n  thumbnail: string\n  maxDrawUndoBitmaps: number\n  sliceType: SLICE_TYPE\n  isAntiAlias: boolean | null\n  isAdditiveBlend: boolean\n  // TODO all following fields were previously not included in the typedef\n  // Allow canvas width and height to resize (false for fixed size)\n  isResizeCanvas: boolean\n  meshXRay: number\n  limitFrames4D: number\n  // if a document has labels the default is to show them\n  showLegend: boolean\n  legendBackgroundColor: number[]\n  legendTextColor: number[]\n  multiplanarLayout: MULTIPLANAR_TYPE\n  renderOverlayBlend: number\n  sliceMosaicString: string\n  centerMosaic: boolean\n  // attach mouse click and touch screen event handlers for the canvas\n  interactive: boolean\n  penSize: number\n  clickToSegment: boolean\n  clickToSegmentRadius: number\n  clickToSegmentBright: boolean\n  clickToSegmentAutoIntensity: boolean // new option, but keep clickToSegmentBright for backwards compatibility\n  clickToSegmentIntensityMax: number // also covers NaN\n  clickToSegmentIntensityMin: number // also covers NaN\n  clickToSegmentPercent: number\n  clickToSegmentMaxDistanceMM: number // max distance in mm to consider for click to segment flood fill\n  clickToSegmentIs2D: boolean\n  // selection box outline thickness\n  selectionBoxLineThickness: number\n  selectionBoxIsOutline: boolean\n  scrollRequiresFocus: boolean\n  showMeasureUnits: boolean\n  // measureTextJustify: \"origin\" | \"terminus\" | \"center\"\n  measureTextJustify: 'start' | 'center' | 'end' // similar to flexbox justify start, end, center\n  measureTextColor: number[]\n  measureLineColor: number[]\n  measureTextHeight: number\n  isAlphaClipDark: boolean\n  gradientOrder: number\n  gradientOpacity: number\n  renderSilhouette: number\n  gradientAmount: number\n  invertScrollDirection: boolean\n  is2DSliceShader: boolean\n}\n\nexport const DEFAULT_OPTIONS: NVConfigOptions = {\n  textHeight: 0.06,\n  colorbarHeight: 0.05,\n  colorbarWidth: -1, // automatic (full width)\n  showColorbarBorder: true, // show border around the colorbar\n  crosshairWidth: 1,\n  crosshairWidthUnit: 'voxels',\n  crosshairGap: 0,\n  rulerWidth: 4,\n  show3Dcrosshair: false,\n  backColor: [0, 0, 0, 1],\n  crosshairColor: [1, 0, 0, 1],\n  fontColor: [0.5, 0.5, 0.5, 1],\n  selectionBoxColor: [1, 1, 1, 0.5],\n  clipPlaneColor: [0.7, 0, 0.7, 0.5],\n  clipThick: 2,\n  clipVolumeLow: [0, 0, 0],\n  clipVolumeHigh: [1.0, 1.0, 1.0],\n  rulerColor: [1, 0, 0, 0.8],\n  colorbarMargin: 0.05,\n  trustCalMinMax: true,\n  clipPlaneHotKey: 'KeyC',\n  viewModeHotKey: 'KeyV',\n  doubleTouchTimeout: 500,\n  longTouchTimeout: 1000,\n  keyDebounceTime: 50,\n  isNearestInterpolation: false,\n  isResizeCanvas: true,\n  atlasOutline: 0,\n  isRuler: false,\n  isColorbar: false,\n  isOrientCube: false,\n  tileMargin: 0,\n  multiplanarPadPixels: 0,\n  // @deprecated\n  multiplanarForceRender: false,\n  multiplanarEqualSize: false,\n  multiplanarShowRender: SHOW_RENDER.AUTO, // auto is the same behaviour as multiplanarForceRender: false\n  isRadiologicalConvention: false,\n  meshThicknessOn2D: Infinity,\n  dragMode: DRAG_MODE_SECONDARY.contrast,\n  dragModePrimary: DRAG_MODE_PRIMARY.crosshair,\n  yoke3Dto2DZoom: false,\n  isDepthPickMesh: false,\n  isCornerOrientationText: false,\n  isOrientationTextVisible: true,\n  heroImageFraction: 0,\n  heroSliceType: SLICE_TYPE.RENDER,\n  sagittalNoseLeft: false,\n  isSliceMM: false,\n  isV1SliceShader: false,\n  forceDevicePixelRatio: 0,\n  logLevel: 'info',\n  loadingText: 'loading ...',\n  isForceMouseClickToVoxelCenters: false,\n  dragAndDropEnabled: true,\n  drawingEnabled: false,\n  penValue: 1,\n  floodFillNeighbors: 6,\n  isFilledPen: false,\n  thumbnail: '',\n  maxDrawUndoBitmaps: 8,\n  sliceType: SLICE_TYPE.MULTIPLANAR,\n  meshXRay: 0.0,\n  isAntiAlias: null,\n  limitFrames4D: NaN,\n  isAdditiveBlend: false,\n  showLegend: true,\n  legendBackgroundColor: [0.3, 0.3, 0.3, 0.5],\n  legendTextColor: [1.0, 1.0, 1.0, 1.0],\n  multiplanarLayout: MULTIPLANAR_TYPE.AUTO,\n  renderOverlayBlend: 1.0,\n  sliceMosaicString: '',\n  centerMosaic: false,\n  penSize: 1, // in voxels, since all drawing is done using bitmap indices\n  interactive: true,\n  clickToSegment: false,\n  clickToSegmentRadius: 3, // in mm\n  clickToSegmentBright: true,\n  clickToSegmentAutoIntensity: false, // new option, but keep clickToSegmentBright for backwards compatibility\n  clickToSegmentIntensityMax: NaN, // NaN will use auto threshold (default flood fill behavior from before)\n  clickToSegmentIntensityMin: NaN, // NaN will use auto threshold (default flood fill behavior from before)\n  // 0 will use auto threshold (default flood fill behavior from before)\n  // Take the voxel intensity at the click point and use this percentage +/- to threshold the flood fill operation.\n  // If greater than 0, clickedVoxelIntensity +/- clickedVoxelIntensity * clickToSegmentPercent will be used\n  // for the clickToSegmentIntensityMin and clickToSegmentIntensityMax values.\n  clickToSegmentPercent: 0,\n  clickToSegmentMaxDistanceMM: Number.POSITIVE_INFINITY, // default value is infinity for backwards compatibility with flood fill routine.\n  clickToSegmentIs2D: false,\n  selectionBoxLineThickness: 4,\n  selectionBoxIsOutline: false,\n  scrollRequiresFocus: false, // determines if the cavas need to be focused to scroll\n  showMeasureUnits: true, // e.g. 20.2 vs 20.2 mm\n  measureTextJustify: 'center', // start, center, end\n  measureTextColor: [1, 0, 0, 1], // red\n  measureLineColor: [1, 0, 0, 1], // red\n  measureTextHeight: 0.03,\n  isAlphaClipDark: false,\n  gradientOrder: 1,\n  gradientOpacity: 0.0,\n  renderSilhouette: 0.0,\n  gradientAmount: 0.0,\n  invertScrollDirection: false,\n  is2DSliceShader: false\n}\n\ntype SceneData = {\n  gamma: number\n  azimuth: number\n  elevation: number\n  crosshairPos: vec3\n  clipPlane: number[]\n  clipPlaneDepthAziElev: number[]\n  volScaleMultiplier: number\n  pan2Dxyzmm: vec4\n  clipThick: number\n  clipVolumeLow: number[]\n  clipVolumeHigh: number[]\n}\n\nexport const INITIAL_SCENE_DATA = {\n  gamma: 1.0,\n  azimuth: 110,\n  elevation: 10,\n  crosshairPos: vec3.fromValues(0.5, 0.5, 0.5),\n  clipPlane: [0, 0, 0, 0],\n  clipPlaneDepthAziElev: [2, 0, 0],\n  volScaleMultiplier: 1.0,\n  pan2Dxyzmm: vec4.fromValues(0, 0, 0, 1),\n  clipThick: 2.0,\n  clipVolumeLow: [0, 0, 0],\n  clipVolumeHigh: [1.0, 1.0, 1.0]\n}\n\nexport type Scene = {\n  onAzimuthElevationChange: (azimuth: number, elevation: number) => void\n  onZoom3DChange: (scale: number) => void\n  sceneData: SceneData\n  renderAzimuth: number\n  renderElevation: number\n  volScaleMultiplier: number\n  crosshairPos: vec3\n  clipPlane: number[]\n  clipPlaneDepthAziElev: number[]\n  pan2Dxyzmm: vec4\n  _elevation?: number\n  _azimuth?: number\n  gamma?: number\n}\n\nexport type DocumentData = {\n  title?: string\n  imageOptionsArray?: ImageFromUrlOptions[]\n  meshOptionsArray?: unknown[]\n  opts?: Partial<NVConfigOptions>\n  previewImageDataURL?: string\n  labels?: NVLabel3D[]\n  encodedImageBlobs?: string[]\n  encodedDrawingBlob?: string\n  meshesString?: string\n  sceneData?: Partial<SceneData>\n  connectomes?: string[]\n  customData?: string\n}\n\nexport type ExportDocumentData = {\n  // base64 encoded images\n  encodedImageBlobs: string[]\n  // base64 encoded drawing\n  encodedDrawingBlob: string\n  // dataURL of the preview image\n  previewImageDataURL: string\n  // map of image ids to image options\n  imageOptionsMap: Map<string, number>\n  // array of image options to recreate images\n  imageOptionsArray: ImageFromUrlOptions[]\n  // data to recreate a scene\n  sceneData: Partial<SceneData>\n  // configuration options of {@link Niivue} instance\n  opts: NVConfigOptions\n  // encoded meshes\n  meshesString: string\n  // TODO the following fields were missing in the typedef\n  labels: NVLabel3D[]\n  connectomes: string[]\n  customData: string\n}\n\n/**\n * Returns a partial configuration object containing only the fields in the provided\n * options that differ from the DEFAULT_OPTIONS.\n *\n * This is used to reduce the size of the saved document by omitting any fields\n * that match the default values.\n *\n * Array fields are compared element-wise, and any mismatch will result in the\n * entire array being included in the diff.\n *\n * @param opts - The configuration options to compare against DEFAULT_OPTIONS\n * @returns A Partial<NVConfigOptions> object with only the differing fields\n */\nfunction diffOptions(opts: NVConfigOptions, defaults: NVConfigOptions): Partial<NVConfigOptions> {\n  const diff: Partial<NVConfigOptions> = {}\n  for (const key in opts) {\n    const value = opts[key]\n    const def = defaults[key]\n    const isArray = Array.isArray(value) && Array.isArray(def)\n\n    if ((isArray && value.some((v, i) => v !== def[i])) || (!isArray && value !== def)) {\n      diff[key] = value\n    }\n  }\n  return diff\n}\n\n/**\n * Creates and instance of NVDocument\n * @ignore\n */\nexport class NVDocument {\n  data: DocumentData = {\n    title: 'Untitled document',\n    imageOptionsArray: [],\n    meshOptionsArray: [],\n    opts: { ...DEFAULT_OPTIONS },\n    previewImageDataURL: '',\n    labels: [],\n    encodedImageBlobs: [],\n    encodedDrawingBlob: ''\n  }\n\n  scene: Scene\n\n  volumes: NVImage[] = []\n  meshDataObjects?: Array<NVMesh | NVConnectome>\n  meshes: Array<NVMesh | NVConnectome> = []\n  drawBitmap: Uint8Array | null = null\n  imageOptionsMap = new Map()\n  meshOptionsMap = new Map()\n\n  constructor() {\n    this.scene = {\n      onAzimuthElevationChange: (): void => {},\n      onZoom3DChange: (): void => {},\n      sceneData: {\n        ...INITIAL_SCENE_DATA,\n        pan2Dxyzmm: vec4.fromValues(0, 0, 0, 1),\n        crosshairPos: vec3.fromValues(0.5, 0.5, 0.5)\n      },\n\n      get renderAzimuth(): number {\n        return this.sceneData.azimuth\n      },\n      set renderAzimuth(azimuth: number) {\n        this.sceneData.azimuth = azimuth\n        if (this.onAzimuthElevationChange) {\n          this.onAzimuthElevationChange(this.sceneData.azimuth, this.sceneData.elevation)\n        }\n      },\n\n      get renderElevation(): number {\n        return this.sceneData.elevation\n      },\n      set renderElevation(elevation: number) {\n        this.sceneData.elevation = elevation\n        if (this.onAzimuthElevationChange) {\n          this.onAzimuthElevationChange(this.sceneData.azimuth, this.sceneData.elevation)\n        }\n      },\n\n      get volScaleMultiplier(): number {\n        return this.sceneData.volScaleMultiplier\n      },\n      set volScaleMultiplier(scale: number) {\n        this.sceneData.volScaleMultiplier = scale\n        this.onZoom3DChange(scale)\n      },\n\n      get crosshairPos(): vec3 {\n        return this.sceneData.crosshairPos\n      },\n      set crosshairPos(crosshairPos: vec3) {\n        this.sceneData.crosshairPos = crosshairPos\n      },\n\n      get clipPlane(): number[] {\n        return this.sceneData.clipPlane\n      },\n      set clipPlane(clipPlane) {\n        this.sceneData.clipPlane = clipPlane\n      },\n\n      get clipPlaneDepthAziElev(): number[] {\n        return this.sceneData.clipPlaneDepthAziElev\n      },\n      set clipPlaneDepthAziElev(clipPlaneDepthAziElev: number[]) {\n        this.sceneData.clipPlaneDepthAziElev = clipPlaneDepthAziElev\n      },\n\n      get pan2Dxyzmm(): vec4 {\n        return this.sceneData.pan2Dxyzmm\n      },\n\n      /**\n       * Sets current 2D pan in 3D mm\n       */\n      set pan2Dxyzmm(pan2Dxyzmm) {\n        this.sceneData.pan2Dxyzmm = pan2Dxyzmm\n      },\n\n      get gamma(): number {\n        return this.sceneData.gamma\n      },\n\n      /**\n       * Sets current gamma\n       */\n      set gamma(newGamma) {\n        this.sceneData.gamma = newGamma\n      }\n    }\n  }\n\n  /**\n   * Title of the document\n   */\n  get title(): string {\n    return this.data.title\n  }\n\n  /**\n   * Gets preview image blob\n   * @returns dataURL of preview image\n   */\n  get previewImageDataURL(): string {\n    return this.data.previewImageDataURL\n  }\n\n  /**\n   * Sets preview image blob\n   * @param dataURL - encoded preview image\n   */\n  set previewImageDataURL(dataURL: string) {\n    this.data.previewImageDataURL = dataURL\n  }\n\n  /**\n   * @param title - title of document\n   */\n  set title(title: string) {\n    this.data.title = title\n  }\n\n  get imageOptionsArray(): ImageFromUrlOptions[] {\n    return this.data.imageOptionsArray\n  }\n\n  /**\n   * Gets the base 64 encoded blobs of associated images\n   */\n  get encodedImageBlobs(): string[] {\n    return this.data.encodedImageBlobs\n  }\n\n  /**\n   * Gets the base 64 encoded blob of the associated drawing\n   * TODO the return type was marked as string[] here, was that an error?\n   */\n  get encodedDrawingBlob(): string {\n    return this.data.encodedDrawingBlob\n  }\n\n  /**\n   * Gets the options of the {@link Niivue} instance\n   */\n  get opts(): NVConfigOptions {\n    return this.data.opts as NVConfigOptions\n  }\n\n  /**\n   * Sets the options of the {@link Niivue} instance\n   */\n  set opts(opts) {\n    this.data.opts = { ...opts }\n  }\n\n  /**\n   * Gets the 3D labels of the {@link Niivue} instance\n   */\n  get labels(): NVLabel3D[] {\n    return this.data.labels\n  }\n\n  /**\n   * Sets the 3D labels of the {@link Niivue} instance\n   */\n  set labels(labels: NVLabel3D[]) {\n    this.data.labels = labels\n  }\n\n  get customData(): string | undefined {\n    return this.data.customData\n  }\n\n  set customData(data: string) {\n    this.data.customData = data\n  }\n\n  /**\n   * Checks if document has an image by id\n   */\n  hasImage(image: NVImage): boolean {\n    return this.volumes.find((i) => i.id === image.id) !== undefined\n  }\n\n  /**\n   * Checks if document has an image by url\n   */\n  hasImageFromUrl(url: string): boolean {\n    return this.data.imageOptionsArray.find((i) => i.url === url) !== undefined\n  }\n\n  /**\n   * Adds an image and the options an image was created with\n   */\n  addImageOptions(image: NVImage, imageOptions: ImageFromUrlOptions): void {\n    if (!this.hasImage(image)) {\n      if (!imageOptions.name) {\n        if (imageOptions.url) {\n          const absoluteUrlRE = /^(?:[a-z+]+:)?\\/\\//i\n          const url = absoluteUrlRE.test(imageOptions.url)\n            ? new URL(imageOptions.url)\n            : new URL(imageOptions.url, window.location.href)\n\n          imageOptions.name = url.pathname.split('/').pop()! // TODO guaranteed?\n          if (imageOptions.name.toLowerCase().endsWith('.gz')) {\n            imageOptions.name = imageOptions.name.slice(0, -3)\n          }\n\n          if (!imageOptions.name.toLowerCase().endsWith('.nii')) {\n            imageOptions.name += '.nii'\n          }\n        } else {\n          imageOptions.name = 'untitled.nii'\n        }\n      }\n    }\n\n    imageOptions.imageType = NVIMAGE_TYPE.NII\n\n    this.data.imageOptionsArray.push(imageOptions)\n    this.imageOptionsMap.set(image.id, this.data.imageOptionsArray.length - 1)\n  }\n\n  /**\n   * Removes image from the document as well as its options\n   */\n  removeImage(image: NVImage): void {\n    if (this.imageOptionsMap.has(image.id)) {\n      const index = this.imageOptionsMap.get(image.id)\n      if (this.data.imageOptionsArray.length > index) {\n        this.data.imageOptionsArray.splice(index, 1)\n      }\n      this.imageOptionsMap.delete(image.id)\n    }\n    this.volumes = this.volumes.filter((i) => i.id !== image.id)\n  }\n\n  /**\n   * Fetch any image data that is missing from this document.\n   * This includes loading image blobs for `ImageFromUrlOptions` with valid `url` fields.\n   * After calling this, `volumes` and `imageOptionsMap` will be populated.\n   */\n  async fetchLinkedData(): Promise<void> {\n    this.data.encodedImageBlobs = []\n    if (!this.imageOptionsArray?.length) {\n      return\n    }\n\n    for (const imgOpt of this.imageOptionsArray) {\n      if (!imgOpt.url) {\n        continue\n      }\n\n      try {\n        const response = await fetch(imgOpt.url)\n        if (!response.ok) {\n          console.warn('Failed to fetch image:', imgOpt.url)\n          continue\n        }\n\n        const buffer = await response.arrayBuffer()\n        const uint8Array = new Uint8Array(buffer)\n        const b64 = NVUtilities.uint8tob64(uint8Array)\n        this.data.encodedImageBlobs.push(b64)\n\n        console.info('fetch linked data fetched from ', imgOpt.url)\n      } catch (err) {\n        console.warn(`Failed to fetch/encode image from ${imgOpt.url}:`, err)\n      }\n    }\n  }\n\n  /**\n   * Returns the options for the image if it was added by url\n   */\n  getImageOptions(image: NVImage): ImageFromUrlOptions | null {\n    return this.imageOptionsMap.has(image.id) ? this.data.imageOptionsArray[this.imageOptionsMap.get(image.id)] : null\n  }\n\n  /**\n   * Serialise the document.\n   *\n   * @param embedImages  If false, encodedImageBlobs is left empty\n   *                     (imageOptionsArray still records the URL / name).\n   */\n  json(embedImages = true): ExportDocumentData {\n    const data: Partial<ExportDocumentData> = {\n      encodedImageBlobs: [],\n      previewImageDataURL: this.data.previewImageDataURL,\n      imageOptionsMap: new Map()\n    }\n    const imageOptionsArray = []\n    // save our scene object\n    data.sceneData = { ...this.scene.sceneData }\n    // save our options\n    data.opts = diffOptions(this.opts, DEFAULT_OPTIONS) as NVConfigOptions\n    if (this.opts.meshThicknessOn2D === Infinity) {\n      data.opts.meshThicknessOn2D = 'infinity'\n    }\n    // infinity is a symbol\n    if (this.opts.meshThicknessOn2D === Infinity) {\n      data.opts.meshThicknessOn2D = 'infinity'\n    }\n\n    data.labels = [...this.data.labels]\n\n    // remove any handlers\n    for (const label of data.labels) {\n      delete label.onClick\n    }\n\n    data.customData = this.customData\n\n    // volumes\n    // TODO move this to a per-volume export function in NVImage?\n    if (this.volumes.length) {\n      for (let i = 0; i < this.volumes.length; i++) {\n        const volume = this.volumes[i]\n        let imageOptions = this.getImageOptions(volume)\n\n        if (imageOptions === null) {\n          log.warn('no options found for image, using default')\n          imageOptions = {\n            name: '',\n            colormap: 'gray',\n            opacity: 1.0,\n            pairedImgData: null,\n            cal_min: NaN,\n            cal_max: NaN,\n            trustCalMinMax: true,\n            percentileFrac: 0.02,\n            ignoreZeroVoxels: false,\n            useQFormNotSForm: false,\n            colormapNegative: '',\n            colormapLabel: null,\n            imageType: NVIMAGE_TYPE.NII,\n            frame4D: 0,\n            limitFrames4D: NaN,\n            // TODO the following were missing\n            url: '',\n            urlImageData: '',\n            alphaThreshold: false,\n            cal_minNeg: NaN,\n            cal_maxNeg: NaN,\n            colorbarVisible: true\n          }\n        } else {\n          if (!('imageType' in imageOptions)) {\n            imageOptions.imageType = NVIMAGE_TYPE.NII\n          }\n        }\n        // update image options on current image settings\n        imageOptions.colormap = volume.colormap\n        imageOptions.colormapLabel = volume.colormapLabel\n        imageOptions.opacity = volume.opacity\n        imageOptions.cal_max = volume.cal_max || NaN\n        imageOptions.cal_min = volume.cal_min || NaN\n\n        imageOptionsArray.push(imageOptions)\n\n        if (embedImages) {\n          const blob = NVUtilities.uint8tob64(volume.toUint8Array())\n          data.encodedImageBlobs!.push(blob)\n        }\n        data.imageOptionsMap!.set(volume.id, i)\n      }\n    }\n    // Add it even if it's empty\n    data.imageOptionsArray = [...imageOptionsArray]\n\n    // meshes\n    const meshes = []\n    data.connectomes = []\n    for (const mesh of this.meshes) {\n      if (mesh.type === MeshType.CONNECTOME) {\n        data.connectomes.push(JSON.stringify((mesh as NVConnectome).json()))\n        continue\n      }\n      const copyMesh: Mutable<any> = {\n        pts: mesh.pts,\n        tris: mesh.tris,\n        name: mesh.name,\n        rgba255: Uint8Array.from(mesh.rgba255),\n        opacity: mesh.opacity,\n        connectome: mesh.connectome,\n        dpg: mesh.dpg,\n        dps: mesh.dps,\n        dpv: mesh.dpv,\n        meshShaderIndex: mesh.meshShaderIndex,\n        layers: mesh.layers.map((layer) => ({\n          values: layer.values,\n          nFrame4D: layer.nFrame4D,\n          frame4D: 0,\n          outlineBorder: layer.outlineBorder,\n          global_min: layer.global_min,\n          global_max: layer.global_max,\n          cal_min: layer.cal_min,\n          cal_max: layer.cal_max,\n          opacity: layer.opacity,\n          colormap: layer.colormap,\n          colormapNegative: layer.colormapNegative,\n          colormapLabel: layer.colormapLabel,\n          useNegativeCmap: layer.useNegativeCmap\n        })),\n        hasConnectome: mesh.hasConnectome,\n        edgeColormap: mesh.edgeColormap,\n        edgeColormapNegative: mesh.edgeColormapNegative,\n        edgeMax: mesh.edgeMax,\n        edgeMin: mesh.edgeMin,\n        edges: mesh.edges && Array.isArray(mesh.edges) ? [...mesh.edges] : [],\n        extentsMax: mesh.extentsMax,\n        extentsMin: mesh.extentsMin,\n        furthestVertexFromOrigin: mesh.furthestVertexFromOrigin,\n        nodeColormap: mesh.nodeColormap,\n        nodeColormapNegative: mesh.nodeColormapNegative,\n        nodeMaxColor: mesh.nodeMaxColor,\n        nodeMinColor: mesh.nodeMinColor,\n        nodeScale: mesh.nodeScale,\n        legendLineThickness: mesh.legendLineThickness,\n        offsetPt0: mesh.offsetPt0,\n        nodes: mesh.nodes\n      }\n      if (mesh.offsetPt0 && mesh.offsetPt0.length > 0) {\n        copyMesh.offsetPt0 = mesh.offsetPt0\n        copyMesh.fiberGroupColormap = mesh.fiberGroupColormap\n        copyMesh.fiberColor = mesh.fiberColor\n        copyMesh.fiberDither = mesh.fiberDither\n        copyMesh.fiberRadius = mesh.fiberRadius\n        copyMesh.colormap = mesh.colormap\n      }\n      meshes.push(copyMesh)\n    }\n    data.meshesString = JSON.stringify(serialize(meshes))\n    // Serialize drawBitmap\n    if (this.drawBitmap) {\n      data.encodedDrawingBlob = NVUtilities.uint8tob64(this.drawBitmap)\n    }\n\n    return data as ExportDocumentData\n  }\n\n  async download(\n    fileName: string,\n    compress: boolean,\n    opts: { embedImages: boolean } = { embedImages: true }\n  ): Promise<void> {\n    const data = this.json(opts.embedImages)\n    const jsonTxt = JSON.stringify(data)\n    const mime = compress ? 'application/gzip' : 'application/json'\n    const payload = compress ? await NVUtilities.compressStringToArrayBuffer(jsonTxt) : jsonTxt\n\n    NVUtilities.download(payload, fileName, mime)\n  }\n\n  /**\n   * Deserialize mesh data objects\n   */\n  static deserializeMeshDataObjects(document: NVDocument): void {\n    if (!document.data.meshesString || document.data.meshesString === '[]') {\n      document.meshDataObjects = []\n      return // ← early-exit\n    }\n\n    if (document.data.meshesString) {\n      document.meshDataObjects = deserialize(JSON.parse(document.data.meshesString))\n      for (const mesh of document.meshDataObjects!) {\n        for (const layer of mesh.layers) {\n          if ('colorMap' in layer) {\n            layer.colormap = layer.colorMap as string\n            delete layer.colorMap\n          }\n          if ('colorMapNegative' in layer) {\n            layer.colormapNegative = layer.colorMapNegative as string\n            delete layer.colorMapNegative\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Factory method to return an instance of NVDocument from a URL\n   */\n  static async loadFromUrl(url: string): Promise<NVDocument> {\n    const response = await fetch(url)\n    const buffer = await response.arrayBuffer()\n    let documentData: DocumentData\n\n    if (NVUtilities.isArrayBufferCompressed(buffer)) {\n      // The file is gzip compressed\n      const documentText = await NVUtilities.decompressArrayBuffer(buffer)\n      documentData = JSON.parse(documentText)\n    } else {\n      const utf8decoder = new TextDecoder()\n      documentData = JSON.parse(utf8decoder.decode(buffer))\n    }\n\n    return NVDocument.loadFromJSON(documentData)\n  }\n\n  /**\n   * Factory method to return an instance of NVDocument from a File object\n   */\n  static async loadFromFile(file: Blob): Promise<NVDocument> {\n    const arrayBuffer = await NVUtilities.readFileAsync(file)\n    let dataString: string\n    const document = new NVDocument()\n\n    if (NVUtilities.isArrayBufferCompressed(arrayBuffer)) {\n      dataString = await NVUtilities.decompressArrayBuffer(arrayBuffer)\n    } else {\n      const utf8decoder = new TextDecoder()\n      dataString = utf8decoder.decode(arrayBuffer)\n    }\n    document.data = JSON.parse(dataString)\n\n    if (document.data.opts.meshThicknessOn2D === 'infinity') {\n      document.data.opts.meshThicknessOn2D = Infinity\n    }\n    document.scene.sceneData = { ...INITIAL_SCENE_DATA, ...document.data.sceneData }\n\n    NVDocument.deserializeMeshDataObjects(document)\n    return document\n  }\n\n  /**\n   * Factory method to return an instance of NVDocument from JSON.\n   *\n   * This will merge any saved configuration options (`opts`) with the DEFAULT_OPTIONS,\n   * ensuring any missing values are filled with defaults. It also restores special-case\n   * fields like `meshThicknessOn2D` when serialized as the string \"infinity\".\n   *\n   * @param data - A serialized DocumentData object\n   * @returns A reconstructed NVDocument instance\n   */\n  static loadFromJSON(data: DocumentData): NVDocument {\n    // 1. start with a fresh document (its constructor already seeds\n    //    document.data with whatever defaults you want)\n    const document = new NVDocument()\n\n    // 2. copy *all* top-level saved fields over (this brings in\n    //    imageOptionsArray, encodedImageBlobs, masks, overlays, etc.)\n    Object.assign(document.data, {\n      ...data,\n      // 2a. ensure minimum required array fields are non-null\n      imageOptionsArray: data.imageOptionsArray ?? [],\n      encodedImageBlobs: data.encodedImageBlobs ?? [],\n      labels: data.labels ?? [],\n      meshOptionsArray: data.meshOptionsArray ?? [],\n      connectomes: data.connectomes ?? [],\n      encodedDrawingBlob: data.encodedDrawingBlob ?? '',\n      previewImageDataURL: data.previewImageDataURL ?? '',\n      customData: data.customData ?? '',\n      title: data.title ?? 'untitled'\n    })\n\n    // 3. now merge opts with your DEFAULT_OPTIONS\n    document.data.opts = {\n      ...DEFAULT_OPTIONS,\n      ...(data.opts || {})\n    } as NVConfigOptions\n\n    //    and restore the \"infinity\" sentinel\n    if (document.data.opts.meshThicknessOn2D === 'infinity') {\n      document.data.opts.meshThicknessOn2D = Infinity\n    }\n\n    // 4. merge sceneData\n    document.scene.sceneData = {\n      ...INITIAL_SCENE_DATA,\n      ...(data.sceneData || {})\n    }\n\n    // 5. finally, if there was a meshesString, deserialize it\n    if (document.data.meshesString) {\n      NVDocument.deserializeMeshDataObjects(document)\n    }\n\n    return document\n  }\n\n  /**\n   * Factory method to return an instance of NVDocument from JSON\n   */\n  static oldloadFromJSON(data: DocumentData): NVDocument {\n    const document = new NVDocument()\n    document.data = data\n    if (document.data.opts.meshThicknessOn2D === 'infinity') {\n      document.data.opts.meshThicknessOn2D = Infinity\n    }\n    document.scene.sceneData = { ...INITIAL_SCENE_DATA, ...data.sceneData }\n    NVDocument.deserializeMeshDataObjects(document)\n    return document\n  }\n}\n","import { vec3, vec4 } from 'gl-matrix'\nimport { v4 as uuidv4 } from '@lukeed/uuid'\nimport { log } from './logger.js'\nimport { NiivueObject3D } from './niivue-object3D.js' // n.b. used by connectome\nimport { ColorMap, LUT, cmapper } from './colortables.js'\nimport { NVMeshUtilities } from './nvmesh-utilities.js'\nimport { NVMeshLoaders } from './nvmesh-loaders.js'\nimport { NVLabel3D, LabelTextAlignment, LabelLineTerminator } from './nvlabel.js'\n\nimport { LegacyConnectome, LegacyNodes, NVConnectomeEdge, NVConnectomeNode, Point } from './types.js'\nimport {\n  DefaultMeshType,\n  GII,\n  MZ3,\n  TCK,\n  TRACT,\n  TRK,\n  TT,\n  TRX,\n  VTK,\n  ValuesArray,\n  X3D,\n  AnyNumberArray\n} from './nvmesh-types.js'\nimport { COLORMAP_TYPE } from './nvdocument.js'\n\n/** Enum for text alignment\n */\nexport enum MeshType {\n  MESH = 'mesh',\n  CONNECTOME = 'connectome',\n  FIBER = 'fiber'\n}\n\nexport type NVMeshLayer = {\n  name?: string\n  key?: string\n  url?: string\n  headers?: Record<string, string>\n  opacity: number\n  colormap: string\n  colormapNegative?: string\n  colormapInvert?: boolean\n  colormapLabel?: ColorMap | LUT\n  useNegativeCmap?: boolean\n  global_min?: number\n  global_max?: number\n  cal_min: number\n  cal_max: number\n  cal_minNeg: number\n  cal_maxNeg: number\n  isAdditiveBlend?: boolean\n  frame4D: number\n  nFrame4D: number\n  values: AnyNumberArray // number[] | Float32Array | Uint32Array\n  outlineBorder?: number\n  isTransparentBelowCalMin?: boolean\n  colormapType?: number\n  base64?: string\n  // TODO referenced in niivue/refreshColormaps\n  colorbarVisible?: boolean\n  showLegend?: boolean\n  labels?: NVLabel3D[]\n  atlasValues?: AnyNumberArray\n}\n\nexport const NVMeshLayerDefaults = {\n  colormap: 'gray',\n  opacity: 0.0,\n  nFrame4D: 0,\n  frame4D: 0,\n  outlineBorder: 0,\n  cal_min: 0,\n  cal_max: 0,\n  cal_minNeg: 0,\n  cal_maxNeg: 0,\n  colormapType: COLORMAP_TYPE.MIN_TO_MAX,\n  values: new Array<number>(),\n  useNegativeCmap: false,\n  showLegend: true\n}\n\nexport class NVMeshFromUrlOptions {\n  url: string\n  gl: WebGL2RenderingContext | null\n  name: string\n  opacity: number\n  rgba255: Uint8Array\n  visible: boolean\n  layers: NVMeshLayer[]\n  colorbarVisible: boolean\n\n  constructor(\n    url = '',\n    gl = null,\n    name = '',\n    opacity = 1.0,\n    rgba255 = new Uint8Array([255, 255, 255, 255]),\n    visible = true,\n    layers = [],\n    colorbarVisible = true\n  ) {\n    this.url = url\n    this.gl = gl\n    this.name = name\n    this.opacity = opacity\n    this.rgba255 = rgba255\n    this.visible = visible\n    this.layers = layers\n    this.colorbarVisible = colorbarVisible\n  }\n}\n\ntype BaseLoadParams = {\n  // WebGL rendering context\n  gl: WebGL2RenderingContext\n  // a name for this image. Default is an empty string\n  name: string\n  // the opacity for this image. default is 1\n  opacity: number\n  // the base color of the mesh. RGBA values from 0 to 255. Default is white\n  rgba255: number[] | Uint8Array\n  // whether or not this image is to be visible\n  visible: boolean\n  // layers of the mesh to load\n  layers: NVMeshLayer[]\n}\n\nexport type LoadFromUrlParams = Partial<BaseLoadParams> & {\n  // the resolvable URL pointing to a mesh to load\n  url: string\n  headers?: Record<string, string>\n  buffer?: ArrayBuffer\n}\n\ntype LoadFromFileParams = BaseLoadParams & {\n  // the file object\n  file: Blob\n}\n\ntype LoadFromBase64Params = BaseLoadParams & {\n  // the base64 encoded string\n  base64: string\n}\n\n/**\n * a NVMesh encapsulates some mesh data and provides methods to query and operate on meshes\n */\nexport class NVMesh {\n  id: string\n  name: string\n  anatomicalStructurePrimary: string\n  colorbarVisible: boolean\n  furthestVertexFromOrigin: number\n  extentsMin: number | number[]\n  extentsMax: number | number[]\n  opacity: number\n  visible: boolean\n  meshShaderIndex = 0\n  offsetPt0: Uint32Array | null = null\n\n  colormapInvert = false\n  fiberGroupColormap: ColorMap | null = null\n\n  indexBuffer: WebGLBuffer\n  vertexBuffer: WebGLBuffer\n  vao: WebGLVertexArrayObject\n  vaoFiber: WebGLVertexArrayObject\n\n  pts: Float32Array\n  tris?: Uint32Array\n  layers: NVMeshLayer[]\n  type = MeshType.MESH\n\n  data_type?: string\n  rgba255: Uint8Array\n  fiberLength?: number\n  fiberLengths?: Uint32Array\n  fiberDensity?: Float32Array\n  fiberDither = 0.1\n  fiberColor = 'Global'\n  fiberDecimationStride = 1 // e.g. if 2 the 50% of streamlines visible, if 3 then 1/3rd\n  fiberSides = 5 // 1=streamline, 2=imposter, >2=mesh(cylinder with fiberSides sides)\n  fiberRadius = 0 // in mm, e.g. 3 means 6mm diameter fibers, ignored if fiberSides < 3\n  fiberOcclusion = 0 // value 0..1 to simulate ambient occlusion\n  f32PerVertex = 5 // MUST be 5 or 7: number of float32s per vertex DEPRECATED, future releases will ALWAYS be 5\n  fiberMask?: unknown[]\n  colormap?: ColorMap | LegacyConnectome | string | null\n  dpg?: ValuesArray | null\n  dps?: ValuesArray | null\n  dpv?: ValuesArray | null\n\n  hasConnectome = false\n  connectome?: LegacyConnectome | string\n\n  // TODO this should somehow get aligned with connectome\n  indexCount?: number\n  vertexCount = 1\n  nodeScale = 4\n  edgeScale = 1\n  legendLineThickness = 0\n  showLegend = true\n  nodeColormap = 'warm'\n  edgeColormap = 'warm'\n  nodeColormapNegative?: string\n  edgeColormapNegative?: string\n  nodeMinColor?: number\n  nodeMaxColor?: number\n  edgeMin?: number\n  edgeMax?: number\n\n  nodes?: LegacyNodes | NVConnectomeNode[]\n\n  edges?: number[] | NVConnectomeEdge[]\n\n  points?: Point[]\n\n  /**\n   * @param pts - a 3xN array of vertex positions (X,Y,Z coordinates).\n   * @param tris - a 3xN array of triangle indices (I,J,K; indexed from zero). Each triangle generated from three vertices.\n   * @param name - a name for this image. Default is an empty string\n   * @param rgba255 - the base color of the mesh. RGBA values from 0 to 255. Default is white\n   * @param opacity - the opacity for this mesh. default is 1\n   * @param visible - whether or not this image is to be visible\n   * @param gl - WebGL rendering context\n   * @param connectome - specify connectome edges and nodes. Default is null (not a connectome).\n   * @param dpg - Data per group for tractography, see TRK format. Default is null (not tractograpgy)\n   * @param dps - Data per streamline for tractography, see TRK format.  Default is null (not tractograpgy)\n   * @param dpv - Data per vertex for tractography, see TRK format.  Default is null (not tractograpgy)\n   * @param colorbarVisible - does this mesh display a colorbar\n   * @param anatomicalStructurePrimary - region for mesh. Default is an empty string\n   */\n  constructor(\n    pts: Float32Array,\n    tris: Uint32Array,\n    name = '',\n    rgba255 = new Uint8Array([255, 255, 255, 255]),\n    opacity = 1.0,\n    visible = true,\n    gl: WebGL2RenderingContext,\n    connectome: LegacyConnectome | string | null = null,\n    dpg: ValuesArray | null = null,\n    dps: ValuesArray | null = null,\n    dpv: ValuesArray | null = null,\n    colorbarVisible = true,\n    anatomicalStructurePrimary = ''\n  ) {\n    this.anatomicalStructurePrimary = anatomicalStructurePrimary\n    this.name = name\n    this.colorbarVisible = colorbarVisible\n    this.id = uuidv4()\n    const obj = NVMeshUtilities.getExtents(pts)\n    this.furthestVertexFromOrigin = obj.mxDx\n    this.extentsMin = obj.extentsMin\n    this.extentsMax = obj.extentsMax\n    this.opacity = opacity > 1.0 ? 1.0 : opacity // make sure opacity can't be initialized greater than 1 see: #107 and #117 on github\n    this.visible = visible\n    this.meshShaderIndex = 0\n    this.indexBuffer = gl.createBuffer()!\n    this.vertexBuffer = gl.createBuffer()!\n    this.vao = gl.createVertexArray()!\n    // the VAO binds the vertices and indices as well as describing the vertex layout\n    gl.bindVertexArray(this.vao)\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer)\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer)\n    // vertex position: 3 floats X,Y,Z\n    gl.enableVertexAttribArray(0)\n\n    gl.enableVertexAttribArray(1)\n    const f32PerVertex = this.f32PerVertex\n    if (f32PerVertex !== 7) {\n      // n32\n      gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 20, 0)\n      // vertex surface normal vector: (also three floats)\n      gl.vertexAttribPointer(1, 4, gl.BYTE, true, 20, 12)\n      // vertex color\n      gl.enableVertexAttribArray(2)\n      gl.vertexAttribPointer(2, 4, gl.UNSIGNED_BYTE, true, 20, 16)\n    } else {\n      gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 28, 0)\n      // vertex surface normal vector: (also three floats)\n      gl.vertexAttribPointer(1, 3, gl.FLOAT, false, 28, 12)\n      // vertex color\n      gl.enableVertexAttribArray(2)\n      gl.vertexAttribPointer(2, 4, gl.UNSIGNED_BYTE, true, 28, 24)\n    }\n    gl.bindVertexArray(null) // https://stackoverflow.com/questions/43904396/are-we-not-allowed-to-bind-gl-array-buffer-and-vertex-attrib-array-to-0-in-webgl\n\n    this.vaoFiber = gl.createVertexArray()!\n    this.offsetPt0 = null\n    this.hasConnectome = false\n    this.colormapInvert = false\n    this.fiberGroupColormap = null\n    this.pts = pts\n    this.layers = []\n    this.type = MeshType.MESH\n    this.tris = tris\n    if (rgba255[3] < 1) {\n      this.rgba255 = rgba255\n      this.fiberLength = 2\n      this.fiberDither = 0.1\n      this.fiberColor = 'Global'\n      this.fiberDecimationStride = 1 // e.g. if 2 the 50% of streamlines visible, if 3 then 1/3rd\n      this.fiberMask = [] // provide method to show/hide specific fibers\n      this.colormap = connectome\n      this.dpg = dpg\n      this.dps = dps\n      this.dpv = dpv\n      if (dpg) {\n        this.initValuesArray(dpg)\n      }\n      if (dps) {\n        this.initValuesArray(dps)\n      }\n      if (dpv) {\n        this.initValuesArray(dpv)\n      }\n      this.offsetPt0 = new Uint32Array(tris)\n      this.tris = new Uint32Array(0)\n      this.updateFibers(gl)\n      // define VAO\n      gl.bindVertexArray(this.vaoFiber)\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer)\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer)\n      // vertex position: 3 floats X,Y,Z\n      gl.enableVertexAttribArray(0)\n      gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 16, 0)\n      // vertex color\n      gl.enableVertexAttribArray(1)\n      gl.vertexAttribPointer(1, 4, gl.UNSIGNED_BYTE, true, 16, 12)\n      gl.bindVertexArray(null) // https://stackoverflow.com/questions/43904396/are-we-not-allowed-to-bind-gl-array-buffer-and-vertex-attrib-array-to-0-in-webgl\n      return\n    } // if fiber not mesh\n    if (connectome) {\n      this.connectome = connectome\n      this.hasConnectome = true\n      const keysArray = Object.keys(connectome)\n      for (let i = 0, len = keysArray.length; i < len; i++) {\n        this[keysArray[i]] = connectome[keysArray[i]]\n      }\n    }\n    this.rgba255 = rgba255\n\n    this.updateMesh(gl)\n  }\n\n  initValuesArray(va: ValuesArray): ValuesArray {\n    for (let i = 0; i < va.length; i++) {\n      const mn = va[i].vals.reduce((acc, current) => Math.min(acc, current))\n      const mx = va[i].vals.reduce((acc, current) => Math.max(acc, current))\n      va[i].global_min = mn\n      va[i].global_max = mx\n      va[i].cal_min = mn\n      va[i].cal_max = mx\n    }\n    return va\n  }\n\n  // given streamlines (which webGL renders as a single pixel), extrude to cylinders\n  linesToCylinders(gl: WebGL2RenderingContext, posClrF32: Float32Array, indices: number[]): void {\n    // return Float32Array\n    // const posClrF32 four 32-bit components X,Y,Z,C where C is Uint32 with RGBA\n    function v4ToV3(v4: vec4): vec3 {\n      return vec3.fromValues(v4[0], v4[1], v4[2])\n    }\n    const primitiveRestart = Math.pow(2, 32) - 1 // for gl.UNSIGNED_INT\n    const n_count = indices.length\n    let n_line_vtx = 0\n    let n_streamlines = 0\n    // n.b. each streamline terminates with a `primitiveRestart`, even the final one\n    for (let i = 0; i < n_count; i++) {\n      if (indices[i] === primitiveRestart) {\n        n_streamlines++\n        continue\n      }\n      n_line_vtx++\n    }\n    const cyl_sides = this.fiberSides\n    // next: generate extruded cylinders\n    // npt is number of points (vertices) for cylinders\n    const npt = cyl_sides * n_line_vtx\n    const f32PerVertex = this.f32PerVertex // 7 if NormalXYZ is 3 floats, 5 if normalXYZ is packed into rgb32\n    if (f32PerVertex !== 5) {\n      throw Error('fiberSides > 1 requires f32PerVertex == 5')\n    }\n    const f32 = new Float32Array(npt * f32PerVertex) // Each vertex has 5 components: PosX, PosY, PosZ, NormalXYZ, RGBA32\n    const u8 = new Uint8Array(f32.buffer) // Each vertex has 7 components: PositionXYZ, NormalXYZ, RGBA32\n    let vtx = 0\n    //\n    // previous vector location\n    let prevV4 = vec4.create()\n    let currV4 = vec4.create()\n    let nextV4 = vec4.create()\n    const v1 = vec3.create()\n    let prevV2 = vec3.create()\n    let node = 0\n    const radius = this.fiberRadius\n    for (let i = 0; i < n_count; i++) {\n      const isLineEnd = indices[i] === primitiveRestart\n      if (isLineEnd && node < 1) {\n        continue\n      } // two restarts in a row!\n      let idx = indices[i] * 4 // each posClrF32 has 4 elements X,Y,Z,C\n      node++\n      if (node <= 1) {\n        // first vertex in a streamline, no previous vertex\n        prevV4 = vec4.fromValues(posClrF32[idx + 0], posClrF32[idx + 1], posClrF32[idx + 2], posClrF32[idx + 3])\n        currV4 = vec4.clone(prevV4)\n        if (i + 1 < n_count && indices[i + 1] !== primitiveRestart) {\n          idx = indices[i + 1] * 4\n          nextV4 = vec4.fromValues(posClrF32[idx + 0], posClrF32[idx + 1], posClrF32[idx + 2], posClrF32[idx + 3])\n          vec3.subtract(v1, v4ToV3(prevV4), v4ToV3(nextV4))\n          vec3.normalize(v1, v1) // principle axis of cylinder\n          prevV2 = NiivueObject3D.getFirstPerpVector(v1)\n        }\n        continue\n      }\n      if (isLineEnd) {\n        // last vertex of streamline, no next vertex\n        nextV4 = vec4.clone(currV4)\n      } else {\n        nextV4 = vec4.fromValues(posClrF32[idx + 0], posClrF32[idx + 1], posClrF32[idx + 2], posClrF32[idx + 3])\n      }\n      // mean direction at joint\n      // n.b. vec4 -> vec3 we ignore 4th dimension (color)\n      vec3.subtract(v1, v4ToV3(prevV4), v4ToV3(nextV4))\n      vec3.normalize(v1, v1) // principle axis of cylinder\n      // avoid twisted cylinders: ensure v2 as closely aligned with previous v2 as possible\n      // method simpler than Frenet–Serret apparatus\n      // https://math.stackexchange.com/questions/410530/find-closest-vector-to-a-which-is-perpendicular-to-b\n      // const v2 = NiivueObject3D.getFirstPerpVector(v1)\n      // 𝐷=𝐴×𝐵, and then 𝐶=𝐵×𝐷. 𝐶 is automatically orthogonal to 𝐵\n      const D = vec3.create()\n      vec3.cross(D, prevV2, v1)\n      const v2 = vec3.create()\n      vec3.cross(v2, v1, D)\n      prevV2 = vec3.clone(prevV2)\n      // the next line of code would create arbitrary v2 that might show twisting\n      // v2 = NiivueObject3D.getFirstPerpVector(v1)\n      // Get the second perp vector by cross product\n      const v3 = vec3.create()\n      vec3.cross(v3, v1, v2) // a unit length vector orthogonal to v1 and v2\n      vec3.normalize(v3, v3)\n      const vtxXYZ = vec3.create()\n      for (let j = 0; j < cyl_sides; j++) {\n        const c = Math.cos((j / cyl_sides) * 2 * Math.PI)\n        const s = Math.sin((j / cyl_sides) * 2 * Math.PI)\n        vtxXYZ[0] = radius * (c * v2[0] + s * v3[0])\n        vtxXYZ[1] = radius * (c * v2[1] + s * v3[1])\n        vtxXYZ[2] = radius * (c * v2[2] + s * v3[2])\n        vec3.add(vtxXYZ, v4ToV3(currV4), vtxXYZ)\n        const fidx = vtx * f32PerVertex\n        f32[fidx + 0] = vtxXYZ[0]\n        f32[fidx + 1] = vtxXYZ[1]\n        f32[fidx + 2] = vtxXYZ[2]\n        // compute normal\n        const n3 = vec3.create()\n        vec3.subtract(n3, vtxXYZ, v4ToV3(currV4))\n        vec3.normalize(n3, n3)\n        const fidxU8 = (fidx + 3) * 4 // 4 Uint8 per Float32\n        u8[fidxU8 + 0] = n3[0] * 127\n        u8[fidxU8 + 1] = n3[1] * 127\n        u8[fidxU8 + 2] = n3[2] * 127\n        // f32[fidx+3] = normal;\n        f32[fidx + 4] = currV4[3]\n        // u32[fidx+3] = 65555;\n        // u32[fidx+4] = 65555;\n        vtx++\n      }\n      prevV4 = vec4.clone(currV4)\n      currV4 = vec4.clone(nextV4)\n      if (isLineEnd) {\n        node = 0\n      }\n    }\n    // ntri = number of triangles\n    // each cylinder is composed of 2 * cyl_sides (e.g. triangular cylinder is 6 triangles)\n    // each streamline with n nodes has n-1 cylinders (fencepost)\n    // each triangle defined by three indices, each referring to a vertex\n    const nidx = (n_line_vtx - n_streamlines) * cyl_sides * 2 * 3\n    const idxs = new Uint32Array(nidx)\n    let idx = 0\n    vtx = 0\n    for (let i = 1; i < n_count; i++) {\n      if (indices[i] === primitiveRestart) {\n        vtx += cyl_sides\n        continue\n      }\n      if (indices[i - 1] === primitiveRestart) {\n        // fencepost: do not create indices for first node in each streamline\n        continue\n      }\n      let prevStartVtx = vtx // startOfPreviousCylinder\n      let startVtx = vtx + cyl_sides // startOfCurrentCylinder\n      const prevStartVtxOverflow = startVtx // startOfCurrentCylinder\n      const startVtxOverflow = startVtx + cyl_sides // startOfNextCylinder\n      for (let j = 0; j < cyl_sides; j++) {\n        // emit triangle with one vertex on previous\n        idxs[idx++] = prevStartVtx\n        idxs[idx++] = startVtx++\n        if (startVtx === startVtxOverflow) {\n          startVtx = startVtxOverflow - cyl_sides\n        }\n        idxs[idx++] = startVtx\n        // emit triangle with two vertex on previous\n        idxs[idx++] = prevStartVtx++\n        if (prevStartVtx === prevStartVtxOverflow) {\n          prevStartVtx = prevStartVtxOverflow - cyl_sides\n        }\n        idxs[idx++] = startVtx\n        idxs[idx++] = prevStartVtx\n      }\n      vtx += cyl_sides\n    }\n    // copy index and vertex buffer to GPU\n    // no need to release: https://registry.khronos.org/OpenGL-Refpages/gl4/html/glBufferData.xhtml\n    // any pre-existing data store is deleted\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, Uint32Array.from(idxs), gl.STATIC_DRAW)\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer)\n    // issue1129\n    // gl.bufferData(gl.ARRAY_BUFFER, Float32Array.from(f32), gl.STATIC_DRAW)\n    gl.bufferData(gl.ARRAY_BUFFER, u8, gl.STATIC_DRAW)\n    this.indexCount = nidx\n  } // linesToCylinders\n\n  createFiberDensityMap(): void {\n    // generate a fiber density map\n    // the array fiberDensity has one element per vertex\n    // this provides the normalized (0..1) neighboring vertices\n    if (this.fiberDensity) {\n      return\n    }\n    const pts = this.pts\n    const npt = pts.length / 3 // each point has three components: X,Y,Z\n    let maxExtentsRange = 0\n    for (let i = 0; i < 3; i++) {\n      const range = this.extentsMax[i] - this.extentsMin[i]\n      maxExtentsRange = Math.max(maxExtentsRange, range)\n    }\n    this.fiberDensity = new Float32Array(npt)\n    if (maxExtentsRange === 0) {\n      return\n    }\n    // DSI-Studio counts vertex density per voxel\n    // However, some tract formats do not store voxel dimensions\n    // therefore, we will create a 3D volume of size bins*bins*bins\n    const bins = 64\n    const binWidth = maxExtentsRange / (bins - 1)\n    const half = binWidth / 2\n    const scale = (bins - 1) / maxExtentsRange\n    let densityMap = new Float32Array(bins * bins * bins)\n    const mn = [this.extentsMin[0] - half, this.extentsMin[1] - half, this.extentsMin[2] - half]\n    // sum density map\n    const xyz = [0, 0, 0]\n    const prevVx = -1\n    const binsXbins = bins * bins\n    let j = 0\n    for (let i = 0; i < npt; i++) {\n      xyz[0] = Math.round((pts[j++] - mn[0]) * scale)\n      xyz[1] = Math.round((pts[j++] - mn[1]) * scale)\n      xyz[2] = Math.round((pts[j++] - mn[2]) * scale)\n      const vx = xyz[0] + xyz[1] * bins + xyz[2] * binsXbins\n      if (vx === prevVx) {\n        // each streamline contributes once per voxel\n        continue\n      }\n      densityMap[vx]++\n    }\n    function blur3D(vol: Float32Array, dim: number): Float32Array {\n      // let raw = vol.slice()\n      let raw = vol.slice()\n      let v = -1\n      const dim1 = dim - 1\n      // blur in x\n      for (let z = 0; z < dim; z++) {\n        for (let y = 0; y < dim; y++) {\n          for (let x = 0; x < dim; x++) {\n            v++\n            if (x < 1 || x >= dim1) {\n              continue\n            }\n            vol[v] = raw[v - 1] + raw[v] + raw[v] + raw[v + 1]\n          }\n        }\n      }\n      // blur in y\n      v = -1\n      raw = vol.slice()\n      for (let z = 0; z < dim; z++) {\n        for (let y = 0; y < dim; y++) {\n          for (let x = 0; x < dim; x++) {\n            v++\n            if (y < 1 || y >= dim1) {\n              continue\n            }\n            vol[v] = raw[v - dim] + raw[v] + raw[v] + raw[v + dim]\n          }\n        }\n      }\n      // blur in z\n      const dimXdim = dim * dim\n      v = -1\n      raw = vol.slice()\n      for (let z = 0; z < dim; z++) {\n        for (let y = 0; y < dim; y++) {\n          for (let x = 0; x < dim; x++) {\n            v++\n            if (z < 1 || z >= dim1) {\n              continue\n            }\n            vol[v] = raw[v - dimXdim] + raw[v] + raw[v] + raw[dimXdim]\n          }\n        }\n      }\n      return vol\n    }\n    densityMap = blur3D(densityMap, bins)\n    densityMap = blur3D(densityMap, bins)\n    // let raw = densityMap.slice()\n    let mx = 0\n    let mn0 = Infinity\n    const binsXbinsXbins = bins * bins * bins\n    for (let i = 0; i < binsXbinsXbins; i++) {\n      if (densityMap[i] <= 0) {\n        continue\n      }\n      mx = Math.max(mx, densityMap[i])\n      mn0 = Math.min(mn0, densityMap[i])\n    }\n    // console.log('Maximum streamlines in a voxel:', mx, mn0)\n    if (mx <= 1 || mx <= mn0) {\n      // no neighbors: no ambient occlusion\n      return\n    }\n    j = 0\n    for (let i = 0; i < binsXbinsXbins; i++) {\n      // least occluded vertices should have no occlusion\n      densityMap[i] = Math.max(0, densityMap[i] - mn0)\n    }\n    mx -= mn0\n    for (let i = 0; i < npt; i++) {\n      xyz[0] = Math.round((pts[j++] - mn[0]) * scale)\n      xyz[1] = Math.round((pts[j++] - mn[1]) * scale)\n      xyz[2] = Math.round((pts[j++] - mn[2]) * scale)\n      const vx = xyz[0] + xyz[1] * bins + xyz[2] * binsXbins\n      this.fiberDensity[i] = densityMap[vx] / mx\n    }\n  }\n\n  // not included in public docs\n  // internal function filters tractogram to identify which color and visibility of streamlines\n  updateFibers(gl: WebGL2RenderingContext): void {\n    if (!this.offsetPt0 || !this.fiberLength) {\n      return\n    }\n    const pts = this.pts\n    const offsetPt0 = this.offsetPt0\n    const n_count = offsetPt0.length - 1\n    const npt = pts.length / 3 // each point has three components: X,Y,Z\n    // only once: compute length of each streamline\n    if (!this.fiberLengths) {\n      this.fiberLengths = new Uint32Array(n_count)\n      for (let i = 0; i < n_count; i++) {\n        // for each streamline\n        const vStart3 = offsetPt0[i] * 3 // first vertex in streamline\n        const vEnd3 = (offsetPt0[i + 1] - 1) * 3 // last vertex in streamline\n        let len = 0\n        for (let j = vStart3; j < vEnd3; j += 3) {\n          const v = vec3.fromValues(pts[j + 0] - pts[j + 3], pts[j + 1] - pts[j + 4], pts[j + 2] - pts[j + 5])\n          len += vec3.len(v)\n        }\n        this.fiberLengths[i] = len\n      }\n    } // only once: compute length of each streamline\n    // determine fiber colors\n    // Each streamline vertex has color and position attributes\n    // Interleaved Vertex Data https://developer.apple.com/library/archive/documentation/3DDrawing/Conceptual/OpenGLES_ProgrammingGuide/TechniquesforWorkingwithVertexData/TechniquesforWorkingwithVertexData.html\n    const posClrF32 = new Float32Array(npt * 4) // four 32-bit components X,Y,Z,C\n    const posClrU32 = new Uint32Array(posClrF32.buffer) // typecast of our X,Y,Z,C array\n    // fill XYZ position of XYZC array\n    let i3 = 0\n    let i4 = 0\n    for (let i = 0; i < npt; i++) {\n      posClrF32[i4 + 0] = pts[i3 + 0]\n      posClrF32[i4 + 1] = pts[i3 + 1]\n      posClrF32[i4 + 2] = pts[i3 + 2]\n      i3 += 3\n      i4 += 4\n    }\n    // fill fiber Color\n    const dither = this.fiberDither\n    const ditherHalf = dither * 0.5\n    function rgb2int32(r: number, g: number, b: number): number {\n      const ditherFrac = dither * Math.random()\n      const d = 255.0 * (ditherFrac - ditherHalf)\n      r = Math.max(Math.min(r + d, 255.0), 0.0)\n      g = Math.max(Math.min(g + d, 255.0), 0.0)\n      b = Math.max(Math.min(b + d, 255.0), 0.0)\n      return r + (g << 8) + (b << 16)\n    }\n    function direction2rgb(\n      x1: number,\n      y1: number,\n      z1: number,\n      x2: number,\n      y2: number,\n      z2: number,\n      ditherFrac: number\n    ): number {\n      // generate color based on direction between two 3D spatial positions\n      const v = vec3.fromValues(Math.abs(x1 - x2), Math.abs(y1 - y2), Math.abs(z1 - z2))\n      vec3.normalize(v, v)\n      const r = ditherFrac - ditherHalf\n      for (let j = 0; j < 3; j++) {\n        v[j] = 255 * Math.max(Math.min(Math.abs(v[j]) + r, 1.0), 0.0)\n      }\n      return v[0] + (v[1] << 8) + (v[2] << 16)\n    } // direction2rgb()\n    // Determine color: local, global, dps0, dpv0, etc.\n    const fiberColor = this.fiberColor.toLowerCase()\n    let dps: Float32Array | null = null\n    let dpv: ValuesArray[0] | null = null\n    if (fiberColor.startsWith('dps') && this.dps && this.dps.length > 0) {\n      const n = parseInt(fiberColor.substring(3))\n      if (n < this.dps.length && this.dps[n].vals.length === n_count) {\n        dps = this.dps[n].vals\n      }\n    }\n    if (fiberColor.startsWith('dpv') && this.dpv && this.dpv.length > 0) {\n      const n = parseInt(fiberColor.substring(3))\n      if (n < this.dpv.length && this.dpv[n].vals.length === npt) {\n        dpv = this.dpv[n]\n      }\n    }\n    const streamlineVisible = new Int16Array(n_count)\n    // if ((this.dpg !== null) && (this.fiberGroupMask !== null) && (this.fiberGroupMask.length === this.dpg.length)) {\n    if (this.dpg && this.fiberGroupColormap !== null) {\n      const lut = new Uint8ClampedArray(this.dpg.length * 4) // 4 component RGBA for each group\n      const groupVisible = new Array(this.dpg.length).fill(false)\n      const cmap = this.fiberGroupColormap\n      if (cmap.A === undefined) {\n        cmap.A = Array.from(new Uint8ClampedArray(cmap.I.length).fill(255))\n      }\n      for (let i = 0; i < cmap.I.length; i++) {\n        let idx = cmap.I[i]\n        if (idx < 0 || idx >= this.dpg.length) {\n          continue\n        }\n        if (cmap.A[i] < 1) {\n          continue\n        }\n        groupVisible[idx] = true\n        idx *= 4\n        lut[idx] = cmap.R[i]\n        lut[idx + 1] = cmap.G[i]\n        lut[idx + 2] = cmap.B[i]\n        lut[idx + 3] = 255 // opaque\n      }\n      streamlineVisible.fill(-1) // -1 assume streamline not visible\n      for (let i = 0; i < this.dpg.length; i++) {\n        if (!groupVisible[i]) {\n          continue\n        } // this group is not visible\n        for (let v = 0; v < this.dpg[i].vals.length; v++) {\n          streamlineVisible[this.dpg[i].vals[v]] = i\n        }\n      }\n      for (let i = 0; i < n_count; i++) {\n        if (streamlineVisible[i] < 0) {\n          continue\n        } // hidden\n        const color = (streamlineVisible[i] % 256) * 4\n        // let RGBA = lut[color] + (lut[color + 1] << 8) + (lut[color + 2] << 16);\n        const RGBA = rgb2int32(lut[color], lut[color + 1], lut[color + 2])\n        const vStart = offsetPt0[i] // first vertex in streamline\n        const vEnd = offsetPt0[i + 1] - 1 // last vertex in streamline\n        const vStart4 = vStart * 4 + 3 // +3: fill 4th component colors: XYZC = 0123\n        const vEnd4 = vEnd * 4 + 3\n        for (let j = vStart4; j <= vEnd4; j += 4) {\n          posClrU32[j] = RGBA\n        }\n      }\n    } else if (dpv) {\n      // color per vertex\n      const lut = cmapper.colormap(this.colormap as string, this.colormapInvert)\n      const mn = dpv.cal_min\n      const mx = dpv.cal_max\n      let v4 = 3 // +3: fill 4th component colors: XYZC = 0123\n      for (let i = 0; i < npt; i++) {\n        let color = Math.min(Math.max((dpv.vals[i] - mn!) / (mx! - mn!), 0), 1)\n        color = Math.round(Math.max(Math.min(255, color * 255))) * 4\n        const RGBA = lut[color] + (lut[color + 1] << 8) + (lut[color + 2] << 16)\n        posClrU32[v4] = RGBA\n        v4 += 4\n      }\n    } else if (dps) {\n      // color per streamline\n      const lut = cmapper.colormap(this.colormap as string, this.colormapInvert)\n      let mn = dps[0]\n      let mx = dps[0]\n      for (let i = 0; i < n_count; i++) {\n        mn = Math.min(mn, dps[i])\n        mx = Math.max(mx, dps[i])\n      }\n      if (mx === mn) {\n        mn -= 1\n      } // avoid divide by zero\n      for (let i = 0; i < n_count; i++) {\n        let color = (dps[i] - mn) / (mx - mn)\n        color = Math.round(Math.max(Math.min(255, color * 255))) * 4\n        const RGBA = lut[color] + (lut[color + 1] << 8) + (lut[color + 2] << 16)\n        const vStart = offsetPt0[i] // first vertex in streamline\n        const vEnd = offsetPt0[i + 1] - 1 // last vertex in streamline\n        const vStart4 = vStart * 4 + 3 // +3: fill 4th component colors: XYZC = 0123\n        const vEnd4 = vEnd * 4 + 3\n        for (let j = vStart4; j <= vEnd4; j += 4) {\n          posClrU32[j] = RGBA\n        }\n      }\n    } else if (fiberColor.includes('fixed')) {\n      if (dither === 0.0) {\n        const RGBA = this.rgba255[0] + (this.rgba255[1] << 8) + (this.rgba255[2] << 16)\n        let v4 = 3 // +3: fill 4th component colors: XYZC = 0123\n        for (let i = 0; i < npt; i++) {\n          posClrU32[v4] = RGBA\n          v4 += 4\n        }\n      } else {\n        for (let i = 0; i < n_count; i++) {\n          const RGBA = rgb2int32(this.rgba255[0], this.rgba255[1], this.rgba255[2])\n          const vStart = offsetPt0[i] // first vertex in streamline\n          const vEnd = offsetPt0[i + 1] - 1 // last vertex in streamline\n          const vStart4 = vStart * 4 + 3 // +3: fill 4th component colors: XYZC = 0123\n          const vEnd4 = vEnd * 4 + 3\n          for (let j = vStart4; j <= vEnd4; j += 4) {\n            posClrU32[j] = RGBA\n          }\n        }\n      } // else fixed with dither\n    } else if (fiberColor.includes('local')) {\n      for (let i = 0; i < n_count; i++) {\n        // for each streamline\n        const vStart = offsetPt0[i] // first vertex in streamline\n        const vEnd = offsetPt0[i + 1] - 1 // last vertex in streamline\n        let v3 = vStart * 3 // pts have 3 components XYZ\n        const vEnd3 = vEnd * 3\n        const ditherFrac = dither * Math.random() // same dither amount throughout line\n        // for first point, we do not have a prior sample\n        let RGBA = direction2rgb(pts[v3], pts[v3 + 1], pts[v3 + 2], pts[v3 + 4], pts[v3 + 5], pts[v3 + 6], ditherFrac)\n        let v4 = vStart * 4 + 3 // +3: fill 4th component colors: XYZC = 0123\n        while (v3 < vEnd3) {\n          posClrU32[v4] = RGBA\n          v4 += 4 // stride is 4 32-bit values: float32 XYZ and 32-bit rgba\n          v3 += 3 // read next vertex\n          // direction estimated based on previous and next vertex\n          RGBA = direction2rgb(pts[v3 - 3], pts[v3 - 2], pts[v3 - 1], pts[v3 + 3], pts[v3 + 4], pts[v3 + 5], ditherFrac)\n        }\n        posClrU32[v4] = posClrU32[v4 - 4]\n      }\n    } else {\n      // if color is local direction, else global\n      for (let i = 0; i < n_count; i++) {\n        // for each streamline\n        const vStart = offsetPt0[i] // first vertex in streamline\n        const vEnd = offsetPt0[i + 1] - 1 // last vertex in streamline\n        const vStart3 = vStart * 3 // pts have 3 components XYZ\n        const vEnd3 = vEnd * 3\n        const RGBA = direction2rgb(\n          pts[vStart3],\n          pts[vStart3 + 1],\n          pts[vStart3 + 2],\n          pts[vEnd3],\n          pts[vEnd3 + 1],\n          pts[vEnd3 + 2],\n          dither * Math.random()\n        )\n        const vStart4 = vStart * 4 + 3 // +3: fill 4th component colors: XYZC = 0123\n        const vEnd4 = vEnd * 4 + 3\n        for (let j = vStart4; j <= vEnd4; j += 4) {\n          posClrU32[j] = RGBA\n        }\n      }\n    }\n    // SHADING: ambient occlusion\n    if (this.fiberOcclusion > 0) {\n      this.createFiberDensityMap()\n      function shadeRGBA(rgba: number, frac: number): number {\n        const r = frac * (rgba & 0xff)\n        const g = frac * ((rgba >> 8) & 0xff)\n        const b = frac * ((rgba >> 16) & 0xff)\n        return r + (g << 8) + (b << 16)\n      }\n      for (let i = 0; i < n_count; i++) {\n        // for each streamline\n        const vStart = offsetPt0[i] // first vertex in streamline\n        const vEnd = offsetPt0[i + 1] - 1 // last vertex in streamline\n        const vStart4 = vStart * 4 + 3 // +3: fill 4th component colors: XYZC = 0123\n        const vEnd4 = vEnd * 4 + 3\n        let vtx = vStart\n        const bias = Math.min(this.fiberOcclusion, 0.99)\n        for (let j = vStart4; j <= vEnd4; j += 4) {\n          let shade = this.fiberDensity[vtx++]\n          if (shade <= 0) {\n            continue\n          }\n          // Schlick's fast bias function\n          // https://github.com/ayamflow/schlick-curve\n          shade = shade / ((1.0 / bias - 2.0) * (1.0 - shade) + 1.0)\n          const frac = 1 - Math.min(shade, 0.9)\n          // console.log(shade, frac)\n          let RGBA = posClrU32[j]\n          RGBA = shadeRGBA(RGBA, frac)\n          posClrU32[j] = RGBA\n        }\n      }\n    }\n    // INDICES:\n    const min_mm = this.fiberLength\n    //  https://blog.spacepatroldelta.com/a?ID=00950-d878555f-a97a-4e32-9f40-fd9a449cb4fe\n    const primitiveRestart = Math.pow(2, 32) - 1 // for gl.UNSIGNED_INT\n    const indices: number[] = []\n    let stride = -1\n    for (let i = 0; i < n_count; i++) {\n      // let n_pts = offsetPt0[i + 1] - offsetPt0[i]; //if streamline0 starts at point 0 and streamline1 at point 4, then streamline0 has 4 points: 0,1,2,3\n      if (streamlineVisible[i] < 0) {\n        continue\n      }\n      if (this.fiberLengths[i] < min_mm) {\n        continue\n      }\n      stride++\n      if (stride % this.fiberDecimationStride !== 0) {\n        continue\n      } // e.g. if stride is 2 then half culled\n      for (let j = offsetPt0[i]; j < offsetPt0[i + 1]; j++) {\n        indices.push(j)\n      }\n      indices.push(primitiveRestart)\n    }\n    if (this.fiberSides > 2 && this.fiberRadius > 0) {\n      this.linesToCylinders(gl, posClrF32, indices)\n    } else {\n      // copy streamlines to GPU\n      this.indexCount = indices.length\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer)\n      gl.bufferData(gl.ARRAY_BUFFER, Uint32Array.from(posClrU32), gl.STATIC_DRAW)\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer)\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, Uint32Array.from(indices), gl.STATIC_DRAW)\n    }\n  } // updateFibers()\n\n  // given X,Y,Z coordinates in world space, return index of nearest vertex as well as\n  // the distance of this closest vertex to the coordinates\n  indexNearestXYZmm(Xmm: number, Ymm: number, Zmm: number): number[] {\n    const pts = this.pts\n    const nvtx = this.pts.length / 3\n    let i = 0\n    let mnDx = Infinity\n    let mnIdx = 0\n    for (let j = 0; j < nvtx; j++) {\n      const dx = Math.pow(pts[i] - Xmm, 2) + Math.pow(pts[i + 1] - Ymm, 2) + Math.pow(pts[i + 2] - Zmm, 2)\n      if (dx < mnDx) {\n        mnDx = dx\n        mnIdx = j\n      }\n      i += 3\n    }\n    // Pythagorean theorem sqrt(x^2+y^2+z^2)\n    // only calculate sqrt once\n    mnDx = Math.sqrt(mnDx)\n    return [mnIdx, mnDx]\n  } // indexNearestXYZmm()\n\n  // internal function discards GPU resources\n  unloadMesh(gl: WebGL2RenderingContext): void {\n    // free WebGL resources\n    gl.bindBuffer(gl.ARRAY_BUFFER, null)\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n    gl.bindVertexArray(null)\n    gl.deleteBuffer(this.vertexBuffer)\n    gl.deleteBuffer(this.indexBuffer)\n    gl.deleteVertexArray(this.vao)\n    gl.deleteVertexArray(this.vaoFiber)\n    // presumably, if we null the mesh we dereference all the arrays, or do we have to explicitly null arrays\n    this.offsetPt0 = null\n    this.tris = null\n    this.pts = null\n    if (this.layers && this.layers.length > 0) {\n      for (let i = 0; i < this.layers.length; i++) {\n        this.layers[i].values = null\n      }\n    }\n    if (this.dpg && this.dpg.length > 0) {\n      for (let i = 0; i < this.dpg.length; i++) {\n        this.dpg[i].vals = null\n      }\n    }\n    if (this.dps && this.dps.length > 0) {\n      for (let i = 0; i < this.dps.length; i++) {\n        this.dps[i].vals = null\n      }\n    }\n  }\n\n  // apply color lookup table to convert scalar array to RGBA array\n  scalars2RGBA(\n    rgba: Uint8ClampedArray,\n    layer: NVMeshLayer,\n    scalars: AnyNumberArray,\n    isNegativeCmap: boolean = false\n  ): Uint8ClampedArray {\n    const nValues = scalars.length\n    if (4 * nValues < rgba.length) {\n      log.error(`colormap2RGBA incorrectly specified ${nValues}*4 != ${rgba.length}`)\n      return rgba\n    }\n    const opa255 = Math.round(layer.opacity * 255)\n    let mn = layer.cal_min\n    let mx = layer.cal_max\n    let lut = cmapper.colormap(layer.colormap as string, this.colormapInvert)\n    let flip = 1\n    if (isNegativeCmap) {\n      if (!layer.useNegativeCmap) {\n        return rgba\n      }\n      flip = -1\n      lut = cmapper.colormap(layer.colormapNegative, layer.colormapInvert)\n      mn = layer.cal_min\n      mx = layer.cal_max\n      if (isFinite(layer.cal_minNeg) && isFinite(layer.cal_minNeg)) {\n        mn = -layer.cal_minNeg\n        mx = -layer.cal_maxNeg\n      }\n    }\n    let mnCal = mn\n    if (!layer.isTransparentBelowCalMin) {\n      mnCal = Number.NEGATIVE_INFINITY\n    }\n    const isTranslucentBelowMin = layer.colormapType === COLORMAP_TYPE.ZERO_TO_MAX_TRANSLUCENT_BELOW_MIN\n\n    if (layer.colormapType !== COLORMAP_TYPE.MIN_TO_MAX) {\n      mn = Math.min(mn, 0.0)\n    }\n    const scale255 = 255.0 / (mx - mn)\n    for (let j = 0; j < nValues; j++) {\n      let v = scalars[j] * flip\n      if (isNaN(v)) {\n        continue\n      }\n      let opa = opa255\n      if (v < mnCal) {\n        if (v > 0 && isTranslucentBelowMin) {\n          opa = Math.round(layer.opacity * 255 * Math.pow(v / mnCal, 2.0))\n        } else {\n          continue\n        }\n      }\n      v = (v - mn) * scale255\n      if (v < 0 && layer.isTransparentBelowCalMin) {\n        continue\n      }\n      v = Math.min(255, Math.max(0, Math.round(v))) * 4\n      const idx = j * 4\n      rgba[idx + 0] = lut[v + 0]\n      rgba[idx + 1] = lut[v + 1]\n      rgba[idx + 2] = lut[v + 2]\n      rgba[idx + 3] = opa\n    }\n    return rgba\n  }\n\n  blendColormap(\n    u8: Uint8Array,\n    additiveRGBA: Uint8Array,\n    layer: NVMeshLayer,\n    mn: number,\n    mx: number,\n    lut: Uint8ClampedArray,\n    invert: boolean = false\n  ): void {\n    const nvtx = this.pts.length / 3\n    const opacity = Math.min(layer.opacity, 1.0)\n    function lerp(x: number, y: number, a: number): number {\n      // https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/mix.xhtml\n      return x * (1 - a) + y * a\n    }\n    function additiveBlend(x: number, y: number): number {\n      return Math.min(x + y, 255.0)\n    }\n    const scaleFlip = invert ? -1 : 1\n    const frame = Math.min(Math.max(layer.frame4D, 0), layer.nFrame4D - 1)\n    const frameOffset = nvtx * frame\n    let mnCal = mn\n    if (!layer.isTransparentBelowCalMin) {\n      mnCal = Number.NEGATIVE_INFINITY\n    }\n    if (layer.colormapType !== COLORMAP_TYPE.MIN_TO_MAX) {\n      mn = Math.min(mn, 0.0)\n    }\n    const scale255 = 255.0 / (mx - mn)\n    // create border map for optional outline\n    let borders = new Array(nvtx).fill(false)\n    if (layer.outlineBorder !== 0.0) {\n      const v255s = new Uint8Array(nvtx).fill(0)\n      for (let j = 0; j < nvtx; j++) {\n        const v = scaleFlip * layer.values[j + frameOffset]\n        if (v >= mnCal) {\n          v255s[j] = 1\n        }\n      }\n      borders = NVMeshUtilities.getClusterBoundaryU8(v255s, this.tris)\n      for (let j = 0; j < nvtx; j++) {\n        const v = scaleFlip * layer.values[j + frameOffset]\n        if (v < mnCal) {\n          borders[j] = false\n        }\n      }\n    }\n    // create lookup table for translucency\n    const alphas = new Float32Array(256).fill(opacity)\n    if (mnCal > mn && layer.colormapType === COLORMAP_TYPE.ZERO_TO_MAX_TRANSLUCENT_BELOW_MIN) {\n      let minOpaque = Math.round((mnCal - mn) * scale255)\n      minOpaque = Math.max(minOpaque, 1)\n      for (let j = 1; j < minOpaque; j++) {\n        alphas[j] = opacity * Math.pow(j / minOpaque, 2.0)\n      }\n      alphas[0] = 0\n      mnCal = mn + Number.EPSILON\n    }\n    for (let j = 0; j < nvtx; j++) {\n      const v = scaleFlip * layer.values[j + frameOffset]\n      if (v < mnCal) {\n        continue\n      }\n      let v255 = Math.round((v - mn) * scale255)\n      if (v255 < 0 && layer.isTransparentBelowCalMin) {\n        continue\n      }\n      v255 = Math.max(0.0, v255)\n      v255 = Math.min(255.0, v255)\n      let opa = alphas[v255]\n      v255 *= 4\n      let vtx = j * 28 + 24 // posNormClr is 28 bytes stride, RGBA color at offset 24,\n      if (this.f32PerVertex !== 7) {\n        vtx = j * 20 + 16\n      }\n      if (layer.isAdditiveBlend) {\n        const j4 = j * 4\n        // sum red, green and blue layers\n        additiveRGBA[j4 + 0] = additiveBlend(additiveRGBA[j4 + 0], lut[v255 + 0])\n        additiveRGBA[j4 + 1] = additiveBlend(additiveRGBA[j4 + 1], lut[v255 + 1])\n        additiveRGBA[j4 + 2] = additiveBlend(additiveRGBA[j4 + 2], lut[v255 + 2])\n        additiveRGBA[j4 + 3] = additiveBlend(additiveRGBA[j4 + 3], 255.0)\n      } else {\n        if (borders[j]) {\n          opa = layer.outlineBorder\n          if (layer.outlineBorder < 0) {\n            u8[vtx + 0] = 0\n            u8[vtx + 1] = 0\n            u8[vtx + 2] = 0\n            continue\n          }\n        }\n        u8[vtx + 0] = lerp(u8[vtx + 0], lut[v255 + 0], opa)\n        u8[vtx + 1] = lerp(u8[vtx + 1], lut[v255 + 1], opa)\n        u8[vtx + 2] = lerp(u8[vtx + 2], lut[v255 + 2], opa)\n      }\n    }\n  } // blendColormap()\n\n  // internal function filters mesh to identify which color of triangulated mesh vertices\n  updateMesh(gl: WebGL2RenderingContext): void {\n    if (this.offsetPt0) {\n      this.updateFibers(gl)\n      return // fiber not mesh\n    }\n    if (this.hasConnectome) {\n      // this.updateConnectome(gl)\n      return // connectome not mesh\n    }\n    if (!this.pts || !this.tris || !this.rgba255) {\n      log.warn('underspecified mesh')\n      return\n    }\n    function lerp(x: number, y: number, a: number): number {\n      // https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/mix.xhtml\n      return x * (1 - a) + y * a\n    }\n    const posNormClr = this.generatePosNormClr(this.pts, this.tris, this.rgba255)\n    const nvtx = this.pts.length / 3\n    const u8 = new Uint8Array(posNormClr.buffer) // Each vertex has 7 components: PositionXYZ, NormalXYZ, RGBA32\n    // create emission values\n    // let posNormClrEmission = posNormClr.slice();\n    let maxAdditiveBlend = 0\n    const additiveRGBA = new Uint8Array(nvtx * 4) // emission\n    let tris = this.tris\n    if (this.layers && this.layers.length > 0) {\n      for (let i = 0; i < this.layers.length; i++) {\n        const layer = this.layers[i]\n        const opacity = layer.opacity\n        if (opacity <= 0.0 || layer.cal_min > layer.cal_max) {\n          continue\n        }\n        if (layer.outlineBorder === undefined) {\n          layer.outlineBorder = 0\n        }\n        if (layer.isAdditiveBlend === undefined) {\n          layer.isAdditiveBlend = false\n        }\n        // build a label colormap\n        if (layer.colormapLabel && (layer.colormapLabel as ColorMap).R && !(layer.colormapLabel as LUT).lut) {\n          // convert colormap JSON to RGBA LUT\n          layer.colormapLabel = cmapper.makeLabelLut(layer.colormapLabel as ColorMap)\n        }\n        if (layer.colormapLabel && (layer.colormapLabel as LUT).lut) {\n          const colormapLabel = layer.colormapLabel as LUT\n          let minv = 0\n          if (layer.colormapLabel.min) {\n            minv = layer.colormapLabel.min\n          }\n          let lut = colormapLabel.lut\n          const opa255 = Math.round(layer.opacity * 255)\n          if (lut[3] > 0) {\n            lut[3] = opa255\n          }\n          for (let j = 7; j < lut.length; j += 4) {\n            lut[j] = opa255\n          }\n          const nLabel = Math.floor(lut.length / 4)\n          if (layer.atlasValues && nLabel > 0 && nLabel === layer.atlasValues.length && layer.colormap) {\n            const atlasValues = layer.atlasValues\n            let hasNaN = false\n            let onlyNaN = true\n            for (let j = 0; j < nLabel; j++) {\n              if (isNaN(atlasValues[j])) {\n                hasNaN = true\n              } else {\n                onlyNaN = false\n              }\n            }\n            if (onlyNaN) {\n              log.debug(`invisible mesh: all atlasValues are NaN.`)\n              return\n            }\n            if (hasNaN) {\n              log.debug(`some vertices have NaN atlasValues (mesh will be decimated).`)\n              // First: identify all vertices mapped to NaN\n              const nanVtxs = new Array(nvtx).fill(false)\n              for (let j = 0; j < nvtx; j++) {\n                const v = Math.round(layer.values[j]) - minv\n                if (isNaN(atlasValues[v])) {\n                  nanVtxs[j] = true\n                }\n              }\n\n              // next: find all triangle indices that have NaN vertices\n              const nanIdxs = new Array(tris.length).fill(false)\n              for (let j = 0; j < tris.length; j++) {\n                if (nanVtxs[tris[j]]) {\n                  nanIdxs[j] = true\n                }\n              }\n              // each triangle has 3 indices\n              const trisIn = this.tris\n              let nTriOK = 0\n              for (let j = 0; j < trisIn.length; j += 3) {\n                if (!nanIdxs[j] && !nanIdxs[j + 1] && !nanIdxs[j + 2]) {\n                  nTriOK++\n                }\n              }\n              if (nTriOK === 0) {\n                log.debug(`invisible mesh: all triangles of a vertex with a NaN atlasValue.`)\n              }\n              tris = new Uint32Array(nTriOK * 3)\n              let k = 0\n              for (let j = 0; j < trisIn.length; j += 3) {\n                if (!nanIdxs[j] && !nanIdxs[j + 1] && !nanIdxs[j + 2]) {\n                  tris[k++] = trisIn[j]\n                  tris[k++] = trisIn[j + 1]\n                  tris[k++] = trisIn[j + 2]\n                }\n              }\n            }\n            lut.fill(0) // make all transparent\n            lut = this.scalars2RGBA(lut, layer, atlasValues)\n            if (layer.useNegativeCmap) {\n              lut = this.scalars2RGBA(lut, layer, atlasValues, true)\n            }\n          } else if (layer.atlasValues) {\n            log.warn(`Expected ${nLabel} atlasValues but got ${layer.atlasValues.length} for mesh layer`)\n          }\n          // create labels for legend\n          if (layer.showLegend && nLabel === layer.colormapLabel.labels.length) {\n            layer.labels = []\n            for (let j = 0; j < nLabel; j++) {\n              const rgba = Array.from(lut.slice(j * 4, j * 4 + 4)).map((v) => v / 255)\n              const labelName = layer.colormapLabel.labels[j]\n              if (\n                rgba[3] === 0 ||\n                !labelName || // handles empty string, null, undefined\n                labelName.startsWith('_')\n              ) {\n                continue\n              }\n              rgba[3] = 1\n              const label = new NVLabel3D(labelName, {\n                textColor: rgba,\n                bulletScale: 1,\n                bulletColor: rgba,\n                lineWidth: 0,\n                lineColor: rgba,\n                textScale: 1.0,\n                textAlignment: LabelTextAlignment.LEFT,\n                lineTerminator: LabelLineTerminator.NONE\n              })\n              layer.labels.push(label)\n              log.debug('label for mesh layer:', label)\n            } // for each label\n          } else {\n            delete layer.labels\n          }\n          const frame = Math.min(Math.max(layer.frame4D, 0), layer.nFrame4D - 1)\n          const frameOffset = nvtx * frame\n          const rgba8 = new Uint8Array(nvtx * 4)\n          let k = 0\n          for (let j = 0; j < nvtx; j++) {\n            // eslint-disable-next-line\n            const v = layer.values[j + frameOffset] - minv\n            const idx = 4 * Math.min(Math.max(v, 0), nLabel - 1)\n            rgba8[k + 0] = lut[idx + 0]\n            rgba8[k + 1] = lut[idx + 1]\n            rgba8[k + 2] = lut[idx + 2]\n            rgba8[k + 3] = lut[idx + 3]\n            k += 4\n          }\n          let opaque = new Array(nvtx).fill(false)\n          if (layer.outlineBorder !== 0.0) {\n            opaque = NVMeshUtilities.getClusterBoundary(rgba8, this.tris)\n          }\n          k = 0\n          for (let j = 0; j < nvtx; j++) {\n            let vtx = j * 28 + 24 // posNormClr is 28 bytes stride, RGBA color at offset 24,\n            if (this.f32PerVertex !== 7) {\n              vtx = j * 20 + 16\n            }\n            let opa = rgba8[k + 3] / 255\n            if (opaque[j]) {\n              opa = layer.outlineBorder\n              if (layer.outlineBorder < 0) {\n                u8[vtx + 0] = 0\n                u8[vtx + 1] = 0\n                u8[vtx + 2] = 0\n                k += 4\n                continue\n              }\n            }\n            u8[vtx + 0] = lerp(u8[vtx + 0], rgba8[k + 0], opa)\n            u8[vtx + 1] = lerp(u8[vtx + 1], rgba8[k + 1], opa)\n            u8[vtx + 2] = lerp(u8[vtx + 2], rgba8[k + 2], opa)\n            k += 4\n          } // for each vertex\n          continue\n        } // if colormapLabel\n        if (layer.values instanceof Uint8Array) {\n          const rgba8 = new Uint8Array(layer.values.buffer)\n          let opaque = new Array(nvtx).fill(true)\n          if (layer.outlineBorder !== 0) {\n            opaque = NVMeshUtilities.getClusterBoundary(rgba8, this.tris)\n          }\n          let k = 0\n          for (let j = 0; j < layer.values.length; j++) {\n            let vtx = j * 28 + 24 // posNormClr is 28 bytes stride, RGBA color at offset 24,\n            if (this.f32PerVertex !== 7) {\n              vtx = j * 20 + 16\n            }\n            let opa = opacity\n            if (opaque[j]) {\n              opa = layer.outlineBorder\n              if (layer.outlineBorder < 0) {\n                u8[vtx + 0] = 0\n                u8[vtx + 1] = 0\n                u8[vtx + 2] = 0\n                k += 4\n                continue\n              }\n            }\n            u8[vtx + 0] = lerp(u8[vtx + 0], rgba8[k + 0], opa)\n            u8[vtx + 1] = lerp(u8[vtx + 1], rgba8[k + 1], opa)\n            u8[vtx + 2] = lerp(u8[vtx + 2], rgba8[k + 2], opa)\n            k += 4\n          }\n          continue\n        }\n        if (layer.useNegativeCmap) {\n          layer.cal_min = Math.max(Number.EPSILON, layer.cal_min)\n          layer.cal_max = Math.max(layer.cal_min + 0.000001, layer.cal_max)\n        }\n        if (layer.isTransparentBelowCalMin === undefined) {\n          layer.isTransparentBelowCalMin = true\n        }\n        const lut = cmapper.colormap(layer.colormap, layer.colormapInvert)\n        if (layer.isAdditiveBlend) {\n          maxAdditiveBlend++\n        }\n        this.blendColormap(u8, additiveRGBA, layer, layer.cal_min, layer.cal_max, lut)\n        if (layer.useNegativeCmap) {\n          const neglut = cmapper.colormap(layer.colormapNegative, layer.colormapInvert)\n          let mn = layer.cal_min\n          let mx = layer.cal_max\n          if (isFinite(layer.cal_minNeg) && isFinite(layer.cal_minNeg)) {\n            mn = -layer.cal_minNeg\n            mx = -layer.cal_maxNeg\n          }\n          this.blendColormap(u8, additiveRGBA, layer, mn, mx, neglut, true)\n        }\n      }\n    }\n    if (maxAdditiveBlend > 0) {\n      for (let j = 0; j < nvtx; j++) {\n        let vtx = j * 28 + 24 // posNormClr is 28 bytes stride, RGBA color at offset 24,\n        if (this.f32PerVertex !== 7) {\n          vtx = j * 20 + 16\n        }\n        const v = j * 4 // additiveRGBA is 4 bytes stride, RGBA color at offset 0,\n        const opacity = Math.min(maxAdditiveBlend, additiveRGBA[v + 3] / 255)\n        if (opacity <= 0) {\n          continue\n        }\n        function modulate(x: number, y: number): number {\n          return Math.min(x * y * (1 / 255), 255.0)\n        }\n        u8[vtx + 0] = modulate(u8[vtx + 0], additiveRGBA[v + 0])\n        u8[vtx + 1] = modulate(u8[vtx + 1], additiveRGBA[v + 1])\n        u8[vtx + 2] = modulate(u8[vtx + 2], additiveRGBA[v + 2])\n        u8[vtx + 0] = lerp(u8[vtx + 0], additiveRGBA[v + 0], opacity)\n        u8[vtx + 1] = lerp(u8[vtx + 1], additiveRGBA[v + 1], opacity)\n        u8[vtx + 2] = lerp(u8[vtx + 2], additiveRGBA[v + 2], opacity)\n      }\n    } // isAdditiveBlend\n    // generate webGL buffers and vao\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, Uint32Array.from(tris), gl.STATIC_DRAW)\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer)\n    // issue1129\n    // gl.bufferData(gl.ARRAY_BUFFER, Float32Array.from(posNormClr), gl.STATIC_DRAW)\n    gl.bufferData(gl.ARRAY_BUFFER, u8, gl.STATIC_DRAW)\n    this.indexCount = tris.length\n    this.vertexCount = this.pts.length\n  } // updateMesh()\n\n  // internal function filters mesh to identify which color of triangulated mesh vertices\n  reverseFaces(gl: WebGL2RenderingContext): void {\n    if (this.offsetPt0) {\n      return\n    } // fiber not mesh\n    if (this.hasConnectome) {\n      return\n    } // connectome not mesh\n    const tris = this.tris || [] // TODO tris should probably be assigned in the constructor\n    for (let j = 0; j < tris.length; j += 3) {\n      const tri = tris[j]\n      tris[j] = tris[j + 1]\n      tris[j + 1] = tri\n    }\n    this.updateMesh(gl) // apply the new properties...\n  }\n\n  hierarchicalOrder(): number {\n    const V0 = 12\n    const F0 = 20\n    const nF = this.tris.length / 3\n    const order = Math.log(nF / F0) / Math.log(4)\n    // Sanity checks\n    if (nF !== Math.pow(4, order) * F0) {\n      return NaN\n    }\n    const nV = this.pts.length / 3\n    if (nV !== Math.pow(4, order) * (V0 - 2) + 2) {\n      return NaN\n    }\n    // next checks are in case FreeSurfer was optimized with more local face indices\n    // for an example see BrainMesh_ICBM152.lh.mz3\n    for (let i = 0; i < 15; i += 3) {\n      if (this.tris[i] !== 0) {\n        return NaN\n      }\n    }\n    for (let i = 15; i < 24; i += 3) {\n      if (this.tris[i] !== 3) {\n        return NaN\n      }\n    }\n    for (let i = 24; i < 30; i += 3) {\n      if (this.tris[i] !== 4) {\n        return NaN\n      }\n    }\n    return order\n  }\n\n  decimateFaces(n: number, ntarget: number): void {\n    let fac = this.tris\n    // Constants for the icosahedron\n    const V0 = 12\n    const F0 = 20\n    for (let j = n - 1; j >= ntarget; j--) {\n      const nVjprev = Math.pow(4, j + 1) * (V0 - 2) + 2\n      const nVj = Math.pow(4, j) * (V0 - 2) + 2\n      const nFjprev = fac.length / 3 // = 4^(j+1)*F0\n      const nFj = Math.pow(4, j) * F0\n\n      console.log(`order ${j + 1} -> ${j} vertices ${nVjprev} -> ${nVj} faces ${nFjprev} -> ${nFj}`)\n\n      const remap = Array.from({ length: nVjprev }, (_, i) => i + 1)\n\n      for (let i = 0; i < nFjprev; i++) {\n        const v1 = fac[3 * i]\n        const v2 = fac[3 * i + 1]\n        const v3 = fac[3 * i + 2]\n        remap[v1 - 1] = Math.min(remap[v1 - 1], v2, v3)\n      }\n\n      const facJ = new Uint32Array(nFj * 3)\n      for (let i = 0; i < nFj; i++) {\n        facJ[3 * i] = remap[fac[3 * i] - 1]\n        facJ[3 * i + 1] = remap[fac[3 * i + 1] - 1]\n        facJ[3 * i + 2] = remap[fac[3 * i + 2] - 1]\n      }\n      fac = facJ\n    }\n    this.tris = new Uint32Array(fac)\n  }\n\n  // internal function simplifies FreeSurfer triangulated mesh and overlays\n  decimateHierarchicalMesh(gl: WebGL2RenderingContext, order: number = 4): boolean {\n    const inputOrder = this.hierarchicalOrder()\n    if (isNaN(inputOrder)) {\n      log.warn('Unable to decimate mesh: it does not have a hierarchical structure')\n      return false\n    }\n    if (order >= inputOrder) {\n      log.warn(`Unable to decimate mesh: input order (${inputOrder}) must be larger than downsampled order (${order})`)\n      return false\n    }\n    const inputVLength = this.pts.length / 3\n    const V0 = 12\n    const nV = Math.pow(4, order) * (V0 - 2) + 2\n    this.pts = new Float32Array(this.pts.slice(0, nV * 3))\n    this.decimateFaces(inputOrder, order)\n    if (this.layers && this.layers.length > 0) {\n      for (let i = 0; i < this.layers.length; i++) {\n        const layer = this.layers[i]\n        if (layer.values instanceof Float32Array || layer.values.length !== inputVLength) {\n          layer.values = new Float32Array(layer.values.slice(0, nV))\n        } else {\n          log.warn(`decimation logic needs to be updated`)\n        }\n      }\n    }\n    this.updateMesh(gl) // apply the new properties...\n    return true\n  }\n\n  // adjust attributes of a mesh layer. invoked by niivue.setMeshLayerProperty()\n  // TODO this method is a bit too generic\n  async setLayerProperty(\n    id: number,\n    key: keyof NVMeshLayer,\n    val: number | string | boolean,\n    gl: WebGL2RenderingContext\n  ): Promise<void> {\n    const layer = this.layers[id]\n    if (!layer || !(key in layer)) {\n      log.warn('mesh does not have property ', key, ' for layer ', layer)\n      return\n    }\n    if (key === 'colormapLabel') {\n      if (typeof val === 'object') {\n        // assume JSON\n        layer[key] = cmapper.makeLabelLut(val)\n      } else if (typeof val === 'string') {\n        // assume URL\n        const cmap = await cmapper.makeLabelLutFromUrl(val)\n        layer[key] = cmap\n        this.updateMesh(gl) // apply the new properties...\n        return\n      } else {\n        log.error('colormapLabel requires a string or object')\n      }\n    } else {\n      // @ts-expect-error TODO generic property access\n      layer[key] = val\n    }\n    this.updateMesh(gl) // apply the new properties...\n  }\n\n  // adjust mesh attributes. invoked by niivue.setMeshProperty(()\n  // TODO this method is too generic\n  setProperty(\n    key: keyof this,\n    val: number | string | boolean | Uint8Array | number[] | ColorMap | LegacyConnectome | Float32Array,\n    gl: WebGL2RenderingContext\n  ): void {\n    if (!(key in this)) {\n      console.warn('Mesh does not have property:', key, this)\n      return\n    }\n    /* if (typeof val !== 'number' && typeof val !== 'string' && typeof val !== 'boolean' && !Array.isArray(val)) {\n      console.warn('Invalid value type. Expected number, numbers, string, or boolean but received:', typeof val)\n      return\n    } */\n    ;(this as any)[key] = val // TypeScript safety workaround\n    this.updateMesh(gl) // Apply the new properties\n  }\n\n  // Each streamline vertex has color, normal and position attributes\n  // Interleaved Vertex Data https://developer.apple.com/library/archive/documentation/3DDrawing/Conceptual/OpenGLES_ProgrammingGuide/TechniquesforWorkingwithVertexData/TechniquesforWorkingwithVertexData.html\n  generatePosNormClr(pts: Float32Array, tris: Uint32Array, rgba255: Uint8Array): Float32Array {\n    if (pts.length < 3 || rgba255.length < 4) {\n      log.error('Catastrophic failure generatePosNormClr()')\n      log.debug('this', this)\n      log.debug('pts', pts)\n      log.debug('rgba', rgba255)\n    }\n    const norms = NVMeshUtilities.generateNormals(pts, tris)\n    const npt = pts.length / 3\n    const isPerVertexColors = npt === rgba255.length / 4\n    // n32\n    const f32PerVertex = this.f32PerVertex // 7 if NormalXYZ is 3 floats, 5 if normalXYZ is packed into rgb32\n    const f32 = new Float32Array(npt * f32PerVertex) // Each vertex has 7 components: PositionXYZ, NormalXYZ, RGBA32\n    const u8 = new Uint8Array(f32.buffer) // Each vertex has 7 components: PositionXYZ, NormalXYZ, RGBA32\n    let p = 0 // input position\n    let c = 0 // input color\n    let f = 0 // output float32 location (position and normals)\n    let u = (f32PerVertex - 1) * 4 // output uint8 location (colors), offset 24 as after 3*position+3*normal\n    for (let i = 0; i < npt; i++) {\n      f32[f + 0] = pts[p + 0]\n      f32[f + 1] = pts[p + 1]\n      f32[f + 2] = pts[p + 2]\n      if (f32PerVertex !== 7) {\n        u8[u - 4] = norms[p + 0] * 127\n        u8[u - 3] = norms[p + 1] * 127\n        u8[u - 2] = norms[p + 2] * 127\n      } else {\n        f32[f + 3] = norms[p + 0]\n        f32[f + 4] = norms[p + 1]\n        f32[f + 5] = norms[p + 2]\n      }\n      u8[u] = rgba255[c + 0]\n      u8[u + 1] = rgba255[c + 1]\n      u8[u + 2] = rgba255[c + 2]\n      u8[u + 3] = rgba255[c + 3]\n      if (isPerVertexColors) {\n        c += 4\n      }\n      p += 3 // read 3 input components: XYZ\n      f += f32PerVertex // write 7 output components: 3*Position, 3*Normal, 1*RGBA\n      u += f32PerVertex * 4 // stride of 28 bytes\n    }\n    return f32\n  }\n\n  // wrapper to read meshes, tractograms and connectomes regardless of format\n  static async readMesh(\n    buffer: ArrayBuffer,\n    name: string,\n    gl: WebGL2RenderingContext,\n    opacity = 1.0,\n    rgba255 = new Uint8Array([255, 255, 255, 255]),\n    visible = true\n  ): Promise<NVMesh> {\n    let tris: Uint32Array = new Uint32Array([])\n    let pts: Float32Array = new Float32Array([])\n    let anatomicalStructurePrimary = ''\n    let obj: TCK | TRACT | TT | TRX | TRK | GII | MZ3 | X3D | VTK | DefaultMeshType\n    const re = /(?:\\.([^.]+))?$/\n    let ext = re.exec(name)![1]\n    ext = ext.toUpperCase()\n    if (ext === 'GZ') {\n      ext = re.exec(name.slice(0, -3))![1] // img.trk.gz -> img.trk\n      ext = ext.toUpperCase()\n    }\n    if (ext === 'JCON') {\n      // return NVMesh.loadConnectomeFromJSON(JSON.parse(new TextDecoder().decode(buffer)), gl, name, opacity)\n      log.error('you should never see this message: load using nvconnectome not nvmesh')\n    }\n    if (ext === 'JSON') {\n      // return NVMesh.loadConnectomeFromFreeSurfer(JSON.parse(new TextDecoder().decode(buffer)), gl, name, opacity)\n      log.error('you should never see this message: load using nvconnectome not nvmesh')\n    }\n    rgba255[3] = Math.max(1, rgba255[3])\n    if (ext === 'TCK' || ext === 'TRK' || ext === 'TT' || ext === 'TRX' || ext === 'TRACT') {\n      if (ext === 'TCK') {\n        obj = NVMeshLoaders.readTCK(buffer)\n      } else if (ext === 'TRACT') {\n        obj = NVMeshLoaders.readTRACT(buffer)\n      } else if (ext === 'TT') {\n        obj = await NVMeshLoaders.readTT(buffer)\n      } else if (ext === 'TRX') {\n        obj = await NVMeshLoaders.readTRX(buffer)\n      } else {\n        obj = await NVMeshLoaders.readTRK(buffer)\n      }\n      if (typeof obj === 'undefined') {\n        const pts = new Float32Array([0, 0, 0, 0, 0, 0])\n        const offsetPt0 = new Uint32Array([0])\n        obj = { pts, offsetPt0 }\n        log.error('Creating empty tracts')\n      }\n      rgba255[3] = 0.0\n      return new NVMesh(\n        obj.pts,\n        obj.offsetPt0,\n        name,\n        rgba255, // colormap,\n        opacity, // opacity,\n        visible, // visible,\n        gl,\n        'inferno',\n        (obj as TRX).dpg || null,\n        (obj as TRX).dps || null,\n        (obj as TRX).dpv || null\n      )\n    } // is fibers\n    if (ext === 'GII') {\n      obj = await NVMeshLoaders.readGII(buffer)\n    } else if (ext === 'MZ3') {\n      obj = await NVMeshLoaders.readMZ3(buffer)\n      if (!('positions' in obj)) {\n        log.warn('MZ3 does not have positions (statistical overlay?)')\n      }\n    } else if (ext === 'ASC') {\n      obj = NVMeshLoaders.readASC(buffer)\n    } else if (ext === 'DFS') {\n      obj = NVMeshLoaders.readDFS(buffer)\n    } else if (ext === 'BYU' || ext === 'G') {\n      obj = NVMeshLoaders.readGEO(buffer)\n    } else if (ext === 'GEO') {\n      obj = NVMeshLoaders.readGEO(buffer, true)\n    } else if (ext === 'ICO' || ext === 'TRI') {\n      obj = NVMeshLoaders.readICO(buffer)\n    } else if (ext === 'OFF') {\n      obj = NVMeshLoaders.readOFF(buffer)\n    } else if (ext === 'NV') {\n      obj = NVMeshLoaders.readNV(buffer)\n    } else if (ext === 'OBJ') {\n      obj = await NVMeshLoaders.readOBJ(buffer)\n    } else if (ext === 'PLY') {\n      obj = NVMeshLoaders.readPLY(buffer)\n    } else if (ext === 'WRL') {\n      obj = NVMeshLoaders.readWRL(buffer)\n    } else if (ext === 'X3D') {\n      obj = NVMeshLoaders.readX3D(buffer)\n    } else if (ext === 'FIB' || ext === 'VTK') {\n      obj = NVMeshLoaders.readVTK(buffer)\n      if ('offsetPt0' in obj) {\n        // VTK files used both for meshes and streamlines\n        rgba255[3] = 0.0\n        return new NVMesh(\n          obj.pts,\n          obj.offsetPt0,\n          name,\n          rgba255, // colormap,\n          opacity, // opacity,\n          visible, // visible,\n          gl,\n          'inferno'\n        )\n      } // if streamlines, not mesh\n    } else if (ext === 'SRF') {\n      obj = await NVMeshLoaders.readSRF(buffer)\n    } else if (ext === 'STL') {\n      obj = NVMeshLoaders.readSTL(buffer)\n    } else {\n      obj = NVMeshLoaders.readFreeSurfer(buffer)\n    } // freesurfer hail mary\n    if ((obj as GII).anatomicalStructurePrimary) {\n      anatomicalStructurePrimary = (obj as GII).anatomicalStructurePrimary\n    }\n    if (obj instanceof Float32Array) {\n      throw new Error('fatal: unknown mesh type loaded')\n    }\n\n    if (!('positions' in obj)) {\n      throw new Error('positions not loaded')\n    }\n    if (!obj.indices) {\n      throw new Error('indices not loaded')\n    }\n\n    pts = obj.positions\n    tris = obj.indices\n\n    if ('rgba255' in obj && obj.rgba255.length > 0) {\n      // e.g. x3D format\n      // rgba255 = Array.from(obj.rgba255)\n      rgba255 = obj.rgba255\n    }\n    if ('colors' in obj && obj.colors && obj.colors.length === pts.length) {\n      const n = pts.length / 3\n      rgba255 = new Uint8Array(n * 4)\n      let c = 0\n      let k = 0\n      for (let i = 0; i < n; i++) {\n        // convert ThreeJS unit RGB to RGBA255\n        rgba255[k++] = obj.colors[c] * 255 // red\n        rgba255[k++] = obj.colors[c + 1] * 255 // green\n        rgba255[k++] = obj.colors[c + 2] * 255 // blue\n        rgba255[k++] = 255 // alpha\n        c += 3\n      } // for i: each vertex\n    } // obj includes colors\n    const npt = pts.length / 3\n    const ntri = tris.length / 3\n    if (ntri < 1 || npt < 3) {\n      throw new Error('Mesh should have at least one triangle and three vertices')\n    }\n    rgba255[3] = Math.max(1, rgba255[3]) // mesh not streamline\n    const nvm = new NVMesh(\n      pts,\n      tris,\n      name,\n      rgba255, // colormap,\n      opacity, // opacity,\n      visible, // visible,\n      gl,\n      null, // connectome\n      null, // dpg\n      null, // dps\n      null, // dpv\n      true, // colorbarVisible\n      anatomicalStructurePrimary\n    )\n    if ('scalars' in obj && obj.scalars.length > 0) {\n      const newLayer = await NVMeshLoaders.readLayer(name, buffer, nvm, opacity, 'gray')\n      if (typeof newLayer === 'undefined') {\n        log.warn('readLayer() failed to convert scalars')\n      } else {\n        nvm.layers.push(newLayer)\n        nvm.updateMesh(gl)\n      }\n    }\n    return nvm\n  }\n\n  static async loadLayer(layer: NVMeshLayer, nvmesh: NVMesh): Promise<void> {\n    let buffer = new Uint8Array().buffer\n\n    function base64ToArrayBuffer(base64: string): ArrayBuffer {\n      const binary_string = window.atob(base64)\n      const len = binary_string.length\n      const bytes = new Uint8Array(len)\n      for (let i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i)\n      }\n      return bytes.buffer\n    }\n\n    if (layer.base64 !== undefined) {\n      // populate buffer with base64 if exists\n      buffer = base64ToArrayBuffer(layer.base64)\n    } else {\n      if (!layer.url) {\n        throw new Error('layer: missing url')\n      }\n      // fetch url otherwise\n      const response = await fetch(layer.url, { headers: layer.headers })\n      if (!response.ok) {\n        throw Error(response.statusText)\n      }\n      buffer = await response.arrayBuffer()\n    }\n\n    let layerName: string\n    let urlParts: string[] = []\n    if (layer.name && layer.name !== '') {\n      layerName = layer.name\n    } else {\n      if (!layer.url) {\n        throw new Error('layer: missing url')\n      }\n      // urlParts = layer.url.split(\"/\");\n      // layerName = urlParts.slice(-1)[0];\n      try {\n        // if a full url like https://domain/path/file.nii.gz?query=filter\n        // parse the url and get the pathname component without the query\n        urlParts = new URL(layer.url).pathname.split('/')\n      } catch (e) {\n        // if a relative url then parse the path (assuming no query)\n        urlParts = layer.url.split('/')\n      } finally {\n        layerName = urlParts.slice(-1)[0]\n      }\n    }\n    if (layerName.indexOf('?') > -1) {\n      layerName = layerName.slice(0, layerName.indexOf('?')) // remove query string if any\n    }\n\n    let opacity = 0.5\n    if ('opacity' in layer) {\n      opacity = layer.opacity\n    }\n    let colormap = 'warm'\n    if ('colormap' in layer) {\n      colormap = layer.colormap!\n    }\n    let colormapNegative = 'winter'\n    if ('colormapNegative' in layer) {\n      colormapNegative = layer.colormapNegative!\n    }\n    let useNegativeCmap = false\n    if ('useNegativeCmap' in layer) {\n      useNegativeCmap = layer.useNegativeCmap!\n    }\n    let cal_min: number | null = null\n    if ('cal_min' in layer) {\n      cal_min = layer.cal_min\n    }\n    let cal_max: number | null = null\n    if ('cal_max' in layer) {\n      cal_max = layer.cal_max\n    }\n\n    const newLayer = await NVMeshLoaders.readLayer(\n      layerName,\n      buffer,\n      nvmesh,\n      opacity,\n      colormap,\n      colormapNegative,\n      useNegativeCmap,\n      cal_min,\n      cal_max\n    )\n    if (newLayer) {\n      nvmesh.layers.push(newLayer)\n    }\n  }\n\n  /**\n   * factory function to load and return a new NVMesh instance from a given URL\n   */\n  static async loadFromUrl({\n    url = '',\n    headers = {},\n    gl,\n    name = '',\n    opacity = 1.0,\n    rgba255 = [255, 255, 255, 255],\n    visible = true,\n    layers = [],\n    buffer = new ArrayBuffer(0)\n  }: Partial<LoadFromUrlParams> = {}): Promise<NVMesh> {\n    let urlParts = url.split('/') // split url parts at slash\n    if (name === '') {\n      try {\n        // if a full url like https://domain/path/file.nii.gz?query=filter\n        // parse the url and get the pathname component without the query\n        urlParts = new URL(url).pathname.split('/')\n      } catch (e) {\n        // if a relative url then parse the path (assuming no query)\n        urlParts = url.split('/')\n      }\n      name = urlParts.slice(-1)[0] // name will be last part of url (e.g. some/url/image.nii.gz --> image.nii.gz\n      if (name.indexOf('?') > -1) {\n        name = name.slice(0, name.indexOf('?')) // remove query string if any\n      }\n    }\n    if (url === '') {\n      throw Error('url must not be empty')\n    }\n    if (!gl) {\n      throw Error('gl context is null')\n    }\n    let buff\n    if (buffer.byteLength > 0) {\n      buff = buffer\n    } else {\n      // TRX format is special (its a zip archive of multiple files)\n      const response = await fetch(url, { headers })\n      if (!response.ok) {\n        throw Error(response.statusText)\n      }\n      buff = await response.arrayBuffer()\n    }\n    const nvmesh = await this.readMesh(buff, name, gl, opacity, new Uint8Array(rgba255), visible)\n\n    if (!layers || layers.length < 1) {\n      return nvmesh\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n      await NVMesh.loadLayer(layers[i], nvmesh)\n    }\n\n    // apply the new properties\n    nvmesh.updateMesh(gl)\n    return nvmesh\n  }\n\n  // not included in public docs\n  // loading Nifti files\n  static async readFileAsync(file: Blob): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n\n      reader.onload = (): void => {\n        resolve(reader.result as ArrayBuffer)\n      }\n\n      reader.onerror = reject\n\n      reader.readAsArrayBuffer(file)\n    })\n  }\n\n  /**\n   * factory function to load and return a new NVMesh instance from a file in the browser\n   *\n   * @returns NVMesh instance\n   */\n  static async loadFromFile({\n    file,\n    gl,\n    name = '',\n    opacity = 1.0,\n    rgba255 = [255, 255, 255, 255],\n    visible = true,\n    layers = []\n  }: Partial<LoadFromFileParams> = {}): Promise<NVMesh> {\n    if (!file) {\n      throw new Error('file must be set')\n    }\n    if (!gl) {\n      throw new Error('rendering context must be set')\n    }\n\n    const buffer = await NVMesh.readFileAsync(file)\n    const nvmesh = await NVMesh.readMesh(buffer, name, gl, opacity, new Uint8Array(rgba255), visible)\n\n    if (!layers || layers.length < 1) {\n      return nvmesh\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n      await NVMesh.loadLayer(layers[i], nvmesh)\n    }\n\n    // apply the new properties\n    nvmesh.updateMesh(gl)\n    return nvmesh\n  }\n\n  /**\n   * load and return a new NVMesh instance from a base64 encoded string\n   */\n  async loadFromBase64({\n    base64,\n    gl,\n    name = '',\n    opacity = 1.0,\n    rgba255 = [255, 255, 255, 255],\n    visible = true,\n    layers = []\n  }: Partial<LoadFromBase64Params> = {}): Promise<NVMesh> {\n    if (!base64) {\n      throw new Error('base64 must bet set')\n    }\n    if (!gl) {\n      throw new Error('rendering context must be set')\n    }\n\n    // https://stackoverflow.com/questions/21797299/convert-base64-string-to-arraybuffer\n    function base64ToArrayBuffer(base64: string): ArrayBuffer {\n      const binary_string = window.atob(base64)\n      const len = binary_string.length\n      const bytes = new Uint8Array(len)\n      for (let i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i)\n      }\n      return bytes.buffer\n    }\n\n    const buffer = base64ToArrayBuffer(base64)\n    const nvmesh = await NVMesh.readMesh(buffer, name, gl, opacity, new Uint8Array(rgba255), visible)\n\n    if (!layers || layers.length < 1) {\n      return nvmesh\n    }\n    for (let i = 0; i < layers.length; i++) {\n      await NVMesh.loadLayer(layers[i], nvmesh)\n    }\n\n    // apply new properties\n    nvmesh.updateMesh(gl)\n    return nvmesh\n  }\n}\n","{\n  \"atlas\": {\n    \"type\": \"msdf\",\n    \"distanceRange\": 2,\n    \"size\": 59.65625,\n    \"width\": 512,\n    \"height\": 256,\n    \"yOrigin\": \"bottom\"\n  },\n  \"metrics\": {\n    \"emSize\": 1,\n    \"lineHeight\": 1.171875,\n    \"ascender\": 0.927734375,\n    \"descender\": -0.244140625,\n    \"underlineY\": -0.09765625,\n    \"underlineThickness\": 0.048828125\n  },\n  \"glyphs\": [\n    { \"unicode\": 32, \"advance\": 0.24755859375 },\n    {\n      \"unicode\": 33,\n      \"advance\": 0.25732421875,\n      \"planeBounds\": {\n        \"left\": 0.056159633438645884,\n        \"bottom\": -0.024377614056770559,\n        \"right\": 0.20702396031135412,\n        \"top\": 0.72994402030677052\n      },\n      \"atlasBounds\": {\n        \"left\": 488.5,\n        \"bottom\": 145.5,\n        \"right\": 497.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 34,\n      \"advance\": 0.31982421875,\n      \"planeBounds\": {\n        \"left\": 0.049409125974004715,\n        \"bottom\": 0.48691155587022,\n        \"right\": 0.28408696777599529,\n        \"top\": 0.77187750662978005\n      },\n      \"atlasBounds\": {\n        \"left\": 486.5,\n        \"bottom\": 213.5,\n        \"right\": 500.5,\n        \"top\": 230.5\n      }\n    },\n    {\n      \"unicode\": 35,\n      \"advance\": 0.61572265625,\n      \"planeBounds\": {\n        \"left\": 0.037219103997511785,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.62391370850248817,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 66.5,\n        \"bottom\": 51.5,\n        \"right\": 101.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 36,\n      \"advance\": 0.5615234375,\n      \"planeBounds\": {\n        \"left\": 0.02956531458715296,\n        \"bottom\": -0.12381369908983761,\n        \"right\": 0.53244640416284716,\n        \"top\": 0.84842307408983775\n      },\n      \"atlasBounds\": {\n        \"left\": 109.5,\n        \"bottom\": 197.5,\n        \"right\": 139.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 37,\n      \"advance\": 0.732421875,\n      \"planeBounds\": {\n        \"left\": 0.026481776289942378,\n        \"bottom\": -0.030073418674698794,\n        \"right\": 0.71375259871005758,\n        \"top\": 0.74101091867469893\n      },\n      \"atlasBounds\": {\n        \"left\": 88.5,\n        \"bottom\": 144.5,\n        \"right\": 129.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 38,\n      \"advance\": 0.62158203125,\n      \"planeBounds\": {\n        \"left\": 0.03225572125458355,\n        \"bottom\": -0.030073418674698794,\n        \"right\": 0.63571302874541658,\n        \"top\": 0.74101091867469893\n      },\n      \"atlasBounds\": {\n        \"left\": 130.5,\n        \"bottom\": 144.5,\n        \"right\": 166.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 39,\n      \"advance\": 0.17431640625,\n      \"planeBounds\": {\n        \"left\": 0.028244602049502358,\n        \"bottom\": 0.49895501673814824,\n        \"right\": 0.14558352295049765,\n        \"top\": 0.76715826451185176\n      },\n      \"atlasBounds\": {\n        \"left\": 498.5,\n        \"bottom\": 62.5,\n        \"right\": 505.5,\n        \"top\": 78.5\n      }\n    },\n    {\n      \"unicode\": 40,\n      \"advance\": 0.341796875,\n      \"planeBounds\": {\n        \"left\": 0.042983329377291775,\n        \"bottom\": -0.25002954242240699,\n        \"right\": 0.34471198312270823,\n        \"top\": 0.82278344867240716\n      },\n      \"atlasBounds\": {\n        \"left\": 0.5,\n        \"bottom\": 191.5,\n        \"right\": 18.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 41,\n      \"advance\": 0.34765625,\n      \"planeBounds\": {\n        \"left\": -0.0031592487477082251,\n        \"bottom\": -0.25002954242240699,\n        \"right\": 0.29856940499770823,\n        \"top\": 0.82278344867240716\n      },\n      \"atlasBounds\": {\n        \"left\": 19.5,\n        \"bottom\": 191.5,\n        \"right\": 37.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 42,\n      \"advance\": 0.4306640625,\n      \"planeBounds\": {\n        \"left\": -0.011208599684062338,\n        \"bottom\": 0.27785390031593765,\n        \"right\": 0.44138438093406235,\n        \"top\": 0.73044688093406229\n      },\n      \"atlasBounds\": {\n        \"left\": 449.5,\n        \"bottom\": 23.5,\n        \"right\": 476.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 43,\n      \"advance\": 0.56689453125,\n      \"planeBounds\": {\n        \"left\": 0.01353503347629649,\n        \"bottom\": 0.053493525733368255,\n        \"right\": 0.54994152902370363,\n        \"top\": 0.6066627242666317\n      },\n      \"atlasBounds\": {\n        \"left\": 361.5,\n        \"bottom\": 17.5,\n        \"right\": 393.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 44,\n      \"advance\": 0.1962890625,\n      \"planeBounds\": {\n        \"left\": -0.0099194757972105828,\n        \"bottom\": -0.15981695975478,\n        \"right\": 0.17447025704721059,\n        \"top\": 0.12514899100478\n      },\n      \"atlasBounds\": {\n        \"left\": 498.5,\n        \"bottom\": 79.5,\n        \"right\": 509.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 45,\n      \"advance\": 0.27587890625,\n      \"planeBounds\": {\n        \"left\": -0.00527594412977999,\n        \"bottom\": 0.24333249267450235,\n        \"right\": 0.27969000662978,\n        \"top\": 0.36067141357549765\n      },\n      \"atlasBounds\": { \"left\": 52.5, \"bottom\": 7.5, \"right\": 69.5, \"top\": 14.5 }\n    },\n    {\n      \"unicode\": 46,\n      \"advance\": 0.26318359375,\n      \"planeBounds\": {\n        \"left\": 0.051032680313645884,\n        \"bottom\": -0.027092319686354116,\n        \"right\": 0.20189700718635412,\n        \"top\": 0.12377200718635412\n      },\n      \"atlasBounds\": {\n        \"left\": 501.5,\n        \"bottom\": 221.5,\n        \"right\": 510.5,\n        \"top\": 230.5\n      }\n    },\n    {\n      \"unicode\": 47,\n      \"advance\": 0.412109375,\n      \"planeBounds\": {\n        \"left\": -0.013733006073205867,\n        \"bottom\": -0.085735051278483493,\n        \"right\": 0.40533456857320588,\n        \"top\": 0.73563739502848347\n      },\n      \"atlasBounds\": {\n        \"left\": 252.5,\n        \"bottom\": 206.5,\n        \"right\": 277.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 48,\n      \"advance\": 0.5615234375,\n      \"planeBounds\": {\n        \"left\": 0.037458384830081196,\n        \"bottom\": -0.030073418674698794,\n        \"right\": 0.52357677141991887,\n        \"top\": 0.74101091867469893\n      },\n      \"atlasBounds\": {\n        \"left\": 167.5,\n        \"bottom\": 144.5,\n        \"right\": 196.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 49,\n      \"advance\": 0.5615234375,\n      \"planeBounds\": {\n        \"left\": 0.06023674350936354,\n        \"bottom\": -0.019983082806770559,\n        \"right\": 0.37872810024063647,\n        \"top\": 0.73433855155677052\n      },\n      \"atlasBounds\": {\n        \"left\": 488.5,\n        \"bottom\": 97.5,\n        \"right\": 507.5,\n        \"top\": 142.5\n      }\n    },\n    {\n      \"unicode\": 50,\n      \"advance\": 0.5615234375,\n      \"planeBounds\": {\n        \"left\": 0.025334353719224725,\n        \"bottom\": -0.016809254681770559,\n        \"right\": 0.54497814628077523,\n        \"top\": 0.73751237968177052\n      },\n      \"atlasBounds\": {\n        \"left\": 278.5,\n        \"bottom\": 51.5,\n        \"right\": 309.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 51,\n      \"advance\": 0.5615234375,\n      \"planeBounds\": {\n        \"left\": 0.028181041080081196,\n        \"bottom\": -0.030073418674698794,\n        \"right\": 0.51429942766991887,\n        \"top\": 0.74101091867469893\n      },\n      \"atlasBounds\": {\n        \"left\": 197.5,\n        \"bottom\": 144.5,\n        \"right\": 226.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 52,\n      \"advance\": 0.5615234375,\n      \"planeBounds\": {\n        \"left\": 0.0058861038583682551,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.5590553023916317,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 310.5,\n        \"bottom\": 51.5,\n        \"right\": 343.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 53,\n      \"advance\": 0.5615234375,\n      \"planeBounds\": {\n        \"left\": 0.055524791080081196,\n        \"bottom\": -0.026574879681770559,\n        \"right\": 0.54164317766991887,\n        \"top\": 0.72774675468177052\n      },\n      \"atlasBounds\": {\n        \"left\": 344.5,\n        \"bottom\": 51.5,\n        \"right\": 373.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 54,\n      \"advance\": 0.5615234375,\n      \"planeBounds\": {\n        \"left\": 0.046003306705081196,\n        \"bottom\": -0.034712090549698794,\n        \"right\": 0.53212169329491887,\n        \"top\": 0.73637224679969893\n      },\n      \"atlasBounds\": {\n        \"left\": 227.5,\n        \"bottom\": 144.5,\n        \"right\": 256.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 55,\n      \"advance\": 0.5615234375,\n      \"planeBounds\": {\n        \"left\": 0.018010134969224725,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.53765392753077523,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 374.5,\n        \"bottom\": 51.5,\n        \"right\": 405.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 56,\n      \"advance\": 0.5615234375,\n      \"planeBounds\": {\n        \"left\": 0.037702525455081196,\n        \"bottom\": -0.030073418674698794,\n        \"right\": 0.52382091204491887,\n        \"top\": 0.74101091867469893\n      },\n      \"atlasBounds\": {\n        \"left\": 257.5,\n        \"bottom\": 144.5,\n        \"right\": 286.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 57,\n      \"advance\": 0.5615234375,\n      \"planeBounds\": {\n        \"left\": 0.029401744205081196,\n        \"bottom\": -0.025434746799698794,\n        \"right\": 0.51552013079491887,\n        \"top\": 0.74564959054969893\n      },\n      \"atlasBounds\": {\n        \"left\": 287.5,\n        \"bottom\": 144.5,\n        \"right\": 316.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 58,\n      \"advance\": 0.2421875,\n      \"planeBounds\": {\n        \"left\": 0.046394008438645884,\n        \"bottom\": -0.029431286627488215,\n        \"right\": 0.19725833531135412,\n        \"top\": 0.55726331787748817\n      },\n      \"atlasBounds\": {\n        \"left\": 439.5,\n        \"bottom\": 61.5,\n        \"right\": 448.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 59,\n      \"advance\": 0.21142578125,\n      \"planeBounds\": {\n        \"left\": 0.0010668523277894189,\n        \"bottom\": -0.16459733294591408,\n        \"right\": 0.18545658517221059,\n        \"top\": 0.55619889544591405\n      },\n      \"atlasBounds\": {\n        \"left\": 406.5,\n        \"bottom\": 53.5,\n        \"right\": 417.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 60,\n      \"advance\": 0.50830078125,\n      \"planeBounds\": {\n        \"left\": 0.016948142433865897,\n        \"bottom\": 0.072614634830081196,\n        \"right\": 0.45277842006613411,\n        \"top\": 0.55873302141991887\n      },\n      \"atlasBounds\": {\n        \"left\": 394.5,\n        \"bottom\": 21.5,\n        \"right\": 420.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 61,\n      \"advance\": 0.548828125,\n      \"planeBounds\": {\n        \"left\": 0.051535540940937666,\n        \"bottom\": 0.17620354038436353,\n        \"right\": 0.5041285215590624,\n        \"top\": 0.49469489711563647\n      },\n      \"atlasBounds\": {\n        \"left\": 477.5,\n        \"bottom\": 31.5,\n        \"right\": 504.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 62,\n      \"advance\": 0.5224609375,\n      \"planeBounds\": {\n        \"left\": 0.047629290940937666,\n        \"bottom\": 0.073102916080081196,\n        \"right\": 0.5002222715590624,\n        \"top\": 0.55922130266991887\n      },\n      \"atlasBounds\": {\n        \"left\": 421.5,\n        \"bottom\": 21.5,\n        \"right\": 448.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 63,\n      \"advance\": 0.47216796875,\n      \"planeBounds\": {\n        \"left\": 0.016704001808865897,\n        \"bottom\": -0.027876153049698794,\n        \"right\": 0.45253427944113411,\n        \"top\": 0.74320818429969893\n      },\n      \"atlasBounds\": {\n        \"left\": 317.5,\n        \"bottom\": 144.5,\n        \"right\": 343.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 64,\n      \"advance\": 0.89794921875,\n      \"planeBounds\": {\n        \"left\": 0.034064457306783605,\n        \"bottom\": -0.23896750384690937,\n        \"right\": 0.87219960659960716,\n        \"top\": 0.71650656634690935\n      },\n      \"atlasBounds\": {\n        \"left\": 155.5,\n        \"bottom\": 198.5,\n        \"right\": 205.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 65,\n      \"advance\": 0.65234375,\n      \"planeBounds\": {\n        \"left\": -0.0088380440921293872,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.66167007534212952,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 237.5,\n        \"bottom\": 51.5,\n        \"right\": 277.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 66,\n      \"advance\": 0.62255859375,\n      \"planeBounds\": {\n        \"left\": 0.064640994344224725,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.58428478690577523,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 205.5,\n        \"bottom\": 51.5,\n        \"right\": 236.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 67,\n      \"advance\": 0.65087890625,\n      \"planeBounds\": {\n        \"left\": 0.038439807122511785,\n        \"bottom\": -0.030073418674698794,\n        \"right\": 0.62513441162748817,\n        \"top\": 0.74101091867469893\n      },\n      \"atlasBounds\": {\n        \"left\": 344.5,\n        \"bottom\": 144.5,\n        \"right\": 379.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 68,\n      \"advance\": 0.65576171875,\n      \"planeBounds\": {\n        \"left\": 0.063015010108368255,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.6161842086416317,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 162.5,\n        \"bottom\": 51.5,\n        \"right\": 195.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 69,\n      \"advance\": 0.568359375,\n      \"planeBounds\": {\n        \"left\": 0.065290416080081196,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.55140880266991887,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 132.5,\n        \"bottom\": 51.5,\n        \"right\": 161.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 70,\n      \"advance\": 0.552734375,\n      \"planeBounds\": {\n        \"left\": 0.059675181705081196,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.54579356829491887,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 102.5,\n        \"bottom\": 51.5,\n        \"right\": 131.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 71,\n      \"advance\": 0.68115234375,\n      \"planeBounds\": {\n        \"left\": 0.040148791497511785,\n        \"bottom\": -0.030073418674698794,\n        \"right\": 0.62684339600248817,\n        \"top\": 0.74101091867469893\n      },\n      \"atlasBounds\": {\n        \"left\": 380.5,\n        \"bottom\": 144.5,\n        \"right\": 415.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 72,\n      \"advance\": 0.712890625,\n      \"planeBounds\": {\n        \"left\": 0.062365588372511785,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.64906019287748817,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 30.5,\n        \"bottom\": 51.5,\n        \"right\": 65.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 73,\n      \"advance\": 0.27197265625,\n      \"planeBounds\": {\n        \"left\": 0.069179656806574119,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.20328128069342588,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 196.5,\n        \"bottom\": 51.5,\n        \"right\": 204.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 74,\n      \"advance\": 0.5517578125,\n      \"planeBounds\": {\n        \"left\": 0.0071849473300811938,\n        \"bottom\": -0.026574879681770559,\n        \"right\": 0.49330333391991882,\n        \"top\": 0.72774675468177052\n      },\n      \"atlasBounds\": { \"left\": 0.5, \"bottom\": 51.5, \"right\": 29.5, \"top\": 96.5 }\n    },\n    {\n      \"unicode\": 75,\n      \"advance\": 0.626953125,\n      \"planeBounds\": {\n        \"left\": 0.061633166497511785,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.64832777100248817,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 452.5,\n        \"bottom\": 97.5,\n        \"right\": 487.5,\n        \"top\": 142.5\n      }\n    },\n    {\n      \"unicode\": 76,\n      \"advance\": 0.5380859375,\n      \"planeBounds\": {\n        \"left\": 0.063417861323009431,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.53277354492699058,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 423.5,\n        \"bottom\": 97.5,\n        \"right\": 451.5,\n        \"top\": 142.5\n      }\n    },\n    {\n      \"unicode\": 77,\n      \"advance\": 0.873046875,\n      \"planeBounds\": {\n        \"left\": 0.059118479693229441,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.81344011405677052,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 377.5,\n        \"bottom\": 97.5,\n        \"right\": 422.5,\n        \"top\": 142.5\n      }\n    },\n    {\n      \"unicode\": 78,\n      \"advance\": 0.712890625,\n      \"planeBounds\": {\n        \"left\": 0.062365588372511785,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.64906019287748817,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 341.5,\n        \"bottom\": 97.5,\n        \"right\": 376.5,\n        \"top\": 142.5\n      }\n    },\n    {\n      \"unicode\": 79,\n      \"advance\": 0.6875,\n      \"planeBounds\": {\n        \"left\": 0.033395854136655315,\n        \"bottom\": -0.030073418674698794,\n        \"right\": 0.65361586461334464,\n        \"top\": 0.74101091867469893\n      },\n      \"atlasBounds\": {\n        \"left\": 416.5,\n        \"bottom\": 144.5,\n        \"right\": 453.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 80,\n      \"advance\": 0.630859375,\n      \"planeBounds\": {\n        \"left\": 0.061550166358368255,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.6147193648916317,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 273.5,\n        \"bottom\": 97.5,\n        \"right\": 306.5,\n        \"top\": 142.5\n      }\n    },\n    {\n      \"unicode\": 81,\n      \"advance\": 0.6875,\n      \"planeBounds\": {\n        \"left\": 0.030466166636655315,\n        \"bottom\": -0.14391866037519643,\n        \"right\": 0.65068617711334464,\n        \"top\": 0.74450459787519641\n      },\n      \"atlasBounds\": {\n        \"left\": 214.5,\n        \"bottom\": 202.5,\n        \"right\": 251.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 82,\n      \"advance\": 0.61572265625,\n      \"planeBounds\": {\n        \"left\": 0.063503291358368255,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.6166724898916317,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 186.5,\n        \"bottom\": 97.5,\n        \"right\": 219.5,\n        \"top\": 142.5\n      }\n    },\n    {\n      \"unicode\": 83,\n      \"advance\": 0.59326171875,\n      \"planeBounds\": {\n        \"left\": 0.020778681983368255,\n        \"bottom\": -0.030073418674698794,\n        \"right\": 0.5739478805166317,\n        \"top\": 0.74101091867469893\n      },\n      \"atlasBounds\": {\n        \"left\": 454.5,\n        \"bottom\": 144.5,\n        \"right\": 487.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 84,\n      \"advance\": 0.5966796875,\n      \"planeBounds\": {\n        \"left\": 0.0054808227475117866,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.59217542725248817,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 112.5,\n        \"bottom\": 97.5,\n        \"right\": 147.5,\n        \"top\": 142.5\n      }\n    },\n    {\n      \"unicode\": 85,\n      \"advance\": 0.6484375,\n      \"planeBounds\": {\n        \"left\": 0.049098994483368255,\n        \"bottom\": -0.026574879681770559,\n        \"right\": 0.6022681930166317,\n        \"top\": 0.72774675468177052\n      },\n      \"atlasBounds\": {\n        \"left\": 78.5,\n        \"bottom\": 97.5,\n        \"right\": 111.5,\n        \"top\": 142.5\n      }\n    },\n    {\n      \"unicode\": 86,\n      \"advance\": 0.63623046875,\n      \"planeBounds\": {\n        \"left\": -0.0082691925992011521,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.64547622384920111,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 38.5,\n        \"bottom\": 97.5,\n        \"right\": 77.5,\n        \"top\": 142.5\n      }\n    },\n    {\n      \"unicode\": 87,\n      \"advance\": 0.88720703125,\n      \"planeBounds\": {\n        \"left\": 0.011923628617731797,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.88358418388226834,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 220.5,\n        \"bottom\": 97.5,\n        \"right\": 272.5,\n        \"top\": 142.5\n      }\n    },\n    {\n      \"unicode\": 88,\n      \"advance\": 0.626953125,\n      \"planeBounds\": {\n        \"left\": 0.0040989791366553164,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.62431898961334464,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 0.5,\n        \"bottom\": 97.5,\n        \"right\": 37.5,\n        \"top\": 142.5\n      }\n    },\n    {\n      \"unicode\": 89,\n      \"advance\": 0.6005859375,\n      \"planeBounds\": {\n        \"left\": -0.010793598988344685,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.60942641148834464,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 148.5,\n        \"bottom\": 97.5,\n        \"right\": 185.5,\n        \"top\": 142.5\n      }\n    },\n    {\n      \"unicode\": 90,\n      \"advance\": 0.5986328125,\n      \"planeBounds\": {\n        \"left\": 0.024196650733368255,\n        \"bottom\": -0.021692067181770559,\n        \"right\": 0.5773658492666317,\n        \"top\": 0.73262956718177052\n      },\n      \"atlasBounds\": {\n        \"left\": 307.5,\n        \"bottom\": 97.5,\n        \"right\": 340.5,\n        \"top\": 142.5\n      }\n    },\n    {\n      \"unicode\": 91,\n      \"advance\": 0.26513671875,\n      \"planeBounds\": {\n        \"left\": 0.05437250871693295,\n        \"bottom\": -0.17280296457569408,\n        \"right\": 0.27228764753306706,\n        \"top\": 0.83295921457569422\n      },\n      \"atlasBounds\": {\n        \"left\": 59.5,\n        \"bottom\": 195.5,\n        \"right\": 72.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 92,\n      \"advance\": 0.41015625,\n      \"planeBounds\": {\n        \"left\": 0.0014037126767941326,\n        \"bottom\": -0.085735051278483493,\n        \"right\": 0.42047128732320588,\n        \"top\": 0.73563739502848347\n      },\n      \"atlasBounds\": {\n        \"left\": 278.5,\n        \"bottom\": 206.5,\n        \"right\": 303.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 93,\n      \"advance\": 0.26513671875,\n      \"planeBounds\": {\n        \"left\": -0.020659233400995285,\n        \"bottom\": -0.17280296457569408,\n        \"right\": 0.21401860840099529,\n        \"top\": 0.83295921457569422\n      },\n      \"atlasBounds\": {\n        \"left\": 94.5,\n        \"bottom\": 195.5,\n        \"right\": 108.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 94,\n      \"advance\": 0.41796875,\n      \"planeBounds\": {\n        \"left\": 0.0068553766697223677,\n        \"bottom\": 0.33229482979472236,\n        \"right\": 0.40916024833027764,\n        \"top\": 0.73459970145527764\n      },\n      \"atlasBounds\": {\n        \"left\": 486.5,\n        \"bottom\": 231.5,\n        \"right\": 510.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 95,\n      \"advance\": 0.451171875,\n      \"planeBounds\": {\n        \"left\": -0.017473255794918804,\n        \"bottom\": -0.095534694825497646,\n        \"right\": 0.46864513079491882,\n        \"top\": 0.021804226075497646\n      },\n      \"atlasBounds\": { \"left\": 70.5, \"bottom\": 7.5, \"right\": 99.5, \"top\": 14.5 }\n    },\n    {\n      \"unicode\": 96,\n      \"advance\": 0.30908203125,\n      \"planeBounds\": {\n        \"left\": 0.0039183994810764802,\n        \"bottom\": 0.58602778982778947,\n        \"right\": 0.25535894426892353,\n        \"top\": 0.77041752267221053\n      },\n      \"atlasBounds\": { \"left\": 36.5, \"bottom\": 3.5, \"right\": 51.5, \"top\": 14.5 }\n    },\n    {\n      \"unicode\": 97,\n      \"advance\": 0.5439453125,\n      \"planeBounds\": {\n        \"left\": 0.028181041080081196,\n        \"bottom\": -0.029187146002488215,\n        \"right\": 0.51429942766991887,\n        \"top\": 0.55750745850248817\n      },\n      \"atlasBounds\": {\n        \"left\": 30.5,\n        \"bottom\": 15.5,\n        \"right\": 59.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 98,\n      \"advance\": 0.56103515625,\n      \"planeBounds\": {\n        \"left\": 0.048932994205081196,\n        \"bottom\": -0.032187684160555265,\n        \"right\": 0.53505138079491887,\n        \"top\": 0.7724220591605554\n      },\n      \"atlasBounds\": {\n        \"left\": 304.5,\n        \"bottom\": 207.5,\n        \"right\": 333.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 99,\n      \"advance\": 0.5234375,\n      \"planeBounds\": {\n        \"left\": 0.024518931705081196,\n        \"bottom\": -0.029187146002488215,\n        \"right\": 0.51063731829491887,\n        \"top\": 0.55750745850248817\n      },\n      \"atlasBounds\": { \"left\": 0.5, \"bottom\": 15.5, \"right\": 29.5, \"top\": 50.5 }\n    },\n    {\n      \"unicode\": 100,\n      \"advance\": 0.56396484375,\n      \"planeBounds\": {\n        \"left\": 0.026227916080081196,\n        \"bottom\": -0.032187684160555265,\n        \"right\": 0.51234630266991887,\n        \"top\": 0.7724220591605554\n      },\n      \"atlasBounds\": {\n        \"left\": 334.5,\n        \"bottom\": 207.5,\n        \"right\": 363.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 101,\n      \"advance\": 0.52978515625,\n      \"planeBounds\": {\n        \"left\": 0.026472056705081196,\n        \"bottom\": -0.029187146002488215,\n        \"right\": 0.51259044329491887,\n        \"top\": 0.55750745850248817\n      },\n      \"atlasBounds\": {\n        \"left\": 468.5,\n        \"bottom\": 61.5,\n        \"right\": 497.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 102,\n      \"advance\": 0.34716796875,\n      \"planeBounds\": {\n        \"left\": 0.0045751109055788379,\n        \"bottom\": -0.022177918535555265,\n        \"right\": 0.37335457659442117,\n        \"top\": 0.7824318247855554\n      },\n      \"atlasBounds\": {\n        \"left\": 364.5,\n        \"bottom\": 207.5,\n        \"right\": 386.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 103,\n      \"advance\": 0.56103515625,\n      \"planeBounds\": {\n        \"left\": 0.026960337955081196,\n        \"bottom\": -0.22888445766762702,\n        \"right\": 0.51307872454491887,\n        \"top\": 0.55896258266762699\n      },\n      \"atlasBounds\": {\n        \"left\": 28.5,\n        \"bottom\": 143.5,\n        \"right\": 57.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 104,\n      \"advance\": 0.55078125,\n      \"planeBounds\": {\n        \"left\": 0.049826556565937666,\n        \"bottom\": -0.01892352016762703,\n        \"right\": 0.5024195371840624,\n        \"top\": 0.76892352016762699\n      },\n      \"atlasBounds\": {\n        \"left\": 0.5,\n        \"bottom\": 143.5,\n        \"right\": 27.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 105,\n      \"advance\": 0.24267578125,\n      \"planeBounds\": {\n        \"left\": 0.046882289688645884,\n        \"bottom\": -0.016809254681770559,\n        \"right\": 0.19774661656135412,\n        \"top\": 0.73751237968177052\n      },\n      \"atlasBounds\": {\n        \"left\": 498.5,\n        \"bottom\": 145.5,\n        \"right\": 507.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 106,\n      \"advance\": 0.23876953125,\n      \"planeBounds\": {\n        \"left\": -0.048979545900995285,\n        \"bottom\": -0.23245627721483761,\n        \"right\": 0.18569829590099529,\n        \"top\": 0.73978049596483775\n      },\n      \"atlasBounds\": {\n        \"left\": 140.5,\n        \"bottom\": 197.5,\n        \"right\": 154.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 107,\n      \"advance\": 0.5068359375,\n      \"planeBounds\": {\n        \"left\": 0.044294322330081196,\n        \"bottom\": -0.01892352016762703,\n        \"right\": 0.53041270891991887,\n        \"top\": 0.76892352016762699\n      },\n      \"atlasBounds\": {\n        \"left\": 58.5,\n        \"bottom\": 143.5,\n        \"right\": 87.5,\n        \"top\": 190.5\n      }\n    },\n    {\n      \"unicode\": 108,\n      \"advance\": 0.24267578125,\n      \"planeBounds\": {\n        \"left\": 0.054287078681574119,\n        \"bottom\": -0.01892352016762703,\n        \"right\": 0.18838870256842588,\n        \"top\": 0.76892352016762699\n      },\n      \"atlasBounds\": {\n        \"left\": 477.5,\n        \"bottom\": 208.5,\n        \"right\": 485.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 109,\n      \"advance\": 0.87646484375,\n      \"planeBounds\": {\n        \"left\": 0.04430890170737297,\n        \"bottom\": -0.024304333502488215,\n        \"right\": 0.83215594204262699,\n        \"top\": 0.56239027100248817\n      },\n      \"atlasBounds\": {\n        \"left\": 116.5,\n        \"bottom\": 15.5,\n        \"right\": 163.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 110,\n      \"advance\": 0.5517578125,\n      \"planeBounds\": {\n        \"left\": 0.049826556565937666,\n        \"bottom\": -0.024304333502488215,\n        \"right\": 0.5024195371840624,\n        \"top\": 0.56239027100248817\n      },\n      \"atlasBounds\": {\n        \"left\": 60.5,\n        \"bottom\": 15.5,\n        \"right\": 87.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 111,\n      \"advance\": 0.5703125,\n      \"planeBounds\": {\n        \"left\": 0.025090213094224725,\n        \"bottom\": -0.029187146002488215,\n        \"right\": 0.54473400565577523,\n        \"top\": 0.55750745850248817\n      },\n      \"atlasBounds\": {\n        \"left\": 193.5,\n        \"bottom\": 15.5,\n        \"right\": 224.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 112,\n      \"advance\": 0.56103515625,\n      \"planeBounds\": {\n        \"left\": 0.048444712955081196,\n        \"bottom\": -0.22644305141762702,\n        \"right\": 0.53456309954491887,\n        \"top\": 0.56140398891762699\n      },\n      \"atlasBounds\": {\n        \"left\": 447.5,\n        \"bottom\": 208.5,\n        \"right\": 476.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 113,\n      \"advance\": 0.568359375,\n      \"planeBounds\": {\n        \"left\": 0.025983775455081196,\n        \"bottom\": -0.22644305141762702,\n        \"right\": 0.51210216204491887,\n        \"top\": 0.56140398891762699\n      },\n      \"atlasBounds\": {\n        \"left\": 417.5,\n        \"bottom\": 208.5,\n        \"right\": 446.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 114,\n      \"advance\": 0.33837890625,\n      \"planeBounds\": {\n        \"left\": 0.045180595002291775,\n        \"bottom\": -0.024304333502488215,\n        \"right\": 0.34690924874770823,\n        \"top\": 0.56239027100248817\n      },\n      \"atlasBounds\": {\n        \"left\": 449.5,\n        \"bottom\": 61.5,\n        \"right\": 467.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 115,\n      \"advance\": 0.515625,\n      \"planeBounds\": {\n        \"left\": 0.021669814448009427,\n        \"bottom\": -0.029187146002488215,\n        \"right\": 0.49102549805199058,\n        \"top\": 0.55750745850248817\n      },\n      \"atlasBounds\": {\n        \"left\": 164.5,\n        \"bottom\": 15.5,\n        \"right\": 192.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 116,\n      \"advance\": 0.32666015625,\n      \"planeBounds\": {\n        \"left\": -0.019433670483564695,\n        \"bottom\": -0.028774575202985861,\n        \"right\": 0.3158203892335647,\n        \"top\": 0.67525895020298599\n      },\n      \"atlasBounds\": {\n        \"left\": 418.5,\n        \"bottom\": 54.5,\n        \"right\": 438.5,\n        \"top\": 96.5\n      }\n    },\n    {\n      \"unicode\": 117,\n      \"advance\": 0.55126953125,\n      \"planeBounds\": {\n        \"left\": 0.048117572190937666,\n        \"bottom\": -0.034069958502488215,\n        \"right\": 0.5007105528090624,\n        \"top\": 0.55262464600248817\n      },\n      \"atlasBounds\": {\n        \"left\": 88.5,\n        \"bottom\": 15.5,\n        \"right\": 115.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 118,\n      \"advance\": 0.484375,\n      \"planeBounds\": {\n        \"left\": -0.0020923964199188062,\n        \"bottom\": -0.02080579450955998,\n        \"right\": 0.48402599016991882,\n        \"top\": 0.5491261070095601\n      },\n      \"atlasBounds\": {\n        \"left\": 331.5,\n        \"bottom\": 16.5,\n        \"right\": 360.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 119,\n      \"advance\": 0.75146484375,\n      \"planeBounds\": {\n        \"left\": -0.002649098431770561,\n        \"bottom\": -0.02080579450955998,\n        \"right\": 0.75167253593177052,\n        \"top\": 0.5491261070095601\n      },\n      \"atlasBounds\": {\n        \"left\": 225.5,\n        \"bottom\": 16.5,\n        \"right\": 270.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 120,\n      \"advance\": 0.49560546875,\n      \"planeBounds\": {\n        \"left\": -0.0046143729128470395,\n        \"bottom\": -0.02080579450955998,\n        \"right\": 0.49826671666284711,\n        \"top\": 0.5491261070095601\n      },\n      \"atlasBounds\": {\n        \"left\": 300.5,\n        \"bottom\": 16.5,\n        \"right\": 330.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 121,\n      \"advance\": 0.47314453125,\n      \"planeBounds\": {\n        \"left\": -0.0072193495449188062,\n        \"bottom\": -0.23645281704262702,\n        \"right\": 0.47889903704491882,\n        \"top\": 0.55139422329262699\n      },\n      \"atlasBounds\": {\n        \"left\": 387.5,\n        \"bottom\": 208.5,\n        \"right\": 416.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 122,\n      \"advance\": 0.49560546875,\n      \"planeBounds\": {\n        \"left\": 0.018007705073009427,\n        \"bottom\": -0.02080579450955998,\n        \"right\": 0.48736338867699058,\n        \"top\": 0.5491261070095601\n      },\n      \"atlasBounds\": {\n        \"left\": 271.5,\n        \"bottom\": 16.5,\n        \"right\": 299.5,\n        \"top\": 50.5\n      }\n    },\n    {\n      \"unicode\": 123,\n      \"advance\": 0.33837890625,\n      \"planeBounds\": {\n        \"left\": 0.011572188891435306,\n        \"bottom\": -0.20234398020069408,\n        \"right\": 0.3468262486085647,\n        \"top\": 0.80341819895069422\n      },\n      \"atlasBounds\": {\n        \"left\": 73.5,\n        \"bottom\": 195.5,\n        \"right\": 93.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 124,\n      \"advance\": 0.24365234375,\n      \"planeBounds\": {\n        \"left\": 0.063156711424502354,\n        \"bottom\": -0.15466084787519643,\n        \"right\": 0.18049563232549765,\n        \"top\": 0.73376241037519641\n      },\n      \"atlasBounds\": {\n        \"left\": 206.5,\n        \"bottom\": 202.5,\n        \"right\": 213.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 125,\n      \"advance\": 0.33837890625,\n      \"planeBounds\": {\n        \"left\": -0.010156326733564695,\n        \"bottom\": -0.20234398020069408,\n        \"right\": 0.3250977329835647,\n        \"top\": 0.80341819895069422\n      },\n      \"atlasBounds\": {\n        \"left\": 38.5,\n        \"bottom\": 195.5,\n        \"right\": 58.5,\n        \"top\": 255.5\n      }\n    },\n    {\n      \"unicode\": 126,\n      \"advance\": 0.68017578125,\n      \"planeBounds\": {\n        \"left\": 0.046984728997511785,\n        \"bottom\": 0.17660639159900471,\n        \"right\": 0.63367933350248817,\n        \"top\": 0.41128423340099529\n      },\n      \"atlasBounds\": { \"left\": 0.5, \"bottom\": 0.5, \"right\": 35.5, \"top\": 14.5 }\n    }\n  ],\n  \"kerning\": []\n}\n","import { vec3 } from 'gl-matrix'\nimport { NVMesh, MeshType } from './nvmesh.js'\nimport { NVUtilities } from './nvutilities.js'\nimport { NiivueObject3D } from './niivue-object3D.js'\nimport { NVMeshUtilities } from './nvmesh-utilities.js'\nimport { cmapper } from './colortables.js'\nimport { NVLabel3D, LabelTextAlignment, LabelLineTerminator } from './nvlabel.js'\nimport { Connectome, ConnectomeOptions, LegacyConnectome, NVConnectomeEdge, NVConnectomeNode } from './types.js'\nimport { log } from './logger.js'\n\nconst defaultOptions: ConnectomeOptions = {\n  name: 'untitled connectome',\n  nodeColormap: 'warm',\n  nodeColormapNegative: 'winter',\n  nodeMinColor: 0,\n  nodeMaxColor: 4,\n  nodeScale: 3,\n  edgeColormap: 'warm',\n  edgeColormapNegative: 'winter',\n  edgeMin: 2,\n  edgeMax: 6,\n  edgeScale: 1,\n  legendLineThickness: 0,\n  showLegend: true\n}\n\nexport type FreeSurferConnectome = {\n  data_type: string\n  points: Array<{\n    comments?: Array<{\n      text: string\n    }>\n    coordinates: {\n      x: number\n      y: number\n      z: number\n    }\n  }>\n}\n\n/**\n * Represents a connectome\n */\nexport class NVConnectome extends NVMesh {\n  gl: WebGL2RenderingContext\n  nodesChanged: EventTarget\n\n  constructor(gl: WebGL2RenderingContext, connectome: LegacyConnectome) {\n    super(new Float32Array([]), new Uint32Array([]), connectome.name, new Uint8Array([]), 1.0, true, gl, connectome)\n    this.gl = gl\n    // this.nodes = connectome.nodes;\n    // this.edges = connectome.edges;\n    // this.options = { ...defaultOptions, ...connectome };\n    this.type = MeshType.CONNECTOME\n    if (this.nodes) {\n      this.updateLabels()\n    }\n    this.nodesChanged = new EventTarget()\n  }\n\n  static convertLegacyConnectome(json: LegacyConnectome): Connectome {\n    const connectome: Connectome = { nodes: [], edges: [], ...defaultOptions }\n    for (const prop in json) {\n      if (prop in defaultOptions) {\n        const key = prop as keyof ConnectomeOptions\n        // @ts-expect-error -- this will work, as both extend ConnectomeOptions\n        connectome[key] = json[key]\n      }\n    }\n    const nodes = json.nodes\n    for (let i = 0; i < nodes.names.length; i++) {\n      connectome.nodes.push({\n        name: nodes.names[i],\n        x: nodes.X[i],\n        y: nodes.Y[i],\n        z: nodes.Z[i],\n        colorValue: nodes.Color[i],\n        sizeValue: nodes.Size[i]\n      })\n    }\n    for (let i = 0; i < nodes.names.length - 1; i++) {\n      for (let j = i + 1; j < nodes.names.length; j++) {\n        const colorValue = json.edges[i * nodes.names.length + j]\n        connectome.edges.push({\n          first: i,\n          second: j,\n          colorValue\n        })\n      }\n    }\n\n    return connectome\n  }\n\n  static convertFreeSurferConnectome(json: FreeSurferConnectome, colormap = 'warm'): Connectome {\n    let isValid = true\n    if (!('data_type' in json)) {\n      isValid = false\n    } else if (json.data_type !== 'fs_pointset') {\n      isValid = false\n    }\n    if (!('points' in json)) {\n      isValid = false\n    }\n    if (!isValid) {\n      throw Error('not a valid FreeSurfer json pointset')\n    }\n\n    const nodes = json.points.map((p) => ({\n      name: Array.isArray(p.comments) && p.comments.length > 0 && 'text' in p.comments[0] ? p.comments[0].text : '',\n      x: p.coordinates.x,\n      y: p.coordinates.y,\n      z: p.coordinates.z,\n      colorValue: 1,\n      sizeValue: 1,\n      metadata: p.comments\n    }))\n    const connectome = {\n      ...defaultOptions,\n      nodeColormap: colormap,\n      edgeColormap: colormap,\n      nodes,\n      edges: []\n    }\n    return connectome\n  }\n\n  updateLabels(): void {\n    const nodes = this.nodes as NVConnectomeNode[]\n    if (nodes && nodes.length > 0) {\n      // largest node\n      const largest = (nodes as NVConnectomeNode[]).reduce((a, b) => (a.sizeValue > b.sizeValue ? a : b)).sizeValue\n      let min, max\n\n      // Determine the minimum color value\n      if (typeof this.nodeMinColor !== 'undefined' && isFinite(this.nodeMinColor)) {\n        min = this.nodeMinColor\n      } else {\n        min = nodes[0].colorValue // Initialize min to the first node's colorValue\n        for (let i = 1; i < nodes.length; i++) {\n          if (nodes[i].colorValue < min) {\n            min = nodes[i].colorValue\n          }\n        }\n      }\n      // Determine the maximum color value\n      if (typeof this.nodeMaxColor !== 'undefined' && isFinite(this.nodeMaxColor)) {\n        max = this.nodeMaxColor\n      } else {\n        max = nodes[0].colorValue // Initialize max to the first node's colorValue\n        for (let i = 1; i < nodes.length; i++) {\n          if (nodes[i].colorValue > max) {\n            max = nodes[i].colorValue\n          }\n        }\n      }\n      const lut = cmapper.colormap(this.nodeColormap, this.colormapInvert)\n      const lutNeg = cmapper.colormap(this.nodeColormapNegative, this.colormapInvert)\n      const hasNeg = 'nodeColormapNegative' in this\n      let legendLineThickness = this.legendLineThickness ? this.legendLineThickness : 0.0\n\n      if (this.showLegend === false) {\n        legendLineThickness = 0\n      }\n      for (let i = 0; i < nodes.length; i++) {\n        let color = nodes[i].colorValue\n        let isNeg = false\n        if (hasNeg && color < 0) {\n          isNeg = true\n          color = -color\n        }\n\n        if (min < max) {\n          if (color < min) {\n            log.warn('color value lower than min')\n            continue\n          }\n          color = (color - min) / (max - min)\n        } else {\n          color = 1.0\n        }\n\n        color = Math.round(Math.max(Math.min(255, color * 255))) * 4\n        let rgba = [lut[color], lut[color + 1], lut[color + 2], 255]\n        if (isNeg) {\n          rgba = [lutNeg[color], lutNeg[color + 1], lutNeg[color + 2], 255]\n        }\n        rgba = rgba.map((c) => c / 255)\n        log.debug('adding label for ', nodes[i])\n        nodes[i].label = new NVLabel3D(\n          nodes[i].name,\n          {\n            textColor: rgba,\n            bulletScale: nodes[i].sizeValue / largest,\n            bulletColor: rgba,\n            lineWidth: legendLineThickness,\n            lineColor: rgba,\n            textScale: 1.0,\n            textAlignment: LabelTextAlignment.LEFT,\n            lineTerminator: LabelLineTerminator.NONE\n          },\n          [nodes[i].x, nodes[i].y, nodes[i].z]\n        )\n        log.debug('label for node:', nodes[i].label)\n      }\n    }\n  }\n\n  addConnectomeNode(node: NVConnectomeNode): void {\n    log.debug('adding node', node)\n    if (!this.nodes) {\n      throw new Error('nodes not defined')\n    }\n\n    ;(this.nodes as NVConnectomeNode[]).push(node)\n    this.updateLabels()\n    this.nodesChanged.dispatchEvent(new CustomEvent('nodeAdded', { detail: { node } }))\n  }\n\n  deleteConnectomeNode(node: NVConnectomeNode): void {\n    // delete any connected edges\n    const index = (this.nodes as NVConnectomeNode[]).indexOf(node)\n    const edges = this.edges as NVConnectomeEdge[]\n    if (edges) {\n      this.edges = edges.filter((e) => e.first !== index && e.second !== index)\n    }\n    this.nodes = (this.nodes as NVConnectomeNode[]).filter((n) => n !== node)\n\n    this.updateLabels()\n    this.updateConnectome(this.gl)\n    this.nodesChanged.dispatchEvent(new CustomEvent('nodeDeleted', { detail: { node } }))\n  }\n\n  updateConnectomeNodeByIndex(index: number, updatedNode: NVConnectomeNode): void {\n    ;(this.nodes as NVConnectomeNode[])[index] = updatedNode\n    this.updateLabels()\n    this.updateConnectome(this.gl)\n    this.nodesChanged.dispatchEvent(new CustomEvent('nodeChanged', { detail: { node: updatedNode } }))\n  }\n\n  updateConnectomeNodeByPoint(point: [number, number, number], updatedNode: NVConnectomeNode): void {\n    // TODO this was updating nodes in this.connectome.nodes\n    const nodes = this.nodes as NVConnectomeNode[]\n    if (!nodes) {\n      throw new Error('Node to update does not exist')\n    }\n    const node = nodes.find((node) => NVUtilities.arraysAreEqual([node.x, node.y, node.z], point))\n    if (!node) {\n      throw new Error(`Node with point ${point} to update does not exist`)\n    }\n    const index = nodes.findIndex((n) => n === node)\n    this.updateConnectomeNodeByIndex(index, updatedNode)\n  }\n\n  addConnectomeEdge(first: number, second: number, colorValue: number): NVConnectomeEdge {\n    const edges = this.edges as NVConnectomeEdge[]\n    let edge = edges.find((f) => (f.first === first || f.second === first) && f.first + f.second === first + second)\n    if (edge) {\n      return edge\n    }\n    edge = { first, second, colorValue }\n    edges.push(edge)\n    this.updateConnectome(this.gl)\n    return edge\n  }\n\n  deleteConnectomeEdge(first: number, second: number): NVConnectomeEdge {\n    const edges = this.edges as NVConnectomeEdge[]\n\n    const edge = edges.find((f) => (f.first === first || f.first === second) && f.first + f.second === first + second)\n    if (edge) {\n      this.edges = edges.filter((e) => e !== edge)\n    } else {\n      throw new Error(`edge between ${first} and ${second} not found`)\n    }\n    this.updateConnectome(this.gl)\n    return edge\n  }\n\n  findClosestConnectomeNode(point: number[], distance: number): NVConnectomeNode | null {\n    const nodes = this.nodes as NVConnectomeNode[]\n    if (!nodes || nodes.length === 0) {\n      return null\n    }\n\n    const closeNodes = nodes\n      .map((n, i) => ({\n        node: n,\n        distance: Math.sqrt(Math.pow(n.x - point[0], 2) + Math.pow(n.y - point[1], 2) + Math.pow(n.z - point[2], 2)),\n        index: i\n      }))\n      .filter((n) => n.distance < distance)\n      .sort((a, b) => a.distance - b.distance)\n    if (closeNodes.length > 0) {\n      return closeNodes[0].node\n    } else {\n      return null\n    }\n  }\n\n  updateConnectome(gl: WebGL2RenderingContext): void {\n    const tris: number[] = []\n    const pts: number[] = []\n    const rgba255: number[] = []\n    let lut = cmapper.colormap(this.nodeColormap, this.colormapInvert)\n    let lutNeg = cmapper.colormap(this.nodeColormapNegative, this.colormapInvert)\n    let hasNeg = 'nodeColormapNegative' in this\n\n    // issue1080 we can have nodes without edges, so edgeMin/Max need not be defined\n    if (this.nodeMinColor === undefined) {\n      this.nodeMinColor = NaN\n    }\n    if (this.nodeMaxColor === undefined) {\n      this.nodeMaxColor = NaN\n    }\n    // issue1080 we can have nodes without edges, so edgeMin/Max need not be defined\n\n    if (this.edgeMin === undefined) {\n      this.edgeMin = NaN\n    }\n    if (this.edgeMax === undefined) {\n      this.edgeMax = NaN\n    }\n    let min = this.nodeMinColor\n    let max = this.nodeMaxColor\n    if (!isFinite(min) || !isFinite(min)) {\n      const nodes = this.nodes as NVConnectomeNode[]\n      min = nodes[0].colorValue\n      max = nodes[0].colorValue\n      for (let i = 0; i < nodes.length; i++) {\n        min = Math.min(min, nodes[i].colorValue)\n        max = Math.max(max, nodes[i].colorValue)\n      }\n    }\n    // TODO these statements can be removed once the node types are cleaned up\n    const nodes = this.nodes as NVConnectomeNode[]\n    const nNode = nodes.length\n    for (let i = 0; i < nNode; i++) {\n      const radius = nodes[i].sizeValue * this.nodeScale\n      if (radius <= 0.0) {\n        continue\n      }\n      let color = nodes[i].colorValue\n      let isNeg = false\n      if (hasNeg && color < 0) {\n        isNeg = true\n        color = -color\n      }\n      if (min < max) {\n        if (color < min) {\n          continue\n        }\n        color = (color - min) / (max - min)\n      } else {\n        color = 1.0\n      }\n      color = Math.round(Math.max(Math.min(255, color * 255))) * 4\n      let rgba = [lut[color], lut[color + 1], lut[color + 2], 255]\n      if (isNeg) {\n        rgba = [lutNeg[color], lutNeg[color + 1], lutNeg[color + 2], 255]\n      }\n      const pt = vec3.fromValues(nodes[i].x, nodes[i].y, nodes[i].z)\n\n      NiivueObject3D.makeColoredSphere(pts, tris, rgba255, radius, pt, rgba)\n    }\n\n    lut = cmapper.colormap(this.edgeColormap, this.colormapInvert)\n    lutNeg = cmapper.colormap(this.edgeColormapNegative, this.colormapInvert)\n    hasNeg = 'edgeColormapNegative' in this\n    // TODO fix edge types\n    const edges = this.edges as NVConnectomeEdge[]\n    if (edges !== undefined && edges.length > 0) {\n      min = this.edgeMin\n      max = this.edgeMax\n      // issue 1080: autodetect range\n      if (!isFinite(min) || !isFinite(min)) {\n        min = edges[0].colorValue\n        max = edges[0].colorValue\n        for (let i = 0; i < edges.length; i++) {\n          min = Math.min(min, edges[i].colorValue)\n          max = Math.max(max, edges[i].colorValue)\n        }\n      }\n      for (const edge of edges) {\n        let color = edge.colorValue\n        const isNeg = hasNeg && color < 0\n        if (isNeg) {\n          color = -color\n        }\n        const radius = color * this.edgeScale\n        if (radius <= 0) {\n          continue\n        }\n        if (min < max) {\n          if (color < min) {\n            continue\n          }\n          color = (color - min) / (max - min)\n        } else {\n          color = 1.0\n        }\n        color = Math.round(Math.max(Math.min(255, color * 255))) * 4\n        let rgba = [lut[color], lut[color + 1], lut[color + 2], 255]\n        if (isNeg) {\n          rgba = [lutNeg[color], lutNeg[color + 1], lutNeg[color + 2], 255]\n        }\n        const pti = vec3.fromValues(nodes[edge.first].x, nodes[edge.first].y, nodes[edge.first].z)\n        const ptj = vec3.fromValues(nodes[edge.second].x, nodes[edge.second].y, nodes[edge.second].z)\n        NiivueObject3D.makeColoredCylinder(pts, tris, rgba255, pti, ptj, radius, rgba)\n      }\n    }\n\n    const pts32 = new Float32Array(pts)\n    const tris32 = new Uint32Array(tris)\n    // calculate spatial extent of connectome: user adjusting node sizes may influence size\n    const obj = NVMeshUtilities.getExtents(pts32)\n\n    this.furthestVertexFromOrigin = obj.mxDx\n    this.extentsMin = obj.extentsMin\n    this.extentsMax = obj.extentsMax\n    const posNormClr = this.generatePosNormClr(pts32, tris32, new Uint8Array(rgba255))\n    // generate webGL buffers and vao\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, Uint32Array.from(tris32), gl.STATIC_DRAW)\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, Float32Array.from(posNormClr), gl.STATIC_DRAW)\n    this.indexCount = tris.length\n  }\n\n  updateMesh(gl: WebGL2RenderingContext): void {\n    this.updateConnectome(gl)\n    this.updateLabels()\n  }\n\n  json(): Connectome {\n    const json: Partial<Connectome> = {}\n    for (const prop in this) {\n      if (prop in defaultOptions || prop === 'nodes' || prop === 'edges') {\n        // @ts-expect-error this is not very ethical; returning every field explicitly would probably be better\n        json[prop as keyof Connectome] = this[prop]\n      }\n    }\n    return json as Connectome\n  }\n\n  /**\n   * Factory method to create connectome from options\n   */\n  static async loadConnectomeFromUrl(gl: WebGL2RenderingContext, url: string): Promise<NVConnectome> {\n    const response = await fetch(url)\n    const json = await response.json()\n    return new NVConnectome(gl, json)\n  }\n}\n","import { mat4, vec3 } from 'gl-matrix'\nimport { NiivueObject3D } from '../niivue-object3D.js'\nimport { getExtents } from './utils.js'\nimport type { NVImage } from './index.js'\n\n/**\n * Creates a NiivueObject3D representation for WebGL rendering from an NVImage.\n * @param nvImage - The NVImage instance\n * @param id - Unique ID for the 3D object\n * @param gl - WebGL2 rendering context\n * @returns NiivueObject3D instance\n */\nexport function toNiivueObject3D(nvImage: NVImage, id: number, gl: WebGL2RenderingContext): NiivueObject3D {\n  // Ensure necessary RAS properties are available on the nvImage object\n  if (!nvImage.dimsRAS || !nvImage.matRAS || !nvImage.pixDimsRAS || !nvImage.vox2mm) {\n    throw new Error('Cannot create NiivueObject3D: Missing required RAS properties or vox2mm access on NVImage.')\n  }\n\n  const dimsRAS = nvImage.dimsRAS as number[]\n  const matRAS = nvImage.matRAS as mat4\n  const pixDimsRAS = nvImage.pixDimsRAS as number[]\n\n  const L = -0.5\n  const P = -0.5\n  const I = -0.5\n  const R = dimsRAS[1] - 1 + 0.5\n  const A = dimsRAS[2] - 1 + 0.5\n  const S = dimsRAS[3] - 1 + 0.5\n\n  const vox2mmFn = nvImage.vox2mm\n\n  // Calculate corner coordinates in mm space\n  const LPI = vox2mmFn.call(nvImage, [L, P, I], matRAS)\n  const LAI = vox2mmFn.call(nvImage, [L, A, I], matRAS)\n  const LPS = vox2mmFn.call(nvImage, [L, P, S], matRAS)\n  const LAS = vox2mmFn.call(nvImage, [L, A, S], matRAS)\n  const RPI = vox2mmFn.call(nvImage, [R, P, I], matRAS)\n  const RAI = vox2mmFn.call(nvImage, [R, A, I], matRAS)\n  const RPS = vox2mmFn.call(nvImage, [R, P, S], matRAS)\n  const RAS = vox2mmFn.call(nvImage, [R, A, S], matRAS)\n\n  // Define vertex positions (XYZ) and texture coordinates (UVW)\n  const posTex = [\n    // Superior face vertices (Indices 0-3)\n    ...LPS,\n    ...[0.0, 0.0, 1.0], // 0\n    ...RPS,\n    ...[1.0, 0.0, 1.0], // 1\n    ...RAS,\n    ...[1.0, 1.0, 1.0], // 2\n    ...LAS,\n    ...[0.0, 1.0, 1.0], // 3\n\n    // Inferior face vertices (Indices 4-7)\n    ...LPI,\n    ...[0.0, 0.0, 0.0], // 4\n    ...LAI,\n    ...[0.0, 1.0, 0.0], // 5\n    ...RAI,\n    ...[1.0, 1.0, 0.0], // 6\n    ...RPI,\n    ...[1.0, 0.0, 0.0] // 7\n  ]\n\n  const indexBuffer = gl.createBuffer()\n  if (!indexBuffer) {\n    throw new Error('Failed to create GL index buffer')\n  }\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\n\n  const indices = [\n    0,\n    3,\n    2,\n    2,\n    1,\n    0, // Top\n    4,\n    7,\n    6,\n    6,\n    5,\n    4, // Bottom\n    5,\n    6,\n    2,\n    2,\n    3,\n    5, // Front -> Corresponds to LAI(5), RAI(6), RAS(2) / RAS(2), LAS(3), LAI(5)\n    4,\n    0,\n    1,\n    1,\n    7,\n    4, // Back -> Corresponds to LPI(4), LPS(0), RPS(1) / RPS(1), RPI(7), LPI(4)\n    7,\n    1,\n    2,\n    2,\n    6,\n    7, // Right -> Corresponds to RPI(7), RPS(1), RAS(2) / RAS(2), RAI(6), RPI(7)\n    4,\n    5,\n    3,\n    3,\n    0,\n    4 // Left -> Corresponds to LPI(4), LAI(5), LAS(3) / LAS(3), LPS(0), LPI(4)\n  ]\n\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW)\n\n  // Create buffer for position and texture coordinates\n  const posTexBuffer = gl.createBuffer()\n  if (!posTexBuffer) {\n    throw new Error('Failed to create GL vertex buffer')\n  }\n  gl.bindBuffer(gl.ARRAY_BUFFER, posTexBuffer)\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(posTex), gl.STATIC_DRAW)\n\n  // Create Vertex Array Object (VAO)\n  const vao = gl.createVertexArray()\n  if (!vao) {\n    throw new Error('Failed to create GL VAO')\n  }\n  gl.bindVertexArray(vao)\n\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer) // Associate index buffer with VAO\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, posTexBuffer) // Associate vertex data buffer with VAO\n  // Configure vertex attributes pointers\n  const stride = 24 // 6 floats * 4 bytes/float = 24 bytes\n  // Vertex spatial position (XYZ) - location 0\n  gl.enableVertexAttribArray(0)\n  gl.vertexAttribPointer(0, 3, gl.FLOAT, false, stride, 0)\n  // Texture coordinates (UVW) - location 1\n  gl.enableVertexAttribArray(1)\n  gl.vertexAttribPointer(1, 3, gl.FLOAT, false, stride, 12) // Offset 12 bytes (3 floats * 4 bytes/float)\n\n  gl.bindVertexArray(null) // Unbind VAO\n\n  // Create the NiivueObject3D instance\n  const obj3D = new NiivueObject3D(id, posTexBuffer, gl.TRIANGLES, indices.length, indexBuffer, vao)\n\n  const allCorners = [...LPS, ...RPS, ...RAS, ...LAS, ...LPI, ...LAI, ...RAI, ...RPI]\n  const extents = getExtents(allCorners) // Use the utility function\n\n  obj3D.extentsMin = extents.min.slice() // Use slice() for safety\n  obj3D.extentsMax = extents.max.slice() // Use slice() for safety\n  obj3D.furthestVertexFromOrigin = extents.furthestVertexFromOrigin\n\n  obj3D.originNegate = vec3.clone(extents.origin)\n  vec3.negate(obj3D.originNegate, obj3D.originNegate)\n\n  // Calculate field of view based on RAS dimensions and pixel sizes\n  obj3D.fieldOfViewDeObliqueMM = [dimsRAS[1] * pixDimsRAS[1], dimsRAS[2] * pixDimsRAS[2], dimsRAS[3] * pixDimsRAS[3]]\n\n  return obj3D\n}\n","import { mat4, vec3, vec4 } from 'gl-matrix'\nimport { log } from '../logger.js'\nimport { NiftiHeader, Volume } from '../types.js'\nimport { NVUtilities } from '../nvutilities.js'\n\nexport function readFileAsDataURL(input: File | FileSystemFileEntry): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    let filePromise: Promise<File>\n\n    if (input instanceof File) {\n      filePromise = Promise.resolve(input)\n    } else {\n      filePromise = new Promise<File>((resolve, reject) => {\n        input.file(resolve, reject)\n      })\n    }\n\n    filePromise\n      .then((file) => {\n        const reader = new FileReader()\n\n        reader.onload = (): void => {\n          if (typeof reader.result === 'string') {\n            resolve(reader.result)\n          } else {\n            reject(new Error('Expected a string from FileReader.result'))\n          }\n        }\n\n        reader.onerror = (): void => {\n          reject(reader.error ?? new Error('Unknown FileReader error'))\n        }\n\n        reader.readAsDataURL(file)\n      })\n      .catch((err) => reject(err))\n  })\n}\n\n// rotate image to match right-anterior-superior voxel order\nexport function img2ras16(volume: Volume): Int16Array {\n  // return image oriented to RAS space as int16\n  const dims = volume.hdr.dims // reverse to original\n  const perm = volume.permRAS\n  const vx = dims[1] * dims[2] * dims[3]\n  // this.drawBitmap = new Uint8Array(vx);\n  const img16 = new Int16Array(vx)\n  const layout = [0, 0, 0]\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      if (Math.abs(perm[i]) - 1 !== j) {\n        continue\n      }\n      layout[j] = i * Math.sign(perm[i])\n    }\n  }\n  let stride = 1\n  const instride = [1, 1, 1]\n  const inflip = [false, false, false]\n  for (let i = 0; i < layout.length; i++) {\n    for (let j = 0; j < layout.length; j++) {\n      const a = Math.abs(layout[j])\n      if (a !== i) {\n        continue\n      }\n      instride[j] = stride\n      // detect -0: https://medium.com/coding-at-dawn/is-negative-zero-0-a-number-in-javascript-c62739f80114\n      if (layout[j] < 0 || Object.is(layout[j], -0)) {\n        inflip[j] = true\n      }\n      stride *= dims[j + 1]\n    }\n  }\n  let xlut = NVUtilities.range(0, dims[1] - 1, 1)\n  if (inflip[0]) {\n    xlut = NVUtilities.range(dims[1] - 1, 0, -1)\n  }\n  for (let i = 0; i < dims[1]; i++) {\n    xlut[i] *= instride[0]\n  }\n  let ylut = NVUtilities.range(0, dims[2] - 1, 1)\n  if (inflip[1]) {\n    ylut = NVUtilities.range(dims[2] - 1, 0, -1)\n  }\n  for (let i = 0; i < dims[2]; i++) {\n    ylut[i] *= instride[1]\n  }\n  let zlut = NVUtilities.range(0, dims[3] - 1, 1)\n  if (inflip[2]) {\n    zlut = NVUtilities.range(dims[3] - 1, 0, -1)\n  }\n  for (let i = 0; i < dims[3]; i++) {\n    zlut[i] *= instride[2]\n  }\n  // convert data\n  let j = 0\n  for (let z = 0; z < dims[3]; z++) {\n    for (let y = 0; y < dims[2]; y++) {\n      for (let x = 0; x < dims[1]; x++) {\n        img16[xlut[x] + ylut[y] + zlut[z]] = volume.img[j]\n        j++\n      }\n    }\n  }\n  return img16\n}\n\nfunction nice(x: number, round: boolean): number {\n  const exp = Math.floor(Math.log(x) / Math.log(10))\n  const f = x / Math.pow(10, exp)\n  let nf\n  if (round) {\n    if (f < 1.5) {\n      nf = 1\n    } else if (f < 3) {\n      nf = 2\n    } else if (f < 7) {\n      nf = 5\n    } else {\n      nf = 10\n    }\n  } else {\n    if (f <= 1) {\n      nf = 1\n    } else if (f <= 2) {\n      nf = 2\n    } else if (f <= 5) {\n      nf = 5\n    } else {\n      nf = 10\n    }\n  }\n  return nf * Math.pow(10, exp)\n}\n\nfunction loose_label(min: number, max: number, ntick = 4): [number, number, number, boolean] {\n  const range = nice(max - min, false)\n  const d = nice(range / (ntick - 1), true)\n  const graphmin = Math.floor(min / d) * d\n  const graphmax = Math.ceil(max / d) * d\n  const perfect = graphmin === min && graphmax === max\n  return [d, graphmin, graphmax, perfect]\n}\n\n// \"Nice Numbers for Graph Labels\", Graphics Gems, pp 61-63\n// https://github.com/cenfun/nice-ticks/blob/master/docs/Nice-Numbers-for-Graph-Labels.pdf\nexport function tickSpacing(mn: number, mx: number): number[] {\n  let v = loose_label(mn, mx, 3)\n  if (!v[3]) {\n    v = loose_label(mn, mx, 5)\n  }\n  if (!v[3]) {\n    v = loose_label(mn, mx, 4)\n  }\n  if (!v[3]) {\n    v = loose_label(mn, mx, 3)\n  }\n  if (!v[3]) {\n    v = loose_label(mn, mx, 5)\n  }\n  return [v[0], v[1], v[2]]\n}\n\n// convert degrees to radians\nexport function deg2rad(deg: number): number {\n  return deg * (Math.PI / 180.0)\n}\n\nexport function negMinMax(min: number, max: number, minNeg: number, maxNeg: number): [number, number] {\n  let mn = -min\n  let mx = -max\n  if (isFinite(minNeg) && isFinite(maxNeg)) {\n    mn = minNeg\n    mx = maxNeg\n  }\n  if (mn > mx) {\n    ;[mn, mx] = [mx, mn]\n  }\n  return [mn, mx]\n}\n\nexport function swizzleVec3(vec: vec3, order = [0, 1, 2]): vec3 {\n  const vout = vec3.create()\n  vout[0] = vec[order[0]]\n  vout[1] = vec[order[1]]\n  vout[2] = vec[order[2]]\n  return vout\n}\n\n// return boolean is 2D slice view is radiological\n// n.b. ambiguous for pure sagittal views\n// TODO: this doesn't return a boolean.\nexport function isRadiological(mtx: mat4): number {\n  const vRight = vec4.fromValues(1, 0, 0, 0) // pure right vector\n  const vRotated = vec4.create()\n  vec4.transformMat4(vRotated, vRight, mtx)\n  return vRotated[0]\n}\n\nexport function unProject(winX: number, winY: number, winZ: number, mvpMatrix: mat4): vec4 {\n  // https://github.com/bringhurst/webgl-unproject\n  const inp = vec4.fromValues(winX, winY, winZ, 1.0)\n  const finalMatrix = mat4.clone(mvpMatrix)\n  // mat.mat4.multiply(finalMatrix, model, proj);\n  mat4.invert(finalMatrix, finalMatrix)\n  // view is leftTopWidthHeight\n  /* Map to range -1 to 1 */\n  inp[0] = inp[0] * 2 - 1\n  inp[1] = inp[1] * 2 - 1\n  inp[2] = inp[2] * 2 - 1\n  const out = vec4.create()\n  vec4.transformMat4(out, inp, finalMatrix)\n  if (out[3] === 0.0) {\n    return out\n  } // error\n  out[0] /= out[3]\n  out[1] /= out[3]\n  out[2] /= out[3]\n  return out\n}\n\nexport function unpackFloatFromVec4i(val: Uint8Array): number {\n  // Convert 32-bit rgba to float32\n  // https://github.com/rii-mango/Papaya/blob/782a19341af77a510d674c777b6da46afb8c65f1/src/js/viewer/screensurface.js#L552\n  const bitSh = [1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1.0]\n  return (val[0] * bitSh[0] + val[1] * bitSh[1] + val[2] * bitSh[2] + val[3] * bitSh[3]) / 255.0\n}\n\n// https://stackoverflow.com/questions/11409895/whats-the-most-elegant-way-to-cap-a-number-to-a-segment\nexport function clamp(value: number, min: number, max: number): number {\n  return Math.min(Math.max(value, min), max)\n}\n\n// Internal function to compress drawing using run length encoding\n// inputs\n// data: Uint8Array to compress\n// output\n// returns rle compressed Uint8Array\nexport function encodeRLE(data: Uint8Array): Uint8Array {\n  // https://en.wikipedia.org/wiki/PackBits\n  // run length encoding\n  // input and output are Uint8Array\n  // Will compress data with long runs up to x64\n  // Worst case encoded size is ~1% larger than input\n  const dl = data.length // input length\n  let dp = 0 // input position\n  // worst case: run length encoding (1+1/127) times larger than input\n  const r = new Uint8Array(dl + Math.ceil(0.01 * dl))\n  const rI = new Int8Array(r.buffer) // typecast as header can be negative\n  let rp = 0 // run length position\n  while (dp < dl) {\n    // for each byte in input\n    let v = data[dp]\n    dp++\n    let rl = 1 // run length\n    while (rl < 129 && dp < dl && data[dp] === v) {\n      dp++\n      rl++\n    }\n    if (rl > 1) {\n      // header\n      rI[rp] = -rl + 1\n      rp++\n      r[rp] = v\n      rp++\n      continue\n    }\n    // count literal length\n    while (dp < dl) {\n      if (rl > 127) {\n        break\n      }\n      if (dp + 2 < dl) {\n        if (v !== data[dp] && data[dp + 2] === data[dp] && data[dp + 1] === data[dp]) {\n          break\n        }\n      }\n      v = data[dp]\n      dp++\n      rl++\n    }\n    // write header\n    r[rp] = rl - 1\n    rp++\n    for (let i = 0; i < rl; i++) {\n      r[rp] = data[dp - rl + i]\n      rp++\n    }\n  }\n  log.info('PackBits ' + dl + ' -> ' + rp + ' bytes (x' + dl / rp + ')')\n  return r.slice(0, rp)\n}\n\n// Internal function to decompress drawing using run length encoding\n// inputs\n// rle: packbits compressed stream\n// decodedlen: size of uncompressed data\n// output\n// returns Uint8Array of decodedlen bytes\nexport function decodeRLE(rle: Uint8Array, decodedlen: number): Uint8Array {\n  const r = new Uint8Array(rle.buffer)\n  const rI = new Int8Array(r.buffer) // typecast as header can be negative\n  let rp = 0 // input position in rle array\n  // d: output uncompressed data array\n  const d = new Uint8Array(decodedlen)\n  let dp = 0 // output position in decoded array\n  while (rp < r.length) {\n    // read header\n    const hdr = rI[rp]\n    rp++\n    if (hdr < 0) {\n      // write run\n      const v = rI[rp]\n      rp++\n      for (let i = 0; i < 1 - hdr; i++) {\n        d[dp] = v\n        dp++\n      }\n    } else {\n      // write literal\n      for (let i = 0; i < hdr + 1; i++) {\n        d[dp] = rI[rp]\n        rp++\n        dp++\n      }\n    }\n  }\n  return d\n}\n\n/**\n * Scale the raw intensity values by the header scale slope and intercept\n * @param hdr - the header object\n * @param raw - the raw intensity values\n * @returns the scaled intensity values\n * @internal\n */\nexport function intensityRaw2Scaled(hdr: NiftiHeader, raw: number): number {\n  if (hdr.scl_slope === 0) {\n    hdr.scl_slope = 1.0\n  }\n  return raw * hdr.scl_slope + hdr.scl_inter\n}\n","import { mat4, vec2, vec3, vec4 } from 'gl-matrix'\nimport { version } from '../../package.json'\nimport { Shader } from '../shader.js'\nimport { log } from '../logger.js'\nimport {\n  vertOrientCubeShader,\n  fragOrientCubeShader,\n  vertSliceMMShader,\n  fragSlice2DShader,\n  fragSliceMMShader,\n  fragSliceV1Shader,\n  vertRectShader,\n  vertLineShader,\n  vertLine3DShader,\n  fragRectShader,\n  fragRectOutlineShader,\n  vertRenderShader,\n  fragRenderShader,\n  fragRenderGradientShader,\n  fragRenderGradientValuesShader,\n  fragRenderSliceShader,\n  vertColorbarShader,\n  fragColorbarShader,\n  vertFontShader,\n  fragFontShader,\n  vertCircleShader,\n  fragCircleShader,\n  vertBmpShader,\n  fragBmpShader,\n  vertOrientShader,\n  vertPassThroughShader,\n  fragPassThroughShader,\n  vertGrowCutShader,\n  fragGrowCutShader,\n  fragOrientShaderU,\n  fragOrientShaderI,\n  fragOrientShaderF,\n  fragOrientShader,\n  fragOrientShaderAtlas,\n  fragRGBOrientShader,\n  vertMeshShader,\n  fragMeshShader,\n  fragMeshToonShader,\n  fragMeshMatcapShader,\n  fragMeshOutlineShader,\n  fragMeshEdgeShader,\n  fragMeshRimShader,\n  fragMeshContourShader,\n  fragMeshShaderCrevice,\n  fragMeshDiffuseEdgeShader,\n  fragMeshHemiShader,\n  fragMeshMatteShader,\n  fragMeshDepthShader,\n  fragMeshShaderSHBlue,\n  fragMeshSpecularEdgeShader,\n  vertFlatMeshShader,\n  fragFlatMeshShader,\n  vertFiberShader,\n  fragFiberShader,\n  vertSurfaceShader,\n  fragSurfaceShader,\n  fragVolumePickingShader,\n  blurVertShader,\n  blurFragShader,\n  sobelBlurFragShader,\n  sobelFirstOrderFragShader,\n  sobelSecondOrderFragShader,\n  gradientOpacityLutCount\n} from '../shader-srcs.js'\nimport { orientCube } from '../orientCube.js'\nimport { NiivueObject3D } from '../niivue-object3D.js'\nimport { LoadFromUrlParams, MeshType, NVMesh, NVMeshLayer } from '../nvmesh.js'\nimport defaultMatCap from '../matcaps/Shiny.jpg'\nimport defaultFontPNG from '../fonts/Roboto-Regular.png'\nimport defaultFontMetrics from '../fonts/Roboto-Regular.json'\nimport { ColorMap, cmapper } from '../colortables.js'\nimport {\n  NVDocument,\n  NVConfigOptions,\n  Scene,\n  SLICE_TYPE,\n  SHOW_RENDER,\n  DRAG_MODE, // DRAG_MODE_SECONDARY is the same as DRAG_MODE. DRAG_MODE may be deprecated.\n  DRAG_MODE_PRIMARY,\n  COLORMAP_TYPE,\n  MULTIPLANAR_TYPE,\n  DEFAULT_OPTIONS,\n  ExportDocumentData,\n  INITIAL_SCENE_DATA\n} from '../nvdocument.js'\n\nimport {\n  LabelTextAlignment,\n  LabelLineTerminator,\n  NVLabel3D,\n  NVLabel3DStyle,\n  LabelAnchorPoint,\n  LabelAnchorFlag\n} from '../nvlabel.js'\nimport { FreeSurferConnectome, NVConnectome } from '../nvconnectome.js'\nimport { NVImage, NVImageFromUrlOptions, NiiDataType, NiiIntentCode, ImageFromUrlOptions } from '../nvimage/index.js'\nimport { NVUtilities } from '../nvutilities.js'\nimport { NVMeshUtilities } from '../nvmesh-utilities.js'\nimport {\n  Connectome,\n  LegacyConnectome,\n  NVConnectomeNode,\n  NiftiHeader,\n  DragReleaseParams,\n  NiiVueLocation,\n  NiiVueLocationValue,\n  SyncOpts\n} from '../types.js'\nimport { toNiivueObject3D } from '../nvimage/RenderingUtils.js'\nimport {\n  clamp,\n  decodeRLE,\n  deg2rad,\n  encodeRLE,\n  img2ras16,\n  intensityRaw2Scaled,\n  isRadiological,\n  negMinMax,\n  swizzleVec3,\n  tickSpacing,\n  unProject,\n  unpackFloatFromVec4i,\n  readFileAsDataURL\n} from './utils.js'\nexport { NVMesh, NVMeshFromUrlOptions, NVMeshLayerDefaults } from '../nvmesh.js'\nexport { ColorTables as colortables, cmapper } from '../colortables.js'\n\nexport { NVImage, NVImageFromUrlOptions } from '../nvimage/index.js'\n// export { NVDocument, SLICE_TYPE, DocumentData } from '../nvdocument.js'\n// address rollup error - https://github.com/rollup/plugins/issues/71\nexport * from '../nvdocument.js'\nexport { NVUtilities } from '../nvutilities.js'\nexport { LabelTextAlignment, LabelLineTerminator, NVLabel3DStyle, NVLabel3D, LabelAnchorPoint } from '../nvlabel.js'\nexport { NVMeshLoaders } from '../nvmesh-loaders.js'\nexport { NVMeshUtilities } from '../nvmesh-utilities.js'\n\n// same rollup error as above during npm run dev, and during the umd build\n// TODO: at least remove the umd build when AFNI do not need it anymore\nexport * from '../types.js'\n\ntype FontMetrics = {\n  distanceRange: number\n  size: number\n  mets: Record<\n    number,\n    {\n      xadv: number\n      uv_lbwh: number[]\n      lbwh: number[]\n    }\n  >\n}\n\ntype ColormapListEntry = {\n  name: string\n  min: number\n  max: number\n  isColorbarFromZero: boolean\n  negative: boolean\n  visible: boolean\n  invert: boolean\n}\n\ntype Graph = {\n  LTWH: number[]\n  plotLTWH?: number[]\n  opacity: number\n  vols: number[]\n  autoSizeMultiplanar: boolean\n  normalizeValues: boolean\n  isRangeCalMinMax: boolean\n  backColor?: number[]\n  lineColor?: number[]\n  textColor?: number[]\n  lineThickness?: number\n  gridLineThickness?: number\n  lineAlpha?: number\n  lines?: number[][]\n  selectedColumn?: number\n  lineRGB?: number[][]\n}\n\ntype Descriptive = {\n  mean: number\n  stdev: number\n  nvox: number\n  volumeMM3: number\n  volumeML: number\n  min: number\n  max: number\n  meanNot0: number\n  stdevNot0: number\n  nvoxNot0: number\n  minNot0: number\n  maxNot0: number\n  cal_min: number\n  cal_max: number\n  robust_min: number\n  robust_max: number\n  area: number | null\n}\n\ntype SliceScale = {\n  volScale: number[]\n  vox: number[]\n  longestAxis: number\n  dimsMM: vec3\n}\n\ntype MvpMatrix2D = {\n  modelViewProjectionMatrix: mat4\n  modelMatrix: mat4\n  normalMatrix: mat4\n  leftTopMM: number[]\n  fovMM: number[]\n}\n\ntype MM = {\n  mnMM: vec3\n  mxMM: vec3\n  rotation: mat4\n  fovMM: vec3\n}\n\n/**\n * mesh file formats that can be loaded\n */\nconst MESH_EXTENSIONS = [\n  'ASC',\n  'BYU',\n  'DFS',\n  'FSM',\n  'PIAL',\n  'ORIG',\n  'INFLATED',\n  'SMOOTHWM',\n  'SPHERE',\n  'WHITE',\n  'G',\n  'GEO',\n  'GII',\n  'ICO',\n  'MZ3',\n  'NV',\n  'OBJ',\n  'OFF',\n  'PLY',\n  'SRF',\n  'STL',\n  'TCK',\n  'TRACT',\n  'TRI',\n  'TRK',\n  'TT',\n  'TRX',\n  'VTK',\n  'WRL',\n  'X3D',\n  'JCON',\n  'JSON'\n]\n\n// mouse button codes\nconst LEFT_MOUSE_BUTTON = 0\nconst CENTER_MOUSE_BUTTON = 1\nconst RIGHT_MOUSE_BUTTON = 2\n\n// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n// gl.TEXTURE0..31 are constants 0x84C0..0x84DF = 33984..34015\n// https://github.com/niivue/niivue/blob/main/docs/development-notes/webgl.md\n// persistent textures\nconst TEXTURE0_BACK_VOL = 33984\nconst TEXTURE1_COLORMAPS = 33985\nconst TEXTURE2_OVERLAY_VOL = 33986\nconst TEXTURE3_FONT = 33987\nconst TEXTURE4_THUMBNAIL = 33988\nconst TEXTURE5_MATCAP = 33989\nconst TEXTURE6_GRADIENT = 33990\nconst TEXTURE7_DRAW = 33991\n// subsequent textures only used transiently\nconst TEXTURE8_GRADIENT_TEMP = 33992\nconst TEXTURE9_ORIENT = 33993\nconst TEXTURE10_BLEND = 33994\nconst TEXTURE11_GC_BACK = 33995\nconst TEXTURE12_GC_STRENGTH0 = 33996\nconst TEXTURE13_GC_STRENGTH1 = 33997\nconst TEXTURE14_GC_LABEL0 = 33998\nconst TEXTURE15_GC_LABEL1 = 33999\n\ntype UIData = {\n  mousedown: boolean\n  touchdown: boolean\n  mouseButtonLeftDown: boolean\n  mouseButtonCenterDown: boolean\n  mouseButtonRightDown: boolean\n  mouseDepthPicker: boolean\n  clickedTile: number\n  pan2DxyzmmAtMouseDown: vec4\n  prevX: number\n  prevY: number\n  currX: number\n  currY: number\n  currentTouchTime: number\n  lastTouchTime: number\n  touchTimer: NodeJS.Timeout | null\n  doubleTouch: boolean\n  isDragging: boolean\n  dragStart: number[]\n  dragEnd: number[]\n  dragClipPlaneStartDepthAziElev: number[]\n  lastTwoTouchDistance: number\n  multiTouchGesture: boolean\n  dpr?: number\n  max2D?: number\n  max3D?: number\n  windowX: number // used to track mouse position for DRAG_MODE_PRIMARY.windowing\n  windowY: number // used to track mouse position for DRAG_MODE_PRIMARY.windowing\n}\n\ntype SaveImageOptions = {\n  filename: string\n  isSaveDrawing: boolean\n  volumeByIndex: number\n}\n\n// default SaveImageOptions\nconst defaultSaveImageOptions: SaveImageOptions = {\n  filename: '',\n  isSaveDrawing: false,\n  volumeByIndex: 0\n}\n\nexport type DicomLoaderInput = ArrayBuffer | ArrayBuffer[] | File[]\n\nexport type DicomLoader = {\n  loader: (data: DicomLoaderInput) => Promise<Array<{ name: string; data: ArrayBuffer }>>\n  toExt: string\n}\n\n/**\n * Niivue can be attached to a canvas. An instance of Niivue contains methods for\n * loading and rendering NIFTI image data in a WebGL 2.0 context.\n *\n * @example\n * let niivue = new Niivue({crosshairColor: [0,1,0,0.5], textHeight: 0.5}) // a see-through green crosshair, and larger text labels\n */\nexport class Niivue {\n  loaders = {}\n  // create a dicom loader\n  dicomLoader: DicomLoader | null = null\n  // {\n  //   loader: (data: DicomLoaderInput) => {\n  //     return new Promise<{name: string; data: ArrayBuffer}[]>((resolve, reject) => {\n  //       reject('No DICOM loader provided')\n  //     })\n  //   },\n  //   toExt: 'nii'\n  // }\n  canvas: HTMLCanvasElement | null = null // the reference to the canvas element on the page\n  _gl: WebGL2RenderingContext | null = null // the gl context\n  isBusy = false // flag to indicate if the scene is busy drawing\n  needsRefresh = false // flag to indicate if the scene needs to be redrawn\n  colormapTexture: WebGLTexture | null = null // the GPU memory storage of the colormap\n  colormapLists: ColormapListEntry[] = [] // one entry per colorbar: min, max, tic\n  volumeTexture: WebGLTexture | null = null // the GPU memory storage of the volume\n  gradientTexture: WebGLTexture | null = null // 3D texture for volume rendering lighting\n  gradientTextureAmount = 0.0\n  renderGradientValues = false\n  drawTexture: WebGLTexture | null = null // the GPU memory storage of the drawing\n  drawUndoBitmaps: Uint8Array[] = [] // array of drawBitmaps for undo\n  drawLut = cmapper.makeDrawLut('$itksnap') // the color lookup table for drawing\n  drawOpacity = 0.8 // opacity of drawing (default)\n  clickToSegmentIsGrowing = false // flag to indicate if the clickToSegment flood fill growing is in progress with left mouse down + drag\n  clickToSegmentGrowingBitmap: Uint8Array | null = null // the bitmap of the growing flood fill\n  clickToSegmentXY = [0, 0] // the x,y location of the clickToSegment flood fill\n  renderDrawAmbientOcclusion = 0.4\n  colorbarHeight = 0 // height in pixels, set when colorbar is drawn\n  drawPenLocation = [NaN, NaN, NaN]\n  drawPenAxCorSag = -1 // do not allow pen to drag between Sagittal/Coronal/Axial\n  drawFillOverwrites = true // if true, fill overwrites existing drawing\n  drawPenFillPts: number[][] = [] // store mouse points for filled pen\n  overlayTexture: WebGLTexture | null = null\n  overlayTextureID: WebGLTexture | null = null\n  sliceMMShader?: Shader\n  slice2DShader?: Shader\n  sliceV1Shader?: Shader\n  orientCubeShader?: Shader\n  orientCubeShaderVAO: WebGLVertexArrayObject | null = null\n  rectShader?: Shader\n  rectOutlineShader?: Shader\n  renderShader?: Shader\n  lineShader?: Shader\n  line3DShader?: Shader\n  passThroughShader?: Shader\n  renderGradientShader?: Shader\n  renderGradientValuesShader?: Shader\n  renderSliceShader?: Shader\n  renderVolumeShader?: Shader\n  pickingMeshShader?: Shader\n  pickingImageShader?: Shader\n  colorbarShader?: Shader\n  fontShader: Shader | null = null\n  fiberShader?: Shader\n  fontTexture: WebGLTexture | null = null\n  circleShader?: Shader\n  matCapTexture: WebGLTexture | null = null\n  bmpShader: Shader | null = null\n  bmpTexture: WebGLTexture | null = null // thumbnail WebGLTexture object\n  thumbnailVisible = false\n  bmpTextureWH = 1.0 // thumbnail width/height ratio\n  growCutShader?: Shader\n  orientShaderAtlasU: Shader | null = null\n  orientShaderAtlasI: Shader | null = null\n  orientShaderU: Shader | null = null\n  orientShaderI: Shader | null = null\n  orientShaderF: Shader | null = null\n  orientShaderRGBU: Shader | null = null\n  surfaceShader: Shader | null = null\n  blurShader: Shader | null = null\n  sobelBlurShader: Shader | null = null\n  sobelFirstOrderShader: Shader | null = null\n  sobelSecondOrderShader: Shader | null = null\n  genericVAO: WebGLVertexArrayObject | null = null // used for 2D slices, 2D lines, 2D Fonts\n  unusedVAO = null\n  crosshairs3D: NiivueObject3D | null = null\n  private DEFAULT_FONT_GLYPH_SHEET = defaultFontPNG // \"/fonts/Roboto-Regular.png\";\n  private DEFAULT_FONT_METRICS = defaultFontMetrics // \"/fonts/Roboto-Regular.json\";\n  private fontMetrics?: typeof defaultFontMetrics\n  private fontMets: FontMetrics | null = null\n  backgroundMasksOverlays = 0\n  overlayOutlineWidth = 0 // float, 0 for none\n  overlayAlphaShader = 1 // float, 1 for opaque\n  position?: vec3\n  extentsMin?: vec3\n  extentsMax?: vec3\n  // ResizeObserver\n  private resizeObserver: ResizeObserver | null = null\n  private resizeEventListener: (() => void) | null = null\n  private canvasObserver: MutationObserver | null = null\n  // syncOpts: Record<string, unknown> = {}\n  syncOpts: SyncOpts = {\n    '3d': false, // legacy option\n    '2d': false, // legacy option\n    zoomPan: false,\n    cal_min: false,\n    cal_max: false,\n    clipPlane: false,\n    gamma: false,\n    sliceType: false,\n    crosshair: false\n  }\n\n  readyForSync = false\n\n  // UI Data\n  uiData: UIData = {\n    mousedown: false,\n    touchdown: false,\n    mouseButtonLeftDown: false,\n    mouseButtonCenterDown: false,\n    mouseButtonRightDown: false,\n    mouseDepthPicker: false,\n    clickedTile: -1,\n\n    pan2DxyzmmAtMouseDown: [0, 0, 0, 1],\n    prevX: 0,\n    prevY: 0,\n    currX: 0,\n    currY: 0,\n    currentTouchTime: 0,\n    lastTouchTime: 0,\n    touchTimer: null,\n    doubleTouch: false,\n    isDragging: false,\n    dragStart: [0.0, 0.0],\n    dragEnd: [0.0, 0.0],\n    dragClipPlaneStartDepthAziElev: [0, 0, 0],\n    lastTwoTouchDistance: 0,\n    multiTouchGesture: false,\n    windowX: 0,\n    windowY: 0\n  }\n\n  back: NVImage | null = null // base layer; defines image space to work in. Defined as this.volumes[0] in Niivue.loadVolumes\n  overlays: NVImage[] = [] // layers added on top of base image (e.g. masks or stat maps). Essentially everything after this.volumes[0] is an overlay. So is necessary?\n  deferredVolumes: ImageFromUrlOptions[] = []\n  deferredMeshes: LoadFromUrlParams[] = []\n  furthestVertexFromOrigin = 100\n  volScale: number[] = []\n  vox: number[] = []\n  mousePos = [0, 0]\n  screenSlices: Array<{\n    leftTopWidthHeight: number[]\n    axCorSag: SLICE_TYPE\n    sliceFrac: number\n    AxyzMxy: number[]\n    leftTopMM: number[]\n    fovMM: number[]\n    screen2frac?: number[]\n  }> = [] // empty array\n\n  cuboidVertexBuffer?: WebGLBuffer\n\n  otherNV: Niivue[] | null = null // another niivue instance that we wish to sync position with\n  volumeObject3D: NiivueObject3D | null = null\n  pivot3D = [0, 0, 0] // center for rendering rotation\n  furthestFromPivot = 10.0 // most distant point from pivot\n\n  currentClipPlaneIndex = 0\n  lastCalled = new Date().getTime()\n\n  selectedObjectId = -1\n  CLIP_PLANE_ID = 1\n  VOLUME_ID = 254\n  DISTANCE_FROM_CAMERA = -0.54\n  graph: Graph = {\n    LTWH: [0, 0, 640, 480],\n    opacity: 0.0,\n    vols: [0], // e.g. timeline for background volume only, e.g. [0,2] for first and third volumes\n    autoSizeMultiplanar: false,\n    normalizeValues: false,\n    isRangeCalMinMax: false\n  }\n\n  customLayout: Array<{\n    sliceType: SLICE_TYPE\n    position: [number, number, number, number] // left, top, width, height\n    sliceMM?: number\n  }> = []\n\n  meshShaders: Array<{ Name: string; Frag: string; shader?: Shader }> = [\n    {\n      Name: 'Phong',\n      Frag: fragMeshShader\n    },\n    {\n      Name: 'Matte',\n      Frag: fragMeshMatteShader\n    },\n    {\n      Name: 'Harmonic',\n      Frag: fragMeshShaderSHBlue\n    },\n    {\n      Name: 'Hemispheric',\n      Frag: fragMeshHemiShader\n    },\n    {\n      Name: 'Crevice',\n      Frag: fragMeshShaderCrevice\n    },\n    {\n      Name: 'Edge',\n      Frag: fragMeshEdgeShader\n    },\n    {\n      Name: 'Diffuse',\n      Frag: fragMeshDiffuseEdgeShader\n    },\n    {\n      Name: 'Outline',\n      Frag: fragMeshOutlineShader\n    },\n    {\n      Name: 'Specular',\n      Frag: fragMeshSpecularEdgeShader\n    },\n    {\n      Name: 'Toon',\n      Frag: fragMeshToonShader\n    },\n    {\n      Name: 'Flat',\n      Frag: fragFlatMeshShader\n    },\n    {\n      Name: 'Matcap',\n      Frag: fragMeshMatcapShader\n    },\n    {\n      Name: 'Rim',\n      Frag: fragMeshRimShader\n    },\n    {\n      Name: 'Silhouette',\n      Frag: fragMeshContourShader\n    }\n  ]\n\n  // TODO just let users use DRAG_MODE instead\n  dragModes = {\n    contrast: DRAG_MODE.contrast,\n    measurement: DRAG_MODE.measurement,\n    none: DRAG_MODE.none,\n    pan: DRAG_MODE.pan,\n    slicer3D: DRAG_MODE.slicer3D,\n    callbackOnly: DRAG_MODE.callbackOnly\n  }\n\n  // TODO just let users use SLICE_TYPE instead\n  sliceTypeAxial = SLICE_TYPE.AXIAL\n  sliceTypeCoronal = SLICE_TYPE.CORONAL\n  sliceTypeSagittal = SLICE_TYPE.SAGITTAL\n  sliceTypeMultiplanar = SLICE_TYPE.MULTIPLANAR\n  sliceTypeRender = SLICE_TYPE.RENDER\n\n  // Event listeners\n  /**\n   * callback function to run when the right mouse button is released after dragging\n   * @example\n   * niivue.onDragRelease = () => {\n   *   console.log('drag ended')\n   * }\n   */\n  onDragRelease: (params: DragReleaseParams) => void = () => {} // function to call when contrast drag is released by default. Can be overridden by user\n\n  /**\n   * callback function to run when the left mouse button is released\n   * @example\n   * niivue.onMouseUp = () => {\n   *   console.log('mouse up')\n   * }\n   */\n  onMouseUp: (data: Partial<UIData>) => void = () => {}\n  /**\n   * callback function to run when the crosshair location changes\n   * @example\n   * niivue.onLocationChange = (data) => {\n   * console.log('location changed')\n   * console.log('mm: ', data.mm)\n   * console.log('vox: ', data.vox)\n   * console.log('frac: ', data.frac)\n   * console.log('values: ', data.values)\n   * }\n   */\n  onLocationChange: (location: unknown) => void = () => {}\n  /**\n   * callback function to run when the user changes the intensity range with the selection box action (right click)\n   * @example\n   * niivue.onIntensityChange = (volume) => {\n   * console.log('intensity changed')\n   * console.log('volume: ', volume)\n   * }\n   */\n  onIntensityChange: (volume: NVImage) => void = () => {}\n\n  /**\n   * callback function when clickToSegment is enabled and the user clicks on the image. data contains the volume of the segmented region in mm3 and mL\n   * @example\n   * niivue.onClickToSegment = (data) => {\n   * console.log('clicked to segment')\n   * console.log('volume mm3: ', data.mm3)\n   * console.log('volume mL: ', data.mL)\n   * }\n   */\n  onClickToSegment: (data: { mm3: number; mL: number }) => void = () => {}\n\n  /**\n   * callback function to run when a new volume is loaded\n   * @example\n   * niivue.onImageLoaded = (volume) => {\n   * console.log('volume loaded')\n   * console.log('volume: ', volume)\n   * }\n   */\n  onImageLoaded: (volume: NVImage) => void = () => {}\n\n  /**\n   * callback function to run when a new mesh is loaded\n   * @example\n   * niivue.onMeshLoaded = (mesh) => {\n   * console.log('mesh loaded')\n   * console.log('mesh: ', mesh)\n   * }\n   */\n  onMeshLoaded: (mesh: NVMesh) => void = () => {}\n\n  /**\n   * callback function to run when the user changes the volume when a 4D image is loaded\n   * @example\n   * niivue.onFrameChange = (volume, frameNumber) => {\n   * console.log('frame changed')\n   * console.log('volume: ', volume)\n   * console.log('frameNumber: ', frameNumber)\n   * }\n   */\n  onFrameChange: (volume: NVImage, index: number) => void = () => {}\n\n  /**\n   * callback function to run when niivue reports an error\n   * @example\n   * niivue.onError = (error) => {\n   * console.log('error: ', error)\n   * }\n   */\n  onError: () => void = () => {}\n\n  /// TODO was undocumented\n  onColormapChange: () => void = () => {}\n\n  /**\n   * callback function to run when niivue reports detailed info\n   * @example\n   * niivue.onInfo = (info) => {\n   * console.log('info: ', info)\n   * }\n   */\n  onInfo: () => void = () => {}\n\n  /**\n   * callback function to run when niivue reports a warning\n   * @example\n   * niivue.onWarn = (warn) => {\n   * console.log('warn: ', warn)\n   * }\n   */\n  onWarn: () => void = () => {}\n\n  /**\n   * callback function to run when niivue reports a debug message\n   * @example\n   * niivue.onDebug = (debug) => {\n   * console.log('debug: ', debug)\n   * }\n   */\n  onDebug: () => void = () => {}\n\n  /**\n   * callback function to run when a volume is added from a url\n   * @example\n   * niivue.onVolumeAddedFromUrl = (imageOptions, volume) => {\n   * console.log('volume added from url')\n   * console.log('imageOptions: ', imageOptions)\n   * console.log('volume: ', volume)\n   * }\n   */\n  onVolumeAddedFromUrl: (imageOptions: ImageFromUrlOptions, volume: NVImage) => void = () => {}\n  onVolumeWithUrlRemoved: (url: string) => void = () => {}\n\n  /**\n   * callback function to run when updateGLVolume is called (most users will not need to use\n   * @example\n   * niivue.onVolumeUpdated = () => {\n   * console.log('volume updated')\n   * }\n   */\n  onVolumeUpdated: () => void = () => {}\n\n  /**\n   * callback function to run when a mesh is added from a url\n   * @example\n   * niivue.onMeshAddedFromUrl = (meshOptions, mesh) => {\n   * console.log('mesh added from url')\n   * console.log('meshOptions: ', meshOptions)\n   * console.log('mesh: ', mesh)\n   * }\n   */\n  onMeshAddedFromUrl: (meshOptions: LoadFromUrlParams, mesh: NVMesh) => void = () => {}\n\n  // TODO seems redundant with onMeshLoaded\n  onMeshAdded: () => void = () => {}\n  onMeshWithUrlRemoved: (url: string) => void = () => {}\n\n  // not implemented anywhere...\n  onZoom3DChange: (zoom: number) => void = () => {}\n\n  /**\n   * callback function to run when the user changes the rotation of the 3D rendering\n   * @example\n   * niivue.onAzimuthElevationChange = (azimuth, elevation) => {\n   * console.log('azimuth: ', azimuth)\n   * console.log('elevation: ', elevation)\n   * }\n   */\n  onAzimuthElevationChange: (azimuth: number, elevation: number) => void = () => {}\n\n  /**\n   * callback function to run when the user changes the clip plane\n   * @example\n   * niivue.onClipPlaneChange = (clipPlane) => {\n   * console.log('clipPlane: ', clipPlane)\n   * }\n   */\n  onClipPlaneChange: (clipPlane: number[]) => void = () => {}\n  onCustomMeshShaderAdded: (fragmentShaderText: string, name: string) => void = () => {}\n  onMeshShaderChanged: (meshIndex: number, shaderIndex: number) => void = () => {}\n  onMeshPropertyChanged: (meshIndex: number, key: string, val: unknown) => void = () => {}\n\n  onDicomLoaderFinishedWithImages: (files: NVImage[] | NVMesh[]) => void = () => {}\n\n  /**\n   * callback function to run when the user loads a new NiiVue document\n   * @example\n   * niivue.onDocumentLoaded = (document) => {\n   * console.log('document: ', document)\n   * }\n   */\n  onDocumentLoaded: (document: NVDocument) => void = () => {}\n\n  document = new NVDocument()\n\n  get scene(): Scene {\n    return this.document.scene\n  }\n\n  get opts(): NVConfigOptions {\n    return this.document.opts\n  }\n\n  get sliceMosaicString(): string {\n    return this.document.opts.sliceMosaicString || ''\n  }\n\n  set sliceMosaicString(newSliceMosaicString: string) {\n    this.document.opts.sliceMosaicString = newSliceMosaicString\n  }\n\n  get isAlphaClipDark(): boolean {\n    return this.document.opts.isAlphaClipDark\n  }\n\n  set isAlphaClipDark(newVal) {\n    this.document.opts.isAlphaClipDark = newVal\n  }\n\n  mediaUrlMap: Map<NVImage | NVMesh, string> = new Map()\n  initialized = false\n  currentDrawUndoBitmap: number\n\n  /**\n   * @param options  - options object to set modifiable Niivue properties\n   */\n  constructor(options: Partial<NVConfigOptions> = DEFAULT_OPTIONS) {\n    // populate Niivue with user supplied options\n    for (const name in options) {\n      // if the user supplied a function for a callback, use it, else use the default callback or nothing\n      if (typeof options[name as keyof typeof options] === 'function') {\n        this[name] = options[name]\n      } else {\n        this.opts[name] = DEFAULT_OPTIONS[name] === undefined ? DEFAULT_OPTIONS[name] : options[name]\n      }\n    }\n    if (this.opts.forceDevicePixelRatio === 0) {\n      this.uiData.dpr = window.devicePixelRatio || 1\n    } else if (this.opts.forceDevicePixelRatio < 0) {\n      this.uiData.dpr = 1\n    } else {\n      this.uiData.dpr = this.opts.forceDevicePixelRatio\n    }\n\n    // now that opts have been parsed, set the current undo to max undo\n    this.currentDrawUndoBitmap = this.opts.maxDrawUndoBitmaps // analogy: cylinder position of a revolver\n\n    if (this.opts.drawingEnabled) {\n      this.createEmptyDrawing()\n    }\n\n    if (this.opts.thumbnail.length > 0) {\n      this.thumbnailVisible = true\n    }\n\n    log.setLogLevel(this.opts.logLevel)\n  }\n\n  /**\n   * Clean up event listeners and observers\n   * Call this when the Niivue instance is no longer needed.\n   * This will be called when the canvas is detached from the DOM\n   * @example niivue.cleanup();\n   */\n  cleanup(): void {\n    // Clean up resize listener\n    if (this.resizeEventListener) {\n      window.removeEventListener('resize', this.resizeEventListener)\n      this.resizeEventListener = null\n    }\n\n    // Clean up resize observer\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect()\n      this.resizeObserver = null\n    }\n\n    // Clean up canvas observer\n    if (this.canvasObserver) {\n      this.canvasObserver.disconnect()\n      this.canvasObserver = null\n    }\n\n    // Remove all interaction event listeners\n    if (this.canvas && this.opts.interactive) {\n      // Mouse events\n      this.canvas.removeEventListener('mousedown', this.mouseDownListener.bind(this))\n      this.canvas.removeEventListener('mouseup', this.mouseUpListener.bind(this))\n      this.canvas.removeEventListener('mousemove', this.mouseMoveListener.bind(this))\n\n      // Touch events\n      this.canvas.removeEventListener('touchstart', this.touchStartListener.bind(this))\n      this.canvas.removeEventListener('touchend', this.touchEndListener.bind(this))\n      this.canvas.removeEventListener('touchmove', this.touchMoveListener.bind(this))\n\n      // Other events\n      this.canvas.removeEventListener('wheel', this.wheelListener.bind(this))\n      this.canvas.removeEventListener('contextmenu', this.mouseContextMenuListener.bind(this))\n      this.canvas.removeEventListener('dblclick', this.resetBriCon.bind(this))\n\n      // Drag and drop\n      this.canvas.removeEventListener('dragenter', this.dragEnterListener.bind(this))\n      this.canvas.removeEventListener('dragover', this.dragOverListener.bind(this))\n      this.canvas.removeEventListener('drop', this.dropListener.bind(this))\n\n      // Keyboard events\n      this.canvas.removeEventListener('keyup', this.keyUpListener.bind(this))\n      this.canvas.removeEventListener('keydown', this.keyDownListener.bind(this))\n    }\n\n    // Todo: other cleanup tasks could be added here\n  }\n\n  get volumes(): NVImage[] {\n    return this.document.volumes\n  }\n\n  set volumes(volumes) {\n    this.document.volumes = volumes\n  }\n\n  get meshes(): NVMesh[] {\n    return this.document.meshes\n  }\n\n  set meshes(meshes) {\n    this.document.meshes = meshes\n  }\n\n  get drawBitmap(): Uint8Array | null {\n    return this.document.drawBitmap\n  }\n\n  set drawBitmap(drawBitmap) {\n    this.document.drawBitmap = drawBitmap\n  }\n\n  get volScaleMultiplier(): number {\n    return this.scene.volScaleMultiplier\n  }\n\n  set volScaleMultiplier(scale) {\n    this.setScale(scale)\n  }\n\n  /**\n   * save webgl2 canvas as png format bitmap\n   * @param filename - filename for screen capture\n   * @example niivue.saveScene('test.png');\n   * @see {@link https://niivue.github.io/niivue/features/ui.html | live demo usage}\n   */\n  async saveScene(filename = 'niivue.png'): Promise<void> {\n    function saveBlob(blob: Blob, name: string): void {\n      const a = document.createElement('a')\n      document.body.appendChild(a)\n      a.style.display = 'none'\n      const url = window.URL.createObjectURL(blob)\n      a.href = url\n      a.download = name\n      a.click()\n      a.remove()\n    }\n\n    const canvas = this.canvas\n\n    if (!canvas) {\n      throw new Error('canvas not defined')\n    }\n    this.drawScene()\n    canvas.toBlob((blob) => {\n      if (!blob) {\n        return\n      }\n      if (filename === '') {\n        filename = `niivue-screenshot-${new Date().toString()}.png`\n        filename = filename.replace(/\\s/g, '_')\n      }\n      saveBlob(blob, filename)\n    })\n  }\n\n  /**\n   * attach the Niivue instance to the webgl2 canvas by element id\n   * @param id - the id of an html canvas element\n   * @param isAntiAlias - determines if anti-aliasing is requested (if not specified, AA usage depends on hardware)\n   * @example niivue = new Niivue().attachTo('gl')\n   * @example await niivue.attachTo('gl')\n   * @see {@link https://niivue.github.io/niivue/features/basic.multiplanar.html | live demo usage}\n   */\n  async attachTo(id: string, isAntiAlias = null): Promise<this> {\n    await this.attachToCanvas(document.getElementById(id) as HTMLCanvasElement, isAntiAlias)\n    log.debug('attached to element with id: ', id)\n    return this\n  }\n\n  /**\n   * attach the Niivue instance to a canvas element directly\n   * @param canvas - the canvas element reference\n   * @example\n   * niivue = new Niivue()\n   * await niivue.attachToCanvas(document.getElementById(id))\n   */\n  async attachToCanvas(canvas: HTMLCanvasElement, isAntiAlias: boolean | null = null): Promise<this> {\n    this.canvas = canvas\n    if (isAntiAlias === null) {\n      isAntiAlias = navigator.hardwareConcurrency > 6\n      log.debug('AntiAlias ', isAntiAlias, ' Threads ', navigator.hardwareConcurrency)\n    }\n    this.gl = this.canvas.getContext('webgl2', {\n      alpha: true,\n      antialias: isAntiAlias\n    })\n    this.uiData.max2D = this.gl.getParameter(this.gl.MAX_TEXTURE_SIZE)\n    this.uiData.max3D = this.gl.getParameter(this.gl.MAX_3D_TEXTURE_SIZE)\n\n    log.info('NIIVUE VERSION ', version)\n    log.debug(`Max texture size 2D: ${this.uiData.max2D} 3D: ${this.uiData.max3D}`)\n\n    // set parent background container to black (default empty canvas color)\n    // avoids white cube around image in 3D render mode\n    this.canvas!.parentElement!.style.backgroundColor = 'black'\n    // fill all space in parent\n    if (this.opts.isResizeCanvas) {\n      this.canvas.style.width = '100%'\n      this.canvas.style.height = '100%'\n      this.canvas.style.display = 'block'\n      this.canvas.width = this.canvas.offsetWidth\n      this.canvas.height = this.canvas.offsetHeight\n      // Store a reference to the bound event handler function\n      this.resizeEventListener = (): void => {\n        requestAnimationFrame(() => {\n          this.resizeListener()\n        })\n      }\n      window.addEventListener('resize', this.resizeEventListener)\n      this.resizeObserver = new ResizeObserver(() => {\n        requestAnimationFrame(() => {\n          this.resizeListener()\n        })\n      })\n      this.resizeObserver.observe(this.canvas.parentElement!)\n\n      // Setup a MutationObserver to detect when canvas is removed from DOM\n      this.canvasObserver = new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n          if (\n            mutation.type === 'childList' &&\n            mutation.removedNodes.length > 0 &&\n            Array.from(mutation.removedNodes).includes(this.canvas)\n          ) {\n            this.cleanup()\n            break\n          }\n        }\n      })\n      this.canvasObserver.observe(this.canvas.parentElement!, { childList: true })\n    }\n    if (this.opts.interactive) {\n      this.registerInteractions() // attach mouse click and touch screen event handlers for the canvas\n    }\n    await this.init()\n    this.drawScene()\n    return this\n  }\n\n  /**\n   * Sync the scene controls (orientation, crosshair location, etc.) from one Niivue instance to another. useful for using one canvas to drive another.\n   * @param otherNV - the other Niivue instance that is the main controller\n   * @example\n   * niivue1 = new Niivue()\n   * niivue2 = new Niivue()\n   * niivue2.syncWith(niivue1)\n   * @deprecated use broadcastTo instead\n   * @see {@link https://niivue.github.io/niivue/features/sync.mesh.html | live demo usage}\n   */\n  syncWith(otherNV: Niivue | Niivue[], syncOpts = { '2d': true, '3d': true }): void {\n    // if otherNV is not an array, make it an array of one\n    if (!(otherNV instanceof Array)) {\n      otherNV = [otherNV]\n    }\n    this.otherNV = otherNV\n    this.syncOpts = { ...syncOpts }\n  }\n\n  /**\n   * Sync the scene controls (orientation, crosshair location, etc.) from one Niivue instance to others. useful for using one canvas to drive another.\n   * @param otherNV - the other Niivue instance(s)\n   * @example\n   * niivue1 = new Niivue()\n   * niivue2 = new Niivue()\n   * niivue3 = new Niivue()\n   * niivue1.broadcastTo(niivue2)\n   * niivue1.broadcastTo([niivue2, niivue3])\n   * @see {@link https://niivue.github.io/niivue/features/sync.mesh.html | live demo usage}\n   */\n  broadcastTo(otherNV: Niivue | Niivue[], syncOpts = { '2d': true, '3d': true }): void {\n    // if otherNV is a single instance then make it an array of one\n    if (!(otherNV instanceof Array)) {\n      otherNV = [otherNV]\n    }\n    this.otherNV = otherNV\n    this.syncOpts = syncOpts\n  }\n\n  doSync3d(otherNV: Niivue): void {\n    otherNV.scene.renderAzimuth = this.scene.renderAzimuth\n    otherNV.scene.renderElevation = this.scene.renderElevation\n    otherNV.scene.volScaleMultiplier = this.scene.volScaleMultiplier\n  }\n\n  // both crosshair and zoomPan\n  doSync2d(otherNV: Niivue): void {\n    const thisMM = this.frac2mm(this.scene.crosshairPos)\n    otherNV.scene.crosshairPos = otherNV.mm2frac(thisMM)\n    otherNV.scene.pan2Dxyzmm = vec4.clone(this.scene.pan2Dxyzmm)\n  }\n\n  doSyncGamma(otherNV: Niivue): void {\n    // gamma not dependent on 2d/3d\n    const thisGamma = this.scene.gamma\n    const otherGamma = otherNV.scene.gamma\n    if (thisGamma !== otherGamma) {\n      otherNV.setGamma(thisGamma)\n    }\n  }\n\n  doSyncZoomPan(otherNV: Niivue): void {\n    otherNV.scene.pan2Dxyzmm = vec4.clone(this.scene.pan2Dxyzmm)\n  }\n\n  doSyncCrosshair(otherNV: Niivue): void {\n    const thisMM = this.frac2mm(this.scene.crosshairPos)\n    otherNV.scene.crosshairPos = otherNV.mm2frac(thisMM)\n  }\n\n  doSyncCalMin(otherNV: Niivue): void {\n    // only call updateGLVolume if the cal_min is different\n    // because updateGLVolume is expensive, but required to update the volume\n    if (this.volumes[0].cal_min !== otherNV.volumes[0].cal_min) {\n      otherNV.volumes[0].cal_min = this.volumes[0].cal_min\n      otherNV.updateGLVolume()\n    }\n  }\n\n  doSyncCalMax(otherNV: Niivue): void {\n    // only call updateGLVolume if the cal_max is different\n    // because updateGLVolume is expensive, but required to update the volume\n    if (this.volumes[0].cal_max !== otherNV.volumes[0].cal_max) {\n      otherNV.volumes[0].cal_max = this.volumes[0].cal_max\n      otherNV.updateGLVolume()\n    }\n  }\n\n  doSyncSliceType(otherNV: Niivue): void {\n    otherNV.setSliceType(this.opts.sliceType)\n  }\n\n  doSyncClipPlane(otherNV: Niivue): void {\n    otherNV.setClipPlane(this.scene.clipPlaneDepthAziElev)\n  }\n\n  /**\n   * Sync the scene controls (orientation, crosshair location, etc.) from one Niivue instance to another. useful for using one canvas to drive another.\n   * @internal\n   * @example\n   * niivue1 = new Niivue()\n   * niivue2 = new Niivue()\n   * niivue2.syncWith(niivue1)\n   * niivue2.sync()\n   */\n  sync(): void {\n    if (!this.gl || !this.otherNV || typeof this.otherNV === 'undefined') {\n      return\n    }\n    // canvas must have focus to send messages issue706\n    if (!(this.gl.canvas as HTMLCanvasElement).matches(':focus')) {\n      return\n    }\n    for (let i = 0; i < this.otherNV.length; i++) {\n      if (this.otherNV[i] === this) {\n        continue\n      }\n      // gamma\n      if (this.syncOpts.gamma) {\n        this.doSyncGamma(this.otherNV[i])\n      }\n      // crosshair\n      if (this.syncOpts.crosshair) {\n        this.doSyncCrosshair(this.otherNV[i])\n      }\n      // zoomPan\n      if (this.syncOpts.zoomPan) {\n        this.doSyncZoomPan(this.otherNV[i])\n      }\n      // sliceType\n      if (this.syncOpts.sliceType) {\n        this.doSyncSliceType(this.otherNV[i])\n      }\n      // cal_min\n      if (this.syncOpts.cal_min) {\n        this.doSyncCalMin(this.otherNV[i])\n      }\n      // cal_max\n      if (this.syncOpts.cal_max) {\n        this.doSyncCalMax(this.otherNV[i])\n      }\n      // clipPlane\n      if (this.syncOpts.clipPlane) {\n        this.doSyncClipPlane(this.otherNV[i])\n      }\n      // legacy 2d option for multiple properties\n      if (this.syncOpts['2d']) {\n        this.doSync2d(this.otherNV[i])\n      }\n      // legacy 3d option for multiple properties\n      if (this.syncOpts['3d']) {\n        this.doSync3d(this.otherNV[i])\n      }\n      this.otherNV[i].drawScene()\n      this.otherNV[i].createOnLocationChange()\n    }\n  }\n\n  /** Not documented publicly for now\n   * test if two arrays have equal values for each element\n   * @param a - the first array\n   * @param b - the second array\n   * @example Niivue.arrayEquals(a, b)\n   *\n   * TODO this should maybe just use array-equal from NPM\n   */\n  arrayEquals(a: unknown[], b: unknown[]): boolean {\n    return Array.isArray(a) && Array.isArray(b) && a.length === b.length && a.every((val, index) => val === b[index])\n  }\n\n  /**\n   * callback function to handle resize window events, redraws the scene.\n   * @internal\n   */\n  resizeListener(): void {\n    if (!this.canvas || !this.gl) {\n      return\n    }\n    if (!this.opts.isResizeCanvas) {\n      if (this.opts.forceDevicePixelRatio >= 0) {\n        log.warn('this.opts.forceDevicePixelRatio requires isResizeCanvas')\n      }\n      this.drawScene()\n      return\n    }\n    this.canvas.style.width = '100%'\n    this.canvas.style.height = '100%'\n    this.canvas.style.display = 'block'\n\n    // https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n    // https://www.khronos.org/webgl/wiki/HandlingHighDPI\n    if (this.opts.forceDevicePixelRatio === 0) {\n      this.uiData.dpr = window.devicePixelRatio || 1\n    } else if (this.opts.forceDevicePixelRatio < 0) {\n      this.uiData.dpr = 1\n    } else {\n      this.uiData.dpr = this.opts.forceDevicePixelRatio\n    }\n    log.debug('devicePixelRatio: ' + this.uiData.dpr)\n    if ('width' in this.canvas.parentElement!) {\n      this.canvas.width = (this.canvas.parentElement.width as number) * this.uiData.dpr\n      // @ts-expect-error not sure why height is not defined for HTMLElement\n      this.canvas.height = this.canvas.parentElement.height * this.uiData.dpr\n    } else {\n      this.canvas.width = this.canvas.offsetWidth * this.uiData.dpr\n      this.canvas.height = this.canvas.offsetHeight * this.uiData.dpr\n    }\n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height)\n    this.drawScene()\n  }\n\n  /* Not included in public docs\n   * The following two functions are to address offset issues\n   * https://stackoverflow.com/questions/42309715/how-to-correctly-pass-mouse-coordinates-to-webgl\n   * note:  no test yet\n   */\n  /**\n   * callback to handle mouse move events relative to the canvas\n   * @internal\n   * @returns the mouse position relative to the canvas\n   */\n  getRelativeMousePosition(event: MouseEvent, target?: EventTarget | null): { x: number; y: number } | undefined {\n    target = target || event.target\n    if (!target) {\n      return\n    }\n    // @ts-expect-error -- not sure how this works, this would be an EventTarget?\n    const rect = target.getBoundingClientRect()\n    return {\n      x: event.clientX - rect.left,\n      y: event.clientY - rect.top\n    }\n  }\n\n  // not included in public docs\n  // assumes target or event.target is canvas\n  // note: no test yet\n  getNoPaddingNoBorderCanvasRelativeMousePosition(\n    event: MouseEvent,\n    target: EventTarget\n  ): { x: number; y: number } | undefined {\n    target = target || event.target\n    const pos = this.getRelativeMousePosition(event, target)\n    return pos\n  }\n\n  // not included in public docs\n  // handler for context menu (right click)\n  // here, we disable the normal context menu so that\n  // we can use some custom right click events\n  // note: no test yet\n  mouseContextMenuListener(e: MouseEvent): void {\n    e.preventDefault()\n  }\n\n  // not included in public docs\n  // handler for all mouse button presses\n  // note: no test yet\n  mouseDownListener(e: MouseEvent): void {\n    e.preventDefault()\n    // var rect = this.canvas.getBoundingClientRect();\n    this.drawPenLocation = [NaN, NaN, NaN]\n    this.drawPenAxCorSag = -1\n    this.uiData.mousedown = true\n    // reset drag positions used previously.\n    this.setDragStart(0, 0)\n    this.setDragEnd(0, 0)\n    log.debug('mouse down')\n    log.debug(e)\n    // record tile where mouse clicked\n    const pos = this.getNoPaddingNoBorderCanvasRelativeMousePosition(e, this.gl.canvas)\n    if (!pos) {\n      return\n    }\n\n    const [x, y] = [pos.x * this.uiData.dpr!, pos.y * this.uiData.dpr!]\n    if (this.opts.clickToSegment) {\n      this.clickToSegmentXY = [x, y]\n    }\n    const label = this.getLabelAtPoint([x, y])\n    if (label) {\n      // check for user defined onclick handler\n      if (label.onClick) {\n        label.onClick(label, e)\n        return\n      }\n      // find associated mesh\n      for (const mesh of this.meshes) {\n        if (mesh.type !== MeshType.CONNECTOME) {\n          continue\n        }\n        for (const node of mesh.nodes as NVConnectomeNode[]) {\n          if (node.label === label) {\n            this.scene.crosshairPos = this.mm2frac([node.x, node.y, node.z])\n            this.updateGLVolume()\n            this.drawScene()\n          }\n        }\n      }\n    }\n    this.uiData.clickedTile = this.tileIndex(x, y)\n    // respond to different types of mouse clicks\n    if (e.button === LEFT_MOUSE_BUTTON && e.shiftKey) {\n      this.uiData.mouseButtonCenterDown = true\n      this.mouseCenterButtonHandler(e)\n    } else if (e.button === LEFT_MOUSE_BUTTON) {\n      this.uiData.mouseButtonLeftDown = true\n      this.mouseLeftButtonHandler(e)\n    } else if (e.button === RIGHT_MOUSE_BUTTON) {\n      this.uiData.mouseButtonRightDown = true\n      this.mouseRightButtonHandler(e)\n    } else if (e.button === CENTER_MOUSE_BUTTON) {\n      this.uiData.mouseButtonCenterDown = true\n      this.mouseCenterButtonHandler(e)\n    }\n  }\n\n  // not included in public docs\n  // handler for mouse left button down\n  // note: no test yet\n  mouseLeftButtonHandler(e: MouseEvent): void {\n    // need to check for control key here in case the user want to override the drag mode\n    if (e.ctrlKey || this.opts.dragModePrimary === DRAG_MODE_PRIMARY.crosshair) {\n      const pos = this.getNoPaddingNoBorderCanvasRelativeMousePosition(e, this.gl.canvas)\n      this.mouseDown(pos!.x, pos!.y)\n      this.mouseClick(pos!.x, pos!.y)\n    } else if (this.opts.dragModePrimary === DRAG_MODE_PRIMARY.windowing) {\n      // save the state of the x and y mouse coordinates for the next comparison on mouse move\n      this.uiData.windowX = e.x\n      this.uiData.windowY = e.y\n    }\n  }\n\n  // not included in public docs\n  // handler for mouse center button down\n  // note: no test yet\n  mouseCenterButtonHandler(e: MouseEvent): void {\n    const pos = this.getNoPaddingNoBorderCanvasRelativeMousePosition(e, this.gl.canvas)\n    this.mousePos = [pos!.x * this.uiData.dpr!, pos!.y * this.uiData.dpr!]\n    if (this.opts.dragMode === DRAG_MODE.none) {\n      return\n    }\n    this.setDragStart(pos!.x, pos!.y)\n    if (!this.uiData.isDragging) {\n      this.uiData.pan2DxyzmmAtMouseDown = vec4.clone(this.scene.pan2Dxyzmm)\n    }\n    this.uiData.isDragging = true\n    this.uiData.dragClipPlaneStartDepthAziElev = this.scene.clipPlaneDepthAziElev\n  }\n\n  // not included in public docs\n  // handler for mouse right button down\n  // note: no test yet\n  mouseRightButtonHandler(e: MouseEvent): void {\n    // this.uiData.isDragging = true;\n    const pos = this.getNoPaddingNoBorderCanvasRelativeMousePosition(e, this.gl.canvas)\n    this.mousePos = [pos!.x * this.uiData.dpr!, pos!.y * this.uiData.dpr!]\n    if (this.opts.dragMode === DRAG_MODE.none) {\n      return\n    }\n    this.setDragStart(pos!.x, pos!.y)\n    if (!this.uiData.isDragging) {\n      this.uiData.pan2DxyzmmAtMouseDown = vec4.clone(this.scene.pan2Dxyzmm)\n    }\n    this.uiData.isDragging = true\n    this.uiData.dragClipPlaneStartDepthAziElev = this.scene.clipPlaneDepthAziElev\n  }\n\n  /**\n   * calculate the the min and max voxel indices from an array of two values (used in selecting intensities with the selection box)\n   * @param array - an array of two values\n   * @returns an array of two values representing the min and max voxel indices\n   */\n  calculateMinMaxVoxIdx(array: number[]): number[] {\n    if (array.length > 2) {\n      throw new Error('array must not contain more than two values')\n    }\n    return [Math.floor(Math.min(array[0], array[1])), Math.floor(Math.max(array[0], array[1]))]\n  }\n\n  // not included in public docs\n  // note: no test yet\n  calculateNewRange({ volIdx = 0 } = {}): void {\n    if (this.opts.sliceType === SLICE_TYPE.RENDER && this.sliceMosaicString.length < 1) {\n      return\n    }\n    if (this.uiData.dragStart[0] === this.uiData.dragEnd[0] && this.uiData.dragStart[1] === this.uiData.dragEnd[1]) {\n      return\n    }\n    // calculate our box\n    let frac = this.canvasPos2frac([this.uiData.dragStart[0], this.uiData.dragStart[1]])\n    if (frac[0] < 0) {\n      return\n    }\n    const startVox = this.frac2vox(frac, volIdx)\n    frac = this.canvasPos2frac([this.uiData.dragEnd[0], this.uiData.dragEnd[1]])\n    if (frac[0] < 0) {\n      return\n    }\n    const endVox = this.frac2vox(frac, volIdx)\n\n    let hi = -Number.MAX_VALUE\n    let lo = Number.MAX_VALUE\n    const xrange = this.calculateMinMaxVoxIdx([startVox[0], endVox[0]])\n    const yrange = this.calculateMinMaxVoxIdx([startVox[1], endVox[1]])\n    const zrange = this.calculateMinMaxVoxIdx([startVox[2], endVox[2]])\n\n    // for our constant dimension we add one so that the for loop runs at least once\n    if (startVox[0] - endVox[0] === 0) {\n      xrange[1] = startVox[0] + 1\n    } else if (startVox[1] - endVox[1] === 0) {\n      yrange[1] = startVox[1] + 1\n    } else if (startVox[2] - endVox[2] === 0) {\n      zrange[1] = startVox[2] + 1\n    }\n\n    const hdr = this.volumes[volIdx].hdr\n    const img = this.volumes[volIdx].img\n    if (!hdr || !img) {\n      return\n    }\n\n    const xdim = hdr.dims[1]\n    const ydim = hdr.dims[2]\n    for (let z = zrange[0]; z < zrange[1]; z++) {\n      const zi = z * xdim * ydim\n      for (let y = yrange[0]; y < yrange[1]; y++) {\n        const yi = y * xdim\n        for (let x = xrange[0]; x < xrange[1]; x++) {\n          const index = zi + yi + x\n          if (lo > img[index]) {\n            lo = img[index]\n          }\n          if (hi < img[index]) {\n            hi = img[index]\n          }\n        }\n      }\n    }\n    if (lo >= hi) {\n      return\n    } // no variability or outside volume\n    const mnScale = intensityRaw2Scaled(hdr, lo)\n    const mxScale = intensityRaw2Scaled(hdr, hi)\n    this.volumes[volIdx].cal_min = mnScale\n    this.volumes[volIdx].cal_max = mxScale\n    this.onIntensityChange(this.volumes[volIdx])\n  }\n\n  generateMouseUpCallback(fracStart: vec3, fracEnd: vec3): void {\n    // calculate details for callback\n    const tileStart = this.tileIndex(this.uiData.dragStart[0], this.uiData.dragStart[1])\n    const tileEnd = this.tileIndex(this.uiData.dragEnd[0], this.uiData.dragEnd[1])\n    // a tile index of -1 indicates invalid: drag not constrained to one tile\n    let tileIdx = -1\n    if (tileStart === tileEnd) {\n      tileIdx = tileEnd\n    }\n    let axCorSag = -1\n    if (tileIdx >= 0) {\n      axCorSag = this.screenSlices[tileIdx].axCorSag\n    }\n    const mmStart = this.frac2mm(fracStart)\n    const mmEnd = this.frac2mm(fracEnd)\n    const v = vec3.create()\n    vec3.sub(v, vec3.fromValues(mmStart[0], mmStart[1], mmStart[2]), vec3.fromValues(mmEnd[0], mmEnd[1], mmEnd[2]))\n    const mmLength = vec3.len(v)\n    const voxStart = this.frac2vox(fracStart)\n    const voxEnd = this.frac2vox(fracEnd)\n    this.onDragRelease({\n      fracStart,\n      fracEnd,\n      voxStart,\n      voxEnd,\n      mmStart,\n      mmEnd,\n      mmLength,\n      tileIdx,\n      axCorSag\n    })\n  }\n\n  // not included in public docs\n  // handler for mouse button up (all buttons)\n  // note: no test yet\n  mouseUpListener(): void {\n    function isFunction(test: unknown): boolean {\n      return Object.prototype.toString.call(test).indexOf('Function') > -1\n    }\n    // let fracPos = this.canvasPos2frac(this.mousePos);\n    const uiData = {\n      mouseButtonRightDown: this.uiData.mouseButtonRightDown,\n      mouseButtonCenterDown: this.uiData.mouseButtonCenterDown,\n      isDragging: this.uiData.isDragging,\n      mousePos: this.mousePos,\n      fracPos: this.canvasPos2frac(this.mousePos)\n      // xyzMM: this.frac2mm(fracPos),\n    }\n    this.uiData.mousedown = false\n    this.uiData.mouseButtonRightDown = false\n    const wasCenterDown = this.uiData.mouseButtonCenterDown\n    this.uiData.mouseButtonCenterDown = false\n    this.uiData.mouseButtonLeftDown = false\n    if (this.drawPenFillPts.length > 0) {\n      this.drawPenFilled()\n    }\n    this.drawPenLocation = [NaN, NaN, NaN]\n    this.drawPenAxCorSag = -1\n    if (isFunction(this.onMouseUp)) {\n      this.onMouseUp(uiData)\n    }\n    if (this.uiData.isDragging) {\n      this.uiData.isDragging = false\n      if (this.opts.dragMode === DRAG_MODE.callbackOnly) {\n        this.drawScene()\n      } // hide selectionbox\n      const fracStart = this.canvasPos2frac([this.uiData.dragStart[0], this.uiData.dragStart[1]])\n      const fracEnd = this.canvasPos2frac([this.uiData.dragEnd[0], this.uiData.dragEnd[1]])\n      this.generateMouseUpCallback(fracStart, fracEnd)\n      // if roiSelection drag mode\n      if (this.opts.dragMode === DRAG_MODE.roiSelection) {\n        // do not call drawScene so that the selection box remains visible\n        return\n      }\n      if (this.opts.dragMode !== DRAG_MODE.contrast) {\n        return\n      }\n      if (wasCenterDown) {\n        return\n      }\n      if (this.uiData.dragStart[0] === this.uiData.dragEnd[0] && this.uiData.dragStart[1] === this.uiData.dragEnd[1]) {\n        return\n      }\n      this.calculateNewRange({ volIdx: 0 })\n      this.refreshLayers(this.volumes[0], 0)\n    }\n    this.drawScene()\n  }\n\n  // not included in public docs\n  checkMultitouch(e: TouchEvent): void {\n    if (this.uiData.touchdown && !this.uiData.multiTouchGesture) {\n      const rect = this.canvas!.getBoundingClientRect()\n      this.mouseDown(e.touches[0].clientX - rect.left, e.touches[0].clientY - rect.top)\n\n      this.mouseClick(e.touches[0].clientX - rect.left, e.touches[0].clientY - rect.top)\n    }\n  }\n\n  // not included in public docs\n  // handler for single finger touch event (like mouse down)\n  // note: no test yet\n  touchStartListener(e: TouchEvent): void {\n    e.preventDefault()\n    if (!this.uiData.touchTimer) {\n      this.uiData.touchTimer = setTimeout(() => {\n        // this.drawScene()\n        this.resetBriCon(e)\n      }, this.opts.longTouchTimeout)\n    }\n    this.uiData.touchdown = true\n    this.uiData.currentTouchTime = new Date().getTime()\n    const timeSinceTouch = this.uiData.currentTouchTime - this.uiData.lastTouchTime\n    if (timeSinceTouch < this.opts.doubleTouchTimeout && timeSinceTouch > 0) {\n      this.uiData.doubleTouch = true\n      this.setDragStart(\n        e.targetTouches[0].clientX - (e.target as HTMLElement).getBoundingClientRect().left,\n        e.targetTouches[0].clientY - (e.target as HTMLElement).getBoundingClientRect().top\n      )\n      this.resetBriCon(e)\n      this.uiData.lastTouchTime = this.uiData.currentTouchTime\n      return\n    } else {\n      // reset values to be ready for next touch\n      this.uiData.doubleTouch = false\n      this.setDragStart(0, 0)\n      this.setDragEnd(0, 0)\n      this.uiData.lastTouchTime = this.uiData.currentTouchTime\n    }\n    if (this.uiData.touchdown && e.touches.length < 2) {\n      this.uiData.multiTouchGesture = false\n    } else {\n      this.uiData.multiTouchGesture = true\n    }\n    setTimeout(this.checkMultitouch.bind(this), 1, e)\n  }\n\n  // not included in public docs\n  // handler for touchend (finger lift off screen)\n  // note: no test yet\n  touchEndListener(e: TouchEvent): void {\n    e.preventDefault()\n    this.uiData.touchdown = false\n    this.uiData.lastTwoTouchDistance = 0\n    this.uiData.multiTouchGesture = false\n    if (this.uiData.touchTimer) {\n      clearTimeout(this.uiData.touchTimer)\n      this.uiData.touchTimer = null\n    }\n    if (this.uiData.isDragging) {\n      this.uiData.isDragging = false\n      // if drag mode is contrast, and the user double taps and drags...\n      if (this.opts.dragMode === DRAG_MODE.contrast) {\n        this.calculateNewRange()\n        this.refreshLayers(this.volumes[0], 0)\n      }\n      const fracStart = this.canvasPos2frac([this.uiData.dragStart[0], this.uiData.dragStart[1]])\n      const fracEnd = this.canvasPos2frac([this.uiData.dragEnd[0], this.uiData.dragEnd[1]])\n      // just use the generateMouseUpCallback since it\n      // does everything we need (same as the behaviour in mouseUpListener)\n      this.generateMouseUpCallback(fracStart, fracEnd)\n    }\n    // mouseUp generates this.drawScene();\n    this.mouseUpListener()\n  }\n\n  windowingHandler(x: number, y: number, volIdx: number = 0): void {\n    // x and y are the current mouse or touch position in window coordinates\n    const wx = this.uiData.windowX\n    const wy = this.uiData.windowY\n    let mn = this.volumes[0].cal_min\n    let mx = this.volumes[0].cal_max\n    const gmn = this.volumes[0].global_min\n    const gmx = this.volumes[0].global_max\n\n    if (y < wy) {\n      // increase level if mouse moves up\n      mn += 1\n      mx += 1\n    } else if (y > wy) {\n      // decrease level if mouse moves down\n      mn -= 1\n      mx -= 1\n    }\n\n    if (x > wx) {\n      // increase window width if mouse moves right\n      mn -= 1\n      mx += 1\n    } else if (x < wx) {\n      // decrease window width if mouse moves left\n      mn += 1\n      mx -= 1\n    }\n\n    if (mx - mn < 1) {\n      // ensure window width is at least 1\n      mx = mn + 1\n    }\n\n    if (mn < gmn) {\n      // ensure min is not below global min\n      mn = gmn\n    }\n\n    if (mx > gmx) {\n      // ensure max is not above global max\n      mx = gmx\n    }\n\n    if (mn > mx) {\n      // ensure min is not above max\n      mn = mx - 1\n    }\n\n    this.volumes[volIdx].cal_min = mn\n    this.volumes[volIdx].cal_max = mx\n    this.refreshLayers(this.volumes[volIdx], 0)\n    // set the current mouse position (window space) as the new reference point\n    // for the next comparison\n    this.uiData.windowX = x\n    this.uiData.windowY = y\n  }\n\n  // not included in public docs\n  // handler for mouse leaving the canvas\n  mouseLeaveListener(): void {\n    // If clickToSegment preview was active, deactivate and refresh drawing\n    if (this.clickToSegmentIsGrowing) {\n      log.debug('Mouse left canvas, stopping clickToSegment preview.')\n      this.clickToSegmentIsGrowing = false\n      // Refresh the GPU texture using the main drawBitmap to hide preview\n      this.refreshDrawing(true, false)\n    }\n\n    // Reset pen state if drawing was in progress\n    if (this.opts.drawingEnabled && !isNaN(this.drawPenLocation[0])) {\n      log.debug('Mouse left canvas during drawing, resetting pen state.')\n      this.drawPenLocation = [NaN, NaN, NaN]\n      this.drawPenAxCorSag = -1\n      this.drawPenFillPts = []\n    }\n\n    // Reset drag state if mouse leaves during drag\n    if (this.uiData.isDragging) {\n      log.debug('Mouse left canvas during drag, resetting drag state.')\n      this.uiData.isDragging = false\n      this.uiData.mouseButtonLeftDown = false\n      this.uiData.mouseButtonCenterDown = false\n      this.uiData.mouseButtonRightDown = false\n      this.uiData.mousedown = false\n      this.drawScene()\n    }\n  }\n\n  // not included in public docs\n  // handler for mouse move over canvas\n  // note: no test yet\n  mouseMoveListener(e: MouseEvent): void {\n    // move crosshair and change slices if mouse click and move\n    if (this.uiData.mousedown) {\n      const pos = this.getNoPaddingNoBorderCanvasRelativeMousePosition(e, this.gl.canvas)\n      // ignore if mouse moves outside of tile of initial click\n      if (!pos) {\n        return\n      }\n\n      const x = pos.x * this.uiData.dpr!\n      const y = pos.y * this.uiData.dpr!\n      const tile = this.tileIndex(x, y)\n      if (tile !== this.uiData.clickedTile) {\n        return\n      }\n      if (this.uiData.mouseButtonLeftDown) {\n        const isCrosshairMode = this.opts.dragModePrimary === DRAG_MODE_PRIMARY.crosshair\n        const isWindowingMode = this.opts.dragModePrimary === DRAG_MODE_PRIMARY.windowing\n        const ctrlKey = e.ctrlKey\n        if (ctrlKey || isCrosshairMode) {\n          this.mouseMove(pos.x, pos.y)\n          this.mouseClick(pos.x, pos.y)\n        } else if (isWindowingMode) {\n          this.windowingHandler(e.x, e.y)\n        }\n      } else if (this.uiData.mouseButtonRightDown || this.uiData.mouseButtonCenterDown) {\n        this.setDragEnd(pos.x, pos.y)\n      }\n      this.drawScene()\n      this.uiData.prevX = this.uiData.currX\n      this.uiData.prevY = this.uiData.currY\n    } else if (!this.uiData.mousedown && this.opts.clickToSegment) {\n      // Handle clickToSegment preview OUTSIDE the mousedown block\n      const pos = this.getNoPaddingNoBorderCanvasRelativeMousePosition(e, this.gl.canvas)\n      // ignore if mouse moves outside canvas\n      if (!pos) {\n        return\n      }\n      const x = pos.x * this.uiData.dpr!\n      const y = pos.y * this.uiData.dpr!\n      this.mousePos = [x, y]\n\n      // Find the tile under the cursor\n      const tileIdx = this.tileIndex(x, y)\n\n      // If over a valid tile and drawing is enabled, perform preview\n      if (tileIdx >= 0 && this.opts.drawingEnabled) {\n        // Get the actual orientation type for the specific tile\n        const axCorSag = this.screenSlices[tileIdx].axCorSag\n        // Ensure it's a 2D slice view\n        if (axCorSag <= SLICE_TYPE.SAGITTAL) {\n          this.clickToSegmentXY = [x, y]\n          this.clickToSegmentIsGrowing = true // Indicate preview mode\n          // Pass the TILE INDEX to doClickToSegment\n          this.doClickToSegment({\n            x, // Screen X\n            y, // Screen Y\n            tileIndex: tileIdx\n          })\n        }\n      }\n    }\n  }\n\n  // not included in public docs\n  // note: should update this to accept a volume index to reset a selected volume rather than only the background (TODO)\n  // reset brightness and contrast to global min and max\n  // note: no test yet\n  resetBriCon(msg: TouchEvent | MouseEvent | null = null): void {\n    // this.volumes[0].cal_min = this.volumes[0].global_min;\n    // this.volumes[0].cal_max = this.volumes[0].global_max;\n    // don't reset bri/con if the user is in 3D mode and double clicks\n    if (this.uiData.isDragging) {\n      return\n    }\n    let isRender = false\n    if (this.opts.sliceType === SLICE_TYPE.RENDER) {\n      isRender = true\n    }\n    let x = 0\n    let y = 0\n    if (msg !== null) {\n      // if a touch event\n      if ('targetTouches' in msg) {\n        x = msg.targetTouches[0].clientX - (msg.target as HTMLElement).getBoundingClientRect().left\n        y = msg.targetTouches[0].clientY - (msg.target as HTMLElement).getBoundingClientRect().top\n      } else {\n        // if a mouse event\n        x = msg.offsetX\n        y = msg.offsetY\n      }\n      x *= this.uiData.dpr!\n      y *= this.uiData.dpr!\n      // test if render is one of the tiles\n      if (this.inRenderTile(x, y) >= 0) {\n        isRender = true\n      }\n    }\n    if (isRender) {\n      this.uiData.mouseDepthPicker = true\n      this.drawScene()\n      this.drawScene() // this duplicate drawScene is necessary for depth picking. DO NOT REMOVE\n      return\n    }\n    if (this.opts.dragMode === DRAG_MODE.slicer3D) {\n      return\n    }\n    if (this.volumes.length < 1) {\n      return\n    } // issue468, AFTER render depth picking\n    if (this.uiData.doubleTouch) {\n      return\n    }\n    this.volumes[0].cal_min = this.volumes[0].robust_min\n    this.volumes[0].cal_max = this.volumes[0].robust_max\n    this.onIntensityChange(this.volumes[0])\n    this.refreshLayers(this.volumes[0], 0)\n    this.drawScene()\n  }\n\n  setDragStart(x: number, y: number): void {\n    x *= this.uiData.dpr!\n    y *= this.uiData.dpr!\n    this.uiData.dragStart[0] = x\n    this.uiData.dragStart[1] = y\n  }\n\n  setDragEnd(x: number, y: number): void {\n    x *= this.uiData.dpr!\n    y *= this.uiData.dpr!\n    this.uiData.dragEnd[0] = x\n    this.uiData.dragEnd[1] = y\n  }\n\n  // not included in public docs\n  // handler for touch move (moving finger on screen)\n  // note: no test yet\n  touchMoveListener(e: TouchEvent): void {\n    if (this.uiData.touchdown && e.touches.length < 2) {\n      const rect = this.canvas!.getBoundingClientRect()\n      if (!this.uiData.isDragging) {\n        this.uiData.pan2DxyzmmAtMouseDown = vec4.clone(this.scene.pan2Dxyzmm)\n      }\n      this.uiData.isDragging = true\n      if (this.uiData.doubleTouch && this.uiData.isDragging) {\n        this.setDragEnd(\n          e.targetTouches[0].clientX - (e.target as HTMLElement).getBoundingClientRect().left,\n          e.targetTouches[0].clientY - (e.target as HTMLElement).getBoundingClientRect().top\n        )\n        this.drawScene()\n        return\n      }\n      const isCrosshairMode = this.opts.dragModePrimary === DRAG_MODE_PRIMARY.crosshair\n      const isWindowingMode = this.opts.dragModePrimary === DRAG_MODE_PRIMARY.windowing\n      if (isCrosshairMode) {\n        this.mouseClick(e.touches[0].clientX - rect.left, e.touches[0].clientY - rect.top)\n        this.mouseMove(e.touches[0].clientX - rect.left, e.touches[0].clientY - rect.top)\n      } else if (isWindowingMode) {\n        this.windowingHandler(e.touches[0].pageX, e.touches[0].pageY)\n        this.drawScene()\n      }\n    } else {\n      // Check this event for 2-touch Move/Pinch/Zoom gesture\n      this.handlePinchZoom(e)\n    }\n  }\n\n  // not included in public docs\n  handlePinchZoom(e: TouchEvent): void {\n    if (e.targetTouches.length === 2 && e.changedTouches.length === 2) {\n      const dist = Math.hypot(e.touches[0].pageX - e.touches[1].pageX, e.touches[0].pageY - e.touches[1].pageY)\n\n      const rect = this.canvas!.getBoundingClientRect()\n      this.mousePos = [e.touches[0].clientX - rect.left, e.touches[0].clientY - rect.top]\n\n      // scroll 2D slices\n      if (dist < this.uiData.lastTwoTouchDistance) {\n        // this.scene.volScaleMultiplier = Math.max(0.5, this.scene.volScaleMultiplier * 0.95);\n        this.sliceScroll2D(-0.01, e.touches[0].clientX - rect.left, e.touches[0].clientY - rect.top)\n      } else {\n        // this.scene.volScaleMultiplier = Math.min(2.0, this.scene.volScaleMultiplier * 1.05);\n        this.sliceScroll2D(0.01, e.touches[0].clientX - rect.left, e.touches[0].clientY - rect.top)\n      }\n      // this.drawScene();\n      this.uiData.lastTwoTouchDistance = dist\n    }\n  }\n\n  // not included in public docs\n  // handler for keyboard shortcuts\n  keyUpListener(e: KeyboardEvent): void {\n    if (e.code === this.opts.clipPlaneHotKey) {\n      /* if (this.opts.sliceType!= SLICE_TYPE.RENDER) {\n      return;\n    } */ // bravo\n      const now = new Date().getTime()\n      const elapsed = now - this.lastCalled\n      if (elapsed > this.opts.keyDebounceTime) {\n        this.currentClipPlaneIndex = (this.currentClipPlaneIndex + 1) % 7\n        switch (this.currentClipPlaneIndex) {\n          case 0: // NONE\n            this.scene.clipPlaneDepthAziElev = [2, 0, 0]\n            break\n          case 1: // left a 270 e 0\n            // this.scene.clipPlane = [1, 0, 0, 0];\n            this.scene.clipPlaneDepthAziElev = [0, 270, 0]\n            break\n          case 2: // right a 90 e 0\n            this.scene.clipPlaneDepthAziElev = [0, 90, 0]\n            break\n          case 3: // posterior a 0 e 0\n            this.scene.clipPlaneDepthAziElev = [0, 0, 0]\n            break\n          case 4: // anterior a 0 e 0\n            this.scene.clipPlaneDepthAziElev = [0, 180, 0]\n            break\n          case 5: // inferior a 0 e -90\n            this.scene.clipPlaneDepthAziElev = [0, 0, -90]\n            break\n          case 6: // superior: a 0 e 90'\n            this.scene.clipPlaneDepthAziElev = [0, 0, 90]\n            break\n        }\n        this.setClipPlane(this.scene.clipPlaneDepthAziElev)\n      }\n      this.lastCalled = now\n    } else if (e.code === this.opts.viewModeHotKey) {\n      const now = new Date().getTime()\n      const elapsed = now - this.lastCalled\n      if (elapsed > this.opts.keyDebounceTime) {\n        this.setSliceType((this.opts.sliceType + 1) % 5) // 5 total slice types\n        this.lastCalled = now\n      }\n    }\n  }\n\n  keyDownListener(e: KeyboardEvent): void {\n    if (e.code === 'KeyH' && this.opts.sliceType === SLICE_TYPE.RENDER) {\n      this.setRenderAzimuthElevation(this.scene.renderAzimuth - 1, this.scene.renderElevation)\n    } else if (e.code === 'KeyL' && this.opts.sliceType === SLICE_TYPE.RENDER) {\n      this.setRenderAzimuthElevation(this.scene.renderAzimuth + 1, this.scene.renderElevation)\n    } else if (e.code === 'KeyJ' && this.opts.sliceType === SLICE_TYPE.RENDER) {\n      this.setRenderAzimuthElevation(this.scene.renderAzimuth, this.scene.renderElevation + 1)\n    } else if (e.code === 'KeyK' && this.opts.sliceType === SLICE_TYPE.RENDER) {\n      this.setRenderAzimuthElevation(this.scene.renderAzimuth, this.scene.renderElevation - 1)\n    } else if (e.code === 'KeyH' && this.opts.sliceType !== SLICE_TYPE.RENDER) {\n      this.moveCrosshairInVox(-1, 0, 0)\n    } else if (e.code === 'KeyL' && this.opts.sliceType !== SLICE_TYPE.RENDER) {\n      this.moveCrosshairInVox(1, 0, 0)\n    } else if (e.code === 'KeyU' && this.opts.sliceType !== SLICE_TYPE.RENDER && e.ctrlKey) {\n      this.moveCrosshairInVox(0, 0, 1)\n    } else if (e.code === 'KeyD' && this.opts.sliceType !== SLICE_TYPE.RENDER && e.ctrlKey) {\n      this.moveCrosshairInVox(0, 0, -1)\n    } else if (e.code === 'KeyJ' && this.opts.sliceType !== SLICE_TYPE.RENDER) {\n      this.moveCrosshairInVox(0, -1, 0)\n    } else if (e.code === 'KeyK' && this.opts.sliceType !== SLICE_TYPE.RENDER) {\n      this.moveCrosshairInVox(0, 1, 0)\n    } else if (e.code === 'KeyM' && this.opts.sliceType !== SLICE_TYPE.RENDER) {\n      this.opts.dragMode++\n      if (this.opts.dragMode >= DRAG_MODE.slicer3D) {\n        this.opts.dragMode = DRAG_MODE.none\n      }\n      log.info('drag mode changed to ', DRAG_MODE[this.opts.dragMode])\n    } else if (e.code === 'ArrowLeft') {\n      // only works for background (first loaded image is index 0)\n      this.setFrame4D(this.volumes[0].id, this.volumes[0].frame4D - 1)\n    } else if (e.code === 'ArrowRight') {\n      // only works for background (first loaded image is index 0)\n      this.setFrame4D(this.volumes[0].id, this.volumes[0].frame4D + 1)\n    } else if (e.code === 'Slash' && e.shiftKey) {\n      alert(`NIIVUE VERSION: ${version}`)\n    }\n  }\n\n  // not included in public docs\n  // handler for scroll wheel events (slice scrolling)\n  // note: no test yet\n  wheelListener(e: WheelEvent): void {\n    if (this.thumbnailVisible) {\n      return\n    }\n    if (this.opts.sliceMosaicString.length > 0) {\n      return\n    }\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    // ROI Selection logic\n    const dragStartSum = this.uiData.dragStart.reduce((a, b) => a + b, 0)\n    const dragEndSum = this.uiData.dragEnd.reduce((a, b) => a + b, 0)\n    const validDrag = dragStartSum > 0 && dragEndSum > 0\n    if (this.opts.dragMode === DRAG_MODE.roiSelection && validDrag) {\n      const delta = e.deltaY > 0 ? 1 : -1\n      // update the uiData.dragStart and uiData.dragEnd values to grow or shrink the selection box\n      if (this.uiData.dragStart[0] < this.uiData.dragEnd[0]) {\n        this.uiData.dragStart[0] -= delta\n        this.uiData.dragEnd[0] += delta\n      } else {\n        this.uiData.dragStart[0] += delta\n        this.uiData.dragEnd[0] -= delta\n      }\n      if (this.uiData.dragStart[1] < this.uiData.dragEnd[1]) {\n        this.uiData.dragStart[1] -= delta\n        this.uiData.dragEnd[1] += delta\n      } else {\n        this.uiData.dragStart[1] += delta\n        this.uiData.dragEnd[1] -= delta\n      }\n\n      // Redraw to show the updated selection box\n      this.uiData.isDragging = true\n      this.drawScene()\n      this.uiData.isDragging = false\n\n      // Generate the callback for the final selection rectangle\n      const tileIdx = this.tileIndex(this.uiData.dragStart[0], this.uiData.dragStart[1])\n      if (tileIdx >= 0) {\n        this.generateMouseUpCallback(\n          this.screenXY2TextureFrac(this.uiData.dragStart[0], this.uiData.dragStart[1], tileIdx),\n          this.screenXY2TextureFrac(this.uiData.dragEnd[0], this.uiData.dragEnd[1], tileIdx)\n        )\n      } else {\n        log.warn('Could not generate drag release callback for ROI selection: Invalid tile index.')\n      }\n      return\n    }\n\n    // Compute scrollAmount, respecting invertScrollDirection\n    let scrollAmount = e.deltaY < 0 ? -0.01 : 0.01\n    if (this.opts.invertScrollDirection) {\n      scrollAmount = -scrollAmount\n    }\n\n    // If clickToSegment mode is active, change threshold instead of scrolling slices\n    if (this.opts.clickToSegment) {\n      // Adjust clickToSegmentPercent by 0.01 in the direction of scrollAmount\n      if (scrollAmount < 0) {\n        this.opts.clickToSegmentPercent -= 0.01\n        this.opts.clickToSegmentPercent = Math.max(this.opts.clickToSegmentPercent, 0)\n      } else {\n        this.opts.clickToSegmentPercent += 0.01\n        this.opts.clickToSegmentPercent = Math.min(this.opts.clickToSegmentPercent, 1)\n      }\n\n      // Get the mouse position\n      const x = this.clickToSegmentXY[0]\n      const y = this.clickToSegmentXY[1]\n      const tileIdx = this.tileIndex(x, y)\n\n      // If in a valid tile, re-run the clickToSegment preview\n      if (tileIdx >= 0 && this.screenSlices[tileIdx].axCorSag <= SLICE_TYPE.SAGITTAL) {\n        log.debug(`Adjusting clickToSegment threshold: ${this.opts.clickToSegmentPercent.toFixed(3)}`)\n        this.clickToSegmentIsGrowing = true // remain in preview mode\n        this.doClickToSegment({ x, y, tileIndex: tileIdx })\n      }\n      return\n    }\n\n    // Otherwise, handle pan/zoom if the mouse is outside the active render tile\n    const rect = this.canvas!.getBoundingClientRect()\n    const x = e.clientX - rect.left\n    const y = e.clientY - rect.top\n\n    if (this.opts.dragMode === DRAG_MODE.pan && this.inRenderTile(this.uiData.dpr! * x, this.uiData.dpr! * y) === -1) {\n      // Zoom\n      const zoomDirection = scrollAmount < 0 ? 1 : -1\n      let zoom = this.scene.pan2Dxyzmm[3] * (1.0 + 10 * (0.01 * zoomDirection))\n      zoom = Math.round(zoom * 10) / 10\n      const zoomChange = this.scene.pan2Dxyzmm[3] - zoom\n\n      if (this.opts.yoke3Dto2DZoom) {\n        this.scene.volScaleMultiplier = zoom\n      }\n      this.scene.pan2Dxyzmm[3] = zoom\n\n      // Shift the 2D scene center so the crosshair stays in place\n      const mm = this.frac2mm(this.scene.crosshairPos)\n      this.scene.pan2Dxyzmm[0] += zoomChange * mm[0]\n      this.scene.pan2Dxyzmm[1] += zoomChange * mm[1]\n      this.scene.pan2Dxyzmm[2] += zoomChange * mm[2]\n\n      this.drawScene()\n      this.canvas!.focus()\n      this.sync()\n      return\n    }\n\n    // Default action: scroll slices using our unified scrollAmount\n    this.sliceScroll2D(scrollAmount, x, y)\n  }\n\n  // not included in public docs\n  // setup interactions with the canvas. Mouse clicks and touches\n  // note: no test yet\n  // note: any event listeners registered here should also be removed in `cleanup()`\n  registerInteractions(): void {\n    if (!this.canvas) {\n      throw new Error('canvas undefined')\n    }\n    // add mousedown\n    this.canvas.addEventListener('mousedown', this.mouseDownListener.bind(this))\n    // add mouseup\n    this.canvas.addEventListener('mouseup', this.mouseUpListener.bind(this))\n    // add mouse move\n    this.canvas.addEventListener('mousemove', this.mouseMoveListener.bind(this))\n    // add mouse leave listener\n    this.canvas.addEventListener('mouseleave', this.mouseLeaveListener.bind(this))\n\n    // add touchstart\n    this.canvas.addEventListener('touchstart', this.touchStartListener.bind(this))\n    // add touchend\n    this.canvas.addEventListener('touchend', this.touchEndListener.bind(this))\n    // add touchmove\n    this.canvas.addEventListener('touchmove', this.touchMoveListener.bind(this))\n\n    // add scroll wheel\n    this.canvas.addEventListener('wheel', this.wheelListener.bind(this))\n    // add context event disabler\n    this.canvas.addEventListener('contextmenu', this.mouseContextMenuListener.bind(this))\n\n    // add double click\n    this.canvas.addEventListener('dblclick', this.resetBriCon.bind(this))\n\n    //  drag and drop support\n    this.canvas.addEventListener('dragenter', this.dragEnterListener.bind(this), false)\n    this.canvas.addEventListener('dragover', this.dragOverListener.bind(this), false)\n    this.canvas.addEventListener(\n      'drop',\n      (event) => {\n        this.dropListener(event).catch(console.error)\n      },\n      false\n    )\n\n    // add keyup\n    this.canvas.setAttribute('tabindex', '0')\n    this.canvas.addEventListener('keyup', this.keyUpListener.bind(this), false)\n\n    // keydown\n    this.canvas.addEventListener('keydown', this.keyDownListener.bind(this), false)\n  }\n\n  // not included in public docs\n  dragEnterListener(e: MouseEvent): void {\n    e.stopPropagation()\n    e.preventDefault()\n  }\n\n  // not included in public docs\n  dragOverListener(e: MouseEvent): void {\n    e.stopPropagation()\n    e.preventDefault()\n  }\n\n  // not included in public docs\n  getFileExt(fullname: string, upperCase = true): string {\n    log.debug('fullname: ', fullname)\n    const re = /(?:\\.([^.]+))?$/\n    let ext = re.exec(fullname)![1]\n    ext = ext.toUpperCase()\n    if (ext === 'GZ') {\n      ext = re.exec(fullname.slice(0, -3))![1] // img.trk.gz -> img.trk\n      ext = ext.toUpperCase()\n    } else if (ext === 'CBOR') {\n      // we want to keep cbor WITH the extension before it.\n      // e.g. if fullname is img.iwi.cbor, we want the ext to be iwi.cbor\n      const endExt = ext\n      ext = re.exec(fullname.slice(0, -5))![1] // img.iwi.cbor -> iwi.cbor\n      ext = ext.toUpperCase()\n      ext = `${ext}.${endExt}`\n    }\n    return upperCase ? ext : ext.toLowerCase() // developer can choose to have extensions as upper or lower\n  }\n\n  /**\n   * Add an image and notify subscribers\n   * @see {@link https://niivue.github.io/niivue/features/document.3d.html | live demo usage}\n   */\n  async addVolumeFromUrl(imageOptions: ImageFromUrlOptions): Promise<NVImage> {\n    const volume = await NVImage.loadFromUrl(imageOptions)\n    this.document.addImageOptions(volume, imageOptions)\n    volume.onColormapChange = this.onColormapChange\n    this.mediaUrlMap.set(volume, imageOptions.url)\n    if (this.onVolumeAddedFromUrl) {\n      this.onVolumeAddedFromUrl(imageOptions, volume)\n    }\n    this.addVolume(volume)\n    return volume\n  }\n\n  async addVolumesFromUrl(imageOptionsArray: ImageFromUrlOptions[]): Promise<NVImage[]> {\n    const promises = imageOptionsArray.map(async (imageItem) => {\n      // first check this.loaders to see if the user has\n      // registered a custom loader for this file type.\n      // if so, use that loader to load the file.\n      const ext = this.getFileExt(imageItem.name || imageItem.url)\n      if (ext === 'DCM') {\n        // throw an error if the user tries to load a DICOM file without using the DICOM loader\n        throw new Error('DICOM files must be loaded using useDicomLoader')\n      }\n      if (this.loaders[ext]) {\n        let itemToLoad: string | Uint8Array | ArrayBuffer = imageItem.url\n        const toExt = this.loaders[ext].toExt\n        let name = imageItem.name || imageItem.url\n        // in case the name is a url, just get the basename without the slashes\n        name = name.split('/').pop()\n        // if url is a string fetch the file first\n        if (typeof imageItem.url === 'string') {\n          const url = imageItem.url\n          try {\n            const response = await fetch(url)\n            if (!response.ok) {\n              throw new Error(`Failed to load file: ${response.statusText}`)\n            }\n            itemToLoad = await response.arrayBuffer()\n          } catch (error) {\n            throw new Error(`Failed to load url ${url}: ${error}`)\n          }\n        }\n        const buffer = await this.loaders[ext].loader(itemToLoad)\n        imageItem.url = buffer\n        imageItem.name = `${name}.${toExt}`\n      }\n      const imageOptions = {\n        url: imageItem.url!,\n        headers: imageItem.headers,\n        name: imageItem.name,\n        colormap: imageItem.colormap ? imageItem.colormap : imageItem.colorMap,\n        colormapNegative: imageItem.colormapNegative ? imageItem.colormapNegative : imageItem.colorMapNegative,\n        opacity: imageItem.opacity,\n        urlImgData: imageItem.urlImgData,\n        cal_min: imageItem.cal_min,\n        cal_max: imageItem.cal_max,\n        trustCalMinMax: this.opts.trustCalMinMax,\n        isManifest: imageItem.isManifest,\n        frame4D: imageItem.frame4D,\n        limitFrames4D: imageItem.limitFrames4D || this.opts.limitFrames4D,\n        colorbarVisible: imageItem.colorbarVisible\n      }\n      const volume = await NVImage.loadFromUrl(imageOptions)\n      this.document.addImageOptions(volume, imageOptions)\n      volume.onColormapChange = this.onColormapChange\n      this.mediaUrlMap.set(volume, imageOptions.url)\n      if (this.onVolumeAddedFromUrl) {\n        this.onVolumeAddedFromUrl(imageOptions, volume)\n      }\n      return volume\n    })\n\n    const volumes = await Promise.all(promises)\n\n    for (let i = 0; i < volumes.length; i++) {\n      this.addVolume(volumes[i])\n    }\n    return volumes\n  }\n\n  /**\n   * Find media by url\n   */\n  getMediaByUrl(url: string): NVImage | NVMesh | undefined {\n    return [...this.mediaUrlMap.entries()]\n      .filter((v) => v[1] === url)\n      .map((v) => v[0])\n      .pop()\n  }\n\n  /**\n   * Remove volume by url\n   * @param url - Volume added by url to remove\n   * @see {@link https://niivue.github.io/niivue/features/document.3d.html | live demo usage}\n   */\n  removeVolumeByUrl(url: string): void {\n    const volume = this.getMediaByUrl(url)\n    if (volume) {\n      this.removeVolume(volume as NVImage)\n    } else {\n      throw new Error('No volume with URL present')\n    }\n  }\n\n  async traverseFileTree(item, path = '', fileArray): Promise<File[]> {\n    return new Promise((resolve) => {\n      if (item.isFile) {\n        item.file((file) => {\n          file.fullPath = path + file.name\n          // IMPORTANT: _webkitRelativePath is required for dcm2niix to work.\n          // We need to add this property so we can parse multiple directories correctly.\n          // the \"webkitRelativePath\" property on File objects is read-only, so we can't set it directly, hence the underscore.\n          file._webkitRelativePath = path + file.name\n          fileArray.push(file)\n          resolve(fileArray)\n        })\n      } else if (item.isDirectory) {\n        const dirReader = item.createReader()\n        const readAllEntries = (): void => {\n          dirReader.readEntries((entries) => {\n            if (entries.length > 0) {\n              const promises = []\n              for (const entry of entries) {\n                promises.push(this.traverseFileTree(entry, path + item.name + '/', fileArray))\n              }\n              Promise.all(promises)\n                .then(readAllEntries)\n                .catch((e) => {\n                  throw e\n                })\n            } else {\n              resolve(fileArray)\n            }\n          })\n        }\n        readAllEntries()\n      }\n    })\n  }\n\n  readDirectory(directory: FileSystemDirectoryEntry): FileSystemEntry[] {\n    const reader = directory.createReader()\n    let allEntiresInDir: FileSystemEntry[] = []\n    const getFileObjects = async (fileSystemEntries: FileSystemEntry[]): Promise<File | File[]> => {\n      const allFileObects: File[] = []\n      // https://stackoverflow.com/a/53113059\n      const getFile = async (fileEntry: FileSystemFileEntry): Promise<File> => {\n        return new Promise((resolve, reject) => fileEntry.file(resolve, reject))\n      }\n      for (let i = 0; i < fileSystemEntries.length; i++) {\n        allFileObects.push(await getFile(fileSystemEntries[i] as FileSystemFileEntry))\n        console.log(allFileObects)\n      }\n      return allFileObects\n    }\n    const readEntries = (): void => {\n      reader.readEntries((entries) => {\n        if (entries.length) {\n          allEntiresInDir = allEntiresInDir.concat(entries)\n          readEntries()\n        } else {\n          getFileObjects(allEntiresInDir)\n            .then(async (allFileObjects) => {\n              console.log(allFileObjects)\n            })\n            .catch((e) => {\n              throw e\n            })\n        }\n      })\n    }\n    readEntries()\n    return allEntiresInDir\n  }\n\n  /**\n   * Returns boolean: true if filename ends with mesh extension (TRK, pial, etc)\n   * @param url - filename\n   */\n  isMeshExt(url: string): boolean {\n    const ext = this.getFileExt(url)\n    log.debug('dropped ext')\n    log.debug(ext)\n    return MESH_EXTENSIONS.includes(ext)\n  }\n\n  /**\n   * Load an image or mesh from an array buffer\n   * @param buffer - ArrayBuffer with the entire contents of a mesh or volume\n   * @param name - string of filename, extension used to infer type (NIfTI, MGH, MZ3, etc)\n   * @see {@link http://192.168.0.150:8080/features/draganddrop.html | live demo usage}\n   */\n  async loadFromArrayBuffer(buffer: ArrayBuffer, name: string): Promise<void> {\n    const ext = this.getFileExt(name)\n    if (MESH_EXTENSIONS.includes(ext)) {\n      await this.addMeshFromUrl({ url: name, buffer })\n      return\n    }\n    const imageOptions = NVImageFromUrlOptions(name)\n    imageOptions.buffer = buffer\n    imageOptions.name = name\n    await this.addVolumeFromUrl(imageOptions)\n  }\n\n  /**\n   * Load a mesh or image from a file object\n   * @param file - File object\n   */\n  async loadFromFile(file: File): Promise<void> {\n    const ext = this.getFileExt(file.name)\n    // first check if it's a mesh\n    if (MESH_EXTENSIONS.includes(ext)) {\n      await NVMesh.loadFromFile({ file, gl: this.gl, name: file.name }).then((mesh) => {\n        this.addMesh(mesh)\n      })\n      return\n    }\n    // load as a volume if not a mesh\n    await NVImage.loadFromFile({\n      file,\n      name: file.name\n    }).then((volume) => {\n      this.addVolume(volume)\n    })\n  }\n\n  /* useLoader\n\n  registers an external file loader for niivue to use when reading files.\n\n  the loader must return an array buffer of the file contents for niivue\n  to parse and the extension of the file so niivue can infer the file type to load.\n\n  example:\n\n  const myCustomLoader = (File) => {\n    // ... do parsing here ...\n    return {\n      arrayBuffer: ArrayBuffer,\n      fileExt: 'iwi.cbor',\n      positions: Float32Array | [], // allows for mesh loading to mz3\n      indices: Uint32Array | [], // allows for mesh loading to mz3\n    }\n\n  nv.useLoader({\n    loader: myCustomLoader,\n    fileExt: 'iwi.cbor',\n    toExt: 'nii'\n  })\n\n  */\n\n  // interface LoaderMap {\n  //   [key: string]: {\n  //     loader: LoaderFunction;\n  //     toExt: string;\n  //   };\n  // }\n\n  // Example usage:\n  // const loaderMap: LoaderMap = {\n  //   'TXT': { loader: (file: File) => file.text(), toExt: 'json' }\n  // };\n  // loader can either be a function that takes a file or ArrayBuffer, or the async version of that.\n  useLoader(loader: unknown, fileExt: string, toExt: string): void {\n    this.loaders = {\n      ...this.loaders,\n      [fileExt.toUpperCase()]: {\n        loader,\n        toExt\n      }\n    }\n  }\n\n  useDicomLoader(loader: DicomLoader): void {\n    this.dicomLoader = loader\n  }\n\n  getDicomLoader(): DicomLoader {\n    return this.dicomLoader\n  }\n\n  // dicom loading is a special case because it can take a list\n  // of files (e.g. from a user supplied DICOM directory) or a single file.\n  // Our preferred DICOM loader is the WASM port of dcm2niix (implemented in a separate niivue loader module).\n  // useDicomLoader(loader: unknown, toExt: string) {\n  //   this.loaders = {\n  //     ...this.loaders,\n  //     ['DCM']: {\n  //       loader,\n  //       toExt,\n  //     },\n  //   }\n  // }\n\n  // not included in public docs\n  async dropListener(e: DragEvent): Promise<void> {\n    e.stopPropagation()\n    e.preventDefault()\n    // don't do anything if drag and drop has been turned off\n    if (!this.opts.dragAndDropEnabled) {\n      return\n    }\n    const urlsToLoad: string[] = []\n    const files = []\n    const dt = e.dataTransfer\n    if (!dt) {\n      return\n    }\n    const url = dt.getData('text/uri-list')\n    if (url) {\n      urlsToLoad.push(url)\n      const imageOptions = NVImageFromUrlOptions(url)\n      const ext = this.getFileExt(url)\n      log.debug('dropped ext')\n      log.debug(ext)\n      if (MESH_EXTENSIONS.includes(ext)) {\n        this.addMeshFromUrl({ url }).catch((e) => {\n          throw e\n        })\n      } else if (ext === 'NVD') {\n        this.loadDocumentFromUrl(url).catch((e) => {\n          throw e\n        })\n      } else {\n        this.addVolumeFromUrl(imageOptions).catch((e) => {\n          throw e\n        })\n      }\n    } else {\n      // const files = dt.files;\n      const items = dt.items\n      if (items.length > 0) {\n        // adding or replacing\n        if (!e.shiftKey && !e.altKey) {\n          this.volumes = []\n          this.overlays = []\n          this.meshes = []\n        }\n        this.closeDrawing()\n        for (const item of Array.from(items)) {\n          const entry = item.webkitGetAsEntry() as FileSystemFileEntry\n          log.debug(entry)\n          if (!entry) {\n            throw new Error('could not get entry from file')\n          }\n          if (entry.isFile) {\n            const ext = this.getFileExt(entry.name)\n            let pairedImageData: FileSystemEntry\n            // check for afni HEAD BRIK pair\n            if (entry.name.lastIndexOf('HEAD') !== -1) {\n              for (const pairedItem of Array.from(items)) {\n                const pairedEntry = pairedItem.webkitGetAsEntry()\n                if (!pairedEntry) {\n                  throw new Error('could not get paired entry')\n                }\n                const fileBaseName = entry.name.substring(0, entry.name.lastIndexOf('HEAD'))\n                const pairedItemBaseName = pairedEntry.name.substring(0, pairedEntry.name.lastIndexOf('BRIK'))\n                if (fileBaseName === pairedItemBaseName) {\n                  pairedImageData = pairedEntry\n                }\n              }\n            }\n            if (entry.name.lastIndexOf('BRIK') !== -1) {\n              continue\n            }\n            if (this.loaders[ext]) {\n              const dataUrl = await readFileAsDataURL(entry)\n              await this.loadImages([\n                {\n                  url: dataUrl,\n                  name: `${entry.name}`\n                }\n              ])\n              continue\n            }\n            if (MESH_EXTENSIONS.includes(ext)) {\n              ;(entry as FileSystemFileEntry).file((file: File): void => {\n                ;(async (): Promise<void> => {\n                  try {\n                    const mesh = await NVMesh.loadFromFile({\n                      file,\n                      gl: this.gl,\n                      name: file.name\n                    })\n                    this.addMesh(mesh)\n                  } catch (e) {\n                    console.error('Error loading mesh:', e)\n                  }\n                })().catch((err) => console.error(err))\n              })\n              continue\n            } else if (ext === 'NVD') {\n              ;(entry as FileSystemFileEntry).file((file: File): void => {\n                ;(async (): Promise<void> => {\n                  try {\n                    const nvdoc = await NVDocument.loadFromFile(file)\n                    await this.loadDocument(nvdoc)\n                    log.debug('loaded document')\n                  } catch (e) {\n                    console.error(e)\n                  }\n                })().catch((err) => console.error(err))\n              })\n              break\n            }\n\n            ;(entry as FileSystemFileEntry).file((file: File): void => {\n              ;(async (): Promise<void> => {\n                try {\n                  if (pairedImageData) {\n                    ;(pairedImageData as FileSystemFileEntry).file((imgfile: File): void => {\n                      ;(async (): Promise<void> => {\n                        try {\n                          const volume = await NVImage.loadFromFile({\n                            file,\n                            urlImgData: imgfile,\n                            limitFrames4D: this.opts.limitFrames4D\n                          })\n                          this.addVolume(volume)\n                        } catch (e) {\n                          console.error(e)\n                        }\n                      })().catch(console.error)\n                    })\n                  } else {\n                    const volume = await NVImage.loadFromFile({\n                      file,\n                      urlImgData: pairedImageData,\n                      limitFrames4D: this.opts.limitFrames4D\n                    })\n                    if (e.altKey) {\n                      log.debug('alt key detected: assuming this is a drawing overlay')\n                      this.drawClearAllUndoBitmaps()\n                      this.loadDrawing(volume)\n                    } else {\n                      this.addVolume(volume)\n                    }\n                  }\n                } catch (e) {\n                  console.error(e)\n                }\n                // Explicitly return undefined (void)\n              })().catch(console.error)\n            })\n          } else if (entry.isDirectory) {\n            // assume that directories are only use for DICOM files\n            this.traverseFileTree(entry, '', files)\n              .then((files) => {\n                const loader = this.getDicomLoader().loader\n                if (!loader) {\n                  throw new Error('No loader for DICOM files')\n                }\n                loader(files)\n                  .then(async (fileArrayBuffers) => {\n                    console.log(fileArrayBuffers)\n                    const promises = fileArrayBuffers.map((loaderImage) =>\n                      NVImage.loadFromUrl({\n                        url: loaderImage.data,\n                        name: loaderImage.name,\n                        limitFrames4D: this.opts.limitFrames4D\n                      })\n                    )\n                    Promise.all(promises)\n                      .then(async (loadedNvImages) => {\n                        console.log('from dicom loader')\n                        console.log(loadedNvImages)\n                        await this.onDicomLoaderFinishedWithImages(loadedNvImages)\n                      })\n                      .catch((e) => {\n                        throw e\n                      })\n                  })\n                  .catch((error) => {\n                    console.error('Error loading DICOM files:', error)\n                  })\n              })\n              .catch((e) => {\n                throw e\n              })\n          }\n        }\n      }\n    }\n    // this.createEmptyDrawing();\n    this.drawScene() // <- this seems to be required if you drag and drop a mesh, not a volume\n  }\n\n  /**\n   * insert a gap between slices of a mutliplanar view.\n   * @param pixels - spacing between tiles of multiplanar view\n   * @example niivue.setMultiplanarPadPixels(4)\n   * @see {@link https://niivue.github.io/niivue/features/atlas.html | live demo usage}\n   */\n  setMultiplanarPadPixels(pixels: number): void {\n    this.opts.multiplanarPadPixels = pixels\n    this.drawScene()\n  }\n\n  /**\n   * control placement of 2D slices.\n   * @param layout - AUTO: 0, COLUMN: 1, GRID: 2, ROW: 3,\n   * @example niivue.setMultiplanarLayout(2)\n   * @see {@link https://niivue.github.io/niivue/features/layout.html | live demo usage}\n   */\n  setMultiplanarLayout(layout: number): void {\n    if (typeof layout === 'string') {\n      layout = parseInt(layout)\n    }\n    this.opts.multiplanarLayout = layout\n    this.drawScene()\n  }\n\n  /**\n   * determine if text appears at corner (true) or sides of 2D slice.\n   * @param isCornerOrientationText - controls position of text\n   * @example niivue.setCornerOrientationText(true)\n   * @see {@link https://niivue.github.io/niivue/features/worldspace2.html | live demo usage}\n   */\n  setCornerOrientationText(isCornerOrientationText: boolean): void {\n    this.opts.isCornerOrientationText = isCornerOrientationText\n    this.updateGLVolume()\n  }\n\n  /**\n   * determine if orientation text appears in 2D slice view.\n   * @param isOrientationTextVisible - controls position of text\n   * @example niivue.setIsOrientationTextVisible(false)\n   */\n  setIsOrientationTextVisible(isOrientationTextVisible: boolean): void {\n    this.opts.isOrientationTextVisible = isOrientationTextVisible\n    this.drawScene()\n  }\n\n  /**\n   * determine proportion of screen real estate devoted to rendering in multiplanar view.\n   * @param fraction - proportion of screen devoted to primary (hero) image (0 to disable)\n   * @example niivue.setHeroImage(0.5)\n   * @see {@link https://niivue.github.io/niivue/features/layout.html | live demo usage}\n   */\n  setHeroImage(fraction: number): void {\n    this.opts.heroImageFraction = fraction\n    this.drawScene()\n  }\n\n  /**\n   * Set a custom slice layout. This overrides the built-in layouts.\n   * @param layout - Array of layout specifications for each slice view\n   * @example\n   * niivue.setCustomLayout([\n   *     // Left 50% - Sag\n   *     {sliceType: 2, position: [0, 0, 0.5, 1.0]},\n   *     // Top right - Cor\n   *     {sliceType: 1, position: [0.5, 0, 0.5, 0.5]},\n   *     // Bottom right - Ax\n   *     {sliceType: 0, position: [0.5, 0.5, 0.5, 0.5]}\n   *   ])\n   *\n   * produces:\n   * +----------------+----------------+\n   * |                |                |\n   * |                |     coronal    |\n   * |                |                |\n   * |                |                |\n   * |   sagittal     +----------------+\n   * |                |                |\n   * |                |     axial      |\n   * |                |                |\n   * |                |                |\n   * +----------------+----------------+\n   */\n  setCustomLayout(\n    layout: Array<{\n      sliceType: SLICE_TYPE\n      position: [number, number, number, number] // left, top, width, height\n      sliceMM?: number\n    }>\n  ): void {\n    // check for overlapping tiles\n    for (let i = 0; i < layout.length; i++) {\n      const [left1, top1, width1, height1] = layout[i].position\n      const right1 = left1 + width1\n      const bottom1 = top1 + height1\n\n      // compare with subsequent tiles\n      for (let j = i + 1; j < layout.length; j++) {\n        const [left2, top2, width2, height2] = layout[j].position\n        const right2 = left2 + width2\n        const bottom2 = top2 + height2\n\n        // test if tile rectangles intersect both horizontally and vertically\n        const horizontallyOverlaps = left1 < right2 && right1 > left2\n        const verticallyOverlaps = top1 < bottom2 && bottom1 > top2\n        if (horizontallyOverlaps && verticallyOverlaps) {\n          throw new Error(`Custom layout is invalid. Tile ${i} overlaps with tile ${j}.`)\n        }\n      }\n    }\n\n    this.customLayout = layout\n    this.drawScene()\n  }\n\n  /**\n   * Clear custom layout and rely on built-in layouts\n   */\n  clearCustomLayout(): void {\n    this.customLayout = null\n    this.drawScene()\n  }\n\n  /**\n   * Get the current custom layout if set\n   * @returns The current custom layout or null if using built-in layouts\n   */\n  getCustomLayout(): Array<{\n    sliceType: SLICE_TYPE\n    position: [number, number, number, number]\n    sliceMM?: number\n  }> | null {\n    return this.customLayout\n  }\n\n  /**\n   * control whether 2D slices use radiological or neurological convention.\n   * @param isRadiologicalConvention - new display convention\n   * @example niivue.setRadiologicalConvention(true)\n   * @see {@link https://niivue.github.io/niivue/features/worldspace.html | live demo usage}\n   */\n  setRadiologicalConvention(isRadiologicalConvention: boolean): void {\n    this.opts.isRadiologicalConvention = isRadiologicalConvention\n    this.updateGLVolume()\n  }\n\n  /**\n   * Reset scene to default settings.\n   * @param options - @see NiiVueOptions\n   * @param resetBriCon - also reset contrast (default false).\n   * @example niivue.nv1.setDefaults(opts, true);\n   * @see {@link https://niivue.github.io/niivue/features/connectome.html | live demo usage}\n   */\n  setDefaults(options: Partial<NVConfigOptions> = {}, resetBriCon = false): void {\n    this.document.opts = { ...DEFAULT_OPTIONS }\n    this.scene.sceneData = { ...INITIAL_SCENE_DATA }\n    // populate Niivue with user supplied options\n    for (const name in options) {\n      if (typeof options[name as keyof NVConfigOptions] === 'function') {\n        this[name] = options[name]\n      } else {\n        this.opts[name] = DEFAULT_OPTIONS[name] === undefined ? DEFAULT_OPTIONS[name] : options[name]\n      }\n    }\n    this.scene.pan2Dxyzmm = [0, 0, 0, 1]\n    // optional: reset volume contrast and brightness\n    if (resetBriCon && this.volumes && this.volumes.length > 0) {\n      for (let i = 0; i < this.volumes.length; i++) {\n        this.volumes[i].cal_min = this.volumes[i].robust_min\n        this.volumes[i].cal_max = this.volumes[i].robust_max\n      }\n    }\n    // display reset image\n    this.updateGLVolume()\n  }\n\n  /**\n   * Limit visibility of mesh in front of a 2D image. Requires world-space mode.\n   * @param meshThicknessOn2D - distance from voxels for clipping mesh. Use Infinity to show entire mesh or 0.0 to hide mesh.\n   * @example niivue.setMeshThicknessOn2D(42)\n   * @see {@link https://niivue.github.io/niivue/features/worldspace2.html | live demo usage}\n   */\n  setMeshThicknessOn2D(meshThicknessOn2D: number): void {\n    this.opts.meshThicknessOn2D = meshThicknessOn2D\n    this.updateGLVolume()\n  }\n\n  /**\n   * Create a custom multi-slice mosaic (aka lightbox, montage) view.\n   * @param str - description of mosaic.\n   * @example niivue.setSliceMosaicString(\"A 0 20 C 30 S 42\")\n   * @see {@link https://niivue.github.io/niivue/features/mosaics.html | live demo usage}\n   */\n  setSliceMosaicString(str: string): void {\n    this.sliceMosaicString = str\n    this.updateGLVolume()\n  }\n\n  /**\n   * control 2D slice view mode.\n   * @param isSliceMM - control whether 2D slices use world space (true) or voxel space (false). Beware that voxel space mode limits properties like panning, zooming and mesh visibility.\n   * @example niivue.setSliceMM(true)\n   * @see {@link https://niivue.github.io/niivue/features/worldspace2.html | live demo usage}\n   */\n  setSliceMM(isSliceMM: boolean): void {\n    this.opts.isSliceMM = isSliceMM\n    this.updateGLVolume()\n  }\n\n  /**\n   * control whether voxel overlays are combined using additive (emission) or traditional (transmission) blending.\n   * @param isAdditiveBlend - emission (true) or transmission (false) mixing\n   * @example niivue.isAdditiveBlend(true)\n   * @see {@link https://niivue.github.io/niivue/features/additive.voxels.html | live demo usage}\n   */\n  setAdditiveBlend(isAdditiveBlend: boolean): void {\n    this.opts.isAdditiveBlend = isAdditiveBlend\n    this.updateGLVolume()\n  }\n\n  /**\n   * Detect if display is using radiological or neurological convention.\n   * @returns radiological convention status\n   * @example let rc = niivue.getRadiologicalConvention()\n   */\n  getRadiologicalConvention(): boolean {\n    return this.opts.isRadiologicalConvention\n  }\n\n  /**\n   * Force WebGL canvas to use high resolution display, regardless of browser defaults.\n   * @param forceDevicePixelRatio - -1: block high DPI; 0= allow high DPI: >0 use specified pixel ratio\n   * @example niivue.setHighResolutionCapable(true);\n   * @see {@link https://niivue.github.io/niivue/features/sync.mesh.html | live demo usage}\n   */\n  setHighResolutionCapable(forceDevicePixelRatio: number | boolean): void {\n    if (typeof forceDevicePixelRatio === 'boolean') {\n      forceDevicePixelRatio = forceDevicePixelRatio ? 0 : -1\n    }\n    this.opts.forceDevicePixelRatio = forceDevicePixelRatio\n    this.resizeListener()\n    this.drawScene()\n  }\n\n  /**\n   * add a new volume to the canvas\n   * @param volume - the new volume to add to the canvas\n   * @example\n   * niivue = new Niivue()\n   * niivue.addVolume(NVImage.loadFromUrl({url:'../someURL.nii.gz'}))\n   * @see {@link https://niivue.github.io/niivue/features/document.3d.html | live demo usage}\n   */\n  addVolume(volume: NVImage): void {\n    this.volumes.push(volume)\n    const idx = this.volumes.length === 1 ? 0 : this.volumes.length - 1\n    this.setVolume(volume, idx)\n    this.onImageLoaded(volume)\n    log.debug('loaded volume', volume.name)\n    log.debug(volume)\n  }\n\n  /**\n   * add a new mesh to the canvas\n   * @param mesh - the new mesh to add to the canvas\n   * @example\n   * niivue = new Niivue()\n   * niivue.addMesh(NVMesh.loadFromUrl({url:'../someURL.gii'}))\n   * @see {@link https://niivue.github.io/niivue/features/document.3d.html | live demo usage}\n   */\n  addMesh(mesh: NVMesh): void {\n    this.meshes.push(mesh)\n    const idx = this.meshes.length === 1 ? 0 : this.meshes.length - 1\n    this.setMesh(mesh, idx)\n    this.onMeshLoaded(mesh)\n  }\n\n  /**\n   * get the index of a volume by its unique id. unique ids are assigned to the NVImage.id property when a new NVImage is created.\n   * @param id - the id string to search for\n   * @example\n   * niivue = new Niivue()\n   * niivue.getVolumeIndexByID(someVolume.id)\n   */\n  getVolumeIndexByID(id: string): number {\n    const n = this.volumes.length\n    for (let i = 0; i < n; i++) {\n      const id_i = this.volumes[i].id\n      if (id_i === id) {\n        return i\n      }\n    }\n    return -1 // -1 signals that no valid index was found for a volume with the given id\n  }\n\n  // not included in public docs\n  // Internal function to store drawings that can be used for undo operations\n  drawAddUndoBitmap(): void {\n    if (!this.drawBitmap || this.drawBitmap.length < 1) {\n      log.debug('drawAddUndoBitmap error: No drawing open')\n      return\n    }\n    // let rle = encodeRLE(this.drawBitmap);\n    // the bitmaps are a cyclical loop, like a revolver hand gun: increment the cylinder\n    this.currentDrawUndoBitmap++\n    if (this.currentDrawUndoBitmap >= this.opts.maxDrawUndoBitmaps) {\n      this.currentDrawUndoBitmap = 0\n    }\n    this.drawUndoBitmaps[this.currentDrawUndoBitmap] = encodeRLE(this.drawBitmap)\n  }\n\n  // not included in public docs\n  // Internal function to delete all drawing undo images\n  drawClearAllUndoBitmaps(): void {\n    this.currentDrawUndoBitmap = this.opts.maxDrawUndoBitmaps // next add will be cylinder 0\n    if (!this.drawUndoBitmaps || this.drawUndoBitmaps.length < 1) {\n      return\n    }\n    for (let i = this.drawUndoBitmaps.length - 1; i >= 0; i--) {\n      this.drawUndoBitmaps[i] = new Uint8Array()\n    }\n  }\n\n  /**\n   * Restore drawing to previous state\n   * @example niivue.drawUndo();\n   * @see {@link https://niivue.github.io/niivue/features/draw.ui.html | live demo usage}\n   */\n  drawUndo(): void {\n    if (this.drawUndoBitmaps.length < 1) {\n      log.debug('undo bitmaps not loaded')\n      return\n    }\n    this.currentDrawUndoBitmap--\n    if (this.currentDrawUndoBitmap < 0) {\n      this.currentDrawUndoBitmap = this.drawUndoBitmaps.length - 1\n    }\n    if (this.currentDrawUndoBitmap >= this.drawUndoBitmaps.length) {\n      this.currentDrawUndoBitmap = 0\n    }\n    if (this.drawUndoBitmaps[this.currentDrawUndoBitmap].length < 2) {\n      log.debug('drawUndo is misbehaving')\n      return\n    }\n    this.drawBitmap = decodeRLE(this.drawUndoBitmaps[this.currentDrawUndoBitmap], this.drawBitmap!.length)\n    this.refreshDrawing(true)\n  }\n\n  // not included in public docs\n  loadDrawing(drawingBitmap: NVImage): boolean {\n    if (this.drawBitmap) {\n      log.debug('Overwriting open drawing!')\n    }\n    if (!this.back) {\n      throw new Error('back undefined')\n    }\n    this.drawClearAllUndoBitmaps()\n    const dims = drawingBitmap.hdr!.dims\n    if (\n      dims[1] !== this.back.hdr!.dims[1] ||\n      dims[2] !== this.back.hdr!.dims[2] ||\n      dims[3] !== this.back.hdr!.dims[3]\n    ) {\n      log.debug('drawing dimensions do not match background image')\n      return false\n    }\n    if (drawingBitmap.img!.constructor !== Uint8Array) {\n      log.debug('Drawings should be UINT8')\n    }\n    const perm = drawingBitmap.permRAS!\n    const vx = dims[1] * dims[2] * dims[3]\n    this.drawBitmap = new Uint8Array(vx)\n    if (this.opts.is2DSliceShader) {\n      this.drawTexture = this.r8Tex2D(this.drawTexture, TEXTURE7_DRAW, this.back.dims, true)\n    } else {\n      this.drawTexture = this.r8Tex(this.drawTexture, TEXTURE7_DRAW, this.back.dims!, true)\n    }\n    const layout = [0, 0, 0]\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (Math.abs(perm[i]) - 1 !== j) {\n          continue\n        }\n        layout[j] = i * Math.sign(perm[i])\n      }\n    }\n    let stride = 1\n    const instride = [1, 1, 1]\n    const inflip = [false, false, false]\n    for (let i = 0; i < layout.length; i++) {\n      for (let j = 0; j < layout.length; j++) {\n        const a = Math.abs(layout[j])\n        if (a !== i) {\n          continue\n        }\n        instride[j] = stride\n        // detect -0: https://medium.com/coding-at-dawn/is-negative-zero-0-a-number-in-javascript-c62739f80114\n        if (layout[j] < 0 || Object.is(layout[j], -0)) {\n          inflip[j] = true\n        }\n        stride *= dims[j + 1]\n      }\n    }\n    // lookup table for flips and stride offsets:\n    let xlut = NVUtilities.range(0, dims[1] - 1, 1)\n    if (inflip[0]) {\n      xlut = NVUtilities.range(dims[1] - 1, 0, -1)\n    }\n    for (let i = 0; i < dims[1]; i++) {\n      xlut[i] *= instride[0]\n    }\n    let ylut = NVUtilities.range(0, dims[2] - 1, 1)\n    if (inflip[1]) {\n      ylut = NVUtilities.range(dims[2] - 1, 0, -1)\n    }\n    for (let i = 0; i < dims[2]; i++) {\n      ylut[i] *= instride[1]\n    }\n    let zlut = NVUtilities.range(0, dims[3] - 1, 1)\n    if (inflip[2]) {\n      zlut = NVUtilities.range(dims[3] - 1, 0, -1)\n    }\n    for (let i = 0; i < dims[3]; i++) {\n      zlut[i] *= instride[2]\n    }\n    // convert data\n    const inVs = drawingBitmap.img! // new Uint8Array(this.drawBitmap);\n    const outVs = this.drawBitmap\n    // for (let i = 0; i < vx; i++)\n    //  outVs[i] = i % 3;\n    let j = 0\n    for (let z = 0; z < dims[3]; z++) {\n      for (let y = 0; y < dims[2]; y++) {\n        for (let x = 0; x < dims[1]; x++) {\n          outVs[xlut[x] + ylut[y] + zlut[z]] = inVs[j]\n          j++\n        }\n      }\n    }\n    this.drawAddUndoBitmap()\n    this.refreshDrawing(false)\n    this.drawScene()\n    return true\n  }\n\n  // not included in public docs\n  binarize(volume: NVImage): void {\n    const dims = volume.hdr!.dims\n    const vx = dims[1] * dims[2] * dims[3]\n    const img = new Uint8Array(vx)\n    for (let i = 0; i < vx; i++) {\n      if (volume.img![i] !== 0) {\n        img[i] = 1\n      }\n    }\n    volume.img = img\n    volume.hdr!.datatypeCode = NiiDataType.DT_UINT8\n    volume.hdr!.cal_min = 0\n    volume.hdr!.cal_max = 1\n  }\n\n  /**\n   * Open drawing\n   * @param fnm - filename of NIfTI format drawing\n   * @param isBinarize - if true will force drawing voxels to be either 0 or 1.\n   * @example niivue.loadDrawingFromUrl(\"../images/lesion.nii.gz\");\n   * @see {@link https://niivue.github.io/niivue/features/draw.ui.html | live demo usage}\n   */\n  async loadDrawingFromUrl(fnm: string, isBinarize = false): Promise<boolean> {\n    if (this.drawBitmap) {\n      log.debug('Overwriting open drawing!')\n    }\n    this.drawClearAllUndoBitmaps()\n    let ok = false\n    try {\n      const volume = await NVImage.loadFromUrl(NVImageFromUrlOptions(fnm))\n      if (isBinarize) {\n        await this.binarize(volume)\n      }\n      ok = this.loadDrawing(volume)\n    } catch (err) {\n      log.error('loadDrawingFromUrl() failed to load ' + fnm)\n      this.drawClearAllUndoBitmaps()\n    }\n    return ok\n  }\n\n  // not included in public docs\n  findOtsu(mlevel = 2): number[] {\n    // C: https://github.com/rordenlab/niimath\n    // Java: https://github.com/stevenjwest/Multi_OTSU_Segmentation\n    if (this.volumes.length < 1) {\n      return []\n    }\n    const img = this.volumes[0].img!\n    const nvox = img.length\n    if (nvox < 1) {\n      return []\n    }\n    const nBin = 256\n    const maxBin = nBin - 1 // bins indexed from 0: if 256 bins then 0..255\n    const h = new Array(nBin).fill(0)\n    // build 1D histogram\n    const mn = this.volumes[0].cal_min!\n    const mx = this.volumes[0].cal_max!\n    if (mx <= mn) {\n      return []\n    }\n    const scale2raw = (mx - mn) / nBin\n    function bin2raw(bin: number): number {\n      return bin * scale2raw + mn\n    }\n    const scale2bin = (nBin - 1) / Math.abs(mx - mn)\n    const inter = this.volumes[0].hdr!.scl_inter\n    const slope = this.volumes[0].hdr!.scl_slope\n    for (let v = 0; v < nvox; v++) {\n      let val = img![v] * slope + inter\n      val = Math.min(Math.max(val, mn), mx)\n      val = Math.round((val - mn) * scale2bin)\n      h[val]++\n    }\n    // h[1] = h[1] + h[0]; h[0] = 0;\n    // in theory one can convert h from count to probability:\n    // for (let v = 0; v < nBin; v++)\n    //  h[v] = h[v] / nvox;\n    const P = Array(nBin)\n      .fill(0)\n      .map(() => Array(nBin).fill(0))\n    const S = Array(nBin)\n      .fill(0)\n      .map(() => Array(nBin).fill(0))\n    // diagonal\n    for (let i = 1; i < nBin; ++i) {\n      P[i][i] = h[i]\n      S[i][i] = i * h[i]\n    }\n    // calculate first row (row 0 is all zero)\n    for (let i = 1; i < nBin - 1; ++i) {\n      P[1][i + 1] = P[1][i] + h[i + 1]\n      S[1][i + 1] = S[1][i] + (i + 1) * h[i + 1]\n    }\n    // using row 1 to calculate others\n    for (let i = 2; i < nBin; i++) {\n      for (let j = i + 1; j < nBin; j++) {\n        P[i][j] = P[1][j] - P[1][i - 1]\n        S[i][j] = S[1][j] - S[1][i - 1]\n      }\n    }\n    // now calculate H[i][j]\n    for (let i = 1; i < nBin; ++i) {\n      for (let j = i + 1; j < nBin; j++) {\n        if (P[i][j] !== 0) {\n          P[i][j] = (S[i][j] * S[i][j]) / P[i][j]\n        }\n      }\n    }\n    let max = 0\n    const t = [Infinity, Infinity, Infinity]\n    if (mlevel > 3) {\n      for (let l = 0; l < nBin - 3; l++) {\n        for (let m = l + 1; m < nBin - 2; m++) {\n          for (let h = m + 1; h < nBin - 1; h++) {\n            const v = P[0][l] + P[l + 1][m] + P[m + 1][h] + P[h + 1][maxBin]\n            if (v > max) {\n              t[0] = l\n              t[1] = m\n              t[2] = h\n              max = v\n            }\n          }\n        }\n      }\n    } else if (mlevel === 3) {\n      for (let l = 0; l < nBin - 2; l++) {\n        for (let h = l + 1; h < nBin - 1; h++) {\n          const v = P[0][l] + P[l + 1][h] + P[h + 1][maxBin]\n          if (v > max) {\n            t[0] = l\n            t[1] = h\n            max = v\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < nBin - 1; i++) {\n        const v = P[0][i] + P[i + 1][maxBin]\n        if (v > max) {\n          t[0] = i\n          max = v\n        }\n      }\n    }\n    return [bin2raw(t[0]), bin2raw(t[1]), bin2raw(t[2])]\n  }\n\n  /**\n   * remove dark voxels in air\n   * @param levels - (2-4) segment brain into this many types. For example drawOtsu(2) will create a binary drawing where bright voxels are colored and dark voxels are clear.\n   * @example niivue.drawOtsu(3);\n   * @see {@link https://niivue.github.io/niivue/features/draw.ui.html | live demo usage}\n   */\n  drawOtsu(levels = 2): void {\n    if (this.volumes.length === 0) {\n      return\n    }\n    const nvox = this.volumes[0].img!.length\n    const thresholds = this.findOtsu(levels)\n    if (thresholds.length < 3) {\n      return\n    }\n    if (!this.drawBitmap) {\n      this.createEmptyDrawing()\n    }\n    const drawImg = this.drawBitmap as Uint8Array\n    const img = this.volumes[0].img!\n    for (let i = 0; i < nvox; i++) {\n      if (drawImg[i] !== 0) {\n        continue\n      }\n      const v = img[i]\n      if (v > thresholds[0]) {\n        drawImg[i] = 1\n      }\n      if (v > thresholds[1]) {\n        drawImg[i] = 2\n      }\n      if (v > thresholds[2]) {\n        drawImg[i] = 3\n      }\n    }\n    this.drawAddUndoBitmap()\n    this.refreshDrawing(true)\n  }\n\n  /**\n   * remove dark voxels in air\n   * @param level - (1-5) larger values for more preserved voxels\n   * @param volIndex - volume to dehaze\n   * @example niivue.removeHaze(3, 0);\n   * @see {@link https://niivue.github.io/niivue/features/draw.ui.html | live demo usage}\n   */\n  removeHaze(level = 5, volIndex = 0): void {\n    const img = this.volumes[volIndex].img!\n    const hdr = this.volumes[volIndex].hdr!\n\n    const nvox = img.length\n    let otsu = 2\n    if (level === 5 || level === 1) {\n      otsu = 4\n    }\n    if (level === 4 || level === 2) {\n      otsu = 3\n    }\n    const thresholds = this.findOtsu(otsu)\n    if (thresholds.length < 3) {\n      return\n    }\n    let threshold = thresholds[0]\n    if (level === 1) {\n      threshold = thresholds[2]\n    }\n    if (level === 2) {\n      threshold = thresholds[1]\n    }\n\n    const inter = hdr.scl_inter\n    const slope = hdr.scl_slope\n    const mn = this.volumes[volIndex].global_min!\n    for (let v = 0; v < nvox; v++) {\n      const val = img[v] * slope + inter\n      if (val < threshold) {\n        img[v] = mn\n      }\n    }\n    this.refreshLayers(this.volumes[volIndex], 0)\n    this.drawScene()\n  }\n\n  /**\n   * Save voxel-based image to disk.\n   *\n   * @param options - configuration object with the following fields:\n   *   - `filename`: name of the NIfTI image to create\n   *   - `isSaveDrawing`: whether to save the drawing layer or the background image\n   *   - `volumeByIndex`: which image layer to save (0 for background)\n   * @returns `true` if successful when writing to disk, or a `Uint8Array` if exported as binary data\n   *\n   * @example\n   * niivue.saveImage({ filename: \"myimage.nii.gz\", isSaveDrawing: true });\n   * niivue.saveImage({ filename: \"myimage.nii.gz\", isSaveDrawing: true });\n   * @see {@link https://niivue.github.io/niivue/features/draw.ui.html | live demo usage}\n   */\n  async saveImage(options: SaveImageOptions = defaultSaveImageOptions): Promise<boolean | Uint8Array> {\n    const saveOptions: SaveImageOptions = {\n      ...defaultSaveImageOptions,\n      ...options\n    }\n    const { filename, isSaveDrawing, volumeByIndex } = saveOptions\n    log.debug('saveImage', filename, isSaveDrawing, volumeByIndex)\n    if (this.back?.dims === undefined) {\n      log.debug('No voxelwise image open')\n      return false\n    }\n    if (isSaveDrawing) {\n      if (!this.drawBitmap) {\n        log.debug('No drawing open')\n        return false\n      }\n      const perm = this.volumes[0].permRAS!\n      if (perm[0] === 1 && perm[1] === 2 && perm[2] === 3) {\n        log.debug('saving drawing')\n        const img = await this.volumes[0].saveToDisk(filename, this.drawBitmap) // createEmptyDrawing\n        return img\n      } else {\n        log.debug('saving drawing')\n        const dims = this.volumes[0].hdr!.dims // reverse to original\n        // reverse RAS to native space, layout is mrtrix MIF format\n        // for details see NVImage.readMIF()\n        const layout = [0, 0, 0]\n        for (let i = 0; i < 3; i++) {\n          for (let j = 0; j < 3; j++) {\n            if (Math.abs(perm[i]) - 1 !== j) {\n              continue\n            }\n            layout[j] = i * Math.sign(perm[i])\n          }\n        }\n        let stride = 1\n        const instride = [1, 1, 1]\n        const inflip = [false, false, false]\n        for (let i = 0; i < layout.length; i++) {\n          for (let j = 0; j < layout.length; j++) {\n            const a = Math.abs(layout[j])\n            if (a !== i) {\n              continue\n            }\n            instride[j] = stride\n            // detect -0: https://medium.com/coding-at-dawn/is-negative-zero-0-a-number-in-javascript-c62739f80114\n            if (layout[j] < 0 || Object.is(layout[j], -0)) {\n              inflip[j] = true\n            }\n            stride *= dims[j + 1]\n          }\n        }\n\n        let xlut = NVUtilities.range(0, dims[1] - 1, 1)\n        if (inflip[0]) {\n          xlut = NVUtilities.range(dims[1] - 1, 0, -1)\n        }\n        for (let i = 0; i < dims[1]; i++) {\n          xlut[i] *= instride[0]\n        }\n        let ylut = NVUtilities.range(0, dims[2] - 1, 1)\n        if (inflip[1]) {\n          ylut = NVUtilities.range(dims[2] - 1, 0, -1)\n        }\n        for (let i = 0; i < dims[2]; i++) {\n          ylut[i] *= instride[1]\n        }\n        let zlut = NVUtilities.range(0, dims[3] - 1, 1)\n        if (inflip[2]) {\n          zlut = NVUtilities.range(dims[3] - 1, 0, -1)\n        }\n        for (let i = 0; i < dims[3]; i++) {\n          zlut[i] *= instride[2]\n        }\n        // convert data\n\n        const inVs = new Uint8Array(this.drawBitmap)\n        const outVs = new Uint8Array(dims[1] * dims[2] * dims[3])\n        let j = 0\n        for (let z = 0; z < dims[3]; z++) {\n          for (let y = 0; y < dims[2]; y++) {\n            for (let x = 0; x < dims[1]; x++) {\n              outVs[j] = inVs[xlut[x] + ylut[y] + zlut[z]]\n              j++\n            }\n          }\n        }\n        log.debug('saving drawing')\n        const img = this.volumes[0].saveToDisk(filename, outVs)\n        return img\n      }\n    }\n    log.debug('saving image')\n    const img = this.volumes[volumeByIndex].saveToDisk(filename)\n    return img\n  }\n\n  // not included in public docs\n  getMeshIndexByID(id: string | number): number {\n    if (typeof id === 'number') {\n      if (id >= this.meshes.length) {\n        return -1\n      } // range 0..len-1\n      return id\n    }\n    const n = this.meshes.length\n    for (let i = 0; i < n; i++) {\n      const id_i = this.meshes[i].id\n      if (id_i === id) {\n        return i\n      }\n    }\n    return -1 // -1 signals that no valid index was found for a volume with the given id\n  }\n\n  /**\n   * change property of mesh, tractogram or connectome\n   * @param id - identity of mesh to change\n   * @param key - attribute to change\n   * @param val - for attribute\n   * @example niivue.setMeshProperty(niivue.meshes[0].id, 'fiberLength', 42)\n   * @see {@link https://niivue.github.io/niivue/features/meshes.html | live demo usage}\n   */\n  setMeshProperty(\n    id: number,\n    key: keyof NVMesh,\n    val: number | string | boolean | Uint8Array | number[] | ColorMap | LegacyConnectome | Float32Array\n  ): void {\n    const idx = this.getMeshIndexByID(id)\n    if (idx < 0) {\n      log.warn('setMeshProperty() id not loaded', id)\n      return\n    }\n    this.meshes[idx].setProperty(key, val, this.gl)\n    this.updateGLVolume()\n    this.onMeshPropertyChanged(idx, key, val)\n  }\n\n  /**\n   * returns the index of the mesh vertex that is closest to the provided coordinates\n   * @param mesh - identity of mesh to change\n   * @param Xmm - location in left/right dimension\n   * @param Ymm - location in posterior/anterior dimension\n   * @param Zmm - location in foot/head dimension\n   * @returns the an array where ret[0] is the mesh index and ret[1] is distance from vertex to coordinates\n   * @example niivue.indexNearestXYZmm(niivue.meshes[0].id, -22, 42, 13)\n   * @see {@link https://niivue.github.io/niivue/features/clipplanes.html | live demo usage}\n   */\n  indexNearestXYZmm(mesh: number, Xmm: number, Ymm: number, Zmm: number): number[] {\n    const idx = this.getMeshIndexByID(mesh)\n    if (idx < 0) {\n      log.warn('indexNearestXYZmm() id not loaded', mesh)\n      return [NaN, NaN]\n    }\n    return this.meshes[idx].indexNearestXYZmm(Xmm, Ymm, Zmm)\n  }\n\n  /**\n   * reduce complexity of FreeSurfer mesh\n   * @param mesh - identity of mesh to change\n   * @param order - decimation order 0..6\n   * @example niivue.decimateHierarchicalMesh(niivue.meshes[0].id, 4)\n   * @returns boolean false if mesh is not hierarchical or of lower order\n   * @see {@link https://niivue.github.io/niivue/features/meshes.html | live demo usage}\n   */\n  decimateHierarchicalMesh(mesh: number, order: number = 3): boolean {\n    const idx = this.getMeshIndexByID(mesh)\n    if (idx < 0) {\n      log.warn('reverseFaces() id not loaded', mesh)\n      return\n    }\n    const ret = this.meshes[idx].decimateHierarchicalMesh(this.gl, order)\n    this.updateGLVolume()\n    return ret\n  }\n\n  /**\n   * reverse triangle winding of mesh (swap front and back faces)\n   * @param mesh - identity of mesh to change\n   * @example niivue.reverseFaces(niivue.meshes[0].id)\n   * @see {@link https://niivue.github.io/niivue/features/meshes.html | live demo usage}\n   */\n  reverseFaces(mesh: number): void {\n    const idx = this.getMeshIndexByID(mesh)\n    if (idx < 0) {\n      log.warn('reverseFaces() id not loaded', mesh)\n      return\n    }\n    this.meshes[idx].reverseFaces(this.gl)\n    this.updateGLVolume()\n  }\n\n  /**\n   * reverse triangle winding of mesh (swap front and back faces)\n   * @param mesh - identity of mesh to change\n   * @param layer - selects the mesh overlay (e.g. GIfTI or STC file)\n   * @param key - attribute to change\n   * @param val - value for attribute\n   * @example niivue.setMeshLayerProperty(niivue.meshes[0].id, 0, 'frame4D', 22)\n   * @see {@link https://niivue.github.io/niivue/features/mesh.4D.html | live demo usage}\n   */\n  async setMeshLayerProperty(mesh: number, layer: number, key: keyof NVMeshLayer, val: number): Promise<void> {\n    const idx = this.getMeshIndexByID(mesh)\n    if (idx < 0) {\n      log.warn('setMeshLayerProperty() id not loaded', mesh)\n      return\n    }\n    await this.meshes[idx].setLayerProperty(layer, key, val, this.gl)\n    this.updateGLVolume()\n  }\n\n  /**\n   * adjust offset position and scale of 2D sliceScale\n   * @param xyzmmZoom - first three components are spatial, fourth is scaling\n   * @example niivue.setPan2Dxyzmm([5,-4, 2, 1.5])\n   */\n  setPan2Dxyzmm(xyzmmZoom: vec4): void {\n    this.scene.pan2Dxyzmm = xyzmmZoom\n    if (this.opts.yoke3Dto2DZoom) {\n      this.scene.volScaleMultiplier = xyzmmZoom[3]\n    }\n    this.drawScene()\n  }\n\n  /**\n   * set rotation of 3D render view\n   * @example niivue.setRenderAzimuthElevation(45, 15)\n   * @see {@link https://niivue.github.io/niivue/features/mask.html | live demo usage}\n   */\n  setRenderAzimuthElevation(a: number, e: number): void {\n    this.scene.renderAzimuth = a\n    this.scene.renderElevation = e\n    this.onAzimuthElevationChange(a, e)\n    this.drawScene()\n  }\n\n  /**\n   * get the index of an overlay by its unique id. unique ids are assigned to the NVImage.id property when a new NVImage is created.\n   * @param id - the id string to search for\n   * @see NiiVue#getVolumeIndexByID\n   * @example\n   * niivue = new Niivue()\n   * niivue.getOverlayIndexByID(someVolume.id)\n   */\n  getOverlayIndexByID(id: string): number {\n    const n = this.overlays.length\n    for (let i = 0; i < n; i++) {\n      const id_i = this.overlays[i].id\n      if (id_i === id) {\n        return i\n      }\n    }\n    return -1 // -1 signals that no valid index was found for an overlay with the given id\n  }\n\n  /**\n   * set the index of a volume. This will change it's ordering and appearance if there are multiple volumes loaded.\n   * @param volume - the volume to update\n   * @param toIndex - the index to move the volume to. The default is the background (0 index)\n   * @example\n   * niivue = new Niivue()\n   * niivue.setVolume(someVolume, 1) // move it to the second position in the array of loaded volumes (0 is the first position)\n   */\n  setVolume(volume: NVImage, toIndex = 0): void {\n    const numberOfLoadedImages = this.volumes.length\n    if (toIndex > numberOfLoadedImages) {\n      return\n    }\n\n    const volIndex = this.getVolumeIndexByID(volume.id)\n    if (toIndex === 0) {\n      this.volumes.splice(volIndex, 1)\n      this.volumes.unshift(volume)\n      this.back = this.volumes[0]\n      this.overlays = this.volumes.slice(1)\n    } else if (toIndex < 0) {\n      // -1 to remove a volume\n      this.volumes.splice(this.getVolumeIndexByID(volume.id), 1)\n      // this.volumes = this.overlays\n      this.back = this.volumes[0]\n      if (this.volumes.length > 1) {\n        this.overlays = this.volumes.slice(1)\n      } else {\n        this.overlays = []\n      }\n    } else {\n      this.volumes.splice(volIndex, 1)\n      this.volumes.splice(toIndex, 0, volume)\n      this.overlays = this.volumes.slice(1)\n      this.back = this.volumes[0]\n    }\n    this.updateGLVolume()\n  }\n\n  // not included in public docs\n  setMesh(mesh: NVMesh, toIndex = 0): void {\n    this.meshes.forEach((m) => {\n      log.debug('MESH: ', m.name)\n    })\n    const numberOfLoadedMeshes = this.meshes.length\n    if (toIndex > numberOfLoadedMeshes) {\n      return\n    }\n    const meshIndex = this.getMeshIndexByID(mesh.id)\n    if (toIndex === 0) {\n      this.meshes.splice(meshIndex, 1)\n      this.meshes.unshift(mesh)\n    } else if (toIndex < 0) {\n      this.meshes.splice(this.getMeshIndexByID(mesh.id), 1)\n    } else {\n      this.meshes.splice(meshIndex, 1)\n      this.meshes.splice(toIndex, 0, mesh)\n    }\n    this.updateGLVolume()\n    this.meshes.forEach((m) => {\n      log.debug(m.name)\n    })\n  }\n\n  /**\n   * Remove a volume\n   * @param volume - volume to delete\n   * @example\n   * niivue = new Niivue()\n   * niivue.removeVolume(this.volumes[3])\n   * @see {@link https://niivue.github.io/niivue/features/document.3d.html | live demo usage}\n   */\n  removeVolume(volume: NVImage): void {\n    this.setVolume(volume, -1)\n    // check if we have a url for this volume\n    if (this.mediaUrlMap.has(volume)) {\n      const url = this.mediaUrlMap.get(volume)!\n      // notify subscribers that we are about to remove a volume\n      this.onVolumeWithUrlRemoved(url)\n\n      this.mediaUrlMap.delete(volume)\n    }\n\n    this.drawScene()\n  }\n\n  /**\n   * Remove a volume by index\n   * @param index - of volume to remove\n   */\n  removeVolumeByIndex(index: number): void {\n    if (index >= this.volumes.length) {\n      throw new Error('Index of volume out of bounds')\n    }\n    this.removeVolume(this.volumes[index])\n  }\n\n  /**\n   * Remove a triangulated mesh, connectome or tractogram\n   * @param mesh - mesh to delete\n   * @example\n   * niivue = new Niivue()\n   * niivue.removeMesh(this.meshes[3])\n   * @see {@link https://niivue.github.io/niivue/features/connectome.html | live demo usage}\n   */\n  removeMesh(mesh: NVMesh): void {\n    mesh.unloadMesh(this.gl)\n    this.setMesh(mesh, -1)\n    if (this.mediaUrlMap.has(mesh)) {\n      const url = this.mediaUrlMap.get(mesh)!\n      this.onMeshWithUrlRemoved(url)\n      this.mediaUrlMap.delete(mesh)\n    }\n  }\n\n  /**\n   * Remove a triangulated mesh, connectome or tractogram\n   * @param url - URL of mesh to delete\n   * @example\n   * niivue.removeMeshByUrl('../images/cit168.mz3')\n   */\n  removeMeshByUrl(url: string): void {\n    const mesh = this.getMediaByUrl(url)\n    if (mesh) {\n      this.removeMesh(mesh as NVMesh)\n      this.mediaUrlMap.delete(mesh)\n      this.onMeshWithUrlRemoved(url)\n    }\n  }\n\n  /**\n   * Move a volume to the bottom of the stack of loaded volumes. The volume will become the background\n   * @param volume - the volume to move\n   * @example\n   * niivue = new Niivue()\n   * niivue.moveVolumeToBottom(this.volumes[3]) // move the 4th volume to the 0 position. It will be the new background\n   */\n  moveVolumeToBottom(volume: NVImage): void {\n    this.setVolume(volume, 0)\n  }\n\n  /**\n   * Move a volume up one index position in the stack of loaded volumes. This moves it up one layer\n   * @param volume - the volume to move\n   * @example\n   * niivue = new Niivue()\n   * niivue.moveVolumeUp(this.volumes[0]) // move the background image to the second index position (it was 0 index, now will be 1)\n   */\n  moveVolumeUp(volume: NVImage): void {\n    const volIdx = this.getVolumeIndexByID(volume.id)\n    this.setVolume(volume, volIdx + 1)\n  }\n\n  /**\n   * Move a volume down one index position in the stack of loaded volumes. This moves it down one layer\n   * @param volume - the volume to move\n   * @example\n   * niivue = new Niivue()\n   * niivue.moveVolumeDown(this.volumes[1]) // move the second image to the background position (it was 1 index, now will be 0)\n   */\n  moveVolumeDown(volume: NVImage): void {\n    const volIdx = this.getVolumeIndexByID(volume.id)\n    this.setVolume(volume, volIdx - 1)\n  }\n\n  /**\n   * Move a volume to the top position in the stack of loaded volumes. This will be the top layer\n   * @param volume - the volume to move\n   * @example\n   * niivue = new Niivue()\n   * niivue.moveVolumeToTop(this.volumes[0]) // move the background image to the top layer position\n   */\n  moveVolumeToTop(volume: NVImage): void {\n    this.setVolume(volume, this.volumes.length - 1)\n  }\n\n  // not included in public docs\n  // update mouse position from new mouse down coordinates\n  // note: no test yet\n  mouseDown(x: number, y: number): void {\n    x *= this.uiData.dpr!\n    y *= this.uiData.dpr!\n    this.mousePos = [x, y]\n    // if (this.inRenderTile(x, y) < 0) return;\n  }\n\n  // not included in public docs\n  // note: no test yet\n  mouseMove(x: number, y: number): void {\n    x *= this.uiData.dpr!\n    y *= this.uiData.dpr!\n    const dx = (x - this.mousePos[0]) / this.uiData.dpr!\n    const dy = (y - this.mousePos[1]) / this.uiData.dpr!\n    this.mousePos = [x, y]\n\n    if (this.inRenderTile(x, y) < 0) {\n      return\n    }\n\n    if (Math.abs(dx) < 1 && Math.abs(dy) < 1) {\n      return\n    }\n    this.scene.renderAzimuth += dx\n    this.scene.renderElevation += dy\n\n    this.drawScene()\n  }\n\n  /**\n   * convert spherical AZIMUTH, ELEVATION to Cartesian\n   * @param azimuth - azimuth number\n   * @param elevation - elevation number\n   * @returns the converted [x, y, z] coordinates\n   * @example\n   * niivue = new Niivue()\n   * xyz = niivue.sph2cartDeg(42, 42)\n   */\n  sph2cartDeg(azimuth: number, elevation: number): number[] {\n    // convert spherical AZIMUTH,ELEVATION,RANGE to Cartesian\n    // see Matlab's [x,y,z] = sph2cart(THETA,PHI,R)\n    // reverse with cart2sph\n    const Phi = -elevation * (Math.PI / 180)\n    const Theta = ((azimuth - 90) % 360) * (Math.PI / 180)\n    const ret = [Math.cos(Phi) * Math.cos(Theta), Math.cos(Phi) * Math.sin(Theta), Math.sin(Phi)]\n    const len = Math.sqrt(ret[0] * ret[0] + ret[1] * ret[1] + ret[2] * ret[2])\n    if (len <= 0.0) {\n      return ret\n    }\n    ret[0] /= len\n    ret[1] /= len\n    ret[2] /= len\n    return ret\n  }\n\n  /**\n   * Update the clip plane orientation in 3D view mode.\n   * @param depthAzimuthElevation - a 3-component array:\n   *   - `depth`: distance of clip plane from center of volume (0 to ~1.73, or >2.0 to disable clipping)\n   *   - `azimuth`: camera angle around the object in degrees (0–360 or -180–180)\n   *   - `elevation`: camera height in degrees (-90 to 90)\n   * @example\n   * niivue = new Niivue()\n   * niivue.setClipPlane([42, 42])\n   * @see {@link https://niivue.github.io/niivue/features/mask.html | live demo usage}\n   */\n  setClipPlane(depthAzimuthElevation: number[]): void {\n    //  depth: distance of clip plane from center of volume, range 0..~1.73 (e.g. 2.0 for no clip plane)\n    //  azimuthElevation is 2 component vector [a, e, d]\n    //  azimuth: camera position in degrees around object, typically 0..360 (or -180..+180)\n    //  elevation: camera height in degrees, range -90..90\n\n    const v = this.sph2cartDeg(depthAzimuthElevation[1] + 180, depthAzimuthElevation[2])\n    this.scene.clipPlane = [v[0], v[1], v[2], depthAzimuthElevation[0]]\n    this.scene.clipPlaneDepthAziElev = depthAzimuthElevation\n    this.onClipPlaneChange(this.scene.clipPlane)\n    // if (this.opts.sliceType!= SLICE_TYPE.RENDER) return;\n    this.drawScene()\n  }\n\n  /**\n   * set the crosshair and colorbar outline color\n   * @param color - an RGBA array. values range from 0 to 1\n   * @example\n   * niivue = new Niivue()\n   * niivue.setCrosshairColor([0, 1, 0, 0.5]) // set crosshair to transparent green\n   * @see {@link https://niivue.github.io/niivue/features/colormaps.html | live demo usage}\n   */\n  setCrosshairColor(color: number[]): void {\n    this.opts.crosshairColor = color\n    this.drawScene()\n  }\n\n  /**\n   * set thickness of crosshair\n   * @example niivue.crosshairWidth(2)\n   * @see {@link https://niivue.github.io/niivue/features/colormaps.html | live demo usage}\n   */\n  setCrosshairWidth(crosshairWidth: number): void {\n    this.opts.crosshairWidth = crosshairWidth\n    if (this.crosshairs3D) {\n      this.crosshairs3D.mm![0] = NaN // force redraw\n    }\n    this.drawScene()\n  }\n\n  /*\n   * set colors and labels for different drawing values\n   * @param {array} cmap a structure mapping indices to colors and labels\n   * @example\n   * let cmap = {\n   *    R: [0, 255, 0],\n   *    G: [0, 20, 0],\n   *    B: [0, 20, 80],\n   *    A: [0, 255, 255],\n   *    labels: [\"\", \"white-matter\", \"delete T1\"],\n   *  };\n   *  nv.setDrawColormap(cmap);\n   * @see {@link https://niivue.github.io/niivue/features/draw.ui.html | live demo usage}\n   */\n  setDrawColormap(name: string): void {\n    this.drawLut = cmapper.makeDrawLut(name)\n    this.updateGLVolume()\n  }\n\n  /**\n   * does dragging over a 2D slice create a drawing?\n   * @param trueOrFalse - enabled (true) or not (false)\n   * @example niivue.setDrawingEnabled(true)\n   * @see {@link https://niivue.github.io/niivue/features/draw.ui.html | live demo usage}\n   */\n  setDrawingEnabled(trueOrFalse: boolean): void {\n    this.opts.drawingEnabled = trueOrFalse\n    if (this.opts.drawingEnabled) {\n      if (!this.drawBitmap) {\n        this.createEmptyDrawing()\n      }\n    } else {\n      // Clean up clickToSegment state when drawing is disabled\n      if (this.clickToSegmentIsGrowing) {\n        this.clickToSegmentIsGrowing = false\n        // Refresh the GPU texture using the main drawBitmap\n        this.refreshDrawing(true, false)\n      }\n      // Reset pen state\n      this.drawPenLocation = [NaN, NaN, NaN]\n      this.drawPenAxCorSag = -1\n      this.drawPenFillPts = []\n    }\n    this.drawScene() // Redraw needed in both cases\n  }\n\n  /**\n   * determine color and style of drawing\n   * @param penValue - sets the color of the pen\n   * @param isFilledPen - determines if dragging creates flood-filled shape\n   * @example niivue.setPenValue(1, true)\n   * @see {@link https://niivue.github.io/niivue/features/draw.ui.html | live demo usage}\n   */\n  setPenValue(penValue: number, isFilledPen = false): void {\n    this.opts.penValue = penValue\n    this.opts.isFilledPen = isFilledPen\n    this.drawScene()\n  }\n\n  /**\n   * control whether drawing is transparent (0), opaque (1) or translucent (between 0 and 1).\n   * @param opacity - translucency of drawing\n   * @example niivue.setDrawOpacity(0.7)\n   * @see {@link https://niivue.github.io/niivue/features/draw.ui.html | live demo usage}\n   */\n  setDrawOpacity(opacity: number): void {\n    this.drawOpacity = opacity\n    this.drawScene()\n  }\n\n  /**\n   * set the selection box color. A selection box is drawn when you right click and drag to change image contrast\n   * @param color - an RGBA array. values range from 0 to 1\n   * @example\n   * niivue = new Niivue()\n   * niivue.setSelectionBoxColor([0, 1, 0, 0.5]) // set to transparent green\n   * @see {@link https://niivue.github.io/niivue/features/colormaps.html | live demo usage}\n   */\n  setSelectionBoxColor(color: number[]): void {\n    this.opts.selectionBoxColor = color\n  }\n\n  // not included in public docs\n  sliceScroll2D(posChange: number, x: number, y: number, isDelta = true): void {\n    // check if the canvas has focus\n    if (this.opts.scrollRequiresFocus && this.canvas !== document.activeElement) {\n      log.warn('Canvas element does not have focus. Scroll events will not be processed.')\n      return\n    }\n\n    if (this.inGraphTile(x, y)) {\n      let vol = this.volumes[0].frame4D\n      if (posChange > 0) {\n        vol++\n      }\n      if (posChange < 0) {\n        vol--\n      }\n      this.setFrame4D(this.volumes[0].id, vol)\n      return\n    }\n    if (\n      posChange !== 0 &&\n      this.opts.dragMode === DRAG_MODE.pan &&\n      this.inRenderTile(this.uiData.dpr! * x, this.uiData.dpr! * y) === -1\n    ) {\n      let zoom = this.scene.pan2Dxyzmm[3] * (1.0 + 10 * posChange)\n      zoom = Math.round(zoom * 10) / 10\n      const zoomChange = this.scene.pan2Dxyzmm[3] - zoom\n      if (this.opts.yoke3Dto2DZoom) {\n        this.scene.volScaleMultiplier = zoom\n      }\n      this.scene.pan2Dxyzmm[3] = zoom\n      const mm = this.frac2mm(this.scene.crosshairPos)\n      this.scene.pan2Dxyzmm[0] += zoomChange * mm[0]\n      this.scene.pan2Dxyzmm[1] += zoomChange * mm[1]\n      this.scene.pan2Dxyzmm[2] += zoomChange * mm[2]\n      this.drawScene()\n      this.canvas!.focus() // required after change for issue706\n      this.sync()\n      return\n    }\n    this.mouseClick(x, y, posChange, isDelta)\n  }\n\n  /**\n   * set the slice type. This changes the view mode\n   * @param st - sliceType is an enum of slice types to use\n   * @example\n   * niivue = new Niivue()\n   * niivue.setSliceType(Niivue.sliceTypeMultiplanar)\n   * @see {@link https://niivue.github.io/niivue/features/basic.multiplanar.html | live demo usage}\n   */\n  setSliceType(st: SLICE_TYPE): this {\n    this.opts.sliceType = st\n    this.drawScene()\n    return this\n  }\n\n  /**\n   * set the opacity of a volume given by volume index\n   * @param volIdx - the volume index of the volume to change\n   * @param newOpacity - the opacity value. valid values range from 0 to 1. 0 will effectively remove a volume from the scene\n   * @example\n   * niivue = new Niivue()\n   * niivue.setOpacity(0, 0.5) // make the first volume transparent\n   * @see {@link https://niivue.github.io/niivue/features/atlas.html | live demo usage}\n   */\n  setOpacity(volIdx: number, newOpacity: number): void {\n    this.volumes[volIdx].opacity = newOpacity\n    this.updateGLVolume()\n  }\n\n  /**\n   * set the scale of the 3D rendering. Larger numbers effectively zoom.\n   * @param scale - the new scale value\n   * @example\n   * niivue.setScale(2) // zoom some\n   * @see {@link https://niivue.github.io/niivue/features/shiny.volumes.html | live demo usage}\n   */\n  setScale(scale: number): void {\n    this.scene.volScaleMultiplier = scale\n    this.drawScene()\n  }\n\n  /**\n   * set the color of the 3D clip plane\n   * @param color - the new color. expects an array of RGBA values. values can range from 0 to 1\n   * @example\n   * niivue.setClipPlaneColor([1, 1, 1, 0.5]) // white, transparent\n   * @see {@link https://niivue.github.io/niivue/features/clipplanes.html | live demo usage}\n   */\n  setClipPlaneColor(color: number[]): void {\n    this.opts.clipPlaneColor = color\n    this.renderShader!.use(this.gl)\n    this.gl.uniform4fv(this.renderShader!.uniforms.clipPlaneColor!, this.opts.clipPlaneColor)\n    this.drawScene()\n  }\n\n  /**\n   * adjust thickness of the 3D clip plane\n   * @param thick - thickness of slab. Value 0..1.73 (cube opposite corner length is sqrt(3)).\n   * @example\n   * niivue.setClipPlaneThick(0.3) // thin slab\n   * @see {@link https://niivue.github.io/niivue/features/clipplanes.html | live demo usage}\n   */\n  setClipPlaneThick(thick: number): void {\n    this.opts.clipThick = thick\n    this.renderShader!.use(this.gl)\n    this.gl.uniform1f(this.renderShader!.uniforms.clipThick!, this.opts.clipThick)\n    // this.renderShader!.use(this.gl)\n    // this.gl.uniform4fv(this.renderShader!.uniforms.clipPlaneColor!, this.opts.clipPlaneColor)\n    this.drawScene()\n  }\n\n  /**\n   * set the clipping region for volume rendering\n   * @param low - 3-component array specifying the lower bound of the clipping region along the X, Y, and Z axes. Values range from 0 (start) to 1 (end of volume).\n   * @param high - 3-component array specifying the upper bound of the clipping region along the X, Y, and Z axes. Values range from 0 to 1.\n   * @example\n   * niivue.setClipPlaneColor([0.0, 0.0, 0.2], [1.0, 1.0, 0.7]) // remove inferior 20% and superior 30%\n   * @see {@link https://niivue.github.io/niivue/features/clipplanes.html | live demo usage}\n   */\n  setClipVolume(low: number[], high: number[]): void {\n    this.opts.clipVolumeLow = [Math.min(low[0], high[0]), Math.min(low[1], high[1]), Math.min(low[2], high[2])]\n    this.opts.clipVolumeHigh = [Math.max(low[0], high[0]), Math.max(low[1], high[1]), Math.max(low[2], high[2])]\n    this.renderShader!.use(this.gl)\n    this.gl.uniform3fv(this.renderShader!.uniforms.clipLo!, this.opts.clipVolumeLow)\n    this.gl.uniform3fv(this.renderShader!.uniforms.clipHi!, this.opts.clipVolumeHigh)\n    this.pickingImageShader!.use(this.gl)\n    this.gl.uniform3fv(this.pickingImageShader!.uniforms.clipLo!, this.opts.clipVolumeLow)\n    this.gl.uniform3fv(this.pickingImageShader!.uniforms.clipHi!, this.opts.clipVolumeHigh)\n    this.drawScene()\n  }\n\n  /**\n   * set proportion of volume rendering influenced by selected matcap.\n   * @param gradientAmount - amount of matcap (NaN or 0..1), default 0 (matte, surface normal does not influence color). NaN renders the gradients.\n   * @example\n   * niivue.setVolumeRenderIllumination(0.6);\n   * @see {@link https://niivue.github.io/niivue/features/shiny.volumes.html | live demo usage}\n   * @see {@link https://niivue.github.io/niivue/features/gradient.order.html | live demo usage}\n   */\n  async setVolumeRenderIllumination(gradientAmount = 0.0): Promise<void> {\n    this.renderGradientValues = Number.isNaN(gradientAmount)\n    this.renderShader = this.renderVolumeShader\n    if (this.renderGradientValues) {\n      this.renderShader = this.renderGradientValuesShader\n    } else {\n      this.opts.gradientAmount = gradientAmount\n      if (gradientAmount > 0.0 || this.opts.gradientOpacity > 0.0) {\n        this.renderShader = this.renderGradientShader\n      } else if (gradientAmount < 0.0) {\n        this.renderShader = this.renderSliceShader\n      }\n    }\n    this.initRenderShader(this.renderShader!, gradientAmount)\n    this.renderShader!.use(this.gl)\n    this.setClipPlaneColor(this.opts.clipPlaneColor)\n    if (Number.isNaN(gradientAmount)) {\n      this.gradientTextureAmount = 1.0\n    } else {\n      this.gradientTextureAmount = gradientAmount\n    }\n    if (this.volumes.length < 1) {\n      return\n    } // issue1158\n    this.refreshLayers(this.volumes[0], 0)\n    this.drawScene()\n  }\n\n  /**\n   * set volume rendering opacity influence of the gradient magnitude\n   * @param gradientOpacity - amount of gradient magnitude influence on opacity (0..1), default 0 (no-influence)\n   * @param renderSilhouette - make core transparent to enhance rims (0..1), default 0 (no-influence)\n   * @example\n   * niivue.setGradientOpacity(0.6);\n   * @see {@link https://niivue.github.io/niivue/features/gradient.opacity.html | live demo usage}\n   */\n  async setGradientOpacity(gradientOpacity = 0.0, renderSilhouette = 0.0): Promise<void> {\n    this.opts.gradientOpacity = gradientOpacity\n    this.opts.renderSilhouette = renderSilhouette\n    if (this.renderGradientValues) {\n      this.renderShader = this.renderGradientValuesShader\n    } else if (this.gradientTextureAmount > 0.0 || gradientOpacity > 0.0) {\n      this.renderShader = this.renderGradientShader\n    } else if (this.gradientTextureAmount < 0.0) {\n      this.renderShader = this.renderSliceShader\n    }\n    this.initRenderShader(this.renderShader!, this.gradientTextureAmount)\n    this.renderShader!.use(this.gl)\n    if (this.gradientTextureAmount > 0.0) {\n      this.refreshLayers(this.volumes[0], 0)\n    }\n    this.drawScene()\n  }\n\n  // not included in public docs.\n  // note: marked for removal at some point in the future (this just makes a test sphere)\n  overlayRGBA(volume: NVImage): Uint8ClampedArray {\n    const hdr = volume.hdr!\n    const vox = hdr.dims[1] * hdr.dims[2] * hdr.dims[3]\n    const imgRGBA = new Uint8ClampedArray(vox * 4)\n    const radius = 0.2 * Math.min(Math.min(hdr.dims[1], hdr.dims[2]), hdr.dims[3])\n    const halfX = 0.5 * hdr.dims[1]\n    const halfY = 0.5 * hdr.dims[2]\n    const halfZ = 0.5 * hdr.dims[3]\n    let j = 0\n    for (let z = 0; z < hdr.dims[3]; z++) {\n      for (let y = 0; y < hdr.dims[2]; y++) {\n        for (let x = 0; x < hdr.dims[1]; x++) {\n          const dx = Math.abs(x - halfX)\n          const dy = Math.abs(y - halfY)\n          const dz = Math.abs(z - halfZ)\n          const dist = Math.sqrt(dx * dx + dy * dy + dz * dz)\n          let v = 0\n          if (dist < radius) {\n            v = 255\n          }\n          imgRGBA[j++] = 0 // Red\n          imgRGBA[j++] = v // Green\n          imgRGBA[j++] = 0 // Blue\n          imgRGBA[j++] = v * 0.5 // Alpha\n        }\n      }\n    }\n    return imgRGBA\n  }\n\n  // not included in public docs\n  vox2mm(XYZ: number[], mtx: mat4): vec3 {\n    return NVUtilities.vox2mm(XYZ, mtx)\n  }\n\n  /**\n   * clone a volume and return a new volume\n   * @param index - the index of the volume to clone\n   * @returns new volume to work with, but that volume is not added to the canvas\n   * @example\n   * niivue = new Niivue()\n   * niivue.cloneVolume(0)\n   */\n  cloneVolume(index: number): NVImage {\n    return this.volumes[index].clone()\n  }\n\n  /**\n   *\n   * @param url - URL of NVDocument\n   */\n  async loadDocumentFromUrl(url: string): Promise<void> {\n    const document = await NVDocument.loadFromUrl(url)\n    await this.loadDocument(document)\n  }\n\n  /**\n   * Loads an NVDocument\n   * @returns  Niivue instance\n   * @see {@link https://niivue.github.io/niivue/features/document.load.html | live demo usage}\n   */\n  async loadDocument(document: NVDocument): Promise<this> {\n    this.volumes = []\n    this.meshes = []\n    this.document = document\n    this.document.labels = this.document.labels ? this.document.labels : [] // for older documents w/o labels\n    const opts = { ...DEFAULT_OPTIONS, ...document.opts }\n    this.scene.pan2Dxyzmm = document.scene.pan2Dxyzmm ? document.scene.pan2Dxyzmm : [0, 0, 0, 1] // for older documents that don't have this\n    this.document.opts = opts\n    this.setClipPlane(this.scene.clipPlaneDepthAziElev)\n    log.debug('load document', document)\n    this.mediaUrlMap.clear()\n    this.createEmptyDrawing()\n\n    // const imagesToAdd = new Map<ImageFromUrlOptions, NVImage>()\n\n    // load our images and meshes\n    const encodedImageBlobs = document.encodedImageBlobs\n    for (let i = 0; i < document.imageOptionsArray.length; i++) {\n      const imageOptions = document.imageOptionsArray[i]\n      const base64 = encodedImageBlobs[i]\n      if (base64) {\n        if ('colorMap' in imageOptions) {\n          imageOptions.colormap = imageOptions.colorMap\n        }\n        const image = await NVImage.loadFromBase64({ base64, ...imageOptions })\n        if (image) {\n          if (image.colormapLabel) {\n            const length = Object.keys(image.colormapLabel.lut).length\n\n            // Create a new Uint8ClampedArray with the length of the object.\n            const uint8ClampedArray = new Uint8ClampedArray(length)\n\n            // Iterate over the object and set the values of the Uint8ClampedArray.\n            for (const key in image.colormapLabel.lut) {\n              uint8ClampedArray[key] = image.colormapLabel.lut[key]\n            }\n            image.colormapLabel.lut = uint8ClampedArray\n          }\n          this.addVolume(image)\n        }\n      }\n    }\n\n    // reset our image options map\n    // document.imageOptionsMap.clear()\n\n    // for(const imageOptions of map.keys()) {\n\n    // }\n\n    if (this.volumes.length > 0) {\n      this.back = this.volumes[0]\n    }\n\n    for (const meshDataObject of document.meshDataObjects ?? []) {\n      const meshInit = { gl: this.gl, ...meshDataObject }\n      if (meshDataObject.offsetPt0) {\n        meshInit.rgba255[3] = 0 // this is a streamline\n        meshInit.tris = new Uint32Array(meshDataObject.offsetPt0)\n      }\n      log.debug(meshInit)\n      const meshToAdd = new NVMesh(\n        meshInit.pts,\n        meshInit.tris!,\n        meshInit.name,\n        meshInit.rgba255,\n        meshInit.opacity,\n        meshInit.visible,\n        this.gl,\n        meshInit.connectome,\n        meshInit.dpg,\n        meshInit.dps,\n        meshInit.dpv\n      )\n      if (meshDataObject.offsetPt0) {\n        meshToAdd.fiberGroupColormap = meshDataObject.fiberGroupColormap\n        meshToAdd.fiberColor = meshDataObject.fiberColor\n        meshToAdd.fiberDither = meshDataObject.fiberDither\n        meshToAdd.fiberRadius = meshDataObject.fiberRadius\n        meshToAdd.colormap = meshDataObject.colormap\n      }\n      meshToAdd.meshShaderIndex = meshInit.meshShaderIndex\n      meshToAdd.layers = meshInit.layers\n      meshToAdd.updateMesh(this.gl)\n      log.debug(meshToAdd)\n      this.addMesh(meshToAdd)\n    }\n    // add connectomes\n    if (document.data.connectomes) {\n      for (const connectomeString of document.data.connectomes) {\n        const connectome = JSON.parse(connectomeString)\n        const meshToAdd = this.loadConnectomeAsMesh(connectome)\n        meshToAdd.updateMesh(this.gl)\n        this.addMesh(meshToAdd)\n      }\n    }\n\n    // Deserialize drawBitmap\n    this.createEmptyDrawing()\n    const drawingBase64 = document.encodedDrawingBlob\n    if (drawingBase64) {\n      const drawingBitmap = await NVUtilities.b64toUint8(drawingBase64) // Convert base64 back to Uint8Array\n      if (drawingBitmap) {\n        const dims = this.back.dims\n        let expectedBytes = dims[1] * dims[2] * dims[3]\n        if (drawingBitmap.length - 352 === expectedBytes) {\n          expectedBytes += 352\n        }\n        if (drawingBitmap.length !== expectedBytes) {\n          throw new Error(\n            `drawBitmap size does not match the texture dimensions (${dims[1]}×${dims[2]}×${dims[3]}) ${expectedBytes} != ${dims[1] * dims[2] * dims[3]}.`\n          )\n        }\n        this.drawBitmap = drawingBitmap // Set the deserialized drawBitmap\n        this.refreshDrawing()\n      }\n    }\n\n    await this.setGradientOpacity(this.opts.gradientOpacity)\n    await this.setVolumeRenderIllumination(this.opts.gradientAmount)\n\n    this.updateGLVolume()\n    this.drawScene()\n    this.onDocumentLoaded(document)\n    return this\n  }\n\n  /**\n * generates JavaScript to load the current scene as a document\n * @param canvasId - id of canvas NiiVue will be attached to\n * @param esm - bundled version of NiiVue\n * @example\n * const javascript = this.generateLoadDocumentJavaScript(\"gl1\");\n * const html = `<html><body><canvas id=\"gl1\"></canvas><script type=\"module\" async>\n        ${javascript}</script></body></html>`;\n */\n  async generateLoadDocumentJavaScript(canvasId: string, esm: string): Promise<string> {\n    const json = this.json()\n\n    const base64 = await NVUtilities.compressToBase64String(JSON.stringify(json))\n    const javascript = `\n        ${esm}\n\n        async function saveNiivueAsHtml(pageName) {\n          //get new docstring\n          const docString = nv1.json();\n          const html =\n          document.getElementsByTagName(\"html\")[0]\n              .innerHTML.replace(base64, await NVUtilities.compressToBase64String(JSON.stringify(docString)));\n          NVUtilities.download(html, pageName, \"application/html\");\n        }\n\n        var nv1 = new Niivue();\n        await nv1.attachTo(\"${canvasId}\");\n        var base64 = \"${base64}\";\n        NVUtilities.decompressBase64String(base64).then((jsonText) => {\n          var json = JSON.parse(jsonText); // string -> JSON\n          var doc = NVDocument.loadFromJSON(json);\n          nv1.loadDocument(doc);\n          nv1.updateGLVolume();\n        });\n\n      `\n\n    return javascript\n  }\n\n  /**\n   * generates HTML of current scene\n   * @param canvasId - id of canvas NiiVue will be attached to\n   * @param esm - bundled version of NiiVue\n   * @returns HTML with javascript of the current scene\n   * @example\n   * const template = `<html><body><canvas id=\"gl1\"></canvas><script type=\"module\" async>\n   *       %%javascript%%</script></body></html>`;\n   * nv1.generateHTML(\"page.html\", esm);\n   */\n  async generateHTML(canvasId = 'gl1', esm: string): Promise<string> {\n    const javascript = await this.generateLoadDocumentJavaScript(canvasId, esm)\n    const html = `<!DOCTYPE html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\" />\n            <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n            <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\" />\n            <title>Save as HTML</title>\n            <style>\n            html {\n              height: auto;\n              min-height: 100%;\n              margin: 0;\n            }\n            body {\n              display: flex;\n              flex-direction: column;\n              margin: 0;\n              min-height: 100%;\n              width: 100%;\n              position: absolute;\n              font-family: system-ui, Arial, Helvetica, sans-serif;\n              background: #ffffff;\n              color: black;\n              user-select: none; /* Standard syntax */\n            }\n            header {\n              margin: 10px;\n            }\n            main {\n              flex: 1;\n              background: #000000;\n              position: relative;\n            }\n            footer {\n              margin: 10px;\n            }\n            canvas {\n              position: absolute;\n              cursor: crosshair;\n            }\n            canvas:focus {\n              outline: 0px;\n            }\n            div {\n              display: table-row;\n              background-color: blue;\n            }\n            </style>\n          </head>\n          <body>\n            <noscript>niivue requires JavaScript.</noscript>\n            <header>\n            Save the current scene as HTML\n            <button id=\"save\">Save as HTML</button>\n            </header>\n            <main>\n              <canvas id=\"gl1\"></canvas>\n            </main>\n            <script type=\"module\" async>\n              ${javascript}\n              function saveAsHtml() {\n                saveNiivueAsHtml(\"page.html\");\n              }\n              // assign our event handler\n              var button = document.getElementById(\"save\");\n              button.onclick = saveAsHtml;\n            </script>\n          </body>\n        </html>`\n    return html\n  }\n\n  /**\n   * save current scene as HTML\n   * @param fileName - the name of the HTML file\n   * @param canvasId - id of canvas NiiVue will be attached to\n   * @param esm - bundled version of NiiVue\n   */\n  async saveHTML(fileName = 'untitled.html', canvasId = 'gl1', esm: string): Promise<void> {\n    const html = await this.generateHTML(canvasId, esm)\n    return NVUtilities.download(html, fileName, 'application/html')\n  }\n\n  /**\n   * Converts NiiVue scene to JSON\n   */\n  json(): ExportDocumentData {\n    this.document.opts = this.opts\n    this.document.scene = this.scene\n    this.document.volumes = this.volumes\n    this.document.meshes = this.meshes\n    // we need to re-render before we generate the data URL https://stackoverflow.com/questions/30628064/how-to-toggle-preservedrawingbuffer-in-three-js\n    this.drawScene()\n    this.document.previewImageDataURL = this.canvas!.toDataURL()\n    const json = this.document.json()\n\n    return json\n  }\n\n  /**\n   * Save the current scene as an .nvd document.\n   *\n   * @param fileName  Name of the file to create (default \"untitled.nvd\")\n   * @param compress  If true, gzip-compress the JSON (default true)\n   * @param options   Fine-grained switches:\n   *                  • embedImages  – store encodedImageBlobs  (default true)\n   *                  • embedPreview – store previewImageDataURL (default true)\n   *\n   * @example\n   * // smallest possible file – no preview, just metadata\n   * await nv.saveDocument('scene.nvd', true, { embedImages:false, embedPreview:false });\n   */\n  async saveDocument(\n    fileName = 'untitled.nvd',\n    compress = true,\n    options: { embedImages?: boolean; embedPreview?: boolean } = {}\n  ): Promise<void> {\n    const { embedImages = true, embedPreview = true } = options\n\n    this.document.title = fileName\n    this.document.volumes = this.volumes\n    this.document.meshes = this.meshes\n\n    // preview image only when requested\n    if (embedPreview) {\n      this.drawScene() // make sure the framebuffer is up to date\n      this.document.previewImageDataURL = this.canvas!.toDataURL()\n    } else {\n      this.document.previewImageDataURL = '' // nothing embedded\n    }\n\n    // delegate the rest\n    await this.document.download(fileName, compress, { embedImages })\n  }\n\n  // generic loadImages that wraps loadVolumes and loadMeshes\n  async loadImages(images: Array<ImageFromUrlOptions | LoadFromUrlParams>): Promise<this> {\n    const volumes = []\n    const meshes = []\n    for (const image of images) {\n      if ('url' in image) {\n        // prefer name over url\n        const ext = this.getFileExt(image.name ? image.name : image.url)\n        // check this.loaders to see if a user has register\n        // a custom loader for this file extension\n        if (this.loaders[ext]) {\n          // check if the loader type property is a volume or mesh\n          // by using the toExt property\n          const toExt = this.loaders[ext].toExt.toUpperCase()\n          if (MESH_EXTENSIONS.includes(toExt)) {\n            meshes.push(image)\n          } else {\n            volumes.push(image)\n          }\n          // continue to the next image\n          continue\n        }\n\n        if (MESH_EXTENSIONS.includes(ext.toUpperCase())) {\n          meshes.push(image)\n        } else {\n          volumes.push(image)\n        }\n      }\n    }\n    if (volumes.length > 0) {\n      await this.loadVolumes(volumes as ImageFromUrlOptions[])\n    }\n    if (meshes.length > 0) {\n      await this.loadMeshes(meshes as LoadFromUrlParams[])\n    }\n\n    return this\n  }\n\n  async loadDicoms(dicomList: ImageFromUrlOptions[]): Promise<this> {\n    // check if this.dicomLoader is set\n    if (!this.getDicomLoader()) {\n      throw new Error('No dicom loader set. Please set a dicom loader before loading dicoms')\n    }\n    this.drawScene()\n    this.volumes = []\n    this.gl.clearColor(0.0, 0.0, 0.0, 1.0)\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT)\n    const promises = dicomList.map(async (dicom) => {\n      let dicomData = null\n      if (dicom.isManifest) {\n        dicomData = await NVImage.fetchDicomData(dicom.url)\n      } else {\n        const response = await fetch(dicom.url)\n        if (!response.ok) {\n          throw new Error(`Failed to load file: ${response.statusText}`)\n        }\n        const dicomArrayBuffer = await response.arrayBuffer()\n        const basename = dicom.url.split('/').pop()\n        const data = dicomArrayBuffer\n        dicomData = [{ name: basename, data }]\n      }\n      const dicomLoader = this.getDicomLoader().loader\n      const convertedArrayBuffer = await dicomLoader(dicomData)\n      console.log(convertedArrayBuffer)\n      const name = convertedArrayBuffer[0].name\n      const data = convertedArrayBuffer[0].data\n      const image = await NVImage.loadFromUrl({ url: data, name })\n      return image\n    })\n\n    const nvImages = await Promise.all(promises)\n    // if only one nvImage, then add it to the scene ,else call onLoaderFinishedWithImages\n    if (nvImages.length === 1) {\n      this.addVolume(nvImages[0])\n    } else {\n      this.onDicomLoaderFinishedWithImages(nvImages)\n    }\n    return this\n  }\n\n  /**\n   * load an array of volume objects\n   * @param volumeList - the array of objects to load. each object must have a resolvable \"url\" property at a minimum\n   * @returns returns the Niivue instance\n   * @example\n   * niivue = new Niivue()\n   * niivue.loadVolumes([{url: 'someImage.nii.gz}, {url: 'anotherImage.nii.gz'}])\n   * @see {@link https://niivue.github.io/niivue/features/mask.html | live demo usage}\n   */\n  async loadVolumes(volumeList: ImageFromUrlOptions[]): Promise<this> {\n    this.drawScene()\n\n    if (this.thumbnailVisible) {\n      // defer volume loading until user clicks on canvas with thumbnail image\n      this.deferredVolumes = volumeList\n      return this\n    }\n    this.volumes = []\n    this.gl.clearColor(0.0, 0.0, 0.0, 1.0)\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT)\n    // if more than one volume, then fetch them all simultaneously\n    // using addVolumesFromUrl (note the \"s\" in \"Volumes\")\n    // if (volumeList.length > 1) {\n    //   await this.addVolumesFromUrl(volumeList)\n    //   return this\n    // }\n\n    await this.addVolumesFromUrl(volumeList)\n    return this\n    // const imageOptions = {\n    //   url: volumeList[0].url!,\n    //   headers: volumeList[0].headers,\n    //   name: volumeList[0].name,\n    //   colormap: volumeList[0].colormap ? volumeList[0].colormap : volumeList[0].colorMap,\n    //   colormapNegative: volumeList[0].colormapNegative\n    //     ? volumeList[0].colormapNegative\n    //     : volumeList[0].colorMapNegative,\n    //   opacity: volumeList[0].opacity,\n    //   urlImgData: volumeList[0].urlImgData,\n    //   cal_min: volumeList[0].cal_min,\n    //   cal_max: volumeList[0].cal_max,\n    //   trustCalMinMax: this.opts.trustCalMinMax,\n    //   isManifest: volumeList[0].isManifest,\n    //   frame4D: volumeList[0].frame4D,\n    //   limitFrames4D: volumeList[0].limitFrames4D || this.opts.limitFrames4D,\n    //   colorbarVisible: volumeList[0].colorbarVisible\n    // }\n    // await this.addVolumeFromUrl(imageOptions)\n    // return this\n  }\n\n  /**\n   * Add mesh and notify subscribers\n   */\n  async addMeshFromUrl(meshOptions: LoadFromUrlParams): Promise<NVMesh> {\n    const ext = this.getFileExt(meshOptions.url)\n    if (ext === 'JCON' || ext === 'JSON') {\n      const response = await fetch(meshOptions.url, {})\n      const json = await response.json()\n      const mesh = this.loadConnectomeAsMesh(json)\n      this.mediaUrlMap.set(mesh, meshOptions.url)\n      this.onMeshAddedFromUrl(meshOptions, mesh)\n      this.addMesh(mesh)\n      return mesh\n    }\n    const mesh = await NVMesh.loadFromUrl({ ...meshOptions, gl: this.gl })\n    this.mediaUrlMap.set(mesh, meshOptions.url)\n    this.onMeshAddedFromUrl(meshOptions, mesh)\n    this.addMesh(mesh)\n    return mesh\n  }\n\n  /**\n   * Add mesh and notify subscribers\n   */\n  async addMeshesFromUrl(meshOptions: LoadFromUrlParams[]): Promise<NVMesh[]> {\n    const promises = meshOptions.map(async (meshItem) => {\n      // first check this.loaders to see if the user has\n      // registered a custom loader for this file type.\n      // if so, use that loader to load the file.\n      const ext = this.getFileExt(meshItem.name || meshItem.url)\n      if (this.loaders[ext]) {\n        let itemToLoad: string | Uint8Array | ArrayBuffer = meshItem.url\n        const toExt = this.loaders[ext].toExt\n        let name = meshItem.name || meshItem.url\n        // in case the name is a url, just get the basename without the slashes\n        name = name.split('/').pop()\n        if (typeof meshItem.url === 'string') {\n          const url = meshItem.url\n          try {\n            const response = await fetch(url)\n            if (!response.ok) {\n              throw new Error(`Failed to load file: ${response.statusText}`)\n            }\n            itemToLoad = await response.arrayBuffer()\n          } catch (error) {\n            throw new Error(`Failed to load url ${url}: ${error}`)\n          }\n        }\n        const { positions, indices, colors = null } = await this.loaders[ext].loader(itemToLoad)\n        meshItem.name = `${name}.${toExt}`\n        const mz3 = await NVMeshUtilities.createMZ3Async(positions, indices, false, colors)\n        meshItem.buffer = mz3\n        // return await this.loadFromArrayBuffer(mz3, meshItem.name)\n      }\n      if (ext === 'JCON' || ext === 'JSON') {\n        const response = await fetch(meshItem.url, {})\n        const json = await response.json()\n        const mesh = this.loadConnectomeAsMesh(json)\n        this.mediaUrlMap.set(mesh, meshItem.url)\n        this.onMeshAddedFromUrl(meshItem, mesh)\n        return mesh\n      }\n      const mesh = await NVMesh.loadFromUrl({ ...meshItem, gl: this.gl })\n      this.mediaUrlMap.set(mesh, meshItem.url)\n      this.onMeshAddedFromUrl(meshItem, mesh)\n      return mesh\n    })\n    const meshes = await Promise.all(promises)\n\n    for (let i = 0; i < meshes.length; i++) {\n      this.addMesh(meshes[i])\n    }\n    return meshes\n  }\n\n  /**\n   * load an array of meshes\n   * @param meshList - the array of objects to load. each object must have a resolvable \"url\" property at a minimum\n   * @returns Niivue instance\n   * @example\n   * niivue = new Niivue()\n   * niivue.loadMeshes([{url: 'someMesh.gii'}])\n   * @see {@link https://niivue.github.io/niivue/features/meshes.html | live demo usage}\n   */\n  async loadMeshes(meshList: LoadFromUrlParams[]): Promise<this> {\n    this.drawScene()\n\n    if (this.thumbnailVisible) {\n      // defer loading until user clicks on canvas with thumbnail image\n      this.deferredMeshes = meshList\n      return this\n    }\n    if (!this.initialized) {\n      // await this.init();\n    }\n    this.meshes = []\n    this.gl.clearColor(0.0, 0.0, 0.0, 1.0)\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT)\n\n    // if more than one mesh, then fetch them all simultaneously\n    // using addMeshesFromUrl (note the \"s\" in \"Meshes\")\n    // if (meshList.length > 1) {\n    await this.addMeshesFromUrl(meshList)\n    this.updateGLVolume()\n    this.drawScene()\n    return this\n    // }\n\n    // await this.addMeshFromUrl(meshList[0])\n    // this.updateGLVolume()\n    // this.drawScene()\n    // return this\n  }\n\n  /**\n   * Load a connectome from a given URL and initialize it.\n   *\n   * @param url - the URL to a JSON-formatted connectome definition\n   * @param headers - optional HTTP headers to include with the request (e.g. for authorization)\n   * @returns the `Niivue` instance (for method chaining)\n   * @see {@link https://niivue.github.io/niivue/features/connectome.html | live demo usage}\n   */\n  async loadConnectomeFromUrl(url: string, headers = {}): Promise<this> {\n    const response = await fetch(url, { headers })\n    const json = await response.json()\n    return this.loadConnectome(json)\n  }\n\n  /**\n   * Load a FreeSurfer-style connectome from a given URL and initialize it.\n   * @param url - the URL of the JSON-formatted connectome file\n   * @param headers - optional HTTP headers to include in the fetch request (e.g. for authorization)\n   * @returns the `Niivue` instance (for method chaining)\n   * @see {@link https://niivue.github.io/niivue/features/connectome.html | live demo usage}\n   */\n  async loadFreeSurferConnectomeFromUrl(url: string, headers = {}): Promise<this> {\n    const response = await fetch(url, { headers })\n    const json = await response.json()\n    return this.loadFreeSurferConnectome(json)\n  }\n\n  /**\n   * load a connectome specified by json\n   * @param json - freesurfer model\n   * @returns Niivue instance\n   * @see {@link https://niivue.github.io/niivue/features/connectome.html | live demo usage}\n   */\n  async loadFreeSurferConnectome(json: FreeSurferConnectome): Promise<this> {\n    const connectome = NVConnectome.convertFreeSurferConnectome(json)\n    return this.loadConnectome(connectome)\n  }\n\n  handleNodeAdded(event: { detail: { node: NVConnectomeNode } }): void {\n    const node = event.detail.node\n    const rgba = [1, 1, 1, 1]\n    this.addLabel(\n      node.name,\n      {\n        textColor: rgba,\n        bulletScale: 1,\n        bulletColor: rgba,\n        lineWidth: 0,\n        lineColor: rgba,\n        lineTerminator: LabelLineTerminator.NONE,\n        textScale: 1.0\n      },\n      [node.x, node.y, node.z]\n    )\n    this.drawScene()\n  }\n\n  loadConnectomeAsMesh(json: Connectome | LegacyConnectome | FreeSurferConnectome): NVMesh {\n    let connectome = json\n    if ('data_type' in json && json.data_type === 'fs_pointset') {\n      connectome = NVConnectome.convertFreeSurferConnectome(json as FreeSurferConnectome)\n      log.warn('converted FreeSurfer connectome', connectome)\n    } else if ('nodes' in json) {\n      const nodes = json.nodes\n      if ('names' in nodes && 'X' in nodes && 'Y' in nodes && 'Z' in nodes && 'Color' in nodes && 'Size' in nodes) {\n        // legacy format\n        connectome = NVConnectome.convertLegacyConnectome(json as LegacyConnectome)\n        log.warn('converted legacy connectome', connectome)\n      }\n    } else {\n      throw new Error('not a known connectome format')\n    }\n    return new NVConnectome(this.gl, connectome as LegacyConnectome)\n  }\n\n  /**\n   * load a connectome specified by json\n   * @param json - connectome model\n   * @returns Niivue instance\n   * @see {@link https://niivue.github.io/niivue/features/connectome.html | live demo usage}\n   */\n  loadConnectome(json: Connectome | LegacyConnectome): this {\n    this.drawScene()\n    this.meshes = []\n    this.gl.clearColor(0.0, 0.0, 0.0, 1.0)\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT)\n\n    const mesh = this.loadConnectomeAsMesh(json)\n    this.addMesh(mesh)\n    this.drawScene()\n    return this\n  }\n\n  /**\n   * generate a blank canvas for the pen tool\n   * @example niivue.createEmptyDrawing()\n   * @see {@link https://niivue.github.io/niivue/features/cactus.html | live demo usage}\n   */\n  createEmptyDrawing(): void {\n    if (this.back === null || !this.back.dims) {\n      return\n    }\n    const mn = Math.min(Math.min(this.back.dims[1], this.back.dims[2]), this.back.dims[3])\n    if (mn < 1) {\n      return\n    } // something is horribly wrong!\n    const vx = this.back.dims[1] * this.back.dims[2] * this.back.dims[3]\n    this.drawBitmap = new Uint8Array(vx)\n    this.clickToSegmentGrowingBitmap = new Uint8Array(vx)\n    this.drawClearAllUndoBitmaps()\n    this.drawAddUndoBitmap()\n    if (this.opts.is2DSliceShader) {\n      this.drawTexture = this.r8Tex2D(this.drawTexture, TEXTURE7_DRAW, this.back.dims)\n    } else {\n      this.drawTexture = this.r8Tex(this.drawTexture, TEXTURE7_DRAW, this.back.dims, true)\n    }\n    this.refreshDrawing(false)\n  }\n\n  // not included in public docs\n  // create a 1-component (red) 16-bit signed integer texture on the GPU\n  r16Tex(texID: WebGLTexture | null, activeID: number, dims: number[], img16: Int16Array): WebGLTexture {\n    if (texID) {\n      this.gl.deleteTexture(texID)\n    }\n    texID = this.gl.createTexture()!\n    this.gl.activeTexture(activeID)\n    this.gl.bindTexture(this.gl.TEXTURE_3D, texID)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_R, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)\n    this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, 1)\n    this.gl.texStorage3D(this.gl.TEXTURE_3D, 1, this.gl.R16I, dims[1], dims[2], dims[3]) // output background dimensions\n    const nv = dims[1] * dims[2] * dims[3]\n    if (img16.length !== nv) {\n      img16 = new Int16Array(nv)\n    }\n    this.gl.texSubImage3D(\n      this.gl.TEXTURE_3D,\n      0,\n      0,\n      0,\n      0,\n      dims[1],\n      dims[2],\n      dims[3],\n      this.gl.RED_INTEGER,\n      this.gl.SHORT,\n      img16\n    ) // this.gl.SHORT,\n\n    return texID\n  }\n\n  /**\n   * dilate drawing so all voxels are colored.\n   * works on drawing with multiple colors\n   * @example niivue.drawGrowCut();\n   * @see {@link https://niivue.github.io/niivue/features/draw2.html | live demo usage}\n   */\n  drawGrowCut(): void {\n    // this compute shader transiently requires 5 3D Textures:\n    // TEXTURE11_GC_BACK      = 33995 background voxel intensity\n    // TEXTURE12_GC_STRENGTH0 = 33996 weighting read/write\n    // TEXTURE13_GC_STRENGTH1 = 33997 weighting write/read\n    // TEXTURE14_GC_LABEL0    = 33998 drawing color read/write\n    // TEXTURE15_GC_LABEL1    = 33999 drawing color write/read\n    if (!this.back || !this.back.dims) {\n      // TODO gl and back etc should be centrally guaranteed to be set\n      throw new Error('back not defined')\n    }\n    const hdr = this.back.hdr!\n    const gl = this.gl\n    const nv = hdr.dims[1] * hdr.dims[2] * hdr.dims[3]\n    if (!this.drawBitmap || this.drawBitmap.length !== nv) {\n      log.debug('bitmap dims are wrong')\n      return\n    }\n    // this.drawUndoBitmap = this.drawBitmap.slice();\n    const fb = gl.createFramebuffer()\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb)\n    gl.disable(gl.CULL_FACE)\n    gl.viewport(0, 0, this.back.dims[1], this.back.dims[2]) // output in background dimensions\n    gl.disable(gl.BLEND)\n    let img16 = img2ras16(this.back)\n    const background = this.r16Tex(null, TEXTURE11_GC_BACK, this.back.dims, img16)\n    for (let i = 1; i < nv; i++) {\n      img16[i] = this.drawBitmap[i]\n    }\n    const label0 = this.r16Tex(null, TEXTURE14_GC_LABEL0, this.back.dims, img16)\n    const label1 = this.r16Tex(null, TEXTURE15_GC_LABEL1, this.back.dims, img16)\n    const kMAX_STRENGTH = 10000\n    for (let i = 1; i < nv; i++) {\n      if (img16[i] > 0) {\n        img16[i] = kMAX_STRENGTH\n      }\n    }\n    const strength0 = this.r16Tex(null, TEXTURE12_GC_STRENGTH0, this.back.dims, img16)\n    const strength1 = this.r16Tex(null, TEXTURE13_GC_STRENGTH1, this.back.dims, img16)\n    gl.bindVertexArray(this.genericVAO)\n    const shader = this.growCutShader!\n    shader.use(gl)\n    const iterations = 128 // will run 2x this value\n    gl.uniform1i(shader.uniforms.finalPass, 0)\n    gl.uniform1i(shader.uniforms.backTex, 11) // background is TEXTURE11_GC_BACK\n    for (let j = 0; j < iterations; j++) {\n      gl.uniform1i(shader.uniforms.labelTex, 14) // label0 is TEXTURE14_GC_LABEL0\n      gl.uniform1i(shader.uniforms.strengthTex, 12) // strength0 is TEXTURE12_GC_STRENGTH0\n      for (let i = 0; i < this.back.dims[3]; i++) {\n        const coordZ = (1 / this.back.dims[3]) * (i + 0.5)\n        gl.uniform1f(shader.uniforms.coordZ, coordZ)\n        gl.framebufferTextureLayer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, label1, 0, i)\n        gl.framebufferTextureLayer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT1, strength1, 0, i)\n        gl.drawBuffers([gl.COLOR_ATTACHMENT0, gl.COLOR_ATTACHMENT1])\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\n          log.error('Incomplete framebuffer')\n        }\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n      }\n      // reverse order strength1/label1 and strength0/label0 for reading and writing:\n      if (j === iterations - 1) {\n        gl.uniform1i(shader.uniforms.finalPass, 1)\n      }\n      gl.uniform1i(shader.uniforms.labelTex, 15) // label1 is TEXTURE15_GC_LABEL1\n      gl.uniform1i(shader.uniforms.strengthTex, 13) // strength1 is TEXTURE13_GC_STRENGTH1\n      for (let i = 0; i < this.back.dims[3]; i++) {\n        const coordZ = (1 / this.back.dims[3]) * (i + 0.5)\n        gl.uniform1f(shader.uniforms.coordZ, coordZ)\n        gl.framebufferTextureLayer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, label0, 0, i)\n        gl.framebufferTextureLayer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT1, strength0, 0, i)\n        gl.drawBuffers([gl.COLOR_ATTACHMENT0, gl.COLOR_ATTACHMENT1])\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\n          log.error('Incomplete framebuffer')\n        }\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n      }\n    }\n    // read data\n    gl.drawBuffers([gl.COLOR_ATTACHMENT0])\n    const readAttach = gl.COLOR_ATTACHMENT1\n    const readTex = label0\n    gl.readBuffer(readAttach) // label\n    // assuming a framebuffer is bound with the texture to read attached\n    const format = gl.getParameter(gl.IMPLEMENTATION_COLOR_READ_FORMAT)\n    const type = gl.getParameter(gl.IMPLEMENTATION_COLOR_READ_TYPE)\n    if (format !== gl.RED_INTEGER || type !== gl.SHORT) {\n      log.debug('readPixels will fail.')\n    }\n    img16 = new Int16Array()\n    const nv2D = this.back.dims[1] * this.back.dims[2]\n    const slice16 = new Int16Array(nv2D)\n    for (let i = 0; i < this.back.dims[3]; i++) {\n      gl.framebufferTextureLayer(\n        gl.FRAMEBUFFER,\n        readAttach, // gl.COLOR_ATTACHMENT1,//COLOR_ATTACHMENT1\n        readTex, // strength1,//strength0\n        0,\n        i\n      )\n      gl.readPixels(0, 0, this.back.dims[1], this.back.dims[2], format, type, slice16)\n      // img16.push(...slice16); // <- will elicit call stack limit error\n      img16 = Int16Array.from([...img16, ...slice16])\n    }\n    let mx = img16[0]\n    for (let i = 0; i < img16.length; i++) {\n      mx = Math.max(mx, img16[i])\n    }\n    for (let i = 1; i < nv; i++) {\n      this.drawBitmap[i] = img16[i]\n    }\n    gl.deleteTexture(background)\n    gl.deleteTexture(strength0)\n    gl.deleteTexture(strength1)\n    gl.deleteTexture(label0)\n    gl.deleteTexture(label1)\n    gl.bindVertexArray(this.unusedVAO)\n    // gl.deleteTexture(blendTexture);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n    gl.deleteFramebuffer(fb)\n    this.drawAddUndoBitmap()\n    this.refreshDrawing(true)\n  }\n\n  // not included in public docs\n  // set color of single voxel in drawing\n  drawPt(x: number, y: number, z: number, penValue: number, drawBitmap: Uint8Array | null = null): void {\n    if (drawBitmap === null) {\n      drawBitmap = this.drawBitmap\n    }\n    if (!this.back?.dims) {\n      throw new Error('back.dims not set')\n    }\n    const dx = this.back.dims[1]\n    const dy = this.back.dims[2]\n    const dz = this.back.dims[3]\n    x = Math.min(Math.max(x, 0), dx - 1)\n    y = Math.min(Math.max(y, 0), dy - 1)\n    z = Math.min(Math.max(z, 0), dz - 1)\n    drawBitmap![x + y * dx + z * dx * dy] = penValue\n    // get tile index for voxel\n    const isAx = this.drawPenAxCorSag === 0\n    const isCor = this.drawPenAxCorSag === 1\n    const isSag = this.drawPenAxCorSag === 2\n    // since the pen is only drawing in one 2D plane,\n    // only draw the neighbors (based on penSize) in that plane.\n    // if penSize is 1, only draw the voxel itself.\n    // if penSize is even (2, 4, 6, etc.), then the extra voxel will be drawn in the positive direction.\n    // if penSize is odd (3, 5, 7, etc.), then the the pen will be centered on the voxel.\n    if (this.opts.penSize > 1) {\n      const halfPenSize = Math.floor(this.opts.penSize / 2)\n      for (let i = -halfPenSize; i <= halfPenSize; i++) {\n        for (let j = -halfPenSize; j <= halfPenSize; j++) {\n          if (isAx) {\n            drawBitmap![x + i + (y + j) * dx + z * dx * dy] = penValue\n          } else if (isCor) {\n            drawBitmap![x + i + y * dx + (z + j) * dx * dy] = penValue\n          } else if (isSag) {\n            drawBitmap![x + (y + j) * dx + (z + i) * dx * dy] = penValue\n          }\n        }\n      }\n    }\n  }\n\n  // not included in public docs\n  // create line between to voxels in drawing\n  // https://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm\n  // https://www.geeksforgeeks.org/bresenhams-algorithm-for-3-d-line-drawing/\n  // ptA, ptB are start and end points of line (each XYZ)\n  drawPenLine(ptA: number[], ptB: number[], penValue: number): void {\n    const dx = Math.abs(ptA[0] - ptB[0])\n    const dy = Math.abs(ptA[1] - ptB[1])\n    const dz = Math.abs(ptA[2] - ptB[2])\n    let xs = -1\n    let ys = -1\n    let zs = -1\n    if (ptB[0] > ptA[0]) {\n      xs = 1\n    }\n    if (ptB[1] > ptA[1]) {\n      ys = 1\n    }\n    if (ptB[2] > ptA[2]) {\n      zs = 1\n    }\n    let x1 = ptA[0]\n    let y1 = ptA[1]\n    let z1 = ptA[2]\n    const x2 = ptB[0]\n    const y2 = ptB[1]\n    const z2 = ptB[2]\n    if (dx >= dy && dx >= dz) {\n      // Driving axis is X-axis\"\n      let p1 = 2 * dy - dx\n      let p2 = 2 * dz - dx\n      while (x1 !== x2) {\n        x1 += xs\n        if (p1 >= 0) {\n          y1 += ys\n          p1 -= 2 * dx\n        }\n        if (p2 >= 0) {\n          z1 += zs\n          p2 -= 2 * dx\n        }\n        p1 += 2 * dy\n        p2 += 2 * dz\n        this.drawPt(x1, y1, z1, penValue)\n      }\n    } else if (dy >= dx && dy >= dz) {\n      // Driving axis is Y-axis\"\n      let p1 = 2 * dx - dy\n      let p2 = 2 * dz - dy\n      while (y1 !== y2) {\n        y1 += ys\n        if (p1 >= 0) {\n          x1 += xs\n          p1 -= 2 * dy\n        }\n        if (p2 >= 0) {\n          z1 += zs\n          p2 -= 2 * dy\n        }\n        p1 += 2 * dx\n        p2 += 2 * dz\n        this.drawPt(x1, y1, z1, penValue)\n      }\n    } else {\n      // # Driving axis is Z-axis\n      let p1 = 2 * dy - dz\n      let p2 = 2 * dx - dz\n      while (z1 !== z2) {\n        z1 += zs\n        if (p1 >= 0) {\n          y1 += ys\n          p1 -= 2 * dz\n        }\n        if (p2 >= 0) {\n          x1 += xs\n          p2 -= 2 * dz\n        }\n        p1 += 2 * dy\n        p2 += 2 * dx\n        this.drawPt(x1, y1, z1, penValue)\n      }\n    }\n  }\n\n  /**\n   * Performs a 1-voxel binary dilation on a connected cluster within the drawing mask using the drawFloodFillCore function.\n   *\n   * @param seedXYZ -  voxel index of the seed voxel in the mask array.\n   * @param neighbors - Number of neighbors to consider for connectivity and dilation (6, 18, or 26).\n   */\n  drawingBinaryDilationWithSeed(\n    seedXYZ: number[], // seed voxel x,y,z\n    neighbors: 6 | 18 | 26 = 6\n  ): void {\n    try {\n      const mask = this.drawBitmap\n      const xDim = this.back.dims[1]\n      const yDim = this.back.dims[2]\n      const zDim = this.back.dims[3]\n      const nx = xDim\n      const nxy = xDim * yDim\n      const totalVoxels = nxy * zDim\n      function xyz2vx(pt: number[]): number {\n        return pt[0] + pt[1] * nx + pt[2] * nxy\n      }\n\n      const seedIndex = xyz2vx(seedXYZ)\n\n      // check that the seed index is within bounds\n      if (seedIndex < 0 || seedIndex >= totalVoxels) {\n        throw new Error('Seed index is out of bounds.')\n      }\n\n      // get value of the seed voxel\n      const seedValue = mask[seedIndex]\n\n      // check that the seed voxel is filled\n      if (seedValue === 0) {\n        throw new Error('Seed voxel is not part of a filled cluster.')\n      }\n\n      // create a copy of the mask to work on\n      const img = mask.slice()\n      // binarise the img since there could be multiple colors in the mask\n      for (let i = 0; i < totalVoxels; i++) {\n        img[i] = img[i] === seedValue ? 1 : 0\n      }\n\n      // use drawFloodFillCore to identify the connected cluster starting from seedIndex\n      this.drawFloodFillCore(img, seedIndex, neighbors)\n\n      // now, img has the cluster marked with value 2\n      // create an output mask for dilation\n      const outputMask = mask.slice() // Clone the original mask\n\n      // precompute neighbor offsets based on connectivity\n      const neighborOffsets: number[] = []\n\n      // offsets for 6-connectivity (face neighbors)\n      const offsets6 = [-nxy, nxy, -xDim, xDim, -1, 1]\n\n      neighborOffsets.push(...offsets6)\n\n      if (neighbors > 6) {\n        // offsets for 18-connectivity (edge neighbors)\n        neighborOffsets.push(\n          -xDim - 1,\n          -xDim + 1,\n          xDim - 1,\n          xDim + 1,\n          -nxy - xDim,\n          -nxy + xDim,\n          -nxy - 1,\n          -nxy + 1,\n          nxy - xDim,\n          nxy + xDim,\n          nxy - 1,\n          nxy + 1\n        )\n      }\n\n      if (neighbors > 18) {\n        // offsets for 26-connectivity (corner neighbors)\n        neighborOffsets.push(\n          -nxy - xDim - 1,\n          -nxy - xDim + 1,\n          -nxy + xDim - 1,\n          -nxy + xDim + 1,\n          nxy - xDim - 1,\n          nxy - xDim + 1,\n          nxy + xDim - 1,\n          nxy + xDim + 1\n        )\n      }\n\n      // iterate over the cluster voxels (value 2 in img) to perform dilation\n      for (let idx = 0; idx < totalVoxels; idx++) {\n        if (img[idx] === 2) {\n          const x = idx % xDim\n          const y = Math.floor((idx % nxy) / xDim)\n          const z = Math.floor(idx / nxy)\n\n          for (const offset of neighborOffsets) {\n            const neighborIdx = idx + offset\n\n            // skip if neighbor index is out of bounds\n            if (neighborIdx < 0 || neighborIdx >= totalVoxels) {\n              continue\n            }\n\n            // calculate neighbor coordinates\n            const nx = neighborIdx % xDim\n            const ny = Math.floor((neighborIdx % nxy) / xDim)\n            const nz = Math.floor(neighborIdx / nxy)\n\n            // ensure neighbor is adjacent (prevent wrapping around edges)\n            if (Math.abs(nx - x) > 1 || Math.abs(ny - y) > 1 || Math.abs(nz - z) > 1) {\n              continue\n            }\n\n            // if the neighbor voxel is empty in the original mask, fill it in the output mask\n            if (mask[neighborIdx] === 0) {\n              outputMask[neighborIdx] = seedValue\n            }\n          }\n        }\n      }\n      // set the output as the new drawing bitmap\n      this.drawBitmap = outputMask\n      // update the undo stack\n      this.drawAddUndoBitmap()\n      // refresh the drawing (copy from cpu to gpu) and show immediately\n      this.refreshDrawing(true)\n    } catch (error) {\n      log.error('Error in drawingBinaryDilationWithSeed:', error)\n    }\n  }\n\n  // a voxel can be defined as having 6, 18 or 26 neighbors:\n  //   6: neighbors share faces (distance=1)\n  //  18: neighbors share faces (distance=1) or edges (1.4)\n  //  26: neighbors share faces (distance=1), edges (1.4) or corners (1.7)\n  drawFloodFillCore(img: Uint8Array, seedVx: number, neighbors = 6): void {\n    if (!this.back?.dims) {\n      throw new Error('back.dims undefined')\n    }\n    const dims = [this.back.dims[1], this.back.dims[2], this.back.dims[3]] // +1: dims indexed from 0!\n    const nx = dims[0]\n    const nxy = nx * dims[1]\n    function xyz2vx(pt: number[]): number {\n      // provided an XYZ 3D point, provide address in 1D array\n      return pt[0] + pt[1] * nx + pt[2] * nxy\n    }\n    function vx2xyz(vx: number): number[] {\n      // provided address in 1D array, return XYZ coordinate\n      const Z = Math.floor(vx / nxy) // slice\n      const Y = Math.floor((vx - Z * nxy) / nx) // column\n      const X = Math.floor(vx % nx)\n      return [X, Y, Z]\n    }\n    // 1. Set Q to the empty queue or stack.\n    const Q = []\n    // 2. Add node to the end of Q.\n    Q.push(seedVx)\n    img[seedVx] = 2 // part of cluster\n    // 3. While Q is not empty:\n    while (Q.length > 0) {\n      // 4.   Set n equal to the first element of Q.\n      const vx = Q[0]\n      // 5.   Remove first element from Q.\n      Q.shift()\n      // 6. Test six neighbors of n (left,right,anterior,posterior,inferior, superior\n      //   If any is is unfound part of cluster (value = 1) set it to found (value 2) and add to Q\n      const xyz = vx2xyz(vx)\n\n      function testNeighbor(offset: number[]): void {\n        const xyzN = xyz.slice()\n        xyzN[0] += offset[0]\n        xyzN[1] += offset[1]\n        xyzN[2] += offset[2]\n        if (xyzN[0] < 0 || xyzN[1] < 0 || xyzN[2] < 0) {\n          return\n        }\n        if (xyzN[0] >= dims[0] || xyzN[1] >= dims[1] || xyzN[2] >= dims[2]) {\n          return\n        }\n        const vxT = xyz2vx(xyzN)\n        if (img[vxT] !== 1) {\n          return\n        }\n        img[vxT] = 2 // part of cluster\n        Q.push(vxT)\n      }\n      // test neighbors that share face\n      testNeighbor([0, 0, -1]) // inferior\n      testNeighbor([0, 0, 1]) // superior\n      testNeighbor([0, -1, 0]) // posterior\n      testNeighbor([0, 1, 0]) // anterior\n      testNeighbor([-1, 0, 0]) // left\n      testNeighbor([1, 0, 0]) // right\n      if (neighbors <= 6) {\n        continue\n      }\n      // test voxels that share edge\n      testNeighbor([-1, -1, 0]) // left posterior\n      testNeighbor([1, 1, 0]) // right posterior\n      testNeighbor([-1, 1, 0]) // left anterior\n      testNeighbor([1, 1, 0]) // right anterior\n      testNeighbor([0, -1, -1]) // posterior inferior\n      testNeighbor([0, 1, -1]) // anterior inferior\n      testNeighbor([-1, 0, -1]) // left inferior\n      testNeighbor([1, 0, -1]) // right inferior\n      testNeighbor([0, -1, 1]) // posterior superior\n      testNeighbor([0, 1, 1]) // anterior superior\n      testNeighbor([-1, 0, 1]) // left superior\n      testNeighbor([1, 0, 1]) // right superior\n      if (neighbors <= 18) {\n        continue\n      }\n      // test neighbors that share a corner\n      testNeighbor([-1, -1, -1]) // left posterior inferior\n      testNeighbor([1, -1, -1]) // right posterior inferior\n      testNeighbor([-1, 1, -1]) // left anterior inferior\n      testNeighbor([1, 1, -1]) // right anterior inferior\n      testNeighbor([-1, -1, 1]) // left posterior superior\n      testNeighbor([1, -1, 1]) // right posterior superior\n      testNeighbor([-1, 1, 1]) // left anterior superior\n      testNeighbor([1, 1, 1]) // right anterior superior\n      // 7. Continue looping until Q is exhausted.\n    }\n  }\n\n  // not included in public docs\n  // set all connected voxels in drawing to new color\n  drawFloodFill(\n    seedXYZ: number[],\n    newColor = 0,\n    growSelectedCluster = 0,\n    forceMin = NaN,\n    forceMax = NaN,\n    neighbors = 6,\n    maxDistanceMM = Number.POSITIVE_INFINITY,\n    is2D = false,\n    targetBitmap: Uint8Array | null = null,\n    isGrowClusterTool = false // Flag to distinguish from ClickToSegment and cluster growing\n  ): void {\n    if (!this.drawBitmap) {\n      log.warn('drawFloodFill called without an initialized drawBitmap.')\n      this.createEmptyDrawing()\n      if (!this.drawBitmap) {\n        log.error('Failed to create drawing bitmap.')\n        return\n      }\n    }\n    if (this.clickToSegmentIsGrowing && !this.clickToSegmentGrowingBitmap) {\n      log.warn('drawFloodFill called in preview mode without initialized clickToSegmentGrowingBitmap.')\n      if (this.drawBitmap) {\n        this.clickToSegmentGrowingBitmap = this.drawBitmap.slice()\n      } else {\n        log.error('Cannot initialize growing bitmap as drawBitmap is null.')\n        return\n      }\n      if (!this.clickToSegmentGrowingBitmap) {\n        log.error('Failed to create growing bitmap.')\n        return\n      }\n    }\n    if (targetBitmap === null) {\n      targetBitmap = this.drawBitmap\n    }\n    if (!targetBitmap) {\n      log.error('drawFloodFill targetBitmap is null.')\n      return\n    }\n    if (!this.back?.dims) {\n      throw new Error('back.dims undefined')\n    }\n\n    newColor = Math.abs(newColor)\n    const dims = [this.back.dims[1], this.back.dims[2], this.back.dims[3]]\n    if (seedXYZ[0] < 0 || seedXYZ[1] < 0 || seedXYZ[2] < 0) {\n      return\n    }\n    if (seedXYZ[0] >= dims[0] || seedXYZ[1] >= dims[1] || seedXYZ[2] >= dims[2]) {\n      return\n    }\n\n    const nx = dims[0]\n    const nxy = nx * dims[1]\n    const nxyz = nxy * dims[2]\n\n    const originalBitmap = this.clickToSegmentIsGrowing ? this.drawBitmap : targetBitmap\n    if (!originalBitmap) {\n      log.error('Could not determine original bitmap state.')\n      return\n    }\n\n    const img = new Uint8Array(nxyz).fill(0)\n\n    let constrainXYZ = -1\n    if (is2D && this.drawPenAxCorSag === SLICE_TYPE.AXIAL) {\n      constrainXYZ = 2\n    } else if (is2D && this.drawPenAxCorSag === SLICE_TYPE.CORONAL) {\n      constrainXYZ = 1\n    } else if (is2D && this.drawPenAxCorSag === SLICE_TYPE.SAGITTAL) {\n      constrainXYZ = 0\n    }\n    function vx2xyz(vx: number): number[] {\n      const Z = Math.floor(vx / nxy)\n      const Y = Math.floor((vx - Z * nxy) / nx)\n      const X = Math.floor(vx % nx)\n      return [X, Y, Z]\n    }\n    function xyz2vx(pt: number[]): number {\n      return pt[0] + pt[1] * nx + pt[2] * nxy\n    }\n    const vx2mm = (xyz: number[]): vec3 => {\n      return this.vox2mm(xyz, this.back.matRAS)\n    }\n    const seedMM = vx2mm(seedXYZ)\n    const maxDistanceMM2 = maxDistanceMM ** 2\n    function isWithinDistance(vx: number): boolean {\n      const xzyVox = vx2xyz(vx)\n      if (constrainXYZ >= 0 && xzyVox[constrainXYZ] !== seedXYZ[constrainXYZ]) {\n        return false\n      }\n      const xyzMM = vx2mm(xzyVox)\n      const dist2 = (xyzMM[0] - seedMM[0]) ** 2 + (xyzMM[1] - seedMM[1]) ** 2 + (xyzMM[2] - seedMM[2]) ** 2\n      return dist2 <= maxDistanceMM2\n    }\n\n    const seedVx = xyz2vx(seedXYZ)\n    const originalSeedColor = originalBitmap[seedVx] // Color from original state\n\n    if (isGrowClusterTool && originalSeedColor === 0) {\n      log.debug('Grow/Erase Cluster tool requires starting on a masked voxel.')\n      if (this.clickToSegmentIsGrowing && this.clickToSegmentGrowingBitmap && this.drawBitmap) {\n        this.clickToSegmentGrowingBitmap.set(this.drawBitmap)\n        this.refreshDrawing(true, true)\n      }\n      return\n    }\n    if (growSelectedCluster === 0 && originalSeedColor === newColor && !isGrowClusterTool && newColor !== 0) {\n      log.debug('drawFloodFill selected voxel is already desired color')\n      if (!this.clickToSegmentIsGrowing) {\n        return\n      }\n    }\n\n    let baseIntensity = NaN\n\n    if (\n      isGrowClusterTool &&\n      (growSelectedCluster === Number.POSITIVE_INFINITY || growSelectedCluster === Number.NEGATIVE_INFINITY)\n    ) {\n      const tempImgForIdentification = originalBitmap.slice()\n      for (let i = 0; i < nxyz; i++) {\n        tempImgForIdentification[i] = tempImgForIdentification[i] === originalSeedColor && isWithinDistance(i) ? 1 : 0\n      }\n      if (tempImgForIdentification[seedVx] !== 1) {\n        log.error('Seed voxel could not be marked for cluster ID.')\n        return\n      }\n      this.drawFloodFillCore(tempImgForIdentification, seedVx, neighbors) // Marks cluster as 2\n\n      const backImg = this.volumes[0].img2RAS()\n      let clusterSum = 0\n      let clusterCount = 0\n      for (let i = 0; i < nxyz; i++) {\n        if (tempImgForIdentification[i] === 2) {\n          clusterSum += backImg[i]\n          clusterCount++\n        }\n      }\n      baseIntensity = clusterCount > 0 ? clusterSum / clusterCount : backImg[seedVx] // Use mean\n      log.debug(`Grow Cluster using mean intensity: ${baseIntensity.toFixed(2)} from ${clusterCount} voxels.`)\n\n      let fillMin = -Infinity\n      let fillMax = Infinity\n      if (growSelectedCluster === Number.POSITIVE_INFINITY) {\n        fillMin = baseIntensity\n      }\n      if (growSelectedCluster === Number.NEGATIVE_INFINITY) {\n        fillMax = baseIntensity\n      }\n\n      for (let i = 0; i < nxyz; i++) {\n        if (tempImgForIdentification[i] === 2) {\n          img[i] = 1\n        } else if (originalBitmap[i] === 0) {\n          const intensity = backImg[i]\n          if (intensity >= fillMin && intensity <= fillMax && isWithinDistance(i)) {\n            img[i] = 1\n          }\n        }\n      }\n      newColor = originalSeedColor\n    } else {\n      if (growSelectedCluster === 0) {\n        if (isGrowClusterTool && newColor === 0) {\n          log.debug(`Erase Cluster: Identifying cluster with color ${originalSeedColor}`)\n          for (let i = 0; i < nxyz; i++) {\n            img[i] = originalBitmap[i] === originalSeedColor && isWithinDistance(i) ? 1 : 0\n          }\n        } else {\n          for (let i = 0; i < nxyz; i++) {\n            if (originalBitmap[i] === originalSeedColor && isWithinDistance(i)) {\n              if (originalSeedColor !== 0) {\n                img[i] = 1\n              }\n            }\n          }\n        }\n      } else {\n        const backImg = this.volumes[0].img2RAS()\n        baseIntensity = backImg[seedVx] // ClickToSegment uses single seed intensity\n        let fillMin = -Infinity\n        let fillMax = Infinity\n        if (isFinite(forceMin) && isFinite(forceMax)) {\n          fillMin = forceMin\n          fillMax = forceMax\n        } else if (growSelectedCluster === Number.POSITIVE_INFINITY) {\n          fillMin = baseIntensity\n        } else if (growSelectedCluster === Number.NEGATIVE_INFINITY) {\n          fillMax = baseIntensity\n        }\n\n        for (let i = 0; i < nxyz; i++) {\n          const intensity = backImg[i]\n          if (intensity >= fillMin && intensity <= fillMax && isWithinDistance(i)) {\n            img[i] = 1\n          }\n        }\n        newColor = originalBitmap[seedVx]\n        if (newColor === 0) {\n          newColor = this.opts.penValue\n          if (newColor < 1 || !isFinite(newColor)) {\n            newColor = 1\n          }\n        }\n      }\n    }\n\n    if (img[seedVx] !== 1) {\n      let isSeedValidOriginal = false\n      if (isGrowClusterTool && growSelectedCluster !== 0) {\n        if (originalSeedColor !== 0) {\n          isSeedValidOriginal = true\n        }\n      } else {\n        if (originalSeedColor !== 0 || newColor === 0) {\n          isSeedValidOriginal = true\n        }\n      }\n\n      if (isSeedValidOriginal && isWithinDistance(seedVx)) {\n        img[seedVx] = 1\n        log.debug('Forcing seed voxel to 1 in working buffer.')\n      } else {\n        log.debug(\"Seed voxel not marked as candidate '1' and not valid originally.\")\n        if (this.clickToSegmentIsGrowing && this.clickToSegmentGrowingBitmap && this.drawBitmap) {\n          this.clickToSegmentGrowingBitmap.set(this.drawBitmap) // Reset preview\n        }\n        return\n      }\n    }\n\n    this.drawFloodFillCore(img, seedVx, neighbors) // Marks reachable '1's as '2'\n\n    for (let i = 0; i < nxyz; i++) {\n      if (img[i] === 2) {\n        targetBitmap[i] = newColor // Apply final color\n      } else if (this.clickToSegmentIsGrowing && targetBitmap === this.clickToSegmentGrowingBitmap) {\n        targetBitmap[i] = originalBitmap[i]\n      }\n    }\n\n    if (!this.clickToSegmentIsGrowing) {\n      this.drawAddUndoBitmap()\n      this.refreshDrawing(true, false) // Refresh GPU from main bitmap\n    } else {\n      this.refreshDrawing(true, true) // Refresh GPU from preview bitmap\n    }\n  }\n\n  // not included in public docs\n  // given series of line segments, connect first and last\n  // voxel and fill the interior of the line segments\n  drawPenFilled(): void {\n    const nPts = this.drawPenFillPts.length\n    if (nPts < 2) {\n      // can not fill single line\n      this.drawPenFillPts = []\n      return\n    }\n    // do fill in 2D, based on axial (0), coronal (1) or sagittal drawing (2\n    const axCorSag = this.drawPenAxCorSag\n    // axial is x(0)*y(1) horizontal*vertical\n    let h = 0\n    let v = 1\n    if (axCorSag === 1) {\n      v = 2\n    } // coronal is x(0)*z(0)\n    if (axCorSag === 2) {\n      // sagittal is y(1)*z(2)\n      h = 1\n      v = 2\n    }\n\n    if (!this.back?.dims) {\n      throw new Error('back.dims undefined')\n    }\n\n    const dims2D = [this.back.dims[h + 1], this.back.dims[v + 1]] // +1: dims indexed from 0!\n    // create bitmap of horizontal*vertical voxels:\n    const img2D = new Uint8Array(dims2D[0] * dims2D[1])\n    let pen = 1 // do not use this.opts.penValue, as \"erase\" is zero\n    function drawLine2D(ptA: number[], ptB: number[]): void {\n      const dx = Math.abs(ptA[0] - ptB[0])\n      const dy = Math.abs(ptA[1] - ptB[1])\n      img2D[ptA[0] + ptA[1] * dims2D[0]] = pen\n      img2D[ptB[0] + ptB[1] * dims2D[0]] = pen\n      let xs = -1\n      let ys = -1\n      if (ptB[0] > ptA[0]) {\n        xs = 1\n      }\n      if (ptB[1] > ptA[1]) {\n        ys = 1\n      }\n      let x1 = ptA[0]\n      let y1 = ptA[1]\n      const x2 = ptB[0]\n      const y2 = ptB[1]\n      if (dx >= dy) {\n        // Driving axis is X-axis\"\n        let p1 = 2 * dy - dx\n        while (x1 !== x2) {\n          x1 += xs\n          if (p1 >= 0) {\n            y1 += ys\n            p1 -= 2 * dx\n          }\n          p1 += 2 * dy\n          img2D[x1 + y1 * dims2D[0]] = pen\n        }\n      } else {\n        // Driving axis is Y-axis\"\n        let p1 = 2 * dx - dy\n        while (y1 !== y2) {\n          y1 += ys\n          if (p1 >= 0) {\n            x1 += xs\n            p1 -= 2 * dy\n          }\n          p1 += 2 * dx\n          img2D[x1 + y1 * dims2D[0]] = pen\n        }\n      }\n    }\n    function constrainXY(xy: number[]): number[] {\n      const x = Math.min(Math.max(xy[0], 0), dims2D[0] - 1)\n      const y = Math.min(Math.max(xy[1], 0), dims2D[1] - 1)\n      return [x, y]\n    }\n    const startPt = constrainXY([this.drawPenFillPts[0][h], this.drawPenFillPts[0][v]])\n    let minPt = [...startPt]\n    let maxPt = [...startPt]\n    let prevPt = startPt\n    for (let i = 1; i < nPts; i++) {\n      let pt = [this.drawPenFillPts[i][h], this.drawPenFillPts[i][v]]\n      pt = constrainXY(pt)\n      minPt = [Math.min(pt[0], minPt[0]), Math.min(pt[1], minPt[1])]\n      maxPt = [Math.max(pt[0], maxPt[0]), Math.max(pt[1], maxPt[1])]\n      drawLine2D(prevPt, pt)\n      prevPt = pt\n    }\n    drawLine2D(startPt, prevPt) // close drawing\n    const pad = 1\n    minPt[0] = Math.max(0, minPt[0] - pad)\n    minPt[1] = Math.max(0, minPt[1] - pad)\n    maxPt[0] = Math.min(dims2D[0] - 1, maxPt[0] + pad)\n    maxPt[1] = Math.min(dims2D[1] - 1, maxPt[1] + pad)\n    for (let y = 0; y < dims2D[1]; y++) {\n      for (let x = 0; x < dims2D[0]; x++) {\n        if (x >= minPt[0] && x < maxPt[0] && y >= minPt[1] && y <= maxPt[1]) {\n          continue\n        }\n        const pxl = x + y * dims2D[0]\n        if (img2D[pxl] !== 0) {\n          continue\n        }\n        img2D[pxl] = 2\n      }\n    }\n    // flood fill\n    const seeds: number[][] = []\n    function setSeed(pt: number[]): void {\n      if (pt[0] < minPt[0] || pt[1] < minPt[1] || pt[0] > maxPt[0] || pt[1] > maxPt[1]) {\n        return\n      }\n      const pxl = pt[0] + pt[1] * dims2D[0]\n      if (img2D[pxl] !== 0) {\n        return\n      } // not blank\n      seeds.push(pt)\n      img2D[pxl] = 2\n    }\n    // https://en.wikipedia.org/wiki/Flood_fill\n    // first seed all edges\n    for (let x = minPt[0]; x <= maxPt[0]; x++) {\n      setSeed([x, minPt[1]])\n      setSeed([x, maxPt[1]])\n    }\n    for (let y = minPt[1] + 1; y <= maxPt[1] - 1; y++) {\n      setSeed([minPt[0], y])\n      setSeed([maxPt[0], y])\n    }\n    // now retire first in first out\n    while (seeds.length > 0) {\n      const seed = seeds.shift()!\n      setSeed([seed[0] - 1, seed[1]])\n      setSeed([seed[0] + 1, seed[1]])\n      setSeed([seed[0], seed[1] - 1])\n      setSeed([seed[0], seed[1] + 1])\n    }\n    // all voxels with value of zero have no path to edges\n    // insert surviving pixels from 2D bitmap into 3D bitmap\n    pen = this.opts.penValue\n    const slice = this.drawPenFillPts[0][3 - (h + v)]\n\n    if (!this.drawBitmap) {\n      throw new Error('drawBitmap undefined')\n    }\n\n    if (axCorSag === 0) {\n      // axial\n      const offset = slice * dims2D[0] * dims2D[1]\n      for (let i = 0; i < dims2D[0] * dims2D[1]; i++) {\n        if (img2D[i] !== 2) {\n          this.drawBitmap[i + offset] = pen\n        }\n      }\n    } else {\n      let xStride = 1 // coronal: horizontal LR pixels contiguous\n      const yStride = this.back.dims[1] * this.back.dims[2] // coronal: vertical is slice\n      let zOffset = slice * this.back.dims[1] // coronal: slice is number of columns\n      if (axCorSag === 2) {\n        // sagittal\n        xStride = this.back.dims[1]\n        zOffset = slice\n      }\n      let i = 0\n      for (let y = 0; y < dims2D[1]; y++) {\n        for (let x = 0; x < dims2D[0]; x++) {\n          if (img2D[i] !== 2) {\n            this.drawBitmap[x * xStride + y * yStride + zOffset] = pen\n          }\n          i++\n        }\n      }\n    }\n    // this.drawUndoBitmaps[this.currentDrawUndoBitmap]\n    if (!this.drawFillOverwrites && this.drawUndoBitmaps[this.currentDrawUndoBitmap].length > 0) {\n      const nv = this.drawBitmap.length\n      const bmp = decodeRLE(this.drawUndoBitmaps[this.currentDrawUndoBitmap], nv)\n      for (let i = 0; i < nv; i++) {\n        if (bmp[i] === 0) {\n          continue\n        }\n        this.drawBitmap[i] = bmp[i]\n      }\n    }\n    this.drawPenFillPts = []\n    this.drawAddUndoBitmap()\n    this.refreshDrawing(false)\n  }\n\n  /**\n   * close drawing: make sure you have saved any changes before calling this!\n   * @example niivue.closeDrawing();\n   * @see {@link https://niivue.github.io/niivue/features/draw.ui.html | live demo usage}\n   */\n  closeDrawing(): void {\n    this.drawClearAllUndoBitmaps()\n    this.rgbaTex(this.drawTexture, TEXTURE7_DRAW, [2, 2, 2, 2], true)\n    this.drawBitmap = null\n    this.clickToSegmentGrowingBitmap = null\n    this.drawScene()\n  }\n\n  /**\n   * copy drawing bitmap from CPU to GPU storage and redraw the screen\n   * @param isForceRedraw - refreshes scene immediately (default true)\n   * @example niivue.refreshDrawing();\n   * @see {@link https://niivue.github.io/niivue/features/cactus.html | live demo usage}\n   */\n  refreshDrawing(isForceRedraw = true, useClickToSegmentBitmap = false): void {\n    // Only use the growing bitmap if drawing AND clickToSegment are enabled.\n    if (useClickToSegmentBitmap && (!this.opts.drawingEnabled || !this.opts.clickToSegment)) {\n      log.debug('refreshDrawing: Conditions not met for clickToSegment bitmap, using drawBitmap.')\n      useClickToSegmentBitmap = false // Fallback to the main drawing bitmap\n    }\n    // Ensure the selected bitmap actually exists, otherwise use a blank default or the other one if possible.\n    const selectedBitmap = useClickToSegmentBitmap ? this.clickToSegmentGrowingBitmap : this.drawBitmap\n    if (!selectedBitmap && !useClickToSegmentBitmap && this.clickToSegmentGrowingBitmap) {\n      log.warn('refreshDrawing: drawBitmap is null, but clickToSegmentGrowingBitmap exists. Check state.')\n    } else if (!selectedBitmap && useClickToSegmentBitmap && this.drawBitmap) {\n      log.warn('refreshDrawing: clickToSegmentGrowingBitmap is null, falling back to drawBitmap.')\n      useClickToSegmentBitmap = false // Use the main bitmap if growing one is missing\n    } else if (!selectedBitmap) {\n      log.warn('refreshDrawing: Both bitmaps are null. Uploading empty data.')\n    }\n    // Determine the bitmap data source\n    const bitmapDataSource = useClickToSegmentBitmap ? this.clickToSegmentGrowingBitmap : this.drawBitmap\n\n    if (!this.back?.dims) {\n      // If back isn't ready, we can't determine dimensions. Exit early.\n      log.warn('refreshDrawing: back.dims undefined, cannot refresh drawing texture yet.')\n      return\n    }\n\n    // Dimensions check\n    const dims = this.back.dims.slice()\n    const vx = this.back.dims[1] * this.back.dims[2] * this.back.dims[3]\n\n    // Check if the determined bitmapDataSource exists\n    if (!bitmapDataSource) {\n      log.warn(\n        `refreshDrawing: Bitmap data source (${useClickToSegmentBitmap ? 'growing' : 'main'}) is null. Cannot update texture.`\n      )\n      if (isForceRedraw) {\n        this.drawScene()\n      } // might just be an empty drawing\n      return\n    }\n\n    // Check length consistency if bitmapDataSource is not null\n    if (bitmapDataSource.length === 8) {\n      // Special case for initial 2x2x2 texture\n      dims[1] = 2\n      dims[2] = 2\n      dims[3] = 2\n    } else if (vx !== bitmapDataSource.length) {\n      log.warn(`Drawing bitmap length (${bitmapDataSource.length}) must match the background image (${vx})`)\n    }\n\n    // Proceed with texture update using bitmapDataSource\n    this.gl.activeTexture(TEXTURE7_DRAW)\n    if (this.opts.is2DSliceShader) {\n      const vox = this.frac2vox(this.scene.crosshairPos)\n      const z = Math.min(Math.max(vox[2], 0), dims[3] - 1)\n      const sliceBytes = dims[1] * dims[2]\n      const zOffset = z * sliceBytes\n      log.debug(`refresh huge 2D drawing x×y×z ${dims[1]}×${dims[2]}×${dims[3]} slice ${zOffset}`)\n      const sliceData = bitmapDataSource.subarray(zOffset, zOffset + sliceBytes)\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this.drawTexture)\n      this.gl.texSubImage2D(\n        this.gl.TEXTURE_2D,\n        0, // Level\n        0,\n        0, // xOffset, yOffset\n        dims[1],\n        dims[2], // Width, Height\n        this.gl.RED,\n        this.gl.UNSIGNED_BYTE,\n        sliceData\n      )\n      // TODO: this.clickToSegmentGrowingBitmap may need to be changed for huge bitmaps\n    } else {\n      this.gl.bindTexture(this.gl.TEXTURE_3D, this.drawTexture)\n      this.gl.texSubImage3D(\n        this.gl.TEXTURE_3D,\n        0,\n        0,\n        0,\n        0,\n        dims[1],\n        dims[2],\n        dims[3],\n        this.gl.RED,\n        this.gl.UNSIGNED_BYTE,\n        bitmapDataSource\n      )\n    }\n    if (!this.drawTexture) {\n      log.error('refreshDrawing: drawTexture (GPU texture) is null.')\n      return\n    }\n\n    if (isForceRedraw) {\n      this.drawScene()\n    }\n  }\n\n  // not included in public docs\n  // Create 3D 1-component (red) uint8 texture on GPU using dims[1] and dims[2]\n  r8Tex2D(texID: WebGLTexture | null, activeID: number, dims: number[], isInit = false): WebGLTexture | null {\n    if (texID) {\n      this.gl.deleteTexture(texID)\n    }\n    texID = this.gl.createTexture()\n    this.gl.activeTexture(activeID)\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texID)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_R, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE)\n    this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, 1)\n    this.gl.texStorage2D(this.gl.TEXTURE_2D, 1, this.gl.R8, dims[1], dims[2])\n    if (isInit) {\n      const img8 = new Uint8Array(dims[1] * dims[2])\n      this.gl.texSubImage2D(\n        this.gl.TEXTURE_2D,\n        0, // Level\n        0,\n        0, // xOffset, yOffset\n        dims[1],\n        dims[2], // Width, Height\n        this.gl.RED,\n        this.gl.UNSIGNED_BYTE,\n        img8\n      )\n    }\n    return texID\n  }\n\n  // not included in public docs\n  // create 3D 1-component (red) uint8 texture on GPU\n  r8Tex(texID: WebGLTexture | null, activeID: number, dims: number[], isInit = false): WebGLTexture | null {\n    if (texID) {\n      this.gl.deleteTexture(texID)\n    }\n    texID = this.gl.createTexture()\n    this.gl.activeTexture(activeID)\n    this.gl.bindTexture(this.gl.TEXTURE_3D, texID)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_R, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)\n    this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, 1)\n    this.gl.texStorage3D(this.gl.TEXTURE_3D, 1, this.gl.R8, dims[1], dims[2], dims[3]) // output background dimensions\n    if (isInit) {\n      const img8 = new Uint8Array(dims[1] * dims[2] * dims[3])\n      this.gl.texSubImage3D(\n        this.gl.TEXTURE_3D,\n        0,\n        0,\n        0,\n        0,\n        dims[1],\n        dims[2],\n        dims[3],\n        this.gl.RED,\n        this.gl.UNSIGNED_BYTE,\n        img8\n      )\n    }\n    return texID\n  }\n\n  // not included in public docs\n  // create 3D 4-component (red,green,blue,alpha) uint8 texture on GPU\n  rgbaTex2D(\n    texID: WebGLTexture | null,\n    activeID: number,\n    dims: number[],\n    data: Uint8Array | null = null,\n    isFlipVertical: boolean = true\n  ): WebGLTexture | null {\n    if (texID) {\n      this.gl.deleteTexture(texID)\n    }\n    texID = this.gl.createTexture()\n    this.gl.activeTexture(activeID)\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texID)\n\n    // Set texture parameters\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)\n    this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, 1)\n\n    // Allocate storage for the 2D texture\n    this.gl.texStorage2D(this.gl.TEXTURE_2D, 1, this.gl.RGBA8, dims[1], dims[2])\n    if (data) {\n      let drawData = data\n      const width = dims[1]\n      const height = dims[2]\n      if (isFlipVertical) {\n        drawData = new Uint8Array(data.length)\n        const rowSize = width * 4 // RGBA has 4 bytes per pixel\n        for (let y = 0; y < height; y++) {\n          const srcStart = y * rowSize\n          const destStart = (height - 1 - y) * rowSize\n          drawData.set(data.subarray(srcStart, srcStart + rowSize), destStart)\n        }\n      }\n      this.gl.texSubImage2D(\n        this.gl.TEXTURE_2D,\n        0, // Level\n        0,\n        0, // xOffset, yOffset\n        width,\n        height, // Width, Height\n        this.gl.RGBA,\n        this.gl.UNSIGNED_BYTE,\n        drawData\n      )\n    }\n    return texID\n  }\n\n  // not included in public docs\n  // create 3D 4-component (red,green,blue,alpha) uint8 texture on GPU\n  rgbaTex(texID: WebGLTexture | null, activeID: number, dims: number[], isInit = false): WebGLTexture | null {\n    if (texID) {\n      this.gl.deleteTexture(texID)\n    }\n    texID = this.gl.createTexture()\n    this.gl.activeTexture(activeID)\n    this.gl.bindTexture(this.gl.TEXTURE_3D, texID)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_R, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)\n    this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, 1)\n    this.gl.texStorage3D(this.gl.TEXTURE_3D, 1, this.gl.RGBA8, dims[1], dims[2], dims[3]) // output background dimensions\n    if (isInit) {\n      const img8 = new Uint8Array(dims[1] * dims[2] * dims[3] * 4)\n      this.gl.texSubImage3D(\n        this.gl.TEXTURE_3D,\n        0,\n        0,\n        0,\n        0,\n        dims[1],\n        dims[2],\n        dims[3],\n        this.gl.RGBA,\n        this.gl.UNSIGNED_BYTE,\n        img8\n      )\n    }\n    return texID\n  }\n\n  // not included in public docs\n  // create 3D 4-component (red,green,blue,alpha) uint16 texture on GPU\n  rgba16Tex(texID: WebGLTexture | null, activeID: number, dims: number[], isInit = false): WebGLTexture | null {\n    if (texID) {\n      this.gl.deleteTexture(texID)\n    }\n    texID = this.gl.createTexture()\n    this.gl.activeTexture(activeID)\n    this.gl.bindTexture(this.gl.TEXTURE_3D, texID)\n    // Not: cannot be gl.LINEAR for integer textures\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_R, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)\n    this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, 2)\n    this.gl.pixelStorei(this.gl.PACK_ALIGNMENT, 2)\n    this.gl.texStorage3D(this.gl.TEXTURE_3D, 1, this.gl.RGBA16UI, dims[1], dims[2], dims[3]) // output background dimensions\n    if (isInit) {\n      const img16 = new Uint16Array(dims[1] * dims[2] * dims[3] * 4)\n      this.gl.texSubImage3D(\n        this.gl.TEXTURE_3D,\n        0,\n        0,\n        0,\n        0,\n        dims[1],\n        dims[2],\n        dims[3],\n        this.gl.RGBA_INTEGER,\n        this.gl.UNSIGNED_SHORT,\n        img16\n      )\n    }\n    return texID\n  }\n\n  // not included in public docs\n  // remove cross origin if not from same domain. From https://webglfundamentals.org/webgl/lessons/webgl-cors-permission.html\n  requestCORSIfNotSameOrigin(img: HTMLImageElement, url: string): void {\n    if (new URL(url, window.location.href).origin !== window.location.origin) {\n      img.crossOrigin = ''\n    }\n  }\n\n  // not included in public docs\n  // creates 4-component (red,green,blue,alpha) uint8 texture on GPU\n  async loadPngAsTexture(pngUrl: string, textureNum: number): Promise<WebGLTexture | null> {\n    return new Promise((resolve, reject) => {\n      const img = new Image()\n      img.onload = (): void => {\n        if (!this.bmpShader) {\n          return\n        }\n        let pngTexture\n        if (textureNum === 4) {\n          if (this.bmpTexture !== null) {\n            this.gl.deleteTexture(this.bmpTexture)\n          }\n          this.bmpTexture = this.gl.createTexture()\n          pngTexture = this.bmpTexture\n          this.bmpTextureWH = img.width / img.height\n          this.gl.activeTexture(TEXTURE4_THUMBNAIL)\n          this.bmpShader.use(this.gl)\n          this.gl.uniform1i(this.bmpShader.uniforms.bmpTexture, 4)\n        } else if (textureNum === 5) {\n          this.gl.activeTexture(TEXTURE5_MATCAP)\n          if (this.matCapTexture !== null) {\n            this.gl.deleteTexture(this.matCapTexture)\n          }\n          this.matCapTexture = this.gl.createTexture()\n          pngTexture = this.matCapTexture\n        } else {\n          this.fontShader!.use(this.gl)\n          this.gl.activeTexture(TEXTURE3_FONT)\n          this.gl.uniform1i(this.fontShader!.uniforms.fontTexture, 3)\n          if (this.fontTexture !== null) {\n            this.gl.deleteTexture(this.fontTexture)\n          }\n          this.fontTexture = this.gl.createTexture()\n          pngTexture = this.fontTexture\n        }\n        this.gl.bindTexture(this.gl.TEXTURE_2D, pngTexture)\n        // Set the parameters so we can render any size image.\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE)\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR)\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR)\n        // Upload the image into the texture.\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, img)\n        resolve(pngTexture)\n        if (textureNum !== 4) {\n          this.drawScene()\n        } // draw the font\n      }\n      img.onerror = reject\n      this.requestCORSIfNotSameOrigin(img, pngUrl)\n      img.src = pngUrl\n    })\n  }\n\n  // not included in public docs\n  // load font stored as PNG bitmap with texture unit 3\n  async loadFontTexture(fontUrl: string): Promise<WebGLTexture | null> {\n    return this.loadPngAsTexture(fontUrl, 3)\n  }\n\n  // not included in public docs\n  // load PNG bitmap with texture unit 4\n  async loadBmpTexture(bmpUrl: string): Promise<WebGLTexture | null> {\n    return this.loadPngAsTexture(bmpUrl, 4)\n  }\n\n  /**\n   * Load matcap for illumination model.\n   * @param bmpUrl - name of matcap to load (\"Shiny\", \"Cortex\", \"Cream\")\n   * @example\n   * niivue.loadMatCapTexture(\"Cortex\");\n   * @see {@link https://niivue.github.io/niivue/features/shiny.volumes.html | live demo usage}\n   */\n  async loadMatCapTexture(bmpUrl: string): Promise<WebGLTexture | null> {\n    return this.loadPngAsTexture(bmpUrl, 5)\n  }\n\n  // not included in public docs\n  // load font bitmap and metrics\n  initFontMets(): void {\n    if (!this.fontMetrics) {\n      throw new Error('fontMetrics undefined')\n    }\n\n    this.fontMets = {\n      distanceRange: this.fontMetrics.atlas.distanceRange,\n      size: this.fontMetrics.atlas.size,\n      mets: {}\n    }\n    for (let id = 0; id < 256; id++) {\n      // clear ASCII codes 0..256\n      this.fontMets.mets[id] = {\n        xadv: 0,\n        uv_lbwh: [0, 0, 0, 0],\n        lbwh: [0, 0, 0, 0]\n      }\n    }\n    const scaleW = this.fontMetrics.atlas.width\n    const scaleH = this.fontMetrics.atlas.height\n    for (let i = 0; i < this.fontMetrics.glyphs.length; i++) {\n      const glyph = this.fontMetrics.glyphs[i]\n      const id = glyph.unicode\n      this.fontMets.mets[id].xadv = glyph.advance\n      if (glyph.planeBounds === undefined) {\n        continue\n      }\n      let l = glyph.atlasBounds.left / scaleW\n      let b = (scaleH - glyph.atlasBounds.top) / scaleH\n      let w = (glyph.atlasBounds.right - glyph.atlasBounds.left) / scaleW\n      let h = (glyph.atlasBounds.top - glyph.atlasBounds.bottom) / scaleH\n      this.fontMets.mets[id].uv_lbwh = [l, b, w, h]\n      l = glyph.planeBounds.left\n      b = glyph.planeBounds.bottom\n      w = glyph.planeBounds.right - glyph.planeBounds.left\n      h = glyph.planeBounds.top - glyph.planeBounds.bottom\n      this.fontMets.mets[id].lbwh = [l, b, w, h]\n    }\n  }\n\n  /**\n   * Load typeface for colorbars, measurements and orientation text.\n   * @param fontSheetUrl - URL to a bitmap font sheet image (e.g., a PNG atlas of glyphs)\n   * @param metricsUrl - URL to the corresponding font metrics JSON (defines character bounds and spacing)\n   * @returns a Promise that resolves when the font is loaded\n   * @example\n   * niivue.loadMatCapTexture(\"Cortex\");\n   * @see {@link https://niivue.github.io/niivue/features/selectfont.html | live demo usage}\n   */\n  async loadFont(fontSheetUrl = defaultFontPNG, metricsUrl = defaultFontMetrics): Promise<void> {\n    await this.loadFontTexture(fontSheetUrl)\n    // @ts-expect-error FIXME this doesn't look right - metricsUrl is a huge object\n    const response = await fetch(metricsUrl)\n    if (!response.ok) {\n      throw Error(response.statusText)\n    }\n\n    const jsonText = await response.text()\n    this.fontMetrics = JSON.parse(jsonText)\n\n    this.initFontMets()\n\n    this.fontShader!.use(this.gl)\n    this.drawScene()\n  }\n\n  // not included in public docs\n  async loadDefaultMatCap(): Promise<WebGLTexture | null> {\n    return this.loadMatCapTexture(defaultMatCap)\n  }\n\n  // not included in public docs\n  async loadDefaultFont(): Promise<void> {\n    await this.loadFontTexture(this.DEFAULT_FONT_GLYPH_SHEET)\n    this.fontMetrics = this.DEFAULT_FONT_METRICS\n    this.initFontMets()\n  }\n\n  // not included in public docs\n  async initText(): Promise<void> {\n    // font shader\n    // multi-channel signed distance font https://github.com/Chlumsky/msdfgen\n    this.fontShader = new Shader(this.gl, vertFontShader, fragFontShader)\n    this.fontShader.use(this.gl)\n\n    await this.loadDefaultFont()\n    await this.loadDefaultMatCap()\n    this.drawLoadingText(this.opts.loadingText)\n  }\n\n  // not included in public docs\n  meshShaderNameToNumber(meshShaderName = 'Phong'): number | undefined {\n    const name = meshShaderName.toLowerCase()\n    for (let i = 0; i < this.meshShaders.length; i++) {\n      if (this.meshShaders[i].Name.toLowerCase() === name) {\n        return i\n      }\n    }\n  }\n\n  /**\n   * select new shader for triangulated meshes and connectomes. Note that this function requires the mesh is fully loaded: you may want use `await` with loadMeshes (as seen in live demo).\n   * @param id - id of mesh to change\n   * @param meshShaderNameOrNumber - identify shader for usage\n   * @example niivue.setMeshShader('toon');\n   * @see {@link https://niivue.github.io/niivue/features/meshes.html | live demo usage}\n   */\n  setMeshShader(id: number, meshShaderNameOrNumber = 2): void {\n    let shaderIndex: number | undefined = 0\n    if (typeof meshShaderNameOrNumber === 'number') {\n      shaderIndex = meshShaderNameOrNumber\n    } else {\n      shaderIndex = this.meshShaderNameToNumber(meshShaderNameOrNumber)\n    }\n\n    if (shaderIndex === undefined) {\n      throw new Error('shaderIndex undefined')\n    }\n\n    shaderIndex = Math.min(shaderIndex, this.meshShaders.length - 1)\n    shaderIndex = Math.max(shaderIndex, 0)\n    const index = this.getMeshIndexByID(id)\n    if (index >= this.meshes.length) {\n      log.debug('Unable to change shader until mesh is loaded (maybe you need async)')\n      return\n    }\n    this.meshes[index].meshShaderIndex = shaderIndex\n    this.updateGLVolume()\n    this.onMeshShaderChanged(index, shaderIndex)\n  }\n\n  /**\n   *\n   * @param fragmentShaderText - custom fragment shader.\n   * @param name - title for new shader.\n   * @returns created custom mesh shader\n   */\n  createCustomMeshShader(\n    fragmentShaderText: string,\n    name = 'Custom'\n    // vertexShaderText = \"\"\n  ): { Name: string; Frag: string; shader: Shader } {\n    if (!fragmentShaderText) {\n      throw new Error('Need fragment shader')\n    }\n\n    const num = this.meshShaderNameToNumber(name)!\n    if (num >= 0) {\n      // prior shader uses this name: delete it!\n      this.gl.deleteProgram(this.meshShaders[num].shader!.program)\n      this.meshShaders.splice(num, 1)\n    }\n\n    const shader = new Shader(this.gl, vertMeshShader, fragmentShaderText)\n    shader.use(this.gl)\n\n    return {\n      Name: name,\n      Frag: fragmentShaderText,\n      shader\n    }\n  }\n\n  /**\n   * Define a new GLSL shader program to influence mesh coloration\n   * @param fragmentShaderText - the GLSL source code for the custom fragment shader\n   * @param name - a descriptive label for the shader (used in menus or debugging)\n   * @returns the index of the new shader (use with {@link setMeshShader})\n   * @see {@link https://niivue.github.io/niivue/features/mesh.atlas.html | live demo usage}\n   */\n  setCustomMeshShader(fragmentShaderText = '', name = 'Custom'): number {\n    const m = this.createCustomMeshShader(fragmentShaderText, name)\n    this.meshShaders.push(m)\n\n    this.onCustomMeshShaderAdded(fragmentShaderText, name)\n    return this.meshShaders.length - 1\n  }\n\n  /**\n   * retrieve all currently loaded meshes\n   * @param sort - sort output alphabetically\n   * @returns list of available mesh shader names\n   * @example niivue.meshShaderNames();\n   * @see {@link https://niivue.github.io/niivue/features/meshes.html | live demo usage}\n   */\n  meshShaderNames(sort = true): string[] {\n    const cm = []\n    for (let i = 0; i < this.meshShaders.length; i++) {\n      cm.push(this.meshShaders[i].Name)\n    }\n    return sort === true ? cm.sort() : cm\n  }\n\n  // not included in public docs\n  initRenderShader(shader: Shader, gradientAmount = 0.0): void {\n    shader.use(this.gl)\n    this.gl.uniform1i(shader.uniforms.volume, 0)\n    this.gl.uniform1i(shader.uniforms.colormap, 1)\n    this.gl.uniform1i(shader.uniforms.overlay, 2)\n    this.gl.uniform1i(shader.uniforms.drawing, 7)\n    this.gl.uniform1fv(shader.uniforms.renderDrawAmbientOcclusion, [this.renderDrawAmbientOcclusion, 1.0])\n    this.gl.uniform1f(shader.uniforms.gradientAmount, gradientAmount)\n    this.gl.uniform1f(shader.uniforms.silhouettePower, this.opts.renderSilhouette)\n    const gradientOpacityLut = new Float32Array(gradientOpacityLutCount)\n    for (let i = 0; i < gradientOpacityLutCount; i++) {\n      if (this.opts.gradientOpacity === 0.0) {\n        gradientOpacityLut[i] = 1.0\n      } else {\n        gradientOpacityLut[i] = Math.pow(i / (gradientOpacityLutCount - 1.0), this.opts.gradientOpacity * 8.0)\n      }\n    }\n    this.gl.uniform1fv(this.gl.getUniformLocation(shader.program, 'gradientOpacity'), gradientOpacityLut)\n  }\n\n  // not included in public docs\n  async init(): Promise<this> {\n    // initial setup: only at the startup of the component\n    // print debug info (gpu vendor and renderer)\n    const rendererInfo = this.gl.getExtension('WEBGL_debug_renderer_info')\n    if (rendererInfo) {\n      const vendor = this.gl.getParameter(rendererInfo.UNMASKED_VENDOR_WEBGL)\n      const renderer = this.gl.getParameter(rendererInfo.UNMASKED_RENDERER_WEBGL)\n      log.info('renderer vendor: ', vendor)\n      log.info('renderer: ', renderer)\n    } else {\n      log.info('debug_renderer_info unavailable')\n    }\n    // firefox masks vendor and renderer for privacy\n    const glInfo = this.gl.getParameter(this.gl.RENDERER)\n    log.info('firefox renderer: ', glInfo) // Useful with firefox \"Intel(R) HD Graphics\" useless in Chrome and Safari \"WebKit WebGL\"\n    this.gl.clearDepth(0.0)\n    this.gl.enable(this.gl.CULL_FACE)\n    this.gl.cullFace(this.gl.FRONT)\n    this.gl.enable(this.gl.BLEND)\n    this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA)\n\n    // register volume and overlay textures\n    this.volumeTexture = this.rgbaTex(this.volumeTexture, TEXTURE0_BACK_VOL, [2, 2, 2, 2], true)\n    this.overlayTexture = this.rgbaTex(this.overlayTexture, TEXTURE2_OVERLAY_VOL, [2, 2, 2, 2], true)\n    this.drawTexture = this.r8Tex(this.drawTexture, TEXTURE7_DRAW, [2, 2, 2, 2], true)\n\n    const rectStrip = [\n      1,\n      1,\n      0, // RAI\n      1,\n      0,\n      0, // RPI\n      0,\n      1,\n      0, // LAI\n      0,\n      0,\n      0 // LPI\n    ]\n\n    const gl = this.gl\n\n    this.cuboidVertexBuffer = gl.createBuffer()!\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.cuboidVertexBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(rectStrip), gl.STATIC_DRAW)\n\n    // setup generic VAO style sheet:\n    this.genericVAO = gl.createVertexArray()! // 2D slices, fonts, lines\n    gl.bindVertexArray(this.genericVAO)\n    // gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.cuboidVertexBuffer); //triangle strip does not need indices\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.cuboidVertexBuffer)\n    gl.enableVertexAttribArray(0)\n    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 0, 0)\n    gl.bindVertexArray(this.unusedVAO) // switch off to avoid tampering with settings\n    this.pickingMeshShader = new Shader(gl, vertMeshShader, fragMeshDepthShader)\n    this.pickingMeshShader.use(gl)\n    this.pickingImageShader = new Shader(gl, vertRenderShader, fragVolumePickingShader)\n    this.pickingImageShader.use(gl)\n    gl.uniform1i(this.pickingImageShader.uniforms.volume, 0)\n    gl.uniform1i(this.pickingImageShader.uniforms.colormap, 1)\n    gl.uniform1i(this.pickingImageShader.uniforms.overlay, 2)\n    gl.uniform1i(this.pickingImageShader.uniforms.drawing, 7)\n    // slice 2D shader\n    this.slice2DShader = new Shader(gl, vertSliceMMShader, fragSlice2DShader)\n    this.slice2DShader.use(gl)\n    gl.uniform1i(this.slice2DShader.uniforms.volume, 0)\n    gl.uniform1i(this.slice2DShader.uniforms.colormap, 1)\n    gl.uniform1i(this.slice2DShader.uniforms.overlay, 2)\n    gl.uniform1i(this.slice2DShader.uniforms.drawing, 7)\n    gl.uniform1f(this.slice2DShader.uniforms.drawOpacity, this.drawOpacity)\n    // slice mm shader\n    this.sliceMMShader = new Shader(gl, vertSliceMMShader, fragSliceMMShader)\n    this.sliceMMShader.use(gl)\n    gl.uniform1i(this.sliceMMShader.uniforms.volume, 0)\n    gl.uniform1i(this.sliceMMShader.uniforms.colormap, 1)\n    gl.uniform1i(this.sliceMMShader.uniforms.overlay, 2)\n    gl.uniform1i(this.sliceMMShader.uniforms.drawing, 7)\n    gl.uniform1f(this.sliceMMShader.uniforms.drawOpacity, this.drawOpacity)\n    // fragSliceV1Shader\n    this.sliceV1Shader = new Shader(gl, vertSliceMMShader, fragSliceV1Shader)\n    this.sliceV1Shader.use(gl)\n    gl.uniform1i(this.sliceV1Shader.uniforms.volume, 0)\n    gl.uniform1i(this.sliceV1Shader.uniforms.colormap, 1)\n    gl.uniform1i(this.sliceV1Shader.uniforms.overlay, 2)\n    gl.uniform1i(this.sliceV1Shader.uniforms.drawing, 7)\n    gl.uniform1f(this.sliceV1Shader.uniforms.drawOpacity, this.drawOpacity)\n    // orient cube\n    this.orientCubeShader = new Shader(gl, vertOrientCubeShader, fragOrientCubeShader)\n    this.orientCubeShaderVAO = gl.createVertexArray()\n    gl.bindVertexArray(this.orientCubeShaderVAO)\n    // Create a buffer\n    const positionBuffer = gl.createBuffer()\n    gl.enableVertexAttribArray(0)\n    gl.enableVertexAttribArray(1)\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, orientCube, gl.STATIC_DRAW)\n    // XYZ position: (three floats)\n    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 24, 0)\n    // RGB color: (also three floats)\n    gl.enableVertexAttribArray(1)\n    gl.vertexAttribPointer(1, 3, gl.FLOAT, false, 24, 12)\n    gl.bindVertexArray(this.unusedVAO)\n    // rect shader (crosshair): horizontal and vertical lines only\n    this.rectShader = new Shader(gl, vertRectShader, fragRectShader)\n    this.rectShader.use(gl)\n    this.rectOutlineShader = new Shader(gl, vertRectShader, fragRectOutlineShader)\n    this.rectOutlineShader.use(gl)\n    // line shader: diagonal lines\n    this.lineShader = new Shader(gl, vertLineShader, fragRectShader)\n    this.lineShader.use(gl)\n    // 3D line shader\n    this.line3DShader = new Shader(gl, vertLine3DShader, fragRectShader)\n    this.line3DShader.use(gl)\n    // circle shader\n    this.circleShader = new Shader(gl, vertCircleShader, fragCircleShader)\n    this.circleShader.use(gl)\n    // render shader (3D)\n    this.renderVolumeShader = new Shader(gl, vertRenderShader, fragRenderShader)\n    this.initRenderShader(this.renderVolumeShader)\n    this.renderSliceShader = new Shader(gl, vertRenderShader, fragRenderSliceShader)\n    this.initRenderShader(this.renderSliceShader)\n    this.renderGradientShader = new Shader(gl, vertRenderShader, fragRenderGradientShader)\n    this.initRenderShader(this.renderGradientShader, 0.3)\n    gl.uniform1i(this.renderGradientShader.uniforms.matCap, 5)\n    gl.uniform1i(this.renderGradientShader.uniforms.gradient, 6)\n    this.renderGradientValuesShader = new Shader(gl, vertRenderShader, fragRenderGradientValuesShader)\n    this.initRenderShader(this.renderGradientValuesShader)\n    gl.uniform1i(this.renderGradientValuesShader.uniforms.matCap, 5)\n    gl.uniform1i(this.renderGradientValuesShader.uniforms.gradient, 6)\n    this.renderShader = this.renderVolumeShader\n    // colorbar shader\n    this.colorbarShader = new Shader(gl, vertColorbarShader, fragColorbarShader)\n    this.colorbarShader.use(gl)\n    gl.uniform1i(this.colorbarShader.uniforms.colormap, 1)\n    this.blurShader = new Shader(gl, blurVertShader, blurFragShader)\n    this.sobelBlurShader = new Shader(gl, blurVertShader, sobelBlurFragShader)\n    this.sobelFirstOrderShader = new Shader(gl, blurVertShader, sobelFirstOrderFragShader)\n    this.sobelSecondOrderShader = new Shader(gl, blurVertShader, sobelSecondOrderFragShader)\n\n    this.growCutShader = new Shader(gl, vertGrowCutShader, fragGrowCutShader)\n\n    // pass through shaders\n    this.passThroughShader = new Shader(gl, vertPassThroughShader, fragPassThroughShader)\n\n    // orientation shaders\n    this.orientShaderAtlasU = new Shader(gl, vertOrientShader, fragOrientShaderU.concat(fragOrientShaderAtlas))\n    this.orientShaderAtlasI = new Shader(gl, vertOrientShader, fragOrientShaderI.concat(fragOrientShaderAtlas))\n\n    this.orientShaderU = new Shader(gl, vertOrientShader, fragOrientShaderU.concat(fragOrientShader))\n    this.orientShaderI = new Shader(gl, vertOrientShader, fragOrientShaderI.concat(fragOrientShader))\n    this.orientShaderF = new Shader(gl, vertOrientShader, fragOrientShaderF.concat(fragOrientShader))\n    this.orientShaderRGBU = new Shader(gl, vertOrientShader, fragOrientShaderU.concat(fragRGBOrientShader))\n    // 3D crosshair cylinder\n    this.surfaceShader = new Shader(gl, vertSurfaceShader, fragSurfaceShader)\n    this.surfaceShader.use(gl)\n    // tractography fibers\n    this.fiberShader = new Shader(gl, vertFiberShader, fragFiberShader)\n    this.pickingImageShader.use(gl)\n    // compile all mesh shaders\n    // compile all mesh shaders\n    for (let i = 0; i < this.meshShaders.length; i++) {\n      const m = this.meshShaders[i]\n      if (m.Name === 'Flat') {\n        m.shader = new Shader(gl, vertFlatMeshShader, fragFlatMeshShader)\n      } else {\n        m.shader = new Shader(gl, vertMeshShader, m.Frag)\n      }\n      m.shader.use(gl)\n      m.shader.isMatcap = m.Name === 'Matcap'\n      if (m.shader.isMatcap) {\n        gl.uniform1i(m.shader.uniforms.matCap, 5)\n      }\n    }\n    this.bmpShader = new Shader(gl, vertBmpShader, fragBmpShader)\n    await this.initText()\n    if (this.opts.thumbnail.length > 0) {\n      await this.loadBmpTexture(this.opts.thumbnail)\n      this.thumbnailVisible = true\n    }\n    this.updateGLVolume()\n    this.initialized = true\n    this.resizeListener()\n    this.drawScene()\n    return this\n  }\n\n  gradientGL(hdr: NiftiHeader): void {\n    const gl = this.gl\n    const faceStrip = [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0]\n    const vao2 = gl.createVertexArray()\n    gl.bindVertexArray(vao2)\n    const vbo2 = gl.createBuffer()\n    gl.bindBuffer(gl.ARRAY_BUFFER, vbo2)\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(faceStrip), gl.STATIC_DRAW)\n    gl.enableVertexAttribArray(0)\n    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 0, 0)\n    const fb = gl.createFramebuffer()\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb)\n    gl.disable(gl.CULL_FACE)\n    gl.viewport(0, 0, hdr.dims[1], hdr.dims[2])\n    gl.disable(gl.BLEND)\n    const tempTex3D = this.rgbaTex(null, TEXTURE8_GRADIENT_TEMP, hdr.dims, true)\n    const blurShader = this.opts.gradientOrder === 2 ? this.sobelBlurShader! : this.blurShader!\n    blurShader.use(gl)\n\n    gl.activeTexture(TEXTURE0_BACK_VOL)\n    gl.bindTexture(gl.TEXTURE_3D, this.volumeTexture)\n    const blurRadius = 0.7\n    gl.uniform1i(blurShader.uniforms.intensityVol, 0)\n    gl.uniform1f(blurShader.uniforms.dX, blurRadius / hdr.dims[1])\n    gl.uniform1f(blurShader.uniforms.dY, blurRadius / hdr.dims[2])\n    gl.uniform1f(blurShader.uniforms.dZ, blurRadius / hdr.dims[3])\n    gl.bindVertexArray(vao2)\n    for (let i = 0; i < hdr.dims[3] - 1; i++) {\n      const coordZ = (1 / hdr.dims[3]) * (i + 0.5)\n      gl.uniform1f(blurShader.uniforms.coordZ, coordZ)\n      gl.framebufferTextureLayer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, tempTex3D, 0, i)\n      const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n      if (status !== gl.FRAMEBUFFER_COMPLETE) {\n        log.error('framebuffer status: ', status)\n      }\n      gl.clear(gl.DEPTH_BUFFER_BIT)\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, faceStrip.length / 3)\n    }\n\n    const sobelShader = this.opts.gradientOrder === 2 ? this.sobelSecondOrderShader! : this.sobelFirstOrderShader!\n    sobelShader.use(gl)\n    gl.activeTexture(TEXTURE8_GRADIENT_TEMP)\n    gl.bindTexture(gl.TEXTURE_3D, tempTex3D) // input texture\n    gl.uniform1i(sobelShader.uniforms.intensityVol, 8) // TEXTURE8_GRADIENT_TEMP\n    const sobelRadius = 0.7\n    gl.uniform1f(sobelShader.uniforms.dX, sobelRadius / hdr.dims[1])\n    gl.uniform1f(sobelShader.uniforms.dY, sobelRadius / hdr.dims[2])\n    gl.uniform1f(sobelShader.uniforms.dZ, sobelRadius / hdr.dims[3])\n    if (this.opts.gradientOrder === 2) {\n      gl.uniform1f(sobelShader.uniforms.dX2, (2.0 * sobelRadius) / hdr.dims[1])\n      gl.uniform1f(sobelShader.uniforms.dY2, (2.0 * sobelRadius) / hdr.dims[2])\n      gl.uniform1f(sobelShader.uniforms.dZ2, (2.0 * sobelRadius) / hdr.dims[3])\n    }\n    gl.uniform1f(sobelShader.uniforms.coordZ, 0.5)\n    gl.bindVertexArray(vao2)\n    if (this.gradientTexture !== null) {\n      gl.deleteTexture(this.gradientTexture)\n    }\n    this.gradientTexture = this.rgbaTex(this.gradientTexture, TEXTURE6_GRADIENT, hdr.dims)\n    for (let i = 0; i < hdr.dims[3] - 1; i++) {\n      const coordZ = (1 / hdr.dims[3]) * (i + 0.5)\n      gl.uniform1f(sobelShader.uniforms.coordZ, coordZ)\n      gl.framebufferTextureLayer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, this.gradientTexture, 0, i)\n      const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n      if (status !== gl.FRAMEBUFFER_COMPLETE) {\n        log.error('framebuffer status: ', status)\n      }\n      gl.clear(gl.DEPTH_BUFFER_BIT)\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, faceStrip.length / 3)\n    }\n\n    gl.deleteFramebuffer(fb)\n    gl.deleteTexture(tempTex3D)\n    gl.deleteBuffer(vbo2)\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n  }\n\n  /**\n   * update the webGL 2.0 scene after making changes to the array of volumes. It's always good to call this method after altering one or more volumes manually (outside of Niivue setter methods)\n   * @example\n   * niivue = new Niivue()\n   * niivue.updateGLVolume()\n   * @see {@link https://niivue.github.io/niivue/features/colormaps.html | live demo usage}\n   */\n  updateGLVolume(): void {\n    // load volume or change contrast\n    let visibleLayers = 0\n    const numLayers = this.volumes.length\n    // loop through loading volumes in this.volume\n    this.refreshColormaps()\n    for (let i = 0; i < numLayers; i++) {\n      // avoid trying to refresh a volume that isn't ready\n      if (!this.volumes[i].toRAS) {\n        continue\n      }\n      this.refreshLayers(this.volumes[i], visibleLayers)\n      visibleLayers++\n    }\n    this.furthestVertexFromOrigin = 0.0\n    if (numLayers > 0) {\n      this.furthestVertexFromOrigin = this.volumeObject3D?.furthestVertexFromOrigin ?? 0\n      // this.furthestVertexFromOrigin = this.volumeObject3D!.furthestVertexFromOrigin!\n    }\n    if (this.meshes) {\n      for (let i = 0; i < this.meshes.length; i++) {\n        this.furthestVertexFromOrigin = Math.max(this.furthestVertexFromOrigin, this.meshes[i].furthestVertexFromOrigin)\n      }\n    }\n\n    if (this.onVolumeUpdated) {\n      this.onVolumeUpdated()\n    }\n    this.drawScene()\n  }\n\n  /**\n   * basic statistics for selected voxel-based image\n   * @param options - an object containing the following properties:\n   *   - layer: selects image to describe\n   *   - masks: optional binary images to filter voxels\n   *   - drawingIsMask: a boolean indicating if the drawing is used as a mask\n   *   - roiIsMask: a boolean indicating if the ROI is used as a mask\n   *   - startVox: the starting voxel coordinates\n   *   - endVox: the ending voxel coordinates\n   * @returns numeric values to describe image or regions of images\n   * @example\n   * niivue.getDescriptives({\n   *   layer: 0,\n   *   masks: [],\n   *   drawingIsMask: true, // drawingIsMask and roiIsMask are mutually exclusive\n   *   roiIsMask: false,\n   *   startVox: [10, 20, 30], // ignored if roiIsMask is false\n   *   endVox: [40, 50, 60] // ignored if roiIsMask is false\n   * });\n   * @see {@link https://niivue.github.io/niivue/features/draw2.html | live demo usage}\n   */\n  getDescriptives(options: {\n    layer?: number\n    masks?: number[]\n    drawingIsMask?: boolean\n    roiIsMask?: boolean\n    startVox?: number[]\n    endVox?: number[]\n  }): Descriptive {\n    const {\n      layer = 0,\n      masks = [],\n      drawingIsMask = false,\n      roiIsMask = false,\n      startVox = [0, 0, 0],\n      endVox = [0, 0, 0]\n    } = options\n\n    // Rest of the code remains the same\n    let area = null // used if roiIsMask since ROI is in 2D slice\n    const hdr = this.volumes[layer].hdr!\n    const pixDimsRAS = this.volumes[layer].pixDimsRAS!\n    let slope = hdr.scl_slope\n    if (isNaN(slope)) {\n      slope = 1\n    }\n    let inter = hdr.scl_inter\n    if (isNaN(inter)) {\n      inter = 1\n    }\n    const imgRaw = this.volumes[layer].img!\n    const nv = imgRaw.length // number of voxels\n    // create mask\n    const img = new Float32Array(nv)\n    for (let i = 0; i < nv; i++) {\n      img[i] = imgRaw[i] * slope + inter\n    } // assume all voxels survive\n    const mask = new Uint8Array(nv)\n    for (let i = 0; i < nv; i++) {\n      mask[i] = 1\n    } // assume all voxels survive\n    if (masks.length > 0) {\n      for (let m = 0; m < masks.length; m++) {\n        const imgMask = this.volumes[masks[m]].img!\n        if (imgMask.length !== nv) {\n          log.debug('Mask resolution does not match image. Skipping masking layer ' + masks[m])\n          continue\n        }\n        for (let i = 0; i < nv; i++) {\n          if (imgMask[i] === 0 || isNaN(imgMask[i])) {\n            mask[i] = 0\n          }\n        }\n      }\n    } else if (masks.length < 1 && drawingIsMask) {\n      for (let i = 0; i < nv; i++) {\n        if (this.drawBitmap![i] === 0 || isNaN(this.drawBitmap![i])) {\n          mask[i] = 0\n        }\n      }\n    } else if (masks.length < 1 && roiIsMask) {\n      // fill mask with zeros\n      mask.fill(0)\n\n      // identify the constant dimension (the plane where the ellipse is drawn)\n      let constantDim = -1\n      if (startVox[0] === endVox[0]) {\n        constantDim = 0 // x is constant\n      } else if (startVox[1] === endVox[1]) {\n        constantDim = 1 // y is constant\n      } else if (startVox[2] === endVox[2]) {\n        constantDim = 2 // z is constant\n      } else {\n        console.error('Error: No constant dimension found.')\n        return\n      }\n\n      // get the varying dimensions\n      const dims = [0, 1, 2]\n      const varDims = dims.filter((dim) => dim !== constantDim)\n\n      // compute the center of the ellipse in voxel coordinates\n      const centerVox = []\n      centerVox[constantDim] = startVox[constantDim]\n      centerVox[varDims[0]] = (startVox[varDims[0]] + endVox[varDims[0]]) / 2\n      centerVox[varDims[1]] = (startVox[varDims[1]] + endVox[varDims[1]]) / 2\n\n      // compute the radii along each varying dimension\n      const radiusX = Math.abs(endVox[varDims[0]] - startVox[varDims[0]]) / 2\n      const radiusY = Math.abs(endVox[varDims[1]] - startVox[varDims[1]]) / 2\n\n      // dimensions of the image\n      const xdim = hdr.dims[1]\n      const ydim = hdr.dims[2]\n      // const zdim = hdr.dims[3]\n\n      // define the ranges for the varying dimensions\n      const minVarDim0 = Math.max(0, Math.floor(centerVox[varDims[0]] - radiusX))\n      const maxVarDim0 = Math.min(hdr.dims[varDims[0] + 1] - 1, Math.ceil(centerVox[varDims[0]] + radiusX))\n\n      const minVarDim1 = Math.max(0, Math.floor(centerVox[varDims[1]] - radiusY))\n      const maxVarDim1 = Math.min(hdr.dims[varDims[1] + 1] - 1, Math.ceil(centerVox[varDims[1]] + radiusY))\n\n      // the constant dimension value\n      const constDimVal = centerVox[constantDim]\n      if (constDimVal < 0 || constDimVal >= hdr.dims[constantDim + 1]) {\n        console.error('Error: Constant dimension value is out of bounds.')\n        return\n      }\n\n      // iterate over the varying dimensions and apply the elliptical mask\n      for (let i = minVarDim0; i <= maxVarDim0; i++) {\n        for (let j = minVarDim1; j <= maxVarDim1; j++) {\n          // set the voxel coordinates\n          const voxel = []\n          voxel[constantDim] = constDimVal // Fixed dimension\n          voxel[varDims[0]] = i\n          voxel[varDims[1]] = j\n          // calculate the normalized distances from the center\n          const di = (voxel[varDims[0]] - centerVox[varDims[0]]) / radiusX\n          const dj = (voxel[varDims[1]] - centerVox[varDims[1]]) / radiusY\n          // calculate the squared distance in ellipse space\n          const distSq = di * di + dj * dj\n          // check if the voxel is within the ellipse\n          if (distSq <= 1) {\n            // calculate the index in the mask array\n            const x = voxel[0]\n            const y = voxel[1]\n            const z = voxel[2]\n            const index = z * xdim * ydim + y * xdim + x\n            mask[index] = 1\n          }\n        }\n      }\n      // calculate the area based on the number of voxels in the mask\n      const voxelArea = pixDimsRAS[varDims[0] + 1] * pixDimsRAS[varDims[1] + 1] // adjusted for 1-indexing\n      const numMaskedVoxels = mask.reduce((count, value) => count + (value === 1 ? 1 : 0), 0)\n      area = numMaskedVoxels * voxelArea\n\n      // perhaps better to calculate the area using the ellipse area formula\n      const radiusX_mm = radiusX * pixDimsRAS[varDims[0] + 1]\n      const radiusY_mm = radiusY * pixDimsRAS[varDims[1] + 1]\n      const areaEllipse = Math.PI * radiusX_mm * radiusY_mm\n      area = areaEllipse\n      // for debugging: show mask -- loop over drawing and set drawing to 1 if mask is 1\n      // this.setDrawingEnabled(true)\n      // this.drawOpacity = 0.3\n      // for (let i = 0; i < nv; i++) {\n      //   if (mask[i] === 1) {\n      //     this.drawBitmap![i] = 1\n      //   } else {\n      //     this.drawBitmap![i] = 0\n      //   }\n      // }\n      // this.refreshDrawing(false)\n      // this.setDrawingEnabled(false)\n    }\n    // Welfords method\n    // https://www.embeddedrelated.com/showarticle/785.php\n    // https://www.johndcook.com/blog/2008/09/26/comparing-three-methods-of-computing-standard-deviation/\n    let k = 0\n    let M = 0\n    let S = 0\n    let mx = Number.NEGATIVE_INFINITY\n    let mn = Number.POSITIVE_INFINITY\n    let kNot0 = 0\n    let MNot0 = 0\n    let SNot0 = 0\n\n    for (let i = 0; i < nv; i++) {\n      if (mask[i] < 1) {\n        continue\n      }\n      const x = img[i]\n      k++\n      let Mnext = M + (x - M) / k\n      S = S + (x - M) * (x - Mnext)\n      M = Mnext\n      if (x === 0) {\n        continue\n      }\n      kNot0++\n      Mnext = MNot0 + (x - MNot0) / kNot0\n      SNot0 = SNot0 + (x - MNot0) * (x - Mnext)\n      MNot0 = Mnext\n\n      mn = Math.min(x, mx)\n      mx = Math.max(x, mx)\n    }\n    const stdev = Math.sqrt(S / (k - 1))\n    const stdevNot0 = Math.sqrt(SNot0 / (kNot0 - 1))\n    const mnNot0 = mn\n    const mxNot0 = mx\n    if (k !== kNot0) {\n      // some voxels are equal to zero\n      mn = Math.min(0, mx)\n      mx = Math.max(0, mx)\n    }\n\n    return {\n      mean: M,\n      stdev,\n      nvox: k,\n      volumeMM3: k * hdr.pixDims[1] * hdr.pixDims[2] * hdr.pixDims[3],\n      // volume also in milliliters\n      volumeML: k * hdr.pixDims[1] * hdr.pixDims[2] * hdr.pixDims[3] * 0.001,\n      min: mn,\n      max: mx,\n      meanNot0: MNot0,\n      stdevNot0,\n      nvoxNot0: kNot0,\n      minNot0: mnNot0,\n      maxNot0: mxNot0,\n      cal_min: this.volumes[layer].cal_min!,\n      cal_max: this.volumes[layer].cal_max!,\n      robust_min: this.volumes[layer].robust_min!,\n      robust_max: this.volumes[layer].robust_max!,\n      area\n    }\n  }\n\n  // not included in public docs\n  // apply slow computations when image properties have changed\n  refreshLayers(overlayItem: NVImage, layer: number): void {\n    if (this.volumes.length < 1) {\n      return\n    } // e.g. only meshes\n    this.refreshColormaps()\n    const hdr = overlayItem.hdr\n    let img = overlayItem.img\n    if (overlayItem.frame4D > 0 && overlayItem.frame4D < overlayItem.nFrame4D!) {\n      img = overlayItem.img!.slice(\n        overlayItem.frame4D * overlayItem.nVox3D!,\n        (overlayItem.frame4D + 1) * overlayItem.nVox3D!\n      )\n    }\n    const opacity = overlayItem.opacity\n    if (layer > 1 && opacity === 0) {\n      return\n    } // skip completely transparent layers\n    let outTexture = null\n\n    if (!this.back) {\n      throw new Error('back undefined')\n    }\n\n    this.gl.bindVertexArray(this.unusedVAO)\n    if (this.crosshairs3D) {\n      this.crosshairs3D.mm![0] = NaN\n    } // force crosshairs3D redraw\n    let mtx = mat4.clone(overlayItem.toRAS!)\n    if (layer === 0) {\n      this.volumeObject3D = toNiivueObject3D(overlayItem, this.VOLUME_ID, this.gl)\n      mat4.invert(mtx, mtx)\n\n      this.back.matRAS = overlayItem.matRAS\n      this.back.dims = overlayItem.dimsRAS\n      this.back.pixDims = overlayItem.pixDimsRAS\n\n      const { volScale, vox } = this.sliceScale(true) // slice scale determined by this.back --> the base image layer\n\n      this.volScale = volScale\n      this.vox = vox\n      this.volumeObject3D.scale = volScale\n\n      const isAboveMax2D = hdr.dims[1] > this.uiData.max2D || hdr.dims[2] > this.uiData.max2D\n      if (isAboveMax2D) {\n        log.error(`Image dimensions exceed maximum texture size of hardware.`)\n      }\n      const isAboveMax3D =\n        hdr.dims[1] > this.uiData.max3D || hdr.dims[2] > this.uiData.max3D || hdr.dims[3] > this.uiData.max3D\n      if (isAboveMax3D && hdr.datatypeCode === NiiDataType.DT_RGBA32 && hdr.dims[3] < 2) {\n        log.info(`Large RGBA image (>${this.uiData.max3D}) requires Texture2D`)\n        // high res 2D image\n        this.opts.is2DSliceShader = true\n        outTexture = this.rgbaTex2D(this.volumeTexture, TEXTURE0_BACK_VOL, overlayItem.dimsRAS!, img as Uint8Array)\n        return\n      }\n      if (isAboveMax3D) {\n        log.info(\n          `Large scalar image (>${this.uiData.max3D}) requires Texture2D (${hdr.dims[1]}×${hdr.dims[2]}×${hdr.dims[3]})`\n        )\n        const nPix = hdr.dims[1] * hdr.dims[2]\n        const vox = this.frac2vox(this.scene.crosshairPos)\n        const z = Math.min(Math.max(vox[2], 0), hdr.dims[3] - 1)\n        const zOffset = z * nPix\n        const img2D = new Uint8Array(nPix * 4)\n        const img2D_U32 = new Uint32Array(img2D.buffer)\n        const opacity = Math.floor(overlayItem.opacity * 255)\n        const scale = (255 * hdr.scl_slope) / (overlayItem.cal_max - overlayItem.cal_min)\n        const intercept = (255 * (hdr.scl_inter - overlayItem.cal_min)) / (overlayItem.cal_max - overlayItem.cal_min)\n        const cmap = new Uint8Array(this.colormap(overlayItem.colormap))\n        const cmap_U32 = new Uint32Array(cmap.buffer)\n        let j = -1\n        for (let i = 0; i < nPix; i++) {\n          const v = img[i + zOffset] * scale + intercept\n          const v255 = Math.round(Math.min(255, Math.max(0, v))) // Clamp to 0..255\n          img2D_U32[i] = cmap_U32[v255]\n          img2D[(j += 4)] = opacity\n        }\n        this.opts.is2DSliceShader = true\n        outTexture = this.rgbaTex2D(\n          this.volumeTexture,\n          TEXTURE0_BACK_VOL,\n          overlayItem.dimsRAS!,\n          img2D as Uint8Array,\n          false\n        )\n        return\n      }\n      if (isAboveMax3D) {\n        log.warn(`dimensions exceed 3D limits ${hdr.dims}`)\n      }\n      this.opts.is2DSliceShader = false\n      outTexture = this.rgbaTex(this.volumeTexture, TEXTURE0_BACK_VOL, overlayItem.dimsRAS!) // this.back.dims)\n\n      if (!this.renderShader) {\n        throw new Error('renderShader undefined')\n      }\n\n      this.renderShader.use(this.gl)\n      this.gl.uniform3fv(this.renderShader.uniforms.texVox, vox)\n      this.gl.uniform3fv(this.renderShader.uniforms.volScale, volScale)\n      // add shader to object\n      const pickingShader = this.pickingImageShader!\n      pickingShader.use(this.gl)\n      this.gl.uniform1i(pickingShader.uniforms.volume, 0)\n      this.gl.uniform1i(pickingShader.uniforms.colormap, 1)\n      this.gl.uniform1i(pickingShader.uniforms.overlay, 2)\n      this.gl.uniform3fv(pickingShader.uniforms.volScale, volScale)\n      log.debug(this.volumeObject3D)\n    } else {\n      if (this.back?.dims === undefined) {\n        log.error('Fatal error: Unable to render overlay: background dimensions not defined!')\n      }\n      const f000 = this.mm2frac(overlayItem.mm000!, 0, true) // origin in output space\n      let f100 = this.mm2frac(overlayItem.mm100!, 0, true)\n      let f010 = this.mm2frac(overlayItem.mm010!, 0, true)\n      let f001 = this.mm2frac(overlayItem.mm001!, 0, true)\n      f100 = vec3.subtract(f100, f100, f000) // direction of i dimension from origin\n      f010 = vec3.subtract(f010, f010, f000) // direction of j dimension from origin\n      f001 = vec3.subtract(f001, f001, f000) // direction of k dimension from origin\n      mtx = mat4.fromValues(\n        f100[0],\n        f010[0],\n        f001[0],\n        f000[0],\n\n        f100[1],\n        f010[1],\n        f001[1],\n        f000[1],\n\n        f100[2],\n        f010[2],\n        f001[2],\n        f000[2],\n        0,\n        0,\n        0,\n        1\n      )\n      mat4.invert(mtx, mtx)\n      if (layer === 1) {\n        outTexture = this.rgbaTex(this.overlayTexture, TEXTURE2_OVERLAY_VOL, this.back!.dims!)\n        this.overlayTexture = outTexture\n        this.overlayTextureID = outTexture\n      } else {\n        outTexture = this.overlayTextureID\n      }\n    }\n    const fb = this.gl.createFramebuffer()\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, fb)\n    this.gl.disable(this.gl.CULL_FACE)\n    this.gl.viewport(0, 0, this.back.dims![1], this.back.dims![2]) // output in background dimensions\n    this.gl.disable(this.gl.BLEND)\n    const tempTex3D = this.gl.createTexture()\n    this.gl.activeTexture(TEXTURE9_ORIENT) // Temporary 3D Texture TEXTURE9_ORIENT\n    this.gl.bindTexture(this.gl.TEXTURE_3D, tempTex3D)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_R, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE)\n    this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, 1)\n    // https://webgl2fundamentals.org/webgl/lessons/webgl-data-textures.html\n    // https://www.khronos.org/registry/OpenGL-Refpages/es3.0/html/glTexStorage3D.xhtml\n    let orientShader = this.orientShaderU!\n    if (!hdr) {\n      throw new Error('hdr undefined')\n    }\n    if (!img) {\n      throw new Error('img undefined')\n    }\n    if (hdr.datatypeCode === NiiDataType.DT_UINT8) {\n      // raw input data\n      if (hdr.intent_code === NiiIntentCode.NIFTI_INTENT_LABEL) {\n        orientShader = this.orientShaderAtlasU!\n      }\n      this.gl.texStorage3D(this.gl.TEXTURE_3D, 1, this.gl.R8UI, hdr.dims[1], hdr.dims[2], hdr.dims[3])\n      this.gl.texSubImage3D(\n        this.gl.TEXTURE_3D,\n        0,\n        0,\n        0,\n        0,\n        hdr.dims[1],\n        hdr.dims[2],\n        hdr.dims[3],\n        this.gl.RED_INTEGER,\n        this.gl.UNSIGNED_BYTE,\n        img\n      )\n    } else if (hdr.datatypeCode === NiiDataType.DT_INT16) {\n      orientShader = this.orientShaderI!\n      if (hdr.intent_code === NiiIntentCode.NIFTI_INTENT_LABEL) {\n        orientShader = this.orientShaderAtlasI!\n      }\n      this.gl.texStorage3D(this.gl.TEXTURE_3D, 1, this.gl.R16I, hdr.dims[1], hdr.dims[2], hdr.dims[3])\n      this.gl.texSubImage3D(\n        this.gl.TEXTURE_3D,\n        0,\n        0,\n        0,\n        0,\n        hdr.dims[1],\n        hdr.dims[2],\n        hdr.dims[3],\n        this.gl.RED_INTEGER,\n        this.gl.SHORT,\n        img\n      )\n    } else if (hdr.datatypeCode === NiiDataType.DT_FLOAT32) {\n      this.gl.texStorage3D(this.gl.TEXTURE_3D, 1, this.gl.R32F, hdr.dims[1], hdr.dims[2], hdr.dims[3])\n      this.gl.texSubImage3D(\n        this.gl.TEXTURE_3D,\n        0,\n        0,\n        0,\n        0,\n        hdr.dims[1],\n        hdr.dims[2],\n        hdr.dims[3],\n        this.gl.RED,\n        this.gl.FLOAT,\n        img\n      )\n      orientShader = this.orientShaderF!\n    } else if (hdr.datatypeCode === NiiDataType.DT_FLOAT64) {\n      let img32f = new Float32Array()\n      img32f = Float32Array.from(img)\n      this.gl.texStorage3D(this.gl.TEXTURE_3D, 1, this.gl.R32F, hdr.dims[1], hdr.dims[2], hdr.dims[3])\n      this.gl.texSubImage3D(\n        this.gl.TEXTURE_3D,\n        0,\n        0,\n        0,\n        0,\n        hdr.dims[1],\n        hdr.dims[2],\n        hdr.dims[3],\n        this.gl.RED,\n        this.gl.FLOAT,\n        img32f\n      )\n      orientShader = this.orientShaderF!\n    } else if (hdr.datatypeCode === NiiDataType.DT_RGB24) {\n      orientShader = this.orientShaderRGBU!\n      orientShader.use(this.gl)\n      // TODO was false instead of 0\n      this.gl.uniform1i(orientShader.uniforms.hasAlpha, 0)\n      this.gl.texStorage3D(this.gl.TEXTURE_3D, 1, this.gl.RGB8UI, hdr.dims[1], hdr.dims[2], hdr.dims[3])\n      this.gl.texSubImage3D(\n        this.gl.TEXTURE_3D,\n        0,\n        0,\n        0,\n        0,\n        hdr.dims[1],\n        hdr.dims[2],\n        hdr.dims[3],\n        this.gl.RGB_INTEGER,\n        this.gl.UNSIGNED_BYTE,\n        img\n      )\n    } else if (hdr.datatypeCode === NiiDataType.DT_UINT16) {\n      if (hdr.intent_code === NiiIntentCode.NIFTI_INTENT_LABEL) {\n        orientShader = this.orientShaderAtlasU!\n      }\n      this.gl.texStorage3D(this.gl.TEXTURE_3D, 1, this.gl.R16UI, hdr.dims[1], hdr.dims[2], hdr.dims[3])\n      this.gl.texSubImage3D(\n        this.gl.TEXTURE_3D,\n        0,\n        0,\n        0,\n        0,\n        hdr.dims[1],\n        hdr.dims[2],\n        hdr.dims[3],\n        this.gl.RED_INTEGER,\n        this.gl.UNSIGNED_SHORT,\n        img\n      )\n    } else if (hdr.datatypeCode === NiiDataType.DT_RGBA32) {\n      orientShader = this.orientShaderRGBU!\n      orientShader.use(this.gl)\n      this.gl.uniform1i(orientShader.uniforms.hasAlpha, 1)\n      this.gl.texStorage3D(this.gl.TEXTURE_3D, 1, this.gl.RGBA8UI, hdr.dims[1], hdr.dims[2], hdr.dims[3])\n      this.gl.texSubImage3D(\n        this.gl.TEXTURE_3D,\n        0,\n        0,\n        0,\n        0,\n        hdr.dims[1],\n        hdr.dims[2],\n        hdr.dims[3],\n        this.gl.RGBA_INTEGER,\n        this.gl.UNSIGNED_BYTE,\n        img\n      )\n    }\n    if (overlayItem.global_min === undefined) {\n      // only once, first time volume is loaded\n      // this.calMinMax(overlayItem, imgRaw);\n      overlayItem.calMinMax()\n    }\n    // blend texture\n    let blendTexture = null\n    this.gl.bindVertexArray(this.genericVAO)\n\n    const isUseCopyTexSubImage3D = false\n    if (isUseCopyTexSubImage3D) {\n      if (layer > 1) {\n        // we can not simultaneously read and write to the same texture.\n        // therefore, we must clone the overlay texture when we wish to add another layer\n        // copy previous overlay texture to blend texture\n        blendTexture = this.rgbaTex(blendTexture, TEXTURE10_BLEND, this.back.dims!, true)\n        this.gl.bindTexture(this.gl.TEXTURE_3D, blendTexture)\n        for (let i = 0; i < this.back.dims![3]; i++) {\n          // n.b. copyTexSubImage3D is a screenshot function: it copies FROM the framebuffer to the TEXTURE (usually we write to a framebuffer)\n          this.gl.framebufferTextureLayer(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, this.overlayTexture, 0, i) // read from existing overlay texture 2\n          this.gl.activeTexture(TEXTURE10_BLEND) // write to blend texture 5\n          this.gl.copyTexSubImage3D(this.gl.TEXTURE_3D, 0, 0, 0, i, 0, 0, this.back.dims![1], this.back.dims![2])\n        }\n      } else {\n        blendTexture = this.rgbaTex(blendTexture, TEXTURE10_BLEND, [2, 2, 2, 2], true)\n      }\n    } else {\n      if (layer > 1) {\n        if (!this.back.dims) {\n          throw new Error('back.dims undefined')\n        }\n        // use pass-through shader to copy previous color to temporary 2D texture\n        blendTexture = this.rgbaTex(blendTexture, TEXTURE10_BLEND, this.back.dims)\n        this.gl.bindTexture(this.gl.TEXTURE_3D, blendTexture)\n        const passShader = this.passThroughShader!\n        passShader.use(this.gl)\n        this.gl.uniform1i(passShader.uniforms.in3D, 2) // overlay volume\n        for (let i = 0; i < this.back.dims[3]; i++) {\n          // output slices\n          const coordZ = (1 / this.back.dims[3]) * (i + 0.5)\n          this.gl.uniform1f(passShader.uniforms.coordZ, coordZ)\n          this.gl.framebufferTextureLayer(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, blendTexture, 0, i)\n          // this.gl.clear(this.gl.DEPTH_BUFFER_BIT); //exhaustive, so not required\n          this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)\n        }\n      } else {\n        blendTexture = this.rgbaTex(blendTexture, TEXTURE10_BLEND, [2, 2, 2, 2])\n      }\n    }\n    orientShader!.use(this.gl)\n    this.gl.activeTexture(TEXTURE1_COLORMAPS)\n    // for label maps, we create an indexed colormap that is not limited to a gradient of 256 colors\n    let colormapLabelTexture = null\n    if (overlayItem.colormapLabel !== null && overlayItem.colormapLabel.lut.length > 7) {\n      const nLabel = overlayItem.colormapLabel.max! - overlayItem.colormapLabel.min! + 1\n      colormapLabelTexture = this.createColormapTexture(colormapLabelTexture, 1, nLabel)\n      this.gl.texSubImage2D(\n        this.gl.TEXTURE_2D,\n        0,\n        0,\n        0,\n        nLabel,\n        1,\n        this.gl.RGBA,\n        this.gl.UNSIGNED_BYTE,\n        overlayItem.colormapLabel.lut\n      )\n      this.gl.uniform1f(orientShader.uniforms.cal_min, overlayItem.colormapLabel.min! - 0.5)\n      this.gl.uniform1f(orientShader.uniforms.cal_max, overlayItem.colormapLabel.max! + 0.5)\n      // this.gl.bindTexture(this.gl.TEXTURE_2D, this.colormapTexture);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, colormapLabelTexture)\n    } else {\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this.colormapTexture)\n      this.gl.uniform1f(orientShader.uniforms.cal_min, overlayItem.cal_min!)\n      this.gl.uniform1f(orientShader.uniforms.cal_max, overlayItem.cal_max!)\n    }\n    if ('alphaThreshold' in overlayItem) {\n      log.warn('alphaThreshold is deprecated: use colormapType')\n      if (overlayItem.alphaThreshold === true) {\n        overlayItem.colormapType = COLORMAP_TYPE.ZERO_TO_MAX_TRANSLUCENT_BELOW_MIN\n      }\n      if (overlayItem.alphaThreshold === false) {\n        overlayItem.colormapType = COLORMAP_TYPE.ZERO_TO_MAX_TRANSPARENT_BELOW_MIN\n      }\n      delete overlayItem.alphaThreshold\n    }\n    const isColorbarFromZero = overlayItem.colormapType !== COLORMAP_TYPE.MIN_TO_MAX ? 1 : 0\n    const isAlphaThreshold = overlayItem.colormapType === COLORMAP_TYPE.ZERO_TO_MAX_TRANSLUCENT_BELOW_MIN ? 1 : 0\n    this.gl.uniform1i(orientShader.uniforms.isAlphaThreshold, isAlphaThreshold)\n    this.gl.uniform1i(orientShader.uniforms.isColorbarFromZero, isColorbarFromZero)\n    this.gl.uniform1i(orientShader.uniforms.isAdditiveBlend, this.opts.isAdditiveBlend ? 1 : 0)\n    // if unused colormapNegative https://github.com/niivue/niivue/issues/490\n    let mnNeg = Number.POSITIVE_INFINITY\n    let mxNeg = Number.NEGATIVE_INFINITY\n    if (overlayItem.colormapNegative.length > 0) {\n      // assume symmetrical\n      mnNeg = Math.min(-overlayItem.cal_min!, -overlayItem.cal_max!)\n      mxNeg = Math.max(-overlayItem.cal_min!, -overlayItem.cal_max!)\n      if (isFinite(overlayItem.cal_minNeg) && isFinite(overlayItem.cal_maxNeg)) {\n        // explicit range for negative colormap: allows asymmetric maps\n        mnNeg = Math.min(overlayItem.cal_minNeg, overlayItem.cal_maxNeg)\n        mxNeg = Math.max(overlayItem.cal_minNeg, overlayItem.cal_maxNeg)\n      }\n    }\n    // issue 1139\n    if (layer > 0 && this.overlayOutlineWidth > 0.0) {\n      const A = overlayItem.cal_min\n      const B = overlayItem.cal_max\n      let isZeroCrossing = Math.min(A, B) <= 0 && Math.max(A, B) >= 0\n      if (!isZeroCrossing && mnNeg < mxNeg) {\n        isZeroCrossing = mnNeg <= 0 && mxNeg >= 0\n      }\n      if (isZeroCrossing) {\n        log.error('issue1139: do not use overlayOutlineWidth when thresholds cross or touch zero')\n      }\n    }\n    if (!orientShader) {\n      throw new Error('orientShader undefined')\n    }\n    this.gl.uniform1f(orientShader.uniforms.layer ?? null, layer)\n    this.gl.uniform1f(orientShader.uniforms.cal_minNeg ?? null, mnNeg)\n    this.gl.uniform1f(orientShader.uniforms.cal_maxNeg ?? null, mxNeg)\n    this.gl.bindTexture(this.gl.TEXTURE_3D, tempTex3D)\n    this.gl.uniform1i(orientShader.uniforms.intensityVol ?? null, 9) // TEXTURE9_ORIENT\n    this.gl.uniform1i(orientShader.uniforms.blend3D ?? null, 10) // TEXTURE10_BLEND\n    this.gl.uniform1i(orientShader.uniforms.colormap ?? null, 1)\n    // this.gl.uniform1f(orientShader.uniforms[\"numLayers\"], numLayers);\n    this.gl.uniform1f(orientShader.uniforms.scl_inter ?? null, hdr.scl_inter)\n    this.gl.uniform1f(orientShader.uniforms.scl_slope ?? null, hdr.scl_slope)\n    this.gl.uniform1f(orientShader.uniforms.opacity ?? null, opacity)\n    this.gl.uniform1i(orientShader.uniforms.modulationVol ?? null, 7)\n    let modulateTexture = null\n    if (\n      overlayItem.modulationImage !== null &&\n      overlayItem.modulationImage >= 0 &&\n      overlayItem.modulationImage < this.volumes.length\n    ) {\n      log.debug('modulating', this.volumes)\n      const mhdr = this.volumes[overlayItem.modulationImage].hdr!\n      if (mhdr.dims[1] === hdr.dims[1] && mhdr.dims[2] === hdr.dims[2] && mhdr.dims[3] === hdr.dims[3]) {\n        if (overlayItem.modulateAlpha) {\n          this.gl.uniform1i(orientShader.uniforms.modulation, 2)\n          this.gl.uniform1f(orientShader.uniforms.opacity, 1.0)\n        } else {\n          this.gl.uniform1i(orientShader.uniforms.modulation, 1)\n        }\n        // r8Tex(texID, activeID, dims, isInit = false)\n        modulateTexture = this.r8Tex(modulateTexture, this.gl.TEXTURE7, hdr.dims, true)\n        this.gl.activeTexture(this.gl.TEXTURE7)\n        this.gl.bindTexture(this.gl.TEXTURE_3D, modulateTexture)\n        const vx = hdr.dims[1] * hdr.dims[2] * hdr.dims[3]\n        const modulateVolume = new Uint8Array(vx)\n        const mn = this.volumes[overlayItem.modulationImage].cal_min!\n        const scale = 1.0 / (this.volumes[overlayItem.modulationImage].cal_max! - mn)\n        const imgRaw = this.volumes[overlayItem.modulationImage].img!.buffer\n        let img: Uint8Array | Int16Array | Float32Array | Float64Array | Uint8Array | Uint16Array = new Uint8Array(\n          imgRaw\n        )\n        switch (mhdr.datatypeCode) {\n          case NiiDataType.DT_INT16:\n            img = new Int16Array(imgRaw)\n            break\n          case NiiDataType.DT_FLOAT32:\n            img = new Float32Array(imgRaw)\n            break\n          case NiiDataType.DT_FLOAT64:\n            img = new Float64Array(imgRaw)\n            break\n          case NiiDataType.DT_RGB24:\n            img = new Uint8Array(imgRaw)\n            break\n          case NiiDataType.DT_UINT16:\n            img = new Uint16Array(imgRaw)\n            break\n        }\n        log.debug(this.volumes[overlayItem.modulationImage])\n        const isColormapNegative = this.volumes[overlayItem.modulationImage].colormapNegative.length > 0\n        // negative thresholds might be asymmetric from positive ones\n        let mnNeg = this.volumes[overlayItem.modulationImage].cal_min\n        let mxNeg = this.volumes[overlayItem.modulationImage].cal_max\n        if (\n          isFinite(this.volumes[overlayItem.modulationImage].cal_minNeg) &&\n          isFinite(this.volumes[overlayItem.modulationImage].cal_maxNeg)\n        ) {\n          // explicit range for negative colormap: allows asymmetric maps\n          mnNeg = this.volumes[overlayItem.modulationImage].cal_minNeg\n          mxNeg = this.volumes[overlayItem.modulationImage].cal_minNeg\n        }\n        mnNeg = Math.abs(mnNeg!)\n        mxNeg = Math.abs(mxNeg!)\n        if (mnNeg > mxNeg) {\n          ;[mnNeg, mxNeg] = [mxNeg, mnNeg]\n        }\n        const scaleNeg = 1.0 / (mxNeg - mnNeg)\n        let mpow = Math.abs(overlayItem.modulateAlpha) // can convert bool, too\n        mpow = Math.max(mpow, 1.0)\n        // volOffset selects the correct frame\n        const volOffset = this.volumes[overlayItem.modulationImage].frame4D * vx\n        for (let i = 0; i < vx; i++) {\n          const vRaw = img[i + volOffset] * mhdr.scl_slope + mhdr.scl_inter\n          let v = (vRaw - mn) * scale\n          if (isColormapNegative && vRaw < 0.0) {\n            v = (Math.abs(vRaw) - mnNeg) * scaleNeg\n          }\n          v = Math.min(Math.max(v, 0.0), 1.0)\n          v = Math.pow(v, mpow) * 255.0\n          modulateVolume[i] = v\n        }\n        this.gl.texSubImage3D(\n          this.gl.TEXTURE_3D,\n          0,\n          0,\n          0,\n          0,\n          hdr.dims[1],\n          hdr.dims[2],\n          hdr.dims[3],\n          this.gl.RED,\n          this.gl.UNSIGNED_BYTE,\n          modulateVolume\n        )\n      } else {\n        log.debug('Modulation image dimensions do not match target')\n      }\n    } else {\n      this.gl.uniform1i(orientShader.uniforms.modulation, 0)\n    }\n    this.gl.uniformMatrix4fv(orientShader.uniforms.mtx, false, mtx)\n    if (!this.back.dims) {\n      throw new Error('back.dims undefined')\n    }\n    let outline = 0\n    if (hdr.intent_code === NiiIntentCode.NIFTI_INTENT_LABEL) {\n      outline = this.opts.atlasOutline\n    }\n    this.gl.uniform4fv(orientShader.uniforms.xyzaFrac, [\n      1.0 / this.back.dims[1],\n      1.0 / this.back.dims[2],\n      1.0 / this.back.dims[3],\n      outline\n    ])\n    log.debug('back dims: ', this.back.dims)\n    for (let i = 0; i < this.back.dims[3]; i++) {\n      // output slices\n      const coordZ = (1 / this.back.dims[3]) * (i + 0.5)\n      this.gl.uniform1f(orientShader.uniforms.coordZ, coordZ)\n      this.gl.framebufferTextureLayer(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, outTexture, 0, i)\n      // this.gl.clear(this.gl.DEPTH_BUFFER_BIT); //exhaustive, so not required\n      this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)\n    }\n    this.gl.bindVertexArray(this.unusedVAO)\n    this.gl.deleteTexture(tempTex3D)\n    this.gl.deleteTexture(modulateTexture)\n    this.gl.deleteTexture(blendTexture)\n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height)\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null)\n\n    this.gl.deleteFramebuffer(fb)\n\n    if (layer === 0) {\n      this.volumeTexture = outTexture\n      if (this.gradientTextureAmount > 0.0) {\n        this.gradientGL(hdr)\n      } else {\n        if (this.gradientTexture !== null) {\n          this.gl.deleteTexture(this.gradientTexture)\n        }\n        this.gradientTexture = null\n      }\n    }\n    // set slice scale for render shader\n    if (!this.renderShader) {\n      throw new Error('renderShader undefined')\n    }\n    this.renderShader.use(this.gl)\n    const slicescl = this.sliceScale(true) // slice scale determined by this.back --> the base image layer\n    const vox = slicescl.vox\n    const volScale = slicescl.volScale\n    // @ts-expect-error FIXME assigning this.overlays to a number field\n    this.gl.uniform1f(this.renderShader.uniforms.overlays, this.overlays)\n    this.gl.uniform4fv(this.renderShader.uniforms.clipPlaneColor, this.opts.clipPlaneColor)\n    this.gl.uniform1f(this.renderShader.uniforms.clipThick, this.opts.clipThick)\n    this.gl.uniform3fv(this.renderShader!.uniforms.clipLo!, this.opts.clipVolumeLow)\n    this.gl.uniform3fv(this.renderShader!.uniforms.clipHi!, this.opts.clipVolumeHigh)\n    this.gl.uniform1f(this.renderShader.uniforms.backOpacity, this.volumes[0].opacity)\n    this.gl.uniform1f(this.renderShader.uniforms.renderOverlayBlend, this.opts.renderOverlayBlend)\n\n    this.gl.uniform4fv(this.renderShader.uniforms.clipPlane, this.scene.clipPlane)\n    this.gl.uniform3fv(this.renderShader.uniforms.texVox, vox)\n    this.gl.uniform3fv(this.renderShader.uniforms.volScale, volScale)\n\n    if (!this.pickingImageShader) {\n      throw new Error('pickingImageShader undefined')\n    }\n    this.pickingImageShader.use(this.gl)\n    this.gl.uniform1f(this.pickingImageShader.uniforms.overlays, this.overlays.length)\n    this.gl.uniform3fv(this.pickingImageShader.uniforms.texVox, vox)\n    this.gl.uniform3fv(this.pickingImageShader!.uniforms.clipLo!, this.opts.clipVolumeLow)\n    this.gl.uniform3fv(this.pickingImageShader!.uniforms.clipHi!, this.opts.clipVolumeHigh)\n    let shader = this.sliceMMShader\n    if (this.opts.is2DSliceShader) {\n      shader = this.slice2DShader\n    }\n    if (this.opts.isV1SliceShader) {\n      shader = this.sliceV1Shader\n    }\n    if (!shader) {\n      throw new Error('slice shader undefined')\n    }\n\n    shader.use(this.gl)\n\n    this.gl.uniform1f(shader.uniforms.overlays, this.overlays.length)\n    this.gl.uniform1f(shader.uniforms.drawOpacity, this.drawOpacity)\n    if (colormapLabelTexture !== null) {\n      this.gl.deleteTexture(colormapLabelTexture)\n      this.gl.activeTexture(TEXTURE1_COLORMAPS)\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this.colormapTexture)\n    }\n    this.gl.uniform1i(shader.uniforms.drawing, 7)\n    this.gl.activeTexture(TEXTURE7_DRAW)\n    if (this.opts.is2DSliceShader) {\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this.drawTexture)\n    } else {\n      this.gl.bindTexture(this.gl.TEXTURE_3D, this.drawTexture)\n    }\n    this.updateInterpolation(layer)\n    //\n    // this.createEmptyDrawing(); //DO NOT DO THIS ON EVERY CALL TO REFRESH LAYERS!!!!\n    // this.createRandomDrawing(); //DO NOT DO THIS ON EVERY CALL TO REFRESH LAYERS!!!!\n  }\n\n  /**\n   * query all available color maps that can be applied to volumes\n   * @returns an array of colormap strings\n   * @example\n   * niivue = new Niivue()\n   * colormaps = niivue.colormaps()\n   * @see {@link https://niivue.github.io/niivue/features/colormaps.html | live demo usage}\n   */\n  colormaps(): string[] {\n    return cmapper.colormaps()\n  }\n\n  /**\n   * create a new colormap\n   * @param key - name of new colormap\n   * @param cmap - colormap properties (Red, Green, Blue, Alpha and Indices)\n   * @see {@link https://niivue.github.io/niivue/features/colormaps.html | live demo usage}\n   */\n  addColormap(key: string, cmap: ColorMap): void {\n    cmapper.addColormap(key, cmap)\n  }\n\n  /**\n   * update the colormap of an image given its ID\n   * @param id - the ID of the NVImage\n   * @param colormap - the name of the colormap to use\n   * @example\n   * niivue.setColormap(niivue.volumes[0].id,, 'red')\n   * @see {@link https://niivue.github.io/niivue/features/colormaps.html | live demo usage}\n   */\n  setColormap(id: string, colormap: string): void {\n    const idx = this.getVolumeIndexByID(id)\n    this.volumes[idx].colormap = colormap\n    this.updateGLVolume()\n  }\n\n  // port of https://github.com/rordenlab/niimath/blob/master/src/bwlabel.c\n\n  // return voxel address given row A, column B, and slice C\n  idx(A: number, B: number, C: number, DIM: Uint32Array): number {\n    return C * DIM[0] * DIM[1] + B * DIM[0] + A\n  } // idx()\n\n  // determine if voxels below candidate voxel have already been assigned a label\n  check_previous_slice(\n    bw: Uint32Array,\n    il: Uint32Array,\n    r: number,\n    c: number,\n    sl: number,\n    dim: Uint32Array,\n    conn: number,\n    tt: Uint32Array\n  ): number {\n    // const nabo: number[] = [];\n    const nabo = new Uint32Array(27)\n    let nr_set = 0\n    if (!sl) {\n      return 0\n    }\n    const val = bw[this.idx(r, c, sl, dim)]\n    if (conn >= 6) {\n      const idx = this.idx(r, c, sl - 1, dim)\n      if (val === bw[idx]) {\n        nabo[nr_set++] = il[idx]\n      }\n    }\n    if (conn >= 18) {\n      if (r) {\n        const idx = this.idx(r - 1, c, sl - 1, dim)\n        if (val === bw[idx]) {\n          nabo[nr_set++] = il[idx]\n        }\n      }\n      if (c) {\n        const idx = this.idx(r, c - 1, sl - 1, dim)\n        if (val === bw[idx]) {\n          nabo[nr_set++] = il[idx]\n        }\n      }\n      if (r < dim[0] - 1) {\n        const idx = this.idx(r + 1, c, sl - 1, dim)\n        if (val === bw[idx]) {\n          nabo[nr_set++] = il[idx]\n        }\n      }\n      if (c < dim[1] - 1) {\n        const idx = this.idx(r, c + 1, sl - 1, dim)\n        if (val === bw[idx]) {\n          nabo[nr_set++] = il[idx]\n        }\n      }\n    }\n    if (conn === 26) {\n      if (r && c) {\n        const idx = this.idx(r - 1, c - 1, sl - 1, dim)\n        if (val === bw[idx]) {\n          nabo[nr_set++] = il[idx]\n        }\n      }\n      if (r < dim[0] - 1 && c) {\n        const idx = this.idx(r + 1, c - 1, sl - 1, dim)\n        if (val === bw[idx]) {\n          nabo[nr_set++] = il[idx]\n        }\n      }\n      if (r && c < dim[1] - 1) {\n        const idx = this.idx(r - 1, c + 1, sl - 1, dim)\n        if (val === bw[idx]) {\n          nabo[nr_set++] = il[idx]\n        }\n      }\n      if (r < dim[0] - 1 && c < dim[1] - 1) {\n        const idx = this.idx(r + 1, c + 1, sl - 1, dim)\n        if (val === bw[idx]) {\n          nabo[nr_set++] = il[idx]\n        }\n      }\n    }\n    if (nr_set) {\n      this.fill_tratab(tt, nabo, nr_set)\n      return nabo[0]\n    } else {\n      return 0\n    }\n  } // check_previous_slice()\n\n  // provisionally label all voxels in volume\n  do_initial_labelling(bw: Uint32Array, dim: Uint32Array, conn: number): [number, Uint32Array, Uint32Array] {\n    let label = 1\n    const kGrowArrayBy = 8192\n    let ttn = kGrowArrayBy\n    let tt = new Uint32Array(ttn).fill(0)\n    const il = new Uint32Array(dim[0] * dim[1] * dim[2]).fill(0)\n    const nabo = new Uint32Array(27)\n    for (let sl = 0; sl < dim[2]; sl++) {\n      for (let c = 0; c < dim[1]; c++) {\n        for (let r = 0; r < dim[0]; r++) {\n          let nr_set = 0\n          const val = bw[this.idx(r, c, sl, dim)]\n          if (val === 0) {\n            continue\n          }\n          nabo[0] = this.check_previous_slice(bw, il, r, c, sl, dim, conn, tt)\n          if (nabo[0]) {\n            nr_set += 1\n          }\n          if (conn >= 6) {\n            if (r) {\n              const idx = this.idx(r - 1, c, sl, dim)\n              if (val === bw[idx]) {\n                nabo[nr_set++] = il[idx]\n              }\n            }\n            if (c) {\n              const idx = this.idx(r, c - 1, sl, dim)\n              if (val === bw[idx]) {\n                nabo[nr_set++] = il[idx]\n              }\n            }\n          }\n          if (conn >= 18) {\n            if (c && r) {\n              const idx = this.idx(r - 1, c - 1, sl, dim)\n              if (val === bw[idx]) {\n                nabo[nr_set++] = il[idx]\n              }\n            }\n            if (c && r < dim[0] - 1) {\n              const idx = this.idx(r + 1, c - 1, sl, dim)\n              if (val === bw[idx]) {\n                nabo[nr_set++] = il[idx]\n              }\n            }\n          }\n          if (nr_set) {\n            il[this.idx(r, c, sl, dim)] = nabo[0]\n            this.fill_tratab(tt, nabo, nr_set)\n          } else {\n            il[this.idx(r, c, sl, dim)] = label\n            if (label >= ttn) {\n              ttn += kGrowArrayBy\n              const ext = new Uint32Array(ttn)\n              ext.set(tt)\n              tt = ext\n            }\n            tt[label - 1] = label\n            label++\n          }\n        }\n      }\n    }\n    for (let i = 0; i < label - 1; i++) {\n      let j = i\n      while (tt[j] !== j + 1) {\n        j = tt[j] - 1\n      }\n      tt[i] = j + 1\n    }\n    return [label - 1, tt, il]\n  } // do_initial_labelling()\n\n  // translation table unifies a region that has been assigned multiple classes\n  fill_tratab(tt: Uint32Array, nabo: Uint32Array, nr_set: number): void {\n    let cntr = 0\n    const tn = new Uint32Array(nr_set + 5).fill(0)\n    const INT_MAX = 2147483647\n    let ltn = INT_MAX\n    for (let i = 0; i < nr_set; i++) {\n      let j = nabo[i]\n      cntr = 0\n      while (tt[j - 1] !== j) {\n        j = tt[j - 1]\n        cntr++\n        if (cntr > 100) {\n          log.info('\\nOoh no!!')\n          break\n        }\n      }\n      tn[i] = j\n      ltn = Math.min(ltn, j)\n    }\n    for (let i = 0; i < nr_set; i++) {\n      tt[tn[i] - 1] = ltn\n    }\n  } // fill_tratab()\n\n  // remove any residual gaps so label numbers are dense rather than sparse\n  translate_labels(il: Uint32Array, dim: Uint32Array, tt: Uint32Array, ttn: number): [number, Uint32Array] {\n    const nvox = dim[0] * dim[1] * dim[2]\n    let ml = 0\n    const l = new Uint32Array(nvox).fill(0)\n    for (let i = 0; i < ttn; i++) {\n      ml = Math.max(ml, tt[i])\n    }\n    const fl = new Uint32Array(ml).fill(0)\n    let cl = 0\n    for (let i = 0; i < nvox; i++) {\n      if (il[i]) {\n        if (!fl[tt[il[i] - 1] - 1]) {\n          cl += 1\n          fl[tt[il[i] - 1] - 1] = cl\n        }\n        l[i] = fl[tt[il[i] - 1] - 1]\n      }\n    }\n    return [cl, l]\n  } // translate_labels()\n\n  // retain only the largest cluster for each region\n  largest_original_cluster_labels(bw: Uint32Array, cl: number, ls: Uint32Array): [number, Uint32Array] {\n    const nvox = bw.length\n    const ls2bw = new Uint32Array(cl + 1).fill(0)\n    const sumls = new Uint32Array(cl + 1).fill(0)\n    for (let i = 0; i < nvox; i++) {\n      const bwVal = bw[i]\n      const lsVal = ls[i]\n      ls2bw[lsVal] = bwVal\n      sumls[lsVal]++\n    }\n    let mxbw = 0\n    for (let i = 0; i < cl + 1; i++) {\n      const bwVal = ls2bw[i]\n      mxbw = Math.max(mxbw, bwVal)\n      // see if this is largest cluster of this bw-value\n      for (let j = 0; j < cl + 1; j++) {\n        if (j === i) {\n          continue\n        }\n        if (bwVal !== ls2bw[j]) {\n          continue\n        }\n        if (sumls[i] < sumls[j]) {\n          ls2bw[i] = 0\n        } else if (sumls[i] === sumls[j] && i < j) {\n          ls2bw[i] = 0\n        } // ties: arbitrary winner\n      }\n    }\n    const vxs = new Uint32Array(nvox).fill(0)\n    for (let i = 0; i < nvox; i++) {\n      vxs[i] = ls2bw[ls[i]]\n    }\n    return [mxbw, vxs]\n  }\n\n  // given a 3D image, return a clustered label map\n  // for an explanation and optimized C code see\n  // https://github.com/seung-lab/connected-components-3d\n  bwlabel(\n    img: Uint32Array,\n    dim: Uint32Array,\n    conn: number = 26,\n    binarize: boolean = false,\n    onlyLargestClusterPerClass: boolean = false\n  ): [number, Uint32Array] {\n    const start = Date.now()\n    const nvox = dim[0] * dim[1] * dim[2]\n    const bw = new Uint32Array(nvox).fill(0)\n    if (![6, 18, 26].includes(conn)) {\n      log.info('bwlabel: conn must be 6, 18 or 26.')\n      return [0, bw]\n    }\n    if (dim[0] < 2 || dim[1] < 2 || dim[2] < 1) {\n      log.info('bwlabel: img must be 2 or 3-dimensional')\n      return [0, bw]\n    }\n    if (binarize) {\n      for (let i = 0; i < nvox; i++) {\n        if (img[i] !== 0.0) {\n          bw[i] = 1\n        }\n      }\n    } else {\n      bw.set(img)\n    }\n    let [ttn, tt, il] = this.do_initial_labelling(bw, dim, conn)\n    if (tt === undefined) {\n      tt = new Uint32Array()\n    }\n    const [cl, ls] = this.translate_labels(il, dim, tt, ttn)\n    log.info(conn + ' neighbor clustering into ' + cl + ' regions in ' + (Date.now() - start) + 'ms')\n    if (onlyLargestClusterPerClass) {\n      const [nbw, bwMx] = this.largest_original_cluster_labels(bw, cl, ls)\n      return [nbw, bwMx]\n    }\n    return [cl, ls]\n  } // bwlabel()\n\n  async createConnectedLabelImage(\n    id: string,\n    conn: number = 26,\n    binarize: boolean = false,\n    onlyLargestClusterPerClass: boolean = false\n  ): Promise<NVImage> {\n    const idx = this.getVolumeIndexByID(id)\n    const dim = Uint32Array.from(this.volumes[idx].dims?.slice(1, 4) ?? [])\n    const img = Uint32Array.from(this.volumes[idx].img?.slice() ?? [])\n    const [mx, clusterImg] = this.bwlabel(img, dim!, conn, binarize, onlyLargestClusterPerClass)\n    const nii = this.volumes[idx].clone()\n    nii.opacity = 0.5\n    nii.colormap = 'random'\n    for (let i = 0; i < nii.img!.length; i++) {\n      nii.img![i] = clusterImg[i]!\n    }\n    nii.cal_min = 0\n    nii.cal_max = mx\n    return nii\n  }\n\n  // conform.py functions follow\n  // https://github.com/Deep-MI/FastSurfer/blob/4e76bed7b11fd7e6403ddac729059ad3842b56de/FastSurferCNN/data_loader/conform.py\n  // Licensed under the Apache License, Version 2.0 (the \"License\")\n\n  // Crop the intensity ranges to specific min and max values.\n\n  async scalecropUint8(\n    img32: Float32Array,\n    dst_min: number = 0,\n    dst_max: number = 255,\n    src_min: number,\n    scale: number\n  ): Promise<Uint8Array> {\n    const voxnum = img32.length\n    const img8 = new Uint8Array(voxnum)\n    for (let i = 0; i < voxnum; i++) {\n      let val = img32![i]\n      val = dst_min + scale * (val - src_min)\n      val = Math.max(val, dst_min)\n      val = Math.min(val, dst_max)\n      img8![i] = val\n    }\n    return img8\n  }\n\n  async scalecropFloat32(\n    img32: Float32Array,\n    dst_min: number = 0,\n    dst_max: number = 1,\n    src_min: number,\n    scale: number\n  ): Promise<Float32Array> {\n    const voxnum = img32.length\n    const img = new Float32Array(voxnum)\n    for (let i = 0; i < voxnum; i++) {\n      let val = img32![i]\n      val = dst_min + scale * (val - src_min)\n      val = Math.max(val, dst_min)\n      val = Math.min(val, dst_max)\n      img![i] = val\n    }\n    return img\n  }\n\n  // Get offset and scale of image intensities to robustly rescale to range dst_min..dst_max.\n  // Equivalent to how mri_convert conforms images.\n\n  getScale(\n    volume: NVImage,\n    dst_min: number = 0,\n    dst_max: number = 255,\n    f_low: number = 0.0,\n    f_high: number = 0.999\n  ): [number, number] {\n    let src_min = volume.global_min!\n    let src_max = volume.global_max!\n    if (volume.hdr!.datatypeCode === NiiDataType.DT_UINT8) {\n      // for compatibility with conform.py: uint8 is not transformed\n      return [src_min, 1.0]\n    }\n    if (!isFinite(f_low) || !isFinite(f_high)) {\n      if (isFinite(volume.cal_min!) && isFinite(volume.cal_max!) && volume.cal_max! > volume.cal_min!) {\n        src_min = volume.cal_min!\n        src_max = volume.cal_max!\n        const scale = (dst_max - dst_min) / (src_max - src_min)\n        log.info(' Robust Rescale:  min: ' + src_min + '  max: ' + src_max + ' scale: ' + scale)\n        console.log('Robust Rescale:  min: ' + src_min + '  max: ' + src_max + ' scale: ' + scale)\n        return [src_min, scale]\n      }\n    }\n    const img = volume.img!\n    const voxnum = volume.hdr!.dims![1] * volume.hdr!.dims![2] * volume.hdr!.dims![3]\n    if (volume.hdr!.scl_slope !== 1.0 || volume.hdr!.scl_inter !== 0.0) {\n      const srcimg = volume.img!\n      const img = new Float32Array(volume.img!.length)\n      for (let i = 0; i < voxnum; i++) {\n        img[i] = srcimg[i] * volume.hdr!.scl_slope + volume.hdr!.scl_inter\n      }\n    }\n    if (src_min < 0.0) {\n      log.warn('WARNING: Input image has value(s) below 0.0 !')\n    }\n    log.info(' Input:    min: ' + src_min + '  max: ' + src_max)\n    if (f_low === 0.0 && f_high === 1.0) {\n      return [src_min, 1.0]\n    }\n    // compute non-zeros and total vox num\n    let nz = 0\n    for (let i = 0; i < voxnum; i++) {\n      if (Math.abs(img![i]) >= 1e-15) {\n        nz++\n      }\n    }\n    // compute histogram\n    const histosize = 1000\n    const bin_size = (src_max - src_min) / histosize\n    const hist = new Array(histosize).fill(0)\n    for (let i = 0; i < voxnum; i++) {\n      const val = img[i]\n      let bin = Math.floor((val - src_min) / bin_size)\n      bin = Math.min(bin, histosize - 1)\n      hist[bin]++\n    }\n    // compute cumulative sum\n    const cs = new Array(histosize).fill(0)\n    cs[0] = hist[0]\n    for (let i = 1; i < histosize; i++) {\n      cs[i] = cs[i - 1] + hist[i]\n    }\n    // get lower limit\n    let nth = Math.floor(f_low * voxnum)\n    let idx = 0\n    while (idx < histosize) {\n      if (cs[idx] >= nth) {\n        break\n      }\n      idx++\n    }\n    const global_min = src_min\n    src_min = idx * bin_size + global_min\n    // get upper limit\n    // nth = Math.floor((1.0 - f_high2) * nz)\n    nth = voxnum - Math.floor((1.0 - f_high) * nz)\n    idx = 0\n    while (idx < histosize - 1) {\n      if (cs[idx + 1] >= nth) {\n        break\n      }\n      idx++\n    }\n    src_max = idx * bin_size + global_min\n    // scale\n    let scale = 1\n    if (src_min !== src_max) {\n      scale = (dst_max - dst_min) / (src_max - src_min)\n    }\n    log.info(' Rescale:  min: ' + src_min + '  max: ' + src_max + ' scale: ' + scale)\n    return [src_min, scale]\n  }\n\n  // Translation of nibabel mghformat.py (MIT License 2009-2019) and FastSurfer conform.py (Apache License)\n  // https://github.com/nipy/nibabel/blob/a2e5dee05cf374c22670ff9fd0d385ce366eb495/nibabel/freesurfer/mghformat.py#L30\n\n  conformVox2Vox(inDims: number[], inAffine: number[], outDim = 256, outMM = 1, toRAS = false): [mat4, mat4, mat4] {\n    const a = inAffine.flat()\n    const affine = mat4.fromValues(\n      a[0],\n      a[1],\n      a[2],\n      a[3],\n      a[4],\n      a[5],\n      a[6],\n      a[7],\n      a[8],\n      a[9],\n      a[10],\n      a[11],\n      a[12],\n      a[13],\n      a[14],\n      a[15]\n    )\n    const half = vec4.fromValues(inDims[1] / 2, inDims[2] / 2, inDims[3] / 2, 1)\n    const Pxyz_c4 = vec4.create()\n    const affineT = mat4.create()\n    mat4.transpose(affineT, affine)\n    vec4.transformMat4(Pxyz_c4, half, affineT)\n    const Pxyz_c = vec3.fromValues(Pxyz_c4[0], Pxyz_c4[1], Pxyz_c4[2])\n    // MGH format doesn't store the transform directly. Instead it's gleaned\n    // from the zooms ( delta ), direction cosines ( Mdc ), RAS centers (\n    const delta = vec3.fromValues(outMM, outMM, outMM)\n    let Mdc = mat4.fromValues(-1, 0, 0, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 0, 0, 1)\n    if (toRAS) {\n      Mdc = mat4.fromValues(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n    }\n    mat4.transpose(Mdc, Mdc)\n    const dims = vec4.fromValues(outDim, outDim, outDim, 1)\n    const MdcD = mat4.create()\n    mat4.scale(MdcD, Mdc, delta)\n    const vol_center = vec4.fromValues(dims[0], dims[1], dims[2], 1)\n    vec4.transformMat4(vol_center, vol_center, MdcD)\n    vec4.scale(vol_center, vol_center, 0.5)\n    const translate = vec3.create()\n    vec3.subtract(translate, Pxyz_c, vec3.fromValues(vol_center[0], vol_center[1], vol_center[2]))\n    const out_affine = mat4.create()\n    mat4.transpose(out_affine, MdcD)\n    out_affine[3] = translate[0]\n    out_affine[7] = translate[1]\n    out_affine[11] = translate[2]\n    const inv_out_affine = mat4.create()\n    mat4.invert(inv_out_affine, out_affine)\n    const vox2vox = mat4.create()\n    // compute vox2vox from src to trg\n    mat4.mul(vox2vox, affine, inv_out_affine)\n    // compute inverse\n    const inv_vox2vox = mat4.create()\n    mat4.invert(inv_vox2vox, vox2vox)\n    return [out_affine, vox2vox, inv_vox2vox]\n  }\n\n  // Create a binary byte array with a NIfTI format header as well as image data\n\n  async createNiftiArray(\n    dims = [256, 256, 256],\n    pixDims = [1, 1, 1],\n    affine = [1, 0, 0, -128, 0, 1, 0, -128, 0, 0, 1, -128, 0, 0, 0, 1],\n    datatypeCode = NiiDataType.DT_UINT8,\n    img = new Uint8Array()\n  ): Promise<Uint8Array> {\n    return await NVImage.createNiftiArray(dims, pixDims, affine, datatypeCode, img)\n  }\n\n  // Convert a binary byte array with a NIfTI image to NiiVue's internal NVImage object\n\n  async niftiArray2NVImage(bytes = new Uint8Array()): Promise<NVImage> {\n    return await NVImage.loadFromUrl({ url: bytes })\n  }\n\n  // Read a NIfTI file and convert as NiiVue internal NVImage: AddVolume this does not load image to GPU\n\n  async loadFromUrl(fnm: string): Promise<NVImage> {\n    return await NVImage.loadFromUrl({ url: fnm })\n  }\n\n  // Translation of FastSurfer conform.py (Apache License)\n  // Reslice an image to an isotropic 1mm with dimensions of 1x1x1mm\n  // The original volume is translated to be in the center of the new volume\n  // Interpolation is linear (default) or nearest neighbor\n  // asFloat32 determines if output is Float32 with range 0..255 or Uint8 with range 0..255\n\n  /**\n   * FreeSurfer-style conform reslices any image to a 256x256x256 volume with 1mm voxels\n   * @param volume - input volume to be re-oriented, intensity-scaled and resliced\n   * @param toRAS - reslice to row, column slices to right-anterior-superior not left-inferior-anterior (default false).\n   * @param isLinear - reslice with linear rather than nearest-neighbor interpolation (default true).\n   * @param asFloat32 - use Float32 datatype rather than Uint8 (default false).\n   * @param isRobustMinMax - clamp intensity with robust min max (~2%..98%) instead of FreeSurfer (0%..99.99%) (default false).\n   * @see {@link https://niivue.github.io/niivue/features/torso.html | live demo usage}\n   */\n  async conform(\n    volume: NVImage,\n    toRAS = false,\n    isLinear: boolean = true,\n    asFloat32 = false,\n    isRobustMinMax = false\n  ): Promise<NVImage> {\n    const outDim = 256\n    const outMM = 1\n    const obj = this.conformVox2Vox(volume.hdr!.dims!, volume.hdr!.affine.flat(), outDim, outMM, toRAS)\n    const out_affine = obj[0]\n    const inv_vox2vox = obj[2]\n    const out_nvox = outDim * outDim * outDim\n    const out_img = new Float32Array(out_nvox)\n    const in_img = new Float32Array(volume.img!)\n    const in_nvox = volume.hdr!.dims![1] * volume.hdr!.dims![2] * volume.hdr!.dims![3]\n    if (volume.hdr!.scl_slope !== 1.0 || volume.hdr!.scl_inter !== 0.0) {\n      for (let i = 0; i < in_nvox; i++) {\n        in_img[i] = in_img[i] * volume.hdr!.scl_slope + volume.hdr!.scl_inter\n      }\n    }\n    const dimX = volume.hdr!.dims![1]\n    const dimY = volume.hdr!.dims![2]\n    const dimZ = volume.hdr!.dims![3]\n    const dimXY = dimX * dimY\n    let i = -1\n    function voxidx(vx: number, vy: number, vz: number): number {\n      return vx + vy * dimX + vz * dimXY\n    }\n    const inv_vox2vox0 = inv_vox2vox[0]\n    const inv_vox2vox4 = inv_vox2vox[4]\n    const inv_vox2vox8 = inv_vox2vox[8]\n    if (isLinear) {\n      for (let z = 0; z < outDim; z++) {\n        for (let y = 0; y < outDim; y++) {\n          // loop hoisting\n          const ixYZ = y * inv_vox2vox[1] + z * inv_vox2vox[2] + inv_vox2vox[3]\n          const iyYZ = y * inv_vox2vox[5] + z * inv_vox2vox[6] + inv_vox2vox[7]\n          const izYZ = y * inv_vox2vox[9] + z * inv_vox2vox[10] + inv_vox2vox[11]\n          for (let x = 0; x < outDim; x++) {\n            const ix = x * inv_vox2vox0 + ixYZ\n            const iy = x * inv_vox2vox4 + iyYZ\n            const iz = x * inv_vox2vox8 + izYZ\n            const fx = Math.floor(ix)\n            const fy = Math.floor(iy)\n            const fz = Math.floor(iz)\n            i++\n            if (fx < 0 || fy < 0 || fz < 0) {\n              continue\n            }\n            // n.b. cx = fx + 1 unless fx is an integer\n            // no performance benefits noted changing ceil to + 1\n            const cx = Math.ceil(ix)\n            const cy = Math.ceil(iy)\n            const cz = Math.ceil(iz)\n            if (cx >= dimX || cy >= dimY || cz >= dimZ) {\n              continue\n            }\n            // residuals\n            const rcx = ix - fx\n            const rcy = iy - fy\n            const rcz = iz - fz\n            const rfx = 1 - rcx\n            const rfy = 1 - rcy\n            const rfz = 1 - rcz\n            const fff = voxidx(fx, fy, fz)\n            let vx = 0\n            vx += in_img[fff] * rfx * rfy * rfz\n            vx += in_img[fff + dimXY] * rfx * rfy * rcz\n            vx += in_img[fff + dimX] * rfx * rcy * rfz\n            vx += in_img[fff + dimX + dimXY] * rfx * rcy * rcz\n            vx += in_img[fff + 1] * rcx * rfy * rfz\n            vx += in_img[fff + 1 + dimXY] * rcx * rfy * rcz\n            vx += in_img[fff + 1 + dimX] * rcx * rcy * rfz\n            vx += in_img[fff + 1 + dimX + dimXY] * rcx * rcy * rcz\n            out_img[i] = vx\n          } // z\n        } // y\n      } // x\n    } else {\n      // nearest neighbor interpolation\n      for (let z = 0; z < outDim; z++) {\n        for (let y = 0; y < outDim; y++) {\n          // loop hoisting\n          const ixYZ = y * inv_vox2vox[1] + z * inv_vox2vox[2] + inv_vox2vox[3]\n          const iyYZ = y * inv_vox2vox[5] + z * inv_vox2vox[6] + inv_vox2vox[7]\n          const izYZ = y * inv_vox2vox[9] + z * inv_vox2vox[10] + inv_vox2vox[11]\n          for (let x = 0; x < outDim; x++) {\n            const ix = Math.round(x * inv_vox2vox0 + ixYZ)\n            const iy = Math.round(x * inv_vox2vox4 + iyYZ)\n            const iz = Math.round(x * inv_vox2vox8 + izYZ)\n            i++\n            if (ix < 0 || iy < 0 || iz < 0) {\n              continue\n            }\n            if (ix >= dimX || iy >= dimY || iz >= dimZ) {\n              continue\n            }\n            out_img[i] = in_img[voxidx(ix, iy, iz)]\n          } // z\n        } // y\n      } // x\n    } // if linear else nearest\n    // Unlike mri_convert -c, we first interpolate (float image), and then rescale\n    // to uchar. mri_convert is doing it the other way around. However, we compute\n    // the scale factor from the input to increase similarity.\n    const src_min = 0\n    const scale = 0\n    let f_low = 0\n    if (isRobustMinMax) {\n      f_low = NaN\n    }\n    let bytes = new Uint8Array()\n    if (asFloat32) {\n      const gs = await this.getScale(volume, 0, 1, f_low)\n      const out_img32 = await this.scalecropFloat32(out_img, 0, 1, gs[0], gs[1])\n      bytes = await this.createNiftiArray(\n        [outDim, outDim, outDim],\n        [outMM, outMM, outMM],\n        Array.from(out_affine),\n        NiiDataType.DT_FLOAT32,\n        new Uint8Array(out_img32.buffer)\n      )\n    } else {\n      const gs = await this.getScale(volume, 0, 255, f_low)\n      const out_img8 = await this.scalecropUint8(out_img, 0, 255, gs[0], gs[1])\n      bytes = await this.createNiftiArray(\n        [outDim, outDim, outDim],\n        [outMM, outMM, outMM],\n        Array.from(out_affine),\n        2,\n        out_img8\n      )\n    }\n    const nii = await this.niftiArray2NVImage(bytes)\n    return nii\n  }\n\n  /**\n   * darken crevices and brighten corners when 3D rendering drawings.\n   * @param ao - amount of ambient occlusion (default 0.4)\n   * @see {@link https://niivue.github.io/niivue/features/torso.html | live demo usage}\n   */\n  setRenderDrawAmbientOcclusion(ao: number): void {\n    if (!this.renderShader) {\n      throw new Error('renderShader undefined')\n    }\n\n    this.renderDrawAmbientOcclusion = ao\n    this.renderShader.use(this.gl)\n    this.gl.uniform1fv(this.renderShader.uniforms.renderDrawAmbientOcclusion, [this.renderDrawAmbientOcclusion, 1.0])\n    this.drawScene()\n  }\n\n  // compatibility alias for NiiVue < 0.35\n  setColorMap(id: string, colormap: string): void {\n    this.setColormap(id, colormap)\n  }\n\n  /**\n   * use given color map for negative voxels in image\n   * @param id - the ID of the NVImage\n   * @param colormapNegative - the name of the colormap to use\n   * @example\n   * niivue = new Niivue()\n   * niivue.setColormapNegative(niivue.volumes[1].id,\"winter\");\n   * @see {@link https://niivue.github.io/niivue/features/mosaics2.html | live demo usage}\n   */\n  setColormapNegative(id: string, colormapNegative: string): void {\n    const idx = this.getVolumeIndexByID(id)\n    this.volumes[idx].colormapNegative = colormapNegative\n    this.updateGLVolume()\n  }\n\n  /**\n   * modulate intensity of one image based on intensity of another\n   * @param idTarget - the ID of the NVImage to be biased\n   * @param idModulation - the ID of the NVImage that controls bias (empty string to disable modulation)\n   * @param modulateAlpha - does the modulation influence alpha transparency (values greater than 1).\n   * @example niivue.setModulationImage(niivue.volumes[0].id, niivue.volumes[1].id);\n   * @see {@link https://niivue.github.io/niivue/features/modulate.html | live demo scalar usage}\n   * @see {@link https://niivue.github.io/niivue/features/modulateAfni.html | live demo usage}\n   */\n  setModulationImage(idTarget: string, idModulation: string, modulateAlpha = 0): void {\n    // to set:\n    // nv1.setModulationImage(nv1.volumes[0].id, nv1.volumes[1].id);\n    // to clear:\n    // nv1.setModulationImage(nv1.volumes[0].id, '');\n    const idxTarget = this.getVolumeIndexByID(idTarget)\n    // idxModulation can be null or the index of the modulation image\n    let idxModulation: number | null = null\n    if (idModulation.length > 0) {\n      idxModulation = this.getVolumeIndexByID(idModulation)\n    }\n    this.volumes[idxTarget].modulationImage = idxModulation\n    this.volumes[idxTarget].modulateAlpha = modulateAlpha\n    this.updateGLVolume()\n  }\n\n  /**\n   * adjust screen gamma. Low values emphasize shadows but can appear flat, high gamma hides shadow details.\n   * @param gamma - selects luminance, default is 1\n   * @example niivue.setGamma(1.0);\n   * @see {@link https://niivue.github.io/niivue/features/colormaps.html | live demo usage}\n   */\n  setGamma(gamma = 1.0): void {\n    this.scene.gamma = gamma\n    cmapper.gamma = gamma\n    this.updateGLVolume()\n  }\n\n  /** Load all volumes for image opened with `limitFrames4D`, the user can also click the `...` on a 4D timeline to load deferred volumes\n   * @param id - the ID of the 4D NVImage\n   **/\n  async loadDeferred4DVolumes(id: string): Promise<void> {\n    const idx = this.getVolumeIndexByID(id)\n    const volume = this.volumes[idx]\n    if (volume.nTotalFrame4D! <= volume.nFrame4D!) {\n      return\n    }\n    volume.nTotalFrame4D = volume.nFrame4D\n    // only load image data: do not change other settings like contrast\n    // check if volume has the property fileObject\n    let v\n    if (volume.fileObject) {\n      // if it does, load the image data from the fileObject\n      v = await NVImage.loadFromFile({ file: volume.fileObject })\n    } else {\n      v = await NVImage.loadFromUrl({ url: volume.url })\n    }\n    // if v is not undefined, then we have successfully loaded the image data\n    if (v) {\n      volume.img = v.img!.slice()\n      volume.nTotalFrame4D = v.nTotalFrame4D\n      volume.nFrame4D = v.nFrame4D\n      this.updateGLVolume()\n    }\n  }\n\n  /**\n   * show desired 3D volume from 4D time series\n   * @param id - the ID of the 4D NVImage\n   * @param frame4D - frame to display (indexed from zero)\n   * @example nv1.setFrame4D(nv1.volumes[0].id, 42);\n   * @see {@link https://niivue.github.io/niivue/features/timeseries.html | live demo usage}\n   */\n  setFrame4D(id: string, frame4D: number): void {\n    const idx = this.getVolumeIndexByID(id)\n    const volume = this.volumes[idx]\n    // don't allow indexing timepoints beyond the max number of time points.\n    if (frame4D > volume.nFrame4D! - 1) {\n      frame4D = volume.nFrame4D! - 1\n    }\n    // don't allow negative timepoints\n    if (frame4D < 0) {\n      frame4D = 0\n    }\n    if (frame4D === volume.frame4D) {\n      return\n    } // no change\n    volume.frame4D = frame4D\n    this.updateGLVolume()\n    this.onFrameChange(volume, frame4D)\n    this.createOnLocationChange()\n  }\n\n  /**\n   * determine active 3D volume from 4D time series\n   * @param id - the ID of the 4D NVImage\n   * @returns currently selected volume (indexed from 0)\n   * @example nv1.getFrame4D(nv1.volumes[0].id);\n   * @see {@link https://niivue.github.io/niivue/features/timeseries.html | live demo usage}\n   */\n  getFrame4D(id: string): number {\n    const idx = this.getVolumeIndexByID(id)\n    return this.volumes[idx].frame4D!\n  }\n\n  // not included in public docs\n  colormapFromKey(name: string): ColorMap {\n    return cmapper.colormapFromKey(name)\n  }\n\n  // not included in public docs\n  colormap(lutName = '', isInvert = false): Uint8ClampedArray {\n    return cmapper.colormap(lutName, isInvert)\n  }\n\n  // create TEXTURE1 a 2D bitmap with a nCol columns RGBA and nRow rows\n  // note a single volume can have two colormaps (positive and negative)\n  // https://github.com/niivue/niivue/blob/main/docs/development-notes/webgl.md\n  createColormapTexture(texture: WebGLTexture | null = null, nRow = 0, nCol = 256): WebGLTexture | null {\n    if (texture !== null) {\n      this.gl.deleteTexture(texture)\n    }\n    if (nRow < 1 || nCol < 1) {\n      return null\n    }\n    texture = this.gl.createTexture()\n    this.gl.activeTexture(TEXTURE1_COLORMAPS)\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture)\n    this.gl.texStorage2D(this.gl.TEXTURE_2D, 1, this.gl.RGBA8, nCol, nRow)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR)\n    // this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST);\n    // this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_R, this.gl.CLAMP_TO_EDGE)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE)\n    this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, 1)\n    return texture\n  }\n\n  addColormapList(nm = '', mn = NaN, mx = NaN, alpha = false, neg = false, vis = true, inv = false): void {\n    // if (nm.length < 1) return;\n    // issue583 unused colormap: e.g. a volume without a negative colormap\n    if (nm.length < 1) {\n      vis = false\n    }\n    this.colormapLists.push({\n      name: nm,\n      min: mn,\n      max: mx,\n      isColorbarFromZero: alpha,\n      negative: neg,\n      visible: vis,\n      invert: inv\n    })\n  }\n\n  // not included in public docs\n  refreshColormaps(): this | undefined {\n    this.colormapLists = [] // one entry per colorbar: min, max, tic\n    if (this.volumes.length < 1 && this.meshes.length < 1) {\n      return\n    }\n    const nVol = this.volumes.length\n    if (nVol > 0) {\n      // add colorbars for volumes\n      for (let i = 0; i < nVol; i++) {\n        const volume = this.volumes[i]\n        const neg = negMinMax(volume.cal_min!, volume.cal_max!, volume.cal_minNeg, volume.cal_maxNeg)\n        const isColorbarFromZero = volume.colormapType !== COLORMAP_TYPE.MIN_TO_MAX\n        // add negative colormaps BEFORE positive ones: we draw them in order from left to right\n        this.addColormapList(\n          volume.colormapNegative,\n          neg[0],\n          neg[1],\n          isColorbarFromZero,\n          true,\n          volume.colorbarVisible,\n          volume.colormapInvert\n        )\n        this.addColormapList(\n          volume.colormap,\n          volume.cal_min,\n          volume.cal_max,\n          isColorbarFromZero,\n          false,\n          volume.colorbarVisible,\n          volume.colormapInvert\n        )\n      }\n    }\n    const nmesh = this.meshes.length\n    if (nmesh > 0) {\n      // add colorbars for volumes\n      for (let i = 0; i < nmesh; i++) {\n        const mesh = this.meshes[i]\n        if (!mesh.colorbarVisible) {\n          continue\n        }\n        const nlayers = mesh.layers.length\n        if ('edgeColormap' in mesh && 'edges' in mesh && mesh.edges !== undefined) {\n          const neg = negMinMax(mesh.edgeMin!, mesh.edgeMax!, NaN, NaN)\n          this.addColormapList(mesh.edgeColormapNegative, neg[0], neg[1], false, true, true, mesh.colormapInvert)\n          //  alpha = false,\n          this.addColormapList(mesh.edgeColormap, mesh.edgeMin, mesh.edgeMax, false, false, true, mesh.colormapInvert)\n        }\n        if (nlayers < 1) {\n          continue\n        }\n        for (let j = 0; j < nlayers; j++) {\n          const layer = this.meshes[i].layers[j]\n          if (!layer.colorbarVisible) {\n            continue\n          }\n          if (layer.colormap.length < 1) {\n            continue\n          }\n          const isColorbarFromZero = layer.colormapType !== COLORMAP_TYPE.MIN_TO_MAX\n          if (layer.useNegativeCmap) {\n            const neg = negMinMax(layer.cal_min, layer.cal_max, layer.cal_minNeg, layer.cal_maxNeg)\n            this.addColormapList(\n              layer.colormapNegative,\n              neg[0],\n              neg[1],\n              isColorbarFromZero,\n              true, // neg\n              true, // vis\n              layer.colormapInvert\n            )\n          }\n          this.addColormapList(\n            layer.colormap,\n            layer.cal_min,\n            layer.cal_max,\n            isColorbarFromZero,\n            false, // neg\n            true, // vis\n            layer.colormapInvert\n          )\n        }\n      }\n    }\n    const nMaps = this.colormapLists.length\n    if (nMaps < 1) {\n      return\n    }\n    this.colormapTexture = this.createColormapTexture(this.colormapTexture, nMaps + 1)\n    let luts: Uint8ClampedArray = new Uint8ClampedArray()\n    function addColormap(lut: number[]): void {\n      const c = new Uint8ClampedArray(luts.length + lut.length)\n      c.set(luts)\n      c.set(lut, luts.length)\n      luts = c\n    }\n    for (let i = 0; i < nMaps; i++) {\n      addColormap(Array.from(this.colormap(this.colormapLists[i].name, this.colormapLists[i].invert)))\n    }\n    addColormap(Array.from(this.drawLut.lut))\n    this.gl.texSubImage2D(this.gl.TEXTURE_2D, 0, 0, 0, 256, nMaps + 1, this.gl.RGBA, this.gl.UNSIGNED_BYTE, luts)\n    return this\n  }\n\n  // not included in public docs\n  sliceScale(forceVox = false): SliceScale {\n    let dimsMM = this.screenFieldOfViewMM(SLICE_TYPE.AXIAL)\n    if (forceVox) {\n      dimsMM = this.screenFieldOfViewVox(SLICE_TYPE.AXIAL)\n    }\n    const longestAxis = Math.max(dimsMM[0], Math.max(dimsMM[1], dimsMM[2]))\n    const volScale = [dimsMM[0] / longestAxis, dimsMM[1] / longestAxis, dimsMM[2] / longestAxis]\n    if (!this.back?.dims) {\n      throw new Error('back.dims undefined')\n    }\n    const vox = [this.back.dims[1], this.back.dims[2], this.back.dims[3]]\n    return { volScale, vox, longestAxis, dimsMM }\n  }\n\n  // return tile at canvas coordinate(x,y)\n  tileIndex(x: number, y: number): number {\n    for (let i = 0; i < this.screenSlices.length; i++) {\n      const ltwh = this.screenSlices[i].leftTopWidthHeight\n      if (x > ltwh[0] && y > ltwh[1] && x < ltwh[0] + ltwh[2] && y < ltwh[1] + ltwh[3]) {\n        return i\n      }\n    }\n    return -1 // mouse position not in rendering tile\n  }\n\n  // not included in public docs\n  // report if screen space coordinates correspond with a 3D rendering\n  inRenderTile(x: number, y: number): number {\n    const idx = this.tileIndex(x, y)\n    if (idx >= 0 && this.screenSlices[idx].axCorSag === SLICE_TYPE.RENDER) {\n      return idx\n    }\n    return -1 // mouse position not in rendering tile\n  }\n\n  // not included in public docs\n  // if clip plane is active, change depth of clip plane\n  // otherwise, set zoom factor for rendering size\n  sliceScroll3D(posChange = 0): void {\n    if (posChange === 0) {\n      return\n    }\n    // n.b. clip plane only influences voxel-based volumes, so zoom is only action for meshes\n    if (this.volumes.length > 0 && this.scene.clipPlaneDepthAziElev[0] < 1.8) {\n      // clipping mode: change clip plane depth\n      // if (this.scene.clipPlaneDepthAziElev[0] > 1.8) return;\n      const depthAziElev = this.scene.clipPlaneDepthAziElev.slice()\n      // bound clip sqrt(3) = 1.73\n      if (posChange > 0) {\n        depthAziElev[0] = Math.min(1.5, depthAziElev[0] + 0.025)\n      }\n      if (posChange < 0) {\n        depthAziElev[0] = Math.max(-1.5, depthAziElev[0] - 0.025)\n      } // Math.max(-1.7,\n      if (depthAziElev[0] !== this.scene.clipPlaneDepthAziElev[0]) {\n        this.scene.clipPlaneDepthAziElev = depthAziElev\n        return this.setClipPlane(this.scene.clipPlaneDepthAziElev)\n      }\n      return\n    }\n    if (posChange > 0) {\n      this.scene.volScaleMultiplier = Math.min(2.0, this.scene.volScaleMultiplier * 1.1)\n    }\n    if (posChange < 0) {\n      this.scene.volScaleMultiplier = Math.max(0.5, this.scene.volScaleMultiplier * 0.9)\n    }\n    this.drawScene()\n  }\n\n  // not included in public docs\n  // if a thumbnail is loaded: close thumbnail and release memory\n  deleteThumbnail(): void {\n    if (!this.bmpTexture) {\n      return\n    }\n    this.gl.deleteTexture(this.bmpTexture)\n    this.bmpTexture = null\n    this.thumbnailVisible = false\n  }\n\n  // not included in public docs\n  inGraphTile(x: number, y: number): boolean {\n    if (this.graph.opacity <= 0 || this.volumes.length < 1 || this.volumes[0].nFrame4D! < 1 || !this.graph.plotLTWH) {\n      return false\n    }\n    if (this.graph.plotLTWH[2] < 1 || this.graph.plotLTWH[3] < 1) {\n      return false\n    }\n    // this.graph.LTWH is tile\n    // this.graph.plotLTWH is body of plot\n    const pos = [(x - this.graph.LTWH[0]) / this.graph.LTWH[2], (y - this.graph.LTWH[1]) / this.graph.LTWH[3]]\n\n    return pos[0] > 0 && pos[1] > 0 && pos[0] <= 1 && pos[1] <= 1\n  }\n\n  // update drawBitmap if it differs from clickTosegmentBitmap\n  updateBitmapFromClickToSegment(): void {\n    if (this.clickToSegmentGrowingBitmap === null) {\n      return\n    }\n    if (this.drawBitmap === null) {\n      return\n    }\n    if (this.clickToSegmentGrowingBitmap.length !== this.drawBitmap.length) {\n      return\n    }\n    const nvx = this.drawBitmap.length\n    for (let i = 0; i < nvx; i++) {\n      this.drawBitmap[i] = this.clickToSegmentGrowingBitmap[i]\n    }\n  }\n\n  sumBitmap(img: Uint8Array): number {\n    let sum = 0\n    for (let i = 0; i < img.length; i++) {\n      sum += img[i]\n    }\n    return sum\n  }\n\n  doClickToSegment(options: { x: number; y: number; tileIndex: number }): void {\n    const { tileIndex } = options\n\n    // Ensure tileIndex is valid before accessing screenSlices\n    if (tileIndex < 0 || tileIndex >= this.screenSlices.length) {\n      log.warn(`Invalid tileIndex ${tileIndex} received in doClickToSegment.`)\n      return\n    }\n\n    const axCorSag = this.screenSlices[tileIndex].axCorSag\n    if (axCorSag > SLICE_TYPE.SAGITTAL) {\n      log.warn('ClickToSegment attempted on non-2D slice tile.')\n      return\n    }\n\n    const texFrac = this.screenXY2TextureFrac(\n      this.clickToSegmentXY[0], // Use the stored click location\n      this.clickToSegmentXY[1],\n      tileIndex,\n      false\n    )\n    // Handle case where click is outside the valid area of the tile texture\n    if (texFrac[0] < 0) {\n      log.debug('Click location outside valid texture fraction for the tile.')\n      return\n    }\n\n    const pt = this.frac2vox(texFrac) as [number, number, number]\n    const threshold = this.opts.clickToSegmentPercent\n    let voxelIntensity = this.back.getValue(pt[0], pt[1], pt[2])\n\n    // Auto intensity logic\n    if (this.opts.clickToSegmentAutoIntensity) {\n      if (threshold !== 0) {\n        if (voxelIntensity === 0) {\n          voxelIntensity = 0.01\n        }\n        this.opts.clickToSegmentIntensityMax = voxelIntensity * (1 + threshold)\n        this.opts.clickToSegmentIntensityMin = voxelIntensity * (1 - threshold)\n      }\n      if (voxelIntensity > (this.back.cal_min + this.back.cal_max) * 0.5) {\n        this.opts.clickToSegmentBright = true\n      } else {\n        this.opts.clickToSegmentBright = false\n      }\n    }\n    const brightOrDark = this.opts.clickToSegmentBright ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY\n\n    this.drawPenAxCorSag = axCorSag\n\n    // Determine which bitmap to pass to drawFloodFill\n    const targetBitmap = this.clickToSegmentIsGrowing ? this.clickToSegmentGrowingBitmap : this.drawBitmap\n\n    // Ensure targetBitmap is valid before proceeding\n    if (!targetBitmap) {\n      log.error('Target bitmap for flood fill is null.')\n      if (!this.clickToSegmentIsGrowing) {\n        this.createEmptyDrawing()\n        if (!this.drawBitmap) {\n          return\n        }\n      } else {\n        if (!this.drawBitmap) {\n          this.createEmptyDrawing()\n        }\n        if (!this.drawBitmap) {\n          return\n        }\n        this.clickToSegmentGrowingBitmap = this.drawBitmap.slice()\n      }\n      log.warn('Initialized missing bitmap in doClickToSegment.')\n    }\n\n    this.drawFloodFill(\n      [pt[0], pt[1], pt[2]],\n      this.opts.penValue,\n      brightOrDark,\n      this.opts.clickToSegmentIntensityMin,\n      this.opts.clickToSegmentIntensityMax,\n      this.opts.floodFillNeighbors,\n      this.opts.clickToSegmentMaxDistanceMM,\n      this.opts.clickToSegmentIs2D,\n      targetBitmap\n    )\n\n    if (!this.clickToSegmentIsGrowing) {\n      log.debug('Applying clickToSegment mask to drawBitmap.')\n      if (this.drawBitmap) {\n        this.refreshDrawing(false, false) // Update GPU from this.drawBitmap, don't force redraw yet\n        this.drawScene() // Now trigger the full scene redraw including the updated drawing layer\n      } else {\n        log.error('Cannot refresh drawing after click-to-segment apply, drawBitmap is null.')\n      }\n\n      // Calculate descriptives only after applying the final mask\n      if (this.drawBitmap) {\n        const info = this.getDescriptives({\n          layer: 0,\n          masks: [],\n          drawingIsMask: true // Use the final this.drawBitmap\n        })\n        this.onClickToSegment({ mL: info.volumeML, mm3: info.volumeMM3 })\n      }\n    }\n    // should probably happen regardless of growing state\n    this.createOnLocationChange(axCorSag)\n  }\n\n  // not included in public docs\n  // handle mouse click event on canvas\n  mouseClick(x: number, y: number, posChange = 0, isDelta = true): void {\n    x *= this.uiData.dpr!\n    y *= this.uiData.dpr!\n    this.canvas!.focus()\n    if (this.thumbnailVisible) {\n      this.thumbnailVisible = false\n      Promise.all([this.loadVolumes(this.deferredVolumes), this.loadMeshes(this.deferredMeshes)]).catch((e) => {\n        throw e\n      })\n      return\n    }\n    if (this.inGraphTile(x, y)) {\n      if (!this.graph.plotLTWH) {\n        throw new Error('plotLTWH undefined')\n      }\n      const pos = [\n        (x - this.graph.plotLTWH[0]) / this.graph.plotLTWH[2],\n        (y - this.graph.plotLTWH[1]) / this.graph.plotLTWH[3]\n      ]\n\n      if (pos[0] > 0 && pos[1] > 0 && pos[0] <= 1 && pos[1] <= 1) {\n        const vol = Math.round(pos[0] * (this.volumes[0].nFrame4D! - 1))\n        this.setFrame4D(this.volumes[0].id, vol)\n        return\n      }\n      if (pos[0] > 0.5 && pos[1] > 1.0) {\n        this.loadDeferred4DVolumes(this.volumes[0].id).catch((e) => {\n          throw e\n        })\n      }\n      return\n    }\n    if (this.inRenderTile(x, y) >= 0) {\n      this.sliceScroll3D(posChange)\n      this.drawScene()\n      return\n    }\n    if (this.screenSlices.length < 1 || this.gl.canvas.height < 1 || this.gl.canvas.width < 1) {\n      return\n    }\n\n    for (let i = 0; i < this.screenSlices.length; i++) {\n      const axCorSag = this.screenSlices[i].axCorSag\n\n      if (this.drawPenAxCorSag >= 0 && this.drawPenAxCorSag !== axCorSag) {\n        continue\n      }\n      if (axCorSag > SLICE_TYPE.SAGITTAL && !this.opts.clickToSegment && posChange === 0) {\n        continue\n      }\n\n      const texFrac = this.screenXY2TextureFrac(x, y, i, true)\n\n      if (texFrac[0] < 0.0) {\n        continue\n      }\n\n      if (posChange !== 0 || !isDelta) {\n        if (!isDelta) {\n          if (axCorSag <= SLICE_TYPE.SAGITTAL) {\n            this.scene.crosshairPos[2 - axCorSag] = posChange\n            this.drawScene()\n            this.createOnLocationChange(axCorSag)\n          }\n          return\n        }\n\n        const posNeg = posChange < 0 ? -1 : 1\n        const xyz = [0, 0, 0]\n\n        if (axCorSag <= SLICE_TYPE.SAGITTAL) {\n          xyz[2 - axCorSag] = posNeg\n          this.moveCrosshairInVox(xyz[0], xyz[1], xyz[2])\n        }\n        return\n      }\n\n      if (this.opts.isForceMouseClickToVoxelCenters) {\n        this.scene.crosshairPos = vec3.clone(this.vox2frac(this.frac2vox(texFrac)))\n      } else {\n        this.scene.crosshairPos = vec3.clone(texFrac)\n      }\n\n      if (this.opts.drawingEnabled) {\n        const pt = this.frac2vox(this.scene.crosshairPos) as [number, number, number]\n\n        // These penValues take precedence over the general clickToSegment mode\n        if (!isFinite(this.opts.penValue) || this.opts.penValue < 0 || Object.is(this.opts.penValue, -0)) {\n          // Includes +/-Infinity, NaN, and -0\n          let growMode = 0\n          let floodFillNewColor = Math.abs(this.opts.penValue)\n          const isGrowTool = true\n          if (Object.is(this.opts.penValue, -0)) {\n            // Erase Cluster specifically\n            growMode = 0\n            floodFillNewColor = 0\n            log.debug('Erase Cluster selected')\n          } else {\n            growMode = this.opts.penValue\n            log.debug('Intensity Grow selected', growMode)\n          }\n\n          this.drawFloodFill(\n            pt,\n            floodFillNewColor,\n            growMode,\n            NaN,\n            NaN,\n            this.opts.floodFillNeighbors,\n            Number.POSITIVE_INFINITY,\n            false,\n            this.drawBitmap,\n            isGrowTool\n          )\n          this.drawScene()\n          this.createOnLocationChange(axCorSag)\n          return\n        } else if (this.opts.clickToSegment) {\n          if (axCorSag <= SLICE_TYPE.SAGITTAL) {\n            // Only on 2D slices\n            this.clickToSegmentIsGrowing = false\n            this.doClickToSegment({\n              x: this.clickToSegmentXY[0],\n              y: this.clickToSegmentXY[1],\n              tileIndex: i\n            })\n          }\n          // Note: doClickToSegment handles refresh and redraw for the apply case.\n          // We still need createOnLocationChange below, but return here.\n          this.createOnLocationChange(axCorSag)\n          return\n        }\n\n        // Standard Pen Drawing (if not flood fill and not clickToSegment)\n        else {\n          if (isNaN(this.drawPenLocation[0])) {\n            this.drawPenAxCorSag = axCorSag\n            this.drawPenFillPts = []\n            this.drawPt(...pt, this.opts.penValue)\n          } else {\n            if (\n              pt[0] === this.drawPenLocation[0] &&\n              pt[1] === this.drawPenLocation[1] &&\n              pt[2] === this.drawPenLocation[2]\n            ) {\n              // No drawing needed, but still redraw scene and update location\n              this.drawScene()\n              this.createOnLocationChange(axCorSag)\n              return\n            }\n            this.drawPenLine(pt, this.drawPenLocation, this.opts.penValue)\n          }\n          this.drawPenLocation = pt\n          if (this.opts.isFilledPen) {\n            this.drawPenFillPts.push(pt)\n          }\n          this.refreshDrawing(false, false) // Update GPU texture\n        }\n      } // end if(drawingEnabled)\n\n      // Redraw scene & update location (happens after drawing or if drawing is disabled but click was valid)\n      this.drawScene()\n      this.createOnLocationChange(axCorSag)\n      return // Click handled for this slice 'i'\n    } // End loop through screenSlices\n    // If loop finishes without finding a slice, the click was outside all valid slices\n  }\n\n  // not included in public docs\n  // draw 10cm ruler on a 2D tile\n  drawRuler(): void {\n    let fovMM: number[] = []\n    let ltwh: number[] = []\n    for (let i = 0; i < this.screenSlices.length; i++) {\n      if (this.screenSlices[i].axCorSag === SLICE_TYPE.RENDER) {\n        continue\n      }\n      // let ltwh = this.screenSlices[i].leftTopWidthHeight;\n      if (this.screenSlices[i].fovMM.length > 1) {\n        ltwh = this.screenSlices[i].leftTopWidthHeight\n        fovMM = this.screenSlices[i].fovMM\n        break\n      }\n    }\n    if (ltwh.length < 4) {\n      return\n    }\n    const frac10cm = 100.0 / fovMM[0]\n    const pix10cm = frac10cm * ltwh[2]\n    const pix1cm = Math.max(Math.round(pix10cm * 0.1), 2)\n    const pixLeft = Math.floor(ltwh[0] + 0.5 * ltwh[2] - 0.5 * pix10cm)\n    const thick = Number(this.opts.rulerWidth)\n    const pixTop = Math.floor(ltwh[1] + ltwh[3] - pix1cm) + 0.5 * thick\n    const startXYendXY = [pixLeft, pixTop, pixLeft + pix10cm, pixTop]\n    let outlineColor = [0, 0, 0, 1]\n    if (this.opts.rulerColor[0] + this.opts.rulerColor[1] + this.opts.rulerColor[2] < 0.8) {\n      outlineColor = [1, 1, 1, 1]\n    }\n    this.drawRuler10cm(startXYendXY, outlineColor, thick + 1)\n    this.drawRuler10cm(startXYendXY, this.opts.rulerColor, thick)\n  }\n\n  // not included in public docs\n  // draw 10cm ruler at desired coordinates\n  drawRuler10cm(startXYendXY: number[], rulerColor: number[], rulerWidth: number = 1): void {\n    if (!this.lineShader) {\n      throw new Error('lineShader undefined')\n    }\n    this.gl.bindVertexArray(this.genericVAO)\n    this.lineShader.use(this.gl)\n    this.gl.uniform4fv(this.lineShader.uniforms.lineColor, rulerColor)\n    this.gl.uniform2fv(this.lineShader.uniforms.canvasWidthHeight, [this.gl.canvas.width, this.gl.canvas.height])\n    // draw Line\n    this.gl.uniform1f(this.lineShader.uniforms.thickness, rulerWidth)\n    this.gl.uniform4fv(this.lineShader.uniforms.startXYendXY, startXYendXY)\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)\n    // draw tick marks\n    // const w10cm = -0.1 * (startXYendXY[0] - startXYendXY[2])\n    const w1cm = -0.1 * (startXYendXY[0] - startXYendXY[2])\n    const b = startXYendXY[1] - Math.floor(0.5 * this.opts.rulerWidth)\n    const t = Math.floor(b - 0.35 * w1cm)\n    const t2 = Math.floor(b - 0.7 * w1cm)\n    for (let i = 0; i < 11; i++) {\n      let l = startXYendXY[0] + i * w1cm\n      l = Math.max(l, startXYendXY[0] + 0.5 * rulerWidth)\n      l = Math.min(l, startXYendXY[2] - 0.5 * rulerWidth)\n      const xyxy = [l, b, l, t]\n      if (i % 5 === 0) {\n        xyxy[3] = t2\n      }\n      this.gl.uniform4fv(this.lineShader.uniforms.startXYendXY, xyxy)\n      this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)\n    }\n    this.gl.bindVertexArray(this.unusedVAO) // set vertex attributes\n  }\n\n  // not included in public docs\n  // returns vec4: XYZi where XYZ is location in millimeters, and i tile index\n  screenXY2mm(x: number, y: number, forceSlice = -1): vec4 {\n    let texFrac: vec3\n    for (let s = 0; s < this.screenSlices.length; s++) {\n      let i = s\n      if (forceSlice >= 0) {\n        i = forceSlice\n      }\n      const axCorSag = this.screenSlices[i].axCorSag\n      if (axCorSag > SLICE_TYPE.SAGITTAL) {\n        continue\n      }\n\n      const ltwh = this.screenSlices[i].leftTopWidthHeight\n      if (x < ltwh[0] || y < ltwh[1] || x > ltwh[0] + ltwh[2] || y > ltwh[1] + ltwh[3]) {\n        continue\n      }\n      texFrac = this.screenXY2TextureFrac(x, y, i, false)\n      if (texFrac[0] < 0.0) {\n        continue\n      }\n      const mm = this.frac2mm(texFrac)\n\n      return vec4.fromValues(mm[0], mm[1], mm[2], i)\n    }\n    return vec4.fromValues(NaN, NaN, NaN, NaN)\n  }\n\n  // not included in public docs\n  dragForPanZoom(startXYendXY: number[]): void {\n    const endMM = this.screenXY2mm(startXYendXY[2], startXYendXY[3])\n    if (isNaN(endMM[0])) {\n      return\n    }\n    const startMM = this.screenXY2mm(startXYendXY[0], startXYendXY[1], endMM[3])\n    if (isNaN(startMM[0]) || isNaN(endMM[0]) || isNaN(endMM[3])) {\n      return\n    }\n    const v = vec4.create()\n    const zoom = this.uiData.pan2DxyzmmAtMouseDown[3]\n    vec4.sub(v, endMM, startMM)\n    this.scene.pan2Dxyzmm[0] = this.uiData.pan2DxyzmmAtMouseDown[0] + zoom * v[0]\n    this.scene.pan2Dxyzmm[1] = this.uiData.pan2DxyzmmAtMouseDown[1] + zoom * v[1]\n    this.scene.pan2Dxyzmm[2] = this.uiData.pan2DxyzmmAtMouseDown[2] + zoom * v[2]\n    this.canvas!.focus() // required after change for issue706\n  }\n\n  dragForCenterButton(startXYendXY: number[]): void {\n    this.dragForPanZoom(startXYendXY)\n  }\n\n  // for slicer3D vertical dragging adjusts zoom\n  dragForSlicer3D(startXYendXY: number[]): void {\n    let zoom = this.uiData.pan2DxyzmmAtMouseDown[3]\n    const y = startXYendXY[3] - startXYendXY[1]\n    const pixelScale = 0.01\n    zoom += y * pixelScale\n    zoom = Math.max(zoom, 0.1)\n    zoom = Math.min(zoom, 10.0)\n    const zoomChange = this.scene.pan2Dxyzmm[3] - zoom\n    if (this.opts.yoke3Dto2DZoom) {\n      this.scene.volScaleMultiplier = zoom\n    }\n    this.scene.pan2Dxyzmm[3] = zoom\n    const mm = this.frac2mm(this.scene.crosshairPos)\n    this.scene.pan2Dxyzmm[0] += zoomChange * mm[0]\n    this.scene.pan2Dxyzmm[1] += zoomChange * mm[1]\n    this.scene.pan2Dxyzmm[2] += zoomChange * mm[2]\n  }\n\n  // not included in public docs\n  // draw line between start/end points and text to report length\n  drawMeasurementTool(startXYendXY: number[]): void {\n    function extendTo(\n      x0: number,\n      y0: number,\n      x1: number,\n      y1: number,\n      distance: number\n    ): { origin: number[]; terminus: number[] } {\n      const x = x0 - x1\n      const y = y0 - y1\n      if (x === 0 && y === 0) {\n        return {\n          origin: [x1 + distance, y1],\n          terminus: [x1 + distance, y1]\n        }\n      }\n      const c = Math.sqrt(x * x + y * y)\n      const dX = (distance * x) / c\n      const dY = (distance * y) / c\n      return {\n        origin: [x0 + dX, y0 + dY], // next to start point\n        terminus: [x1 - dX, y1 - dY]\n      }\n      // return [x1 - dX, y1 - dY];  // next to end point\n    }\n\n    const gl = this.gl\n    gl.bindVertexArray(this.genericVAO)\n\n    gl.depthFunc(gl.ALWAYS)\n    gl.enable(gl.BLEND)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    if (!this.lineShader) {\n      throw new Error('lineShader undefined')\n    }\n\n    this.lineShader.use(this.gl)\n    gl.uniform4fv(this.lineShader.uniforms.lineColor, this.opts.rulerColor)\n    gl.uniform2fv(this.lineShader.uniforms.canvasWidthHeight, [gl.canvas.width, gl.canvas.height])\n    // draw Line\n    gl.uniform1f(this.lineShader.uniforms.thickness, this.opts.rulerWidth)\n    gl.uniform4fv(this.lineShader.uniforms.startXYendXY, startXYendXY)\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n    // draw startCap\n    const measureLineColor = this.opts.measureLineColor\n    measureLineColor[3] = 1.0 // opaque\n    gl.uniform4fv(this.lineShader.uniforms.lineColor, measureLineColor)\n    const w = this.opts.rulerWidth\n    gl.uniform1f(this.lineShader.uniforms.thickness, w * 2)\n    let sXYeXY = [startXYendXY[0], startXYendXY[1] - w, startXYendXY[0], startXYendXY[1] + w]\n    gl.uniform4fv(this.lineShader.uniforms.startXYendXY, sXYeXY)\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n    // end cap\n    sXYeXY = [startXYendXY[2], startXYendXY[3] - w, startXYendXY[2], startXYendXY[3] + w]\n    gl.uniform4fv(this.lineShader.uniforms.startXYendXY, sXYeXY)\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n    // distance between start and stop\n    let startXY = this.canvasPos2frac([startXYendXY[0], startXYendXY[1]])\n    let endXY = this.canvasPos2frac([startXYendXY[2], startXYendXY[3]])\n    if (startXY[0] >= 0 && endXY[0] >= 0) {\n      const startMm = this.frac2mm(startXY)\n      startXY = vec3.fromValues(startMm[0], startMm[1], startMm[2])\n      const endMm = this.frac2mm(endXY)\n      endXY = vec3.fromValues(endMm[0], endMm[1], endMm[2])\n      const v = vec3.create()\n      vec3.sub(v, startXY, endXY)\n      const lenMM = vec3.len(v)\n      let decimals = 2\n      if (lenMM > 9) {\n        decimals = 1\n      }\n      if (lenMM > 99) {\n        decimals = 0\n      }\n      let stringMM = lenMM.toFixed(decimals)\n      if (this.opts.showMeasureUnits) {\n        stringMM = `${stringMM} mm` // append mm for millimeters to show units\n      }\n      let textCoords = startXYendXY\n      const [x0, y0, x1, y1] = startXYendXY\n      const { origin, terminus } = extendTo(x0, y0, x1, y1, 30)\n      switch (this.opts.measureTextJustify) {\n        case 'start':\n          textCoords = [...origin, ...origin.map((point) => point + 1)]\n          break\n        case 'end':\n          textCoords = textCoords = [...terminus, ...terminus.map((point) => point + 1)]\n          break\n        default:\n          textCoords = startXYendXY\n          break\n      }\n      this.drawTextBetween(\n        textCoords,\n        stringMM,\n        this.opts.measureTextHeight / this.opts.textHeight,\n        this.opts.measureTextColor\n      )\n    }\n    gl.bindVertexArray(this.unusedVAO) // set vertex attributes\n  }\n\n  // not included in public docs\n  // draw a rectangle at specified location\n  // unless Alpha is > 0, default color is opts.crosshairColor\n  drawRect(leftTopWidthHeight: number[], lineColor = [1, 0, 0, -1]): void {\n    if (lineColor[3] < 0) {\n      lineColor = this.opts.crosshairColor\n    }\n    if (!this.rectShader) {\n      throw new Error('rectShader undefined')\n    }\n    if (!this.opts.selectionBoxIsOutline) {\n      this.rectShader.use(this.gl)\n      this.gl.enable(this.gl.BLEND)\n      this.gl.uniform4fv(this.rectShader.uniforms.lineColor, lineColor)\n      this.gl.uniform2fv(this.rectShader.uniforms.canvasWidthHeight, [this.gl.canvas.width, this.gl.canvas.height])\n      this.gl.uniform4f(\n        this.rectShader.uniforms.leftTopWidthHeight,\n        leftTopWidthHeight[0],\n        leftTopWidthHeight[1],\n        leftTopWidthHeight[2],\n        leftTopWidthHeight[3]\n      )\n      this.gl.bindVertexArray(this.genericVAO)\n      this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)\n      this.gl.bindVertexArray(this.unusedVAO) // switch off to avoid tampering with settings\n    } else {\n      this.drawCircle(leftTopWidthHeight, lineColor, 0.1)\n      // this.opts.selectionBoxIsOutline == true\n      this.rectOutlineShader.use(this.gl)\n      this.gl.enable(this.gl.BLEND)\n      // set thickness of line\n      this.gl.uniform1f(this.rectOutlineShader.uniforms.thickness, this.opts.selectionBoxLineThickness)\n      this.gl.uniform4fv(this.rectOutlineShader.uniforms.lineColor, lineColor)\n      this.gl.uniform2fv(this.rectOutlineShader.uniforms.canvasWidthHeight, [\n        this.gl.canvas.width,\n        this.gl.canvas.height\n      ])\n      this.gl.uniform4f(\n        this.rectOutlineShader.uniforms.leftTopWidthHeight,\n        leftTopWidthHeight[0],\n        leftTopWidthHeight[1],\n        leftTopWidthHeight[2],\n        leftTopWidthHeight[3]\n      )\n      this.gl.bindVertexArray(this.genericVAO)\n      this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)\n      this.gl.bindVertexArray(this.unusedVAO) // switch off to avoid tampering with settings\n    }\n  }\n\n  drawCircle(leftTopWidthHeight: number[], circleColor = this.opts.fontColor, fillPercent = 1.0): void {\n    if (!this.circleShader) {\n      throw new Error('circleShader undefined')\n    }\n    this.circleShader.use(this.gl)\n    this.gl.enable(this.gl.BLEND)\n    this.gl.uniform4fv(this.circleShader.uniforms.circleColor, circleColor)\n    this.gl.uniform2fv(this.circleShader.uniforms.canvasWidthHeight, [this.gl.canvas.width, this.gl.canvas.height])\n    this.gl.uniform4f(\n      this.circleShader.uniforms.leftTopWidthHeight,\n      leftTopWidthHeight[0],\n      leftTopWidthHeight[1],\n      leftTopWidthHeight[2],\n      leftTopWidthHeight[3]\n    )\n    this.gl.uniform1f(this.circleShader.uniforms.fillPercent, fillPercent)\n    this.gl.uniform4fv(this.circleShader.uniforms.circleColor, circleColor)\n    this.gl.bindVertexArray(this.genericVAO)\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)\n    this.gl.bindVertexArray(this.unusedVAO) // switch off to avoid tampering with settings\n  }\n\n  // not included in public docs\n  // draw a rectangle at desired location\n  drawSelectionBox(leftTopWidthHeight: number[]): void {\n    if (this.opts.dragMode === DRAG_MODE.roiSelection) {\n      this.drawCircle(leftTopWidthHeight, this.opts.selectionBoxColor, 0.1)\n      return\n    }\n    // else draw a rectangle\n    this.drawRect(leftTopWidthHeight, this.opts.selectionBoxColor)\n  }\n\n  // not included in public docs\n  // return canvas pixels available for tiles (e.g without colorbar)\n  effectiveCanvasHeight(): number {\n    // available canvas height differs from actual height if bottom colorbar is shown\n    return this.gl.canvas.height - this.colorbarHeight\n  }\n\n  effectiveCanvasWidth(): number {\n    return this.gl.canvas.width - this.getLegendPanelWidth()\n  }\n\n  getAllLabels(): NVLabel3D[] {\n    const connectomes = this.meshes.filter((m) => m.type === MeshType.CONNECTOME)\n    const meshNodes = connectomes.flatMap((m) => m.nodes as NVConnectomeNode[])\n    const meshLabels = meshNodes.map((n) => n.label)\n    // filter our undefined labels\n    const definedMeshLabels = meshLabels.filter((l): l is NVLabel3D => l !== undefined)\n    const labels = [...this.document.labels, ...definedMeshLabels]\n    return labels\n  }\n\n  getConnectomeLabels(): NVLabel3D[] {\n    const connectomes = this.meshes.filter((m) => m.type === MeshType.CONNECTOME && m.showLegend !== false)\n\n    const meshNodes = connectomes.flatMap((m) => m.nodes as NVConnectomeNode[])\n    const meshLabels = meshNodes.map((n) => n.label)\n    // filter our undefined labels\n\n    // const definedMeshLabels = meshLabels.filter((l): l is NVLabel3D => l !== undefined)\n    const definedMeshLabels = meshLabels.filter((l): l is NVLabel3D => l !== undefined && l.text !== '')\n    // get all of our non-anchored labels\n    const nonAnchoredLabels = this.document.labels.filter((l) => l.anchor == null || l.anchor === LabelAnchorPoint.NONE)\n    // get the unique set of unanchored labels\n    // console.log(definedMeshLabels)\n    const nonAnchoredLabelSet = new Set(definedMeshLabels)\n    for (const label of nonAnchoredLabels) {\n      nonAnchoredLabelSet.add(label)\n    }\n    // now add mesh atlases\n    const meshes = this.meshes.filter((m) => m.type === MeshType.MESH)\n    for (let i = 0; i < meshes.length; i++) {\n      for (let j = 0; j < meshes[i].layers.length; j++) {\n        if (meshes[i].layers[j].labels) {\n          for (let k = 0; k < meshes[i].layers[j].labels.length; k++) {\n            nonAnchoredLabelSet.add(meshes[i].layers[j].labels[k])\n          }\n        }\n      }\n    }\n    return Array.from(nonAnchoredLabelSet)\n  }\n\n  getBulletMarginWidth(): number {\n    let bulletMargin = 0\n    const labels = this.getConnectomeLabels()\n    if (labels.length === 0) {\n      return 0\n    }\n\n    const widestBulletScale =\n      labels.length === 1\n        ? labels[0].style.bulletScale\n        : labels.reduce((a, b) => (a.style.bulletScale! > b.style.bulletScale! ? a : b)).style.bulletScale\n    const tallestLabel =\n      labels.length === 1\n        ? labels[0]\n        : labels.reduce((a, b) => {\n            const aSize = this.opts.textHeight * this.gl.canvas.height * a.style.textScale\n            const bSize = this.opts.textHeight * this.gl.canvas.height * b.style.textScale\n            const taller = this.textHeight(aSize, a.text) > this.textHeight(bSize, b.text) ? a : b\n            return taller\n          })\n    const size = this.opts.textHeight * this.gl.canvas.height * tallestLabel.style.textScale\n    bulletMargin = this.textHeight(size, tallestLabel.text) * widestBulletScale!\n    bulletMargin += size\n    return bulletMargin\n  }\n\n  getLegendPanelWidth(): number {\n    const labels = this.getConnectomeLabels()\n    if (!this.opts.showLegend || labels.length === 0) {\n      return 0\n    }\n    const scale = 1.0 // we may want to make this adjustable in the future\n    const horizontalMargin = this.opts.textHeight * this.gl.canvas.height * scale\n    let width = 0\n\n    const longestLabel = labels.reduce((a, b) => {\n      const aSize = this.opts.textHeight * this.gl.canvas.height * a.style.textScale\n      const bSize = this.opts.textHeight * this.gl.canvas.height * b.style.textScale\n      const longer = this.textWidth(aSize, a.text) > this.textWidth(bSize, b.text) ? a : b\n      return longer\n    })\n\n    const longestTextSize = this.opts.textHeight * this.gl.canvas.height * longestLabel.style.textScale\n    const longestTextLength = this.textWidth(longestTextSize, longestLabel.text)\n\n    const bulletMargin = this.getBulletMarginWidth()\n\n    if (longestTextLength) {\n      width = bulletMargin + longestTextLength\n      width += horizontalMargin * 2\n    }\n    if (width >= this.gl.canvas.width) {\n      return 0\n    }\n    return width\n  }\n\n  getLegendPanelHeight(): number {\n    const labels = this.getConnectomeLabels()\n    let height = 0\n    const verticalMargin = this.opts.textHeight * this.gl.canvas.height\n    for (const label of labels) {\n      const labelSize = this.opts.textHeight * this.gl.canvas.height * label.style.textScale\n      const textHeight = this.textHeight(labelSize, label.text)\n      height += textHeight\n    }\n\n    if (height) {\n      height += (verticalMargin / 2) * (labels.length + 1)\n    }\n    return height\n  }\n\n  // not included in public docs\n  // determine canvas pixels required for colorbar\n  reserveColorbarPanel(): number[] {\n    let txtHt = Math.max(this.opts.textHeight, 0.01)\n    txtHt = txtHt * Math.min(this.gl.canvas.height, this.gl.canvas.width)\n\n    const fullHt = 3 * txtHt\n\n    // Calculate width as a percentage of canvas width\n    // If colorbarWidth is not set (0) or invalid, use full width\n    const widthPercentage = this.opts.colorbarWidth > 0 && this.opts.colorbarWidth <= 1 ? this.opts.colorbarWidth : 1.0\n\n    const width = widthPercentage * this.gl.canvas.width\n\n    const leftTopWidthHeight = [\n      (this.gl.canvas.width - width) / 2, // Center the colorbar horizontally\n      this.gl.canvas.height - fullHt,\n      width,\n      fullHt\n    ]\n\n    this.colorbarHeight = leftTopWidthHeight[3] + 1\n    return leftTopWidthHeight\n  }\n\n  // not included in public docs\n  // low level code to draw a single colorbar\n  drawColorbarCore(\n    layer = 0,\n    leftTopWidthHeight = [0, 0, 0, 0],\n    isNegativeColor = false,\n    min = 0,\n    max = 1,\n    isAlphaThreshold: boolean\n  ): void {\n    if (leftTopWidthHeight[2] <= 0 || leftTopWidthHeight[3] <= 0) {\n      return\n    }\n    let txtHt = Math.max(this.opts.textHeight, 0.01)\n    txtHt = txtHt * Math.min(this.gl.canvas.height, this.gl.canvas.width)\n    let margin = txtHt\n    const fullHt = 3 * txtHt\n    let barHt = txtHt\n    if (leftTopWidthHeight[3] < fullHt) {\n      // no space for text\n      if (leftTopWidthHeight[3] < 3) {\n        return\n      }\n      margin = 1\n      barHt = leftTopWidthHeight[3] - 2\n    }\n    this.gl.disable(this.gl.DEPTH_TEST)\n    this.colorbarHeight = leftTopWidthHeight[3] + 1\n    const barLTWH = [leftTopWidthHeight[0] + margin, leftTopWidthHeight[1], leftTopWidthHeight[2] - 2 * margin, barHt]\n    const rimLTWH = [barLTWH[0] - 1, barLTWH[1] - 1, barLTWH[2] + 2, barLTWH[3] + 2]\n\n    // Only draw the border if showColorbarBorder is true\n    if (this.opts.showColorbarBorder) {\n      this.drawRect(rimLTWH, this.opts.crosshairColor)\n    }\n\n    if (!this.colorbarShader) {\n      throw new Error('colorbarShader undefined')\n    }\n\n    this.colorbarShader.use(this.gl)\n    this.gl.activeTexture(TEXTURE1_COLORMAPS)\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.colormapTexture)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST)\n    const lx = layer\n    this.gl.uniform1f(this.colorbarShader.uniforms.layer, lx)\n    this.gl.uniform2fv(this.colorbarShader.uniforms.canvasWidthHeight, [this.gl.canvas.width, this.gl.canvas.height])\n    this.gl.disable(this.gl.CULL_FACE)\n    if (isNegativeColor) {\n      const flip = [barLTWH[0] + barLTWH[2], barLTWH[1], -barLTWH[2], barLTWH[3]]\n      this.gl.uniform4fv(this.colorbarShader.uniforms.leftTopWidthHeight, flip)\n    } else {\n      this.gl.uniform4fv(this.colorbarShader.uniforms.leftTopWidthHeight, barLTWH)\n    }\n    this.gl.bindVertexArray(this.genericVAO)\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)\n    this.gl.bindVertexArray(this.unusedVAO) // switch off to avoid tampering with settings\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR)\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR)\n    let thresholdTic = 0.0 // only show threshold tickmark in alphaThreshold mode\n    if (isAlphaThreshold && max < 0.0 && isNegativeColor) {\n      thresholdTic = max\n      max = 0.0\n    } else if (isAlphaThreshold && min > 0.0) {\n      thresholdTic = min\n      min = 0.0\n    }\n    if (min === max || txtHt < 1) {\n      return\n    }\n    const range = Math.abs(max - min)\n    let [spacing, ticMin] = tickSpacing(min, max)\n    if (ticMin < min) {\n      ticMin += spacing\n    }\n    // determine font size\n    function humanize(x: number): string {\n      // drop trailing zeros from numerical string\n      return x.toFixed(6).replace(/\\.?0*$/, '')\n    }\n    let tic = ticMin\n    const ticLTWH = [0, barLTWH[1] + barLTWH[3] - txtHt * 0.5, 2, txtHt * 0.75]\n    const txtTop = ticLTWH[1] + ticLTWH[3]\n    const isNeg = 1\n    while (tic <= max) {\n      ticLTWH[0] = barLTWH[0] + ((tic - min) / range) * barLTWH[2]\n      this.drawRect(ticLTWH)\n      const str = humanize(isNeg * tic)\n      // if (fntSize > 0)\n      this.drawTextBelow([ticLTWH[0], txtTop], str)\n      // this.drawTextRight([plotLTWH[0], y], str, fntScale)\n      tic += spacing\n    }\n    if (thresholdTic !== 0) {\n      const tticLTWH = [\n        barLTWH[0] + ((thresholdTic - min) / range) * barLTWH[2],\n        barLTWH[1] - barLTWH[3] * 0.25,\n        2,\n        barLTWH[3] * 1.5\n      ]\n      this.drawRect(tticLTWH)\n    }\n  }\n\n  // not included in public docs\n  // high level code to draw colorbar(s)\n  drawColorbar(): void {\n    const maps = this.colormapLists\n    const nmaps = maps.length\n    if (nmaps < 1) {\n      return\n    }\n    let nVisible = 0 // not all colorbars may be visible\n    for (let i = 0; i < nmaps; i++) {\n      if (maps[i].visible) {\n        nVisible++\n      }\n    }\n    if (nVisible < 1) {\n      return\n    }\n    let leftTopWidthHeight = this.reserveColorbarPanel()\n    let txtHt = Math.max(this.opts.textHeight, 0.01)\n    txtHt = txtHt * Math.min(this.gl.canvas.height, this.gl.canvas.width)\n    const fullHt = 3 * txtHt\n    let wid = leftTopWidthHeight[2] / nVisible\n    if (leftTopWidthHeight[2] <= 0 || leftTopWidthHeight[3] <= 0) {\n      wid = this.gl.canvas.width / nVisible\n      leftTopWidthHeight = [0, this.gl.canvas.height - fullHt, wid, fullHt]\n    }\n    leftTopWidthHeight[2] = wid\n    for (let i = 0; i < nmaps; i++) {\n      if (!maps[i].visible) {\n        continue\n      }\n      this.drawColorbarCore(\n        i,\n        leftTopWidthHeight,\n        maps[i].negative,\n        maps[i].min,\n        maps[i].max,\n        maps[i].isColorbarFromZero\n      )\n      leftTopWidthHeight[0] += wid\n    }\n  }\n\n  // not included in public docs\n  textWidth(scale: number, str: string): number {\n    if (!str) {\n      return 0\n    }\n\n    let w = 0\n    const bytes = new TextEncoder().encode(str)\n    for (let i = 0; i < str.length; i++) {\n      w += scale * this.fontMets!.mets[bytes[i]].xadv!\n    }\n    return w\n  }\n\n  textHeight(scale: number, str: string): number {\n    if (!str) {\n      return 0\n    }\n    const byteSet = new Set(Array.from(str))\n    const bytes = new TextEncoder().encode(Array.from(byteSet).join(''))\n\n    const tallest = Object.values(this.fontMets!.mets)\n      .filter((_, index) => bytes.includes(index))\n      .reduce((a, b) => (a.lbwh[3] > b.lbwh[3] ? a : b))\n    const height = tallest.lbwh[3]\n    return scale * height\n  }\n\n  // not included in public docs\n  drawChar(xy: number[], scale: number, char: number): number {\n    if (!this.fontShader) {\n      throw new Error('fontShader undefined')\n    }\n    // draw single character, never call directly: ALWAYS call from drawText()\n    const metrics = this.fontMets!.mets[char]!\n    const l = xy[0] + scale * metrics.lbwh[0]\n    const b = -(scale * metrics.lbwh[1])\n    const w = scale * metrics.lbwh[2]\n    const h = scale * metrics.lbwh[3]\n    const t = xy[1] + (b - h) + scale\n    this.gl.uniform4f(this.fontShader.uniforms.leftTopWidthHeight, l, t, w, h)\n    this.gl.uniform4fv(this.fontShader.uniforms.uvLeftTopWidthHeight!, metrics.uv_lbwh)\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)\n    return scale * metrics.xadv\n  }\n\n  // not included in public docs\n  drawLoadingText(text: string): void {\n    if (!text) {\n      return\n    }\n    if (!this.canvas) {\n      throw new Error('canvas undefined')\n    }\n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height)\n    this.gl.enable(this.gl.CULL_FACE)\n    this.gl.enable(this.gl.BLEND)\n    this.drawTextBelow([this.canvas.width / 2, this.canvas.height / 2], text, 3)\n  }\n\n  // not included in public docs\n  drawText(xy: number[], str: string, scale = 1, color: Float32List | null = null): void {\n    if (this.opts.textHeight <= 0) {\n      return\n    }\n    if (!this.fontShader) {\n      throw new Error('fontShader undefined')\n    }\n    this.fontShader.use(this.gl)\n    // let size = this.opts.textHeight * this.gl.canvas.height * scale;\n    const size = this.opts.textHeight * Math.min(this.gl.canvas.height, this.gl.canvas.width) * scale\n    this.gl.enable(this.gl.BLEND)\n    this.gl.uniform2f(this.fontShader.uniforms.canvasWidthHeight, this.gl.canvas.width, this.gl.canvas.height)\n    if (color === null) {\n      color = this.opts.fontColor\n    }\n    this.gl.uniform4fv(this.fontShader.uniforms.fontColor, color as Float32List)\n    let screenPxRange = (size / this.fontMets!.size) * this.fontMets!.distanceRange\n    screenPxRange = Math.max(screenPxRange, 1.0) // screenPxRange() must never be lower than 1\n    this.gl.uniform1f(this.fontShader.uniforms.screenPxRange, screenPxRange)\n    const bytes = new TextEncoder().encode(str)\n    this.gl.bindVertexArray(this.genericVAO)\n    for (let i = 0; i < str.length; i++) {\n      xy[0] += this.drawChar(xy, size, bytes[i])\n    }\n    this.gl.bindVertexArray(this.unusedVAO)\n  }\n\n  // not included in public docs\n  drawTextRight(xy: number[], str: string, scale = 1, color: number[] | null = null): void {\n    // to right of x, vertically centered on y\n    if (this.opts.textHeight <= 0) {\n      return\n    }\n    xy[1] -= 0.5 * this.opts.textHeight * this.gl.canvas.height\n    this.drawText(xy, str, scale, color)\n  }\n\n  // not included in public docs\n  drawTextLeft(xy: number[], str: string, scale = 1, color: number[] | null = null): void {\n    // to left of x, vertically centered on y\n    if (this.opts.textHeight <= 0) {\n      return\n    }\n    const size = this.opts.textHeight * this.gl.canvas.height * scale\n    xy[0] -= this.textWidth(size, str)\n    xy[1] -= 0.5 * size\n    this.drawText(xy, str, scale, color)\n  }\n\n  // not included in public docs\n  drawTextRightBelow(xy: number[], str: string, scale = 1, color: number[] | null = null): void {\n    // to right of x, vertically centered on y\n    if (this.opts.textHeight <= 0) {\n      return\n    }\n\n    this.drawText(xy, str, scale, color)\n  }\n\n  // not included in public docs\n  drawTextBetween(startXYendXY: number[], str: string, scale = 1, color: number[] | null = null): void {\n    // horizontally centered on x, below y\n    if (this.opts.textHeight <= 0) {\n      return\n    }\n    const xy = [(startXYendXY[0] + startXYendXY[2]) * 0.5, (startXYendXY[1] + startXYendXY[3]) * 0.5]\n    const size = this.opts.textHeight * this.gl.canvas.height * scale\n    const w = this.textWidth(size, str)\n    xy[0] -= 0.5 * w\n    xy[1] -= 0.5 * size\n    const LTWH = [xy[0] - 1, xy[1] - 1, w + 2, size + 2]\n    let clr = color\n    if (clr === null) {\n      clr = this.opts.crosshairColor\n    }\n    // if color is bright, make rect background dark and vice versa\n    if (clr && clr[0] + clr[1] + clr[2] > 0.8) {\n      clr = [0, 0, 0, 0.5]\n    } else {\n      clr = [1, 1, 1, 0.5]\n    }\n    this.drawRect(LTWH, clr) // background rect\n    this.drawText(xy, str, scale, color) // the text\n  }\n\n  // not included in public docs\n  drawTextBelow(xy: number[], str: string, scale = 1, color: number[] | null = null): void {\n    // horizontally centered on x, below y\n    if (this.opts.textHeight <= 0) {\n      return\n    }\n    if (!this.canvas) {\n      throw new Error('canvas undefined')\n    }\n    let size = this.opts.textHeight * this.gl.canvas.height * scale\n    let width = this.textWidth(size, str)\n    if (width > this.canvas.width) {\n      scale *= (this.canvas.width - 2) / width\n      size = this.opts.textHeight * this.gl.canvas.height * scale\n      width = this.textWidth(size, str)\n    }\n    xy[0] -= 0.5 * this.textWidth(size, str)\n    xy[0] = Math.max(xy[0], 1) // clamp left edge of canvas\n    xy[0] = Math.min(xy[0], this.canvas.width - width - 1) // clamp right edge of canvas\n    this.drawText(xy, str, scale, color)\n  }\n\n  // not included in public docs\n  updateInterpolation(layer: number, isForceLinear = false): void {\n    let interp: number = this.gl.LINEAR\n    if (!isForceLinear && this.opts.isNearestInterpolation) {\n      interp = this.gl.NEAREST\n    }\n    if (layer === 0) {\n      this.gl.activeTexture(TEXTURE0_BACK_VOL) // background\n    } else {\n      this.gl.activeTexture(TEXTURE2_OVERLAY_VOL) // overlay\n    }\n    // if (this.opts.is2DSliceShader) {\n    // n.b. we set interpolation for BOTH 2D and 3D textures\n    if (this.opts.is2DSliceShader) {\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, interp)\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, interp)\n    } else {\n      this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_MIN_FILTER, interp)\n      this.gl.texParameteri(this.gl.TEXTURE_3D, this.gl.TEXTURE_MAG_FILTER, interp)\n    }\n  }\n\n  // not included in public docs\n  setAtlasOutline(isOutline: number): void {\n    this.opts.atlasOutline = isOutline\n    this.updateGLVolume()\n    this.drawScene()\n  }\n\n  /**\n   * select between nearest and linear interpolation for voxel based images\n   * @param isNearest - whether nearest neighbor interpolation is used, else linear interpolation\n   * @example niivue.setInterpolation(true);\n   * @see {@link https://niivue.github.io/niivue/features/draw2.html | live demo usage}\n   */\n  setInterpolation(isNearest: boolean): void {\n    this.opts.isNearestInterpolation = isNearest\n    const numLayers = this.volumes.length\n    if (numLayers < 1) {\n      return\n    }\n    for (let i = 0; i < numLayers; i++) {\n      this.updateInterpolation(i)\n    }\n    this.drawScene()\n  }\n\n  // not included in public docs\n  calculateMvpMatrix2D(\n    leftTopWidthHeight: number[],\n    mn: vec3,\n    mx: vec3,\n    clipTolerance = Infinity,\n    clipDepth = 0,\n    azimuth = 0,\n    elevation = 0,\n    isRadiolgical: boolean\n  ): MvpMatrix2D {\n    const gl = this.gl\n    gl.viewport(\n      leftTopWidthHeight[0],\n      this.gl.canvas.height - (leftTopWidthHeight[1] + leftTopWidthHeight[3]), // lower numbers near bottom\n      leftTopWidthHeight[2],\n      leftTopWidthHeight[3]\n    )\n    let left = mn[0]\n    let right = mx[0]\n    let leftTopMM = [left, mn[1]]\n    let fovMM = [right - left, mx[1] - mn[1]]\n    if (isRadiolgical) {\n      leftTopMM = [mx[0], mn[1]]\n      fovMM = [mn[0] - mx[0], mx[1] - mn[1]]\n      left = -mx[0]\n      right = -mn[0]\n    }\n    const scale = 2 * Math.max(Math.abs(mn[2]), Math.abs(mx[2])) // 3rd dimension is near/far from camera\n    const projectionMatrix = mat4.create()\n    let near = 0.01\n    let far = scale * 8.0\n    if (clipTolerance !== Infinity) {\n      let r = isRadiolgical\n      if (elevation === 0 && (azimuth === 0 || azimuth === 180)) {\n        r = !r\n      }\n      let dx = scale * 1.8 - clipDepth\n      if (!r) {\n        dx = scale * 1.8 + clipDepth\n      }\n      near = dx - clipTolerance\n      far = dx + clipTolerance\n    }\n    mat4.ortho(projectionMatrix, left, right, mn[1], mx[1], near, far)\n    const modelMatrix = mat4.create()\n    modelMatrix[0] = -1 // mirror X coordinate\n    // push the model away from the camera so camera not inside model\n    const translateVec3 = vec3.fromValues(0, 0, -scale * 1.8) // to avoid clipping, >= SQRT(3)\n    mat4.translate(modelMatrix, modelMatrix, translateVec3)\n    // apply elevation\n    mat4.rotateX(modelMatrix, modelMatrix, deg2rad(270 - elevation))\n    // apply azimuth\n    mat4.rotateZ(modelMatrix, modelMatrix, deg2rad(azimuth - 180))\n    const iModelMatrix = mat4.create()\n    mat4.invert(iModelMatrix, modelMatrix)\n    const normalMatrix = mat4.create()\n    mat4.transpose(normalMatrix, iModelMatrix)\n    const modelViewProjectionMatrix = mat4.create()\n    mat4.multiply(modelViewProjectionMatrix, projectionMatrix, modelMatrix)\n\n    return {\n      modelViewProjectionMatrix,\n      modelMatrix,\n      normalMatrix,\n      leftTopMM,\n      fovMM\n    }\n  }\n\n  // not included in public docs\n  swizzleVec3MM(v3: vec3, axCorSag: SLICE_TYPE): vec3 {\n    // change order of vector components\n    if (axCorSag === SLICE_TYPE.CORONAL) {\n      // 2D coronal screenXYZ = nifti [i,k,j]\n      v3 = swizzleVec3(v3, [0, 2, 1])\n    } else if (axCorSag === SLICE_TYPE.SAGITTAL) {\n      // 2D sagittal screenXYZ = nifti [j,k,i]\n      v3 = swizzleVec3(v3, [1, 2, 0])\n    }\n    return v3\n  }\n\n  // not included in public docs\n  screenFieldOfViewVox(axCorSag = 0): vec3 {\n    const fov = vec3.clone(this.volumeObject3D!.fieldOfViewDeObliqueMM!)\n    return this.swizzleVec3MM(fov, axCorSag)\n  }\n\n  // not included in public docs\n  // determine height/width of image in millimeters\n  screenFieldOfViewMM(axCorSag = 0, forceSliceMM = false): vec3 {\n    // extent of volume/mesh (in millimeters) in screen space\n    if (this.volumes.length < 1) {\n      let mnMM = vec3.fromValues(this.extentsMin[0], this.extentsMin[1], this.extentsMin[2])\n      let mxMM = vec3.fromValues(this.extentsMax[0], this.extentsMax[1], this.extentsMax[2])\n      mnMM = this.swizzleVec3MM(mnMM, axCorSag)\n      mxMM = this.swizzleVec3MM(mxMM, axCorSag)\n      const fovMM = vec3.create()\n      vec3.subtract(fovMM, mxMM, mnMM)\n      return fovMM\n    }\n    if (!forceSliceMM && !this.opts.isSliceMM) {\n      // return voxel space\n      return this.screenFieldOfViewVox(axCorSag)\n    }\n    const extentsMin = this.volumeObject3D!.extentsMin\n    const extentsMax = this.volumeObject3D!.extentsMax\n    let mnMM = vec3.fromValues(extentsMin[0], extentsMin[1], extentsMin[2])\n    let mxMM = vec3.fromValues(extentsMax[0], extentsMax[1], extentsMax[2])\n\n    mnMM = this.swizzleVec3MM(mnMM, axCorSag)\n    mxMM = this.swizzleVec3MM(mxMM, axCorSag)\n    const fovMM = vec3.create()\n    vec3.subtract(fovMM, mxMM, mnMM)\n    return fovMM\n  }\n\n  // not included in public docs\n  screenFieldOfViewExtendedVox(axCorSag = 0): MM {\n    // extent of volume/mesh (in orthographic alignment for rectangular voxels) in screen space\n    // let fov = [frac2mmTexture[0], frac2mmTexture[5], frac2mmTexture[10]];\n    const extentsMinOrtho = this.volumes[0].extentsMinOrtho!\n    const extentsMaxOrtho = this.volumes[0].extentsMaxOrtho!\n    let mnMM = vec3.fromValues(extentsMinOrtho[0], extentsMinOrtho[1], extentsMinOrtho[2])\n    let mxMM = vec3.fromValues(extentsMaxOrtho[0], extentsMaxOrtho[1], extentsMaxOrtho[2])\n    const rotation = mat4.create() // identity matrix: 2D axial screenXYZ = nifti [i,j,k]\n    mnMM = this.swizzleVec3MM(mnMM, axCorSag)\n    mxMM = this.swizzleVec3MM(mxMM, axCorSag)\n    const fovMM = vec3.create()\n    vec3.subtract(fovMM, mxMM, mnMM)\n    return { mnMM, mxMM, rotation, fovMM }\n  }\n\n  // not included in public docs\n  screenFieldOfViewExtendedMM(axCorSag = 0): MM {\n    if (this.volumes.length < 1) {\n      let mnMM = vec3.fromValues(this.extentsMin[0], this.extentsMin[1], this.extentsMin[2])\n      let mxMM = vec3.fromValues(this.extentsMax[0], this.extentsMax[1], this.extentsMax[2])\n      const rotation = mat4.create() // identity matrix: 2D axial screenXYZ = nifti [i,j,k]\n      mnMM = this.swizzleVec3MM(mnMM, axCorSag)\n      mxMM = this.swizzleVec3MM(mxMM, axCorSag)\n      const fovMM = vec3.create()\n      vec3.subtract(fovMM, mxMM, mnMM)\n      return { mnMM, mxMM, rotation, fovMM }\n    }\n    if (!this.volumeObject3D) {\n      throw new Error('volumeObject3D undefined')\n    }\n    // extent of volume/mesh (in millimeters) in screen space\n    // TODO align types\n    const eMin = this.volumeObject3D.extentsMin\n    const eMax = this.volumeObject3D.extentsMax\n    let mnMM = vec3.fromValues(eMin[0], eMin[1], eMin[2])\n    let mxMM = vec3.fromValues(eMax[0], eMax[1], eMax[2])\n    const rotation = mat4.create() // identity matrix: 2D axial screenXYZ = nifti [i,j,k]\n    mnMM = this.swizzleVec3MM(mnMM, axCorSag)\n    mxMM = this.swizzleVec3MM(mxMM, axCorSag)\n    const fovMM = vec3.create()\n    vec3.subtract(fovMM, mxMM, mnMM)\n    return { mnMM, mxMM, rotation, fovMM }\n  }\n\n  // not included in public docs\n  // show text labels for L/R, A/P, I/S dimensions\n  drawSliceOrientationText(\n    leftTopWidthHeight: number[],\n    axCorSag: SLICE_TYPE,\n    padLeftTop: number[] = [NaN, NaN]\n  ): void {\n    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height)\n    let topText = 'S'\n    if (axCorSag === SLICE_TYPE.AXIAL) {\n      topText = 'A'\n    }\n    let leftText = this.opts.isRadiologicalConvention ? 'R' : 'L'\n    if (axCorSag === SLICE_TYPE.SAGITTAL) {\n      leftText = this.opts.sagittalNoseLeft ? 'A' : 'P'\n    }\n    if (this.opts.isCornerOrientationText) {\n      this.drawTextRightBelow([leftTopWidthHeight[0], leftTopWidthHeight[1]], leftText + topText)\n      return\n    }\n    let drawBelow = true\n    let drawRight = true\n    if (!isNaN(padLeftTop[0])) {\n      const ht = this.opts.textHeight * this.gl.canvas.height + 2\n      if (padLeftTop[1] > ht) {\n        this.drawTextBelow(\n          [leftTopWidthHeight[0] + leftTopWidthHeight[2] * 0.5, leftTopWidthHeight[1] + padLeftTop[1] - ht],\n          topText\n        )\n        drawBelow = false\n      }\n      const wid = this.textWidth(ht, leftText) + 2\n      if (padLeftTop[0] > wid) {\n        this.drawTextRight(\n          [leftTopWidthHeight[0] + padLeftTop[0] - wid, leftTopWidthHeight[1] + leftTopWidthHeight[3] * 0.5],\n          leftText\n        )\n        drawRight = false\n      }\n    }\n    if (drawBelow) {\n      this.drawTextBelow([leftTopWidthHeight[0] + leftTopWidthHeight[2] * 0.5, leftTopWidthHeight[1]], topText)\n    }\n    if (drawRight) {\n      this.drawTextRight([leftTopWidthHeight[0], leftTopWidthHeight[1] + leftTopWidthHeight[3] * 0.5], leftText)\n    }\n  }\n\n  // not included in public docs\n  xyMM2xyzMM(axCorSag: SLICE_TYPE, sliceFrac: number): number[] {\n    // given X and Y, find Z for a plane defined by 3 points (a,b,c)\n    // https://math.stackexchange.com/questions/851742/calculate-coordinate-of-any-point-on-triangle-in-3d-plane\n    let sliceDim = 2 // axial depth is NIfTI k dimension\n    if (axCorSag === SLICE_TYPE.CORONAL) {\n      sliceDim = 1\n    } // sagittal depth is NIfTI j dimension\n    if (axCorSag === SLICE_TYPE.SAGITTAL) {\n      sliceDim = 0\n    } // sagittal depth is NIfTI i dimension\n    let a: [number, number, number] | vec4 = [0, 0, 0]\n    let b: [number, number, number] | vec4 = [1, 1, 0]\n    let c: [number, number, number] | vec4 = [1, 0, 1]\n\n    a[sliceDim] = sliceFrac\n    b[sliceDim] = sliceFrac\n    c[sliceDim] = sliceFrac\n    a = this.frac2mm(a)\n    b = this.frac2mm(b)\n    c = this.frac2mm(c)\n    a = this.swizzleVec3MM(vec3.fromValues(a[0], a[1], a[2]), axCorSag)\n    b = this.swizzleVec3MM(vec3.fromValues(b[0], b[1], b[2]), axCorSag)\n    c = this.swizzleVec3MM(vec3.fromValues(c[0], c[1], c[2]), axCorSag)\n    const denom = (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1])\n    let yMult = (b[0] - a[0]) * (c[2] - a[2]) - (c[0] - a[0]) * (b[2] - a[2])\n    yMult /= denom\n    let xMult = (b[1] - a[1]) * (c[2] - a[2]) - (c[1] - a[1]) * (b[2] - a[2])\n    xMult /= denom\n    const AxyzMxy = [0, 0, 0, 0, 0]\n    AxyzMxy[0] = a[0]\n    AxyzMxy[1] = a[1]\n    AxyzMxy[2] = a[2]\n    AxyzMxy[3] = xMult\n    AxyzMxy[4] = yMult\n    return AxyzMxy\n  }\n\n  // not included in public docs\n  // draw 2D tile\n  draw2DMain(leftTopWidthHeight: number[], axCorSag: SLICE_TYPE, customMM = NaN): void {\n    let frac2mmTexture = new Float32Array([0, 0, 0])\n    if (this.volumes.length > 0) {\n      frac2mmTexture = new Float32Array(this.volumes[0].frac2mm!.slice())\n    }\n    let screen = this.screenFieldOfViewExtendedMM(axCorSag)\n    let mesh2ortho = mat4.create()\n    if (!this.opts.isSliceMM && this.volumes.length > 0) {\n      frac2mmTexture = new Float32Array(this.volumes[0].frac2mmOrtho!.slice())\n      mesh2ortho = mat4.clone(this.volumes[0].mm2ortho!)\n      screen = this.screenFieldOfViewExtendedVox(axCorSag)\n    }\n    let isRadiolgical = this.opts.isRadiologicalConvention && axCorSag < SLICE_TYPE.SAGITTAL\n    if (customMM === Infinity || customMM === -Infinity) {\n      isRadiolgical = customMM !== Infinity\n      if (axCorSag === SLICE_TYPE.CORONAL) {\n        isRadiolgical = !isRadiolgical\n      }\n    } else if (this.opts.sagittalNoseLeft && axCorSag === SLICE_TYPE.SAGITTAL) {\n      isRadiolgical = !isRadiolgical\n    }\n    let elevation = 0\n    let azimuth = 0\n    if (axCorSag === SLICE_TYPE.SAGITTAL) {\n      azimuth = isRadiolgical ? 90 : -90\n    } else if (axCorSag === SLICE_TYPE.CORONAL) {\n      azimuth = isRadiolgical ? 180 : 0\n    } else {\n      azimuth = isRadiolgical ? 180 : 0\n      elevation = isRadiolgical ? -90 : 90\n    }\n    const gl = this.gl\n    let isStretchToScreen = false\n    if (leftTopWidthHeight[2] === 0 || leftTopWidthHeight[3] === 0) {\n      // only one tile: stretch tile to fill whole screen.\n      isStretchToScreen = true\n      const pixPerMMw = gl.canvas.width / screen.fovMM[0]\n      const pixPerMMh = gl.canvas.height / screen.fovMM[1]\n      const pixPerMMmin = Math.min(pixPerMMw, pixPerMMh)\n      const zoomW = pixPerMMw / pixPerMMmin\n      const zoomH = pixPerMMh / pixPerMMmin\n      screen.fovMM[0] *= zoomW\n      screen.fovMM[1] *= zoomH\n      let center = (screen.mnMM[0] + screen.mxMM[0]) * 0.5\n      screen.mnMM[0] = center - screen.fovMM[0] * 0.5\n      screen.mxMM[0] = center + screen.fovMM[0] * 0.5\n      center = (screen.mnMM[1] + screen.mxMM[1]) * 0.5\n      screen.mnMM[1] = center - screen.fovMM[1] * 0.5\n      screen.mxMM[1] = center + screen.fovMM[1] * 0.5\n      // screen.mnMM[0] *= zoomW;\n      // screen.mxMM[0] *= zoomW;\n      // screen.mnMM[1] *= zoomH;\n      // screen.mxMM[1] *= zoomH;\n      leftTopWidthHeight = [0, 0, gl.canvas.width, gl.canvas.height]\n    }\n    if (isNaN(customMM)) {\n      const pan = this.scene.pan2Dxyzmm\n      const panXY = this.swizzleVec3MM(vec3.fromValues(pan[0], pan[1], pan[2]), axCorSag)\n      const zoom = this.scene.pan2Dxyzmm[3]\n      screen.mnMM[0] -= panXY[0]\n      screen.mxMM[0] -= panXY[0]\n      screen.mnMM[1] -= panXY[1]\n      screen.mxMM[1] -= panXY[1]\n      screen.mnMM[0] /= zoom\n      screen.mxMM[0] /= zoom\n      screen.mnMM[1] /= zoom\n      screen.mxMM[1] /= zoom\n    }\n\n    let sliceDim = 2 // axial depth is NIfTI k dimension\n    if (axCorSag === SLICE_TYPE.CORONAL) {\n      sliceDim = 1\n    } // sagittal depth is NIfTI j dimension\n    if (axCorSag === SLICE_TYPE.SAGITTAL) {\n      sliceDim = 0\n    } // sagittal depth is NIfTI i dimension\n    let sliceFrac = this.scene.crosshairPos[sliceDim]\n    let mm = this.frac2mm(this.scene.crosshairPos)\n    if (!isNaN(customMM) && customMM !== Infinity && customMM !== -Infinity) {\n      mm = this.frac2mm([0.5, 0.5, 0.5])\n      mm[sliceDim] = customMM\n      const frac = this.mm2frac(mm)\n      sliceFrac = frac[sliceDim]\n    }\n    const sliceMM = mm[sliceDim]\n    gl.clear(gl.DEPTH_BUFFER_BIT)\n    let obj = this.calculateMvpMatrix2D(\n      leftTopWidthHeight,\n      screen.mnMM,\n      screen.mxMM,\n      Infinity,\n      0,\n      azimuth,\n      elevation,\n      isRadiolgical\n    )\n    if (customMM === Infinity || customMM === -Infinity) {\n      // draw rendering\n      const ltwh = leftTopWidthHeight.slice()\n      this.draw3D(\n        leftTopWidthHeight,\n        obj.modelViewProjectionMatrix,\n        obj.modelMatrix,\n        obj.normalMatrix,\n        azimuth,\n        elevation\n      )\n      const tile = this.screenSlices[this.screenSlices.length - 1]\n      // tile.AxyzMxy = this.xyMM2xyzMM(axCorSag, 0.5);\n      tile.leftTopWidthHeight = ltwh\n      tile.axCorSag = axCorSag\n      tile.sliceFrac = Infinity // use infinity to denote this is a rendering, not slice: not one depth\n      tile.AxyzMxy = this.xyMM2xyzMM(axCorSag, sliceFrac)\n      tile.leftTopMM = obj.leftTopMM\n      tile.fovMM = obj.fovMM\n      return\n    }\n    gl.enable(gl.DEPTH_TEST)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n    // draw the slice\n    gl.disable(gl.BLEND)\n    gl.depthFunc(gl.GREATER)\n    gl.disable(gl.CULL_FACE) // show front and back faces\n    if (this.volumes.length > 0) {\n      let shader = this.sliceMMShader\n      if (this.opts.is2DSliceShader) {\n        shader = this.slice2DShader\n      }\n      if (this.opts.isV1SliceShader) {\n        shader = this.sliceV1Shader\n      }\n      if (!shader) {\n        throw new Error('slice Shader undefined')\n      }\n      shader.use(this.gl)\n      gl.uniform1f(shader.uniforms.overlayOutlineWidth, this.overlayOutlineWidth)\n      gl.uniform1f(shader.uniforms.overlayAlphaShader, this.overlayAlphaShader)\n      gl.uniform1i(shader.uniforms.isAlphaClipDark, this.isAlphaClipDark ? 1 : 0)\n      gl.uniform1i(shader.uniforms.backgroundMasksOverlays, this.backgroundMasksOverlays)\n      gl.uniform1f(shader.uniforms.drawOpacity, this.drawOpacity)\n      gl.enable(gl.BLEND)\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n      gl.uniform1f(shader.uniforms.opacity, this.volumes[0].opacity)\n      gl.uniform1i(shader.uniforms.axCorSag, axCorSag)\n      gl.uniform1f(shader.uniforms.slice, sliceFrac)\n      gl.uniformMatrix4fv(\n        shader.uniforms.frac2mm,\n        false,\n        frac2mmTexture // this.volumes[0].frac2mm\n      )\n      gl.uniformMatrix4fv(shader.uniforms.mvpMtx, false, obj.modelViewProjectionMatrix.slice())\n      gl.bindVertexArray(this.genericVAO) // set vertex attributes\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n      gl.bindVertexArray(this.unusedVAO) // set vertex attributes\n      // record screenSlices to detect mouse click positions\n      this.screenSlices.push({\n        leftTopWidthHeight,\n        axCorSag,\n        sliceFrac,\n        AxyzMxy: this.xyMM2xyzMM(axCorSag, sliceFrac),\n        leftTopMM: obj.leftTopMM,\n        screen2frac: [],\n        fovMM: obj.fovMM\n      })\n    }\n    if (isNaN(customMM)) {\n      // draw crosshairs\n      this.drawCrosshairs3D(true, 1.0, obj.modelViewProjectionMatrix, true, this.opts.isSliceMM)\n    }\n    // TODO handle \"infinity\" for meshThicknessOn2D\n    if ((this.opts.meshThicknessOn2D as number) > 0.0) {\n      if (this.opts.meshThicknessOn2D !== Infinity) {\n        obj = this.calculateMvpMatrix2D(\n          leftTopWidthHeight,\n          screen.mnMM,\n          screen.mxMM,\n          this.opts.meshThicknessOn2D as number,\n          sliceMM,\n          azimuth,\n          elevation,\n          isRadiolgical\n        )\n      }\n      // we may need to transform mesh vertices to the orthogonal voxel space\n      const mx = mat4.clone(obj.modelViewProjectionMatrix)\n      mat4.multiply(mx, mx, mesh2ortho)\n      this.drawMesh3D(\n        true,\n        1,\n        mx, // obj.modelViewProjectionMatrix,\n        obj.modelMatrix,\n        obj.normalMatrix\n      )\n    }\n    if (isNaN(customMM)) {\n      // no crossbars for mosaic view\n      this.drawCrosshairs3D(false, 0.15, obj.modelViewProjectionMatrix, true, this.opts.isSliceMM)\n    }\n    if (isStretchToScreen && this.opts.isOrientationTextVisible) {\n      // issue1065\n      this.drawSliceOrientationText(leftTopWidthHeight, axCorSag)\n    }\n    this.readyForSync = true\n  }\n\n  draw2D(\n    leftTopWidthHeight: number[],\n    axCorSag: SLICE_TYPE,\n    customMM = NaN,\n    imageWidthHeight: number[] = [NaN, NaN]\n  ): void {\n    const padLeftTop = [NaN, NaN]\n    if (imageWidthHeight[0] === Infinity) {\n      const volScale = this.sliceScale().volScale\n      let scale = this.scaleSlice(volScale[0], volScale[1], [0, 0], [leftTopWidthHeight[2], leftTopWidthHeight[3]])\n      if (axCorSag === SLICE_TYPE.CORONAL) {\n        scale = this.scaleSlice(volScale[0], volScale[2], [0, 0], [leftTopWidthHeight[2], leftTopWidthHeight[3]])\n      }\n      if (axCorSag === SLICE_TYPE.SAGITTAL) {\n        scale = this.scaleSlice(volScale[1], volScale[2], [0, 0], [leftTopWidthHeight[2], leftTopWidthHeight[3]])\n      }\n      imageWidthHeight[0] = scale[2]\n      imageWidthHeight[1] = scale[3]\n    }\n    if (isNaN(imageWidthHeight[0])) {\n      this.draw2DMain(leftTopWidthHeight, axCorSag, customMM)\n    } else {\n      // inset as padded in tile\n      const ltwh = leftTopWidthHeight.slice()\n      padLeftTop[0] = Math.floor(0.5 * (ltwh[2] - imageWidthHeight[0]))\n      padLeftTop[1] = Math.floor(0.5 * (ltwh[3] - imageWidthHeight[1]))\n      ltwh[0] += padLeftTop[0]\n      ltwh[1] += padLeftTop[1]\n      ltwh[2] = imageWidthHeight[0]\n      ltwh[3] = imageWidthHeight[1]\n      this.draw2DMain(ltwh, axCorSag, customMM)\n    }\n    if (customMM === Infinity || customMM === -Infinity || axCorSag === SLICE_TYPE.RENDER) {\n      return\n    }\n    if (leftTopWidthHeight[2] !== 0 && leftTopWidthHeight[3] !== 0 && this.opts.isOrientationTextVisible) {\n      // issue1065\n      this.drawSliceOrientationText(leftTopWidthHeight, axCorSag, padLeftTop)\n    }\n  }\n\n  // not included in public docs\n  // determine 3D model view projection matrix\n  calculateMvpMatrix(_unused: unknown, leftTopWidthHeight = [0, 0, 0, 0], azimuth: number, elevation: number): mat4[] {\n    if (leftTopWidthHeight[2] === 0 || leftTopWidthHeight[3] === 0) {\n      // use full canvas\n      leftTopWidthHeight = [0, 0, this.gl.canvas.width, this.gl.canvas.height]\n    }\n    const whratio = leftTopWidthHeight[2] / leftTopWidthHeight[3]\n    // let whratio = this.gl.canvas.clientWidth / this.gl.canvas.clientHeight;\n    // pivot from center of objects\n    // let scale = this.furthestVertexFromOrigin;\n    // let origin = [0,0,0];\n    let scale = this.furthestFromPivot\n    const origin = this.pivot3D\n    const projectionMatrix = mat4.create()\n    scale = (0.8 * scale) / this.scene.volScaleMultiplier // 2.0 WebGL viewport has range of 2.0 [-1,-1]...[1,1]\n    if (whratio < 1) {\n      // tall window: \"portrait\" mode, width constrains\n      mat4.ortho(projectionMatrix, -scale, scale, -scale / whratio, scale / whratio, scale * 0.01, scale * 8.0)\n    }\n    // Wide window: \"landscape\" mode, height constrains\n    else {\n      mat4.ortho(projectionMatrix, -scale * whratio, scale * whratio, -scale, scale, scale * 0.01, scale * 8.0)\n    }\n\n    const modelMatrix = mat4.create()\n    modelMatrix[0] = -1 // mirror X coordinate\n    // push the model away from the camera so camera not inside model\n    const translateVec3 = vec3.fromValues(0, 0, -scale * 1.8) // to avoid clipping, >= SQRT(3)\n    mat4.translate(modelMatrix, modelMatrix, translateVec3)\n    if (this.position) {\n      mat4.translate(modelMatrix, modelMatrix, this.position)\n    }\n    // apply elevation\n    mat4.rotateX(modelMatrix, modelMatrix, deg2rad(270 - elevation))\n    // apply azimuth\n    mat4.rotateZ(modelMatrix, modelMatrix, deg2rad(azimuth - 180))\n\n    mat4.translate(modelMatrix, modelMatrix, [-origin[0], -origin[1], -origin[2]])\n\n    //\n    const iModelMatrix = mat4.create()\n    mat4.invert(iModelMatrix, modelMatrix)\n    const normalMatrix = mat4.create()\n    mat4.transpose(normalMatrix, iModelMatrix)\n    const modelViewProjectionMatrix = mat4.create()\n    mat4.multiply(modelViewProjectionMatrix, projectionMatrix, modelMatrix)\n    return [modelViewProjectionMatrix, modelMatrix, normalMatrix]\n  }\n\n  // not included in public docs\n  calculateModelMatrix(azimuth: number, elevation: number): mat4 {\n    if (!this.back) {\n      throw new Error('back undefined')\n    }\n    const modelMatrix = mat4.create()\n    modelMatrix[0] = -1 // mirror X coordinate\n    // push the model away from the camera so camera not inside model\n    // apply elevation\n    mat4.rotateX(modelMatrix, modelMatrix, deg2rad(270 - elevation))\n    // apply azimuth\n    mat4.rotateZ(modelMatrix, modelMatrix, deg2rad(azimuth - 180))\n    if (this.back.obliqueRAS) {\n      const oblique = mat4.clone(this.back.obliqueRAS)\n      mat4.multiply(modelMatrix, modelMatrix, oblique)\n    }\n    return modelMatrix\n  }\n\n  // not included in public docs\n  // calculate the near-far direction from the camera's perspective\n  calculateRayDirection(azimuth: number, elevation: number): vec3 {\n    const modelMatrix = this.calculateModelMatrix(azimuth, elevation)\n    // from NIfTI spatial coordinates (X=right, Y=anterior, Z=superior) to WebGL (screen X=right,Y=up, Z=depth)\n    const projectionMatrix = mat4.fromValues(1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1)\n    const mvpMatrix = mat4.create()\n    mat4.multiply(mvpMatrix, projectionMatrix, modelMatrix)\n    const inv = mat4.create()\n    mat4.invert(inv, mvpMatrix)\n    const rayDir4 = vec4.fromValues(0, 0, -1, 1)\n    vec4.transformMat4(rayDir4, rayDir4, inv)\n    const rayDir = vec3.fromValues(rayDir4[0], rayDir4[1], rayDir4[2])\n    vec3.normalize(rayDir, rayDir)\n    // defuzz, avoid divide by zero\n    const tiny = 0.00005\n    if (Math.abs(rayDir[0]) < tiny) {\n      rayDir[0] = tiny\n    }\n    if (Math.abs(rayDir[1]) < tiny) {\n      rayDir[1] = tiny\n    }\n    if (Math.abs(rayDir[2]) < tiny) {\n      rayDir[2] = tiny\n    }\n    return rayDir\n  }\n\n  // not included in public docs\n  sceneExtentsMinMax(isSliceMM = true): vec3[] {\n    let mn = vec3.fromValues(0, 0, 0)\n    let mx = vec3.fromValues(0, 0, 0)\n    if (this.volumes.length > 0) {\n      if (!this.volumeObject3D) {\n        throw new Error('volumeObject3D undefined')\n      }\n      mn = vec3.fromValues(\n        this.volumeObject3D.extentsMin[0],\n        this.volumeObject3D.extentsMin[1],\n        this.volumeObject3D.extentsMin[2]\n      )\n      mx = vec3.fromValues(\n        this.volumeObject3D.extentsMax[0],\n        this.volumeObject3D.extentsMax[1],\n        this.volumeObject3D.extentsMax[2]\n      )\n      if (!isSliceMM) {\n        mn = vec3.fromValues(\n          this.volumes[0].extentsMinOrtho![0],\n          this.volumes[0].extentsMinOrtho![1],\n          this.volumes[0].extentsMinOrtho![2]\n        )\n        mx = vec3.fromValues(\n          this.volumes[0].extentsMaxOrtho![0],\n          this.volumes[0].extentsMaxOrtho![1],\n          this.volumes[0].extentsMaxOrtho![2]\n        )\n      }\n    }\n    if (this.meshes.length > 0) {\n      if (this.volumes.length < 1) {\n        const minExtents = this.meshes[0].extentsMin as number[]\n        const maxExtents = this.meshes[0].extentsMax as number[]\n        mn = vec3.fromValues(minExtents[0], minExtents[1], minExtents[2])\n        mx = vec3.fromValues(maxExtents[0], maxExtents[1], maxExtents[2])\n      }\n      for (let i = 0; i < this.meshes.length; i++) {\n        const minExtents = this.meshes[i].extentsMin as number[]\n        const maxExtents = this.meshes[i].extentsMax as number[]\n        const vmn = vec3.fromValues(minExtents[0], minExtents[1], minExtents[2])\n        vec3.min(mn, mn, vmn)\n        const vmx = vec3.fromValues(maxExtents[0], maxExtents[1], maxExtents[2])\n        vec3.max(mx, mx, vmx)\n      }\n    }\n    const range = vec3.create()\n    vec3.subtract(range, mx, mn)\n    return [mn, mx, range]\n  }\n\n  // not included in public docs\n  setPivot3D(): void {\n    // compute extents of all volumes and meshes in scene\n    // pivot around center of these.\n    const [mn, mx] = this.sceneExtentsMinMax()\n    const pivot = vec3.create()\n    // pivot is half way between min and max:\n    vec3.add(pivot, mn, mx)\n    vec3.scale(pivot, pivot, 0.5)\n    this.pivot3D = [pivot[0], pivot[1], pivot[2]]\n    // find scale of scene\n    vec3.subtract(pivot, mx, mn)\n    this.extentsMin = mn\n    this.extentsMax = mx\n    this.furthestFromPivot = vec3.length(pivot) * 0.5 // pivot is half way between the extreme vertices\n  }\n\n  // not included in public docs\n  getMaxVols(): number {\n    if (this.volumes.length < 1) {\n      return 0\n    }\n    let maxVols = 0\n    for (let i = 0; i < this.volumes.length; i++) {\n      maxVols = Math.max(maxVols, this.volumes[i].nFrame4D!)\n    }\n    return maxVols\n  }\n\n  // not included in public docs\n  detectPartialllyLoaded4D(): boolean {\n    if (this.volumes.length < 1) {\n      return false\n    }\n    for (let i = 0; i < this.volumes.length; i++) {\n      if (this.volumes[i].nFrame4D! < this.volumes[i].hdr!.dims[4]) {\n        return true\n      }\n    }\n    return false\n  }\n\n  // not included in public docs\n  // draw graph for 4D NVImage: time across horizontal, intensity is vertical\n  drawGraph(): void {\n    if (this.getMaxVols() < 2) {\n      return\n    }\n    const graph = this.graph\n    let axialTop = 0\n    if (this.graph.autoSizeMultiplanar && this.opts.sliceType === SLICE_TYPE.MULTIPLANAR) {\n      for (let i = 0; i < this.screenSlices.length; i++) {\n        const axCorSag = this.screenSlices[i].axCorSag\n        if (axCorSag === SLICE_TYPE.AXIAL) {\n          axialTop = this.screenSlices[i].leftTopWidthHeight[1]\n        }\n        if (axCorSag !== SLICE_TYPE.SAGITTAL) {\n          continue\n        }\n        const ltwh = this.screenSlices[i].leftTopWidthHeight.slice()\n        if (ltwh[1] === axialTop) {\n          graph.LTWH[0] = ltwh[0] + ltwh[2]\n          graph.LTWH[1] = ltwh[1]\n        } else {\n          graph.LTWH[0] = ltwh[0]\n          graph.LTWH[1] = ltwh[1] + ltwh[3]\n        }\n        graph.LTWH[2] = ltwh[2]\n        graph.LTWH[3] = ltwh[2]\n      }\n    }\n    if (graph.opacity <= 0.0 || graph.LTWH[2] <= 5 || graph.LTWH[3] <= 5) {\n      return\n    }\n    if (Math.floor(graph.LTWH[0] + graph.LTWH[2]) > this.gl.canvas.width) {\n      return // issue 930\n    }\n    // issue1073 add \"floor\" for rounding errors (211.792+392.207 > 604)\n    if (Math.floor(graph.LTWH[1] + graph.LTWH[3]) > this.gl.canvas.height) {\n      return // issue 930\n    }\n    graph.backColor = [0.15, 0.15, 0.15, graph.opacity]\n    graph.lineColor = [1, 1, 1, 1]\n    if (this.opts.backColor[0] + this.opts.backColor[1] + this.opts.backColor[2] > 1.5) {\n      graph.backColor = [0.95, 0.95, 0.95, graph.opacity]\n      graph.lineColor = [0, 0, 0, 1]\n    }\n    const gridLineAlpha = 0.2\n    const selectedLineAlpha = 0.3\n    graph.lineColor[3] = gridLineAlpha\n    graph.textColor = graph.lineColor.slice()\n    graph.textColor[3] = 1\n    graph.lineThickness = 3\n    graph.gridLineThickness = 1\n    graph.lineAlpha = 1\n    graph.lines = []\n    const vols = []\n    if (graph.vols.length < 1) {\n      if (this.volumes[0] != null) {\n        vols.push(0)\n      }\n    } else {\n      for (let i = 0; i < graph.vols.length; i++) {\n        const j = graph.vols[i]\n        if (this.volumes[j] == null) {\n          continue\n        }\n        const n = this.volumes[j].nFrame4D!\n        if (n < 2) {\n          continue\n        }\n        vols.push(j)\n      }\n    }\n    if (vols.length < 1) {\n      return\n    }\n    const maxVols = this.volumes[vols[0]].nFrame4D!\n    this.graph.selectedColumn = this.volumes[vols[0]].frame4D\n    if (maxVols < 2) {\n      log.debug('Unable to generate a graph: Selected volume is 3D not 4D')\n      return\n    }\n    for (let i = 0; i < vols.length; i++) {\n      graph.lines[i] = []\n      const vox = this.frac2vox(this.scene.crosshairPos)\n      const v = this.volumes[vols[i]]\n      let n = v.nFrame4D\n      n = Math.min(n!, maxVols)\n      for (let j = 0; j < n; j++) {\n        const val = v.getValue(vox[0], vox[1], vox[2], j)\n        graph.lines[i].push(val)\n      }\n    }\n    graph.lineRGB = [\n      [0.8, 0, 0],\n      [0, 0.7, 0],\n      [0, 0, 0.9],\n      [0.7, 0.7, 0],\n      [0.8, 0, 0.8],\n      [0, 0.7, 0.7],\n      [0.6, 0.6, 0.6],\n      [0, 0, 0]\n    ]\n    // find min, max, range for all lines\n    let mn = graph.lines[0][0]\n    let mx = graph.lines[0][0]\n    for (let j = 0; j < graph.lines.length; j++) {\n      for (let i = 0; i < graph.lines[j].length; i++) {\n        const v = graph.lines[j][i]\n        mn = Math.min(v, mn)\n        mx = Math.max(v, mx)\n      }\n    }\n    const volMn = this.volumes[vols[0]].cal_min\n    const volMx = this.volumes[vols[0]].cal_max\n    if (graph.isRangeCalMinMax && volMn < volMx && isFinite(volMn) && isFinite(volMx)) {\n      mn = volMn\n      mx = volMx\n    }\n    if (graph.normalizeValues && mx > mn) {\n      const range = mx - mn\n      for (let j = 0; j < graph.lines.length; j++) {\n        for (let i = 0; i < graph.lines[j].length; i++) {\n          const v = graph.lines[j][i]\n          graph.lines[j][i] = (v - mn) / range\n        }\n      }\n      mn = 0\n      mx = 1\n    }\n    if (mn >= mx) {\n      mx = mn + 1.0\n    }\n    this.drawRect(graph.LTWH, graph.backColor)\n    const [spacing, ticMin, ticMax] = tickSpacing(mn, mx)\n    const digits = Math.max(0, -1 * Math.floor(Math.log(spacing) / Math.log(10)))\n    mn = Math.min(ticMin, mn)\n    mx = Math.max(ticMax, mx)\n    // determine font size\n    function humanize(x: number): string {\n      // drop trailing zeros from numerical string\n      return x.toFixed(6).replace(/\\.?0*$/, '')\n    }\n    const minWH = Math.min(graph.LTWH[2], graph.LTWH[3])\n    const baseSize = 16\n    const baseWH = 480\n    const exponent = 0.5 // square root scaling\n    let fntSize = baseSize * Math.pow(minWH / baseWH, exponent)\n    if (fntSize < 12) {\n      fntSize = 0\n    }\n    const fntScale = fntSize / (this.opts.textHeight * this.gl.canvas.height)\n    let maxTextWid = 0\n    let lineH = ticMin\n    // determine widest label in vertical axis\n    if (fntSize > 0) {\n      while (lineH <= mx) {\n        const str = lineH.toFixed(digits)\n        const w = this.textWidth(fntSize, str)\n        maxTextWid = Math.max(w, maxTextWid)\n        lineH += spacing\n      }\n    }\n    const margin = 0.05\n    // frame is the entire region including labels, plot is the inner lines\n    const frameWid = Math.abs(graph.LTWH[2])\n    const frameHt = Math.abs(graph.LTWH[3])\n    // plot is region where lines are drawn\n    const plotLTWH = [\n      graph.LTWH[0] + margin * frameWid + maxTextWid,\n      graph.LTWH[1] + margin * frameHt,\n      graph.LTWH[2] - maxTextWid - 2 * margin * frameWid,\n      graph.LTWH[3] - fntSize - 2.5 * margin * frameHt\n    ]\n    this.graph.LTWH = graph.LTWH\n    this.graph.plotLTWH = plotLTWH\n    this.drawRect(plotLTWH, this.opts.backColor) // this.opts.backColor\n    // draw horizontal lines\n    const rangeH = mx - mn\n    const scaleH = plotLTWH[3] / rangeH\n    const scaleW = plotLTWH[2] / (graph.lines[0].length - 1)\n    const plotBottom = plotLTWH[1] + plotLTWH[3]\n    // draw thin horizontal lines\n    lineH = ticMin + 0.5 * spacing\n    const thinColor = graph.lineColor.slice()\n    thinColor[3] = 0.5 * graph.lineColor[3]\n    while (lineH <= mx) {\n      const y = plotBottom - (lineH - mn) * scaleH\n      this.drawLine([plotLTWH[0], y, plotLTWH[0] + plotLTWH[2], y], graph.gridLineThickness, thinColor)\n      lineH += spacing\n    }\n    lineH = ticMin\n    // draw thick horizontal lines\n    const halfThick = 0.5 * graph.gridLineThickness\n    while (lineH <= mx) {\n      const y = plotBottom - (lineH - mn) * scaleH\n      this.drawLine(\n        [plotLTWH[0] - halfThick, y, plotLTWH[0] + plotLTWH[2] + graph.gridLineThickness, y],\n        graph.gridLineThickness,\n        graph.lineColor\n      )\n      const str = lineH.toFixed(digits)\n      if (fntSize > 0) {\n        this.drawTextLeft([plotLTWH[0] - 6, y], str, fntScale, graph.textColor)\n      }\n      // this.drawTextRight([plotLTWH[0], y], str, fntScale)\n      lineH += spacing\n    }\n    // draw vertical lines\n    let stride = 1 // e.g. how frequent are vertical lines\n    while (graph.lines[0].length / stride > 20) {\n      stride *= 5\n    }\n    for (let i = 0; i < graph.lines[0].length; i += stride) {\n      const x = i * scaleW + plotLTWH[0]\n      let thick = graph.gridLineThickness\n      if (i % 2 === 1) {\n        thick *= 0.5\n        this.drawLine([x, plotLTWH[1], x, plotLTWH[1] + plotLTWH[3]], thick, thinColor)\n      } else {\n        const str = humanize(i)\n        if (fntSize > 0) {\n          this.drawTextBelow([x, 2 + plotLTWH[1] + plotLTWH[3]], str, fntScale, graph.textColor)\n        }\n        this.drawLine([x, plotLTWH[1], x, plotLTWH[1] + plotLTWH[3]], thick, graph.lineColor)\n      }\n    }\n    // graph the lines for intensity across time\n    for (let j = 0; j < graph.lines.length; j++) {\n      let lineRGBA = [1, 0, 0, graph.lineAlpha]\n      if (j < graph.lineRGB.length) {\n        lineRGBA = [graph.lineRGB[j][0], graph.lineRGB[j][1], graph.lineRGB[j][2], graph.lineAlpha]\n      }\n      for (let i = 1; i < graph.lines[j].length; i++) {\n        const x0 = (i - 1) * scaleW //\n        const x1 = i * scaleW\n        const y0 = (graph.lines[j][i - 1] - mn) * scaleH\n        const y1 = (graph.lines[j][i] - mn) * scaleH\n        // let LTWH = [plotLTWH[0]+x0, plotLTWH[1]+plotLTWH[3]-y0, plotLTWH[0]+x1, -(y1-y0)];\n        const LTWH = [\n          plotLTWH[0] + x0,\n          plotLTWH[1] + plotLTWH[3] - y0,\n          plotLTWH[0] + x1,\n          plotLTWH[1] + plotLTWH[3] - y1\n        ]\n        this.drawLine(LTWH, graph.lineThickness, lineRGBA)\n      }\n    }\n    // draw vertical line indicating selected volume\n    if (graph.selectedColumn! >= 0 && graph.selectedColumn! < graph.lines[0].length) {\n      const x = graph.selectedColumn! * scaleW + plotLTWH[0]\n      this.drawLine([x, plotLTWH[1], x, plotLTWH[1] + plotLTWH[3]], graph.lineThickness, [\n        graph.lineRGB[0][0],\n        graph.lineRGB[0][1],\n        graph.lineRGB[0][2],\n        selectedLineAlpha\n      ])\n    }\n    // add label 'Volume' below graph if there is space in the plot\n    if (fntSize > 0 && graph.LTWH[1] + graph.LTWH[3] > plotLTWH[1] + plotLTWH[3] + fntSize * 2.4) {\n      this.drawTextBelow(\n        [plotLTWH[0] + 0.5 * plotLTWH[2], plotLTWH[1] + plotLTWH[3] + fntSize * 1.2],\n        'Volume',\n        fntScale,\n        graph.textColor\n      )\n    }\n    if (this.detectPartialllyLoaded4D()) {\n      this.drawTextBelow(\n        [plotLTWH[0] + plotLTWH[2], plotLTWH[1] + plotLTWH[3] + fntSize * 0.5],\n        '...',\n        fntScale,\n        graph.textColor\n      )\n    }\n  }\n\n  // not included in public docs\n  depthPicker(leftTopWidthHeight: number[], mvpMatrix: mat4): void {\n    // use color of screen pixel to infer X,Y,Z coordinates\n    if (!this.uiData.mouseDepthPicker) {\n      return\n    }\n    // start PICKING: picking shader and reading values is slow\n    this.uiData.mouseDepthPicker = false\n    const gl = this.gl\n    const pixelX = (this.mousePos[0] * leftTopWidthHeight[2]) / leftTopWidthHeight[2]\n    const pixelY = gl.canvas.height - (this.mousePos[1] * leftTopWidthHeight[3]) / leftTopWidthHeight[3] - 1\n    const rgbaPixel = new Uint8Array(4)\n    gl.readPixels(\n      pixelX, // x\n      pixelY, // y\n      1, // width\n      1, // height\n      gl.RGBA, // format\n      gl.UNSIGNED_BYTE, // type\n      rgbaPixel\n    ) // typed array to hold result\n    this.selectedObjectId = rgbaPixel[3]\n    if (this.selectedObjectId === this.VOLUME_ID) {\n      this.scene.crosshairPos = new Float32Array(rgbaPixel.slice(0, 3)).map((x) => x / 255.0)\n      return\n    }\n    const depthZ = unpackFloatFromVec4i(rgbaPixel)\n    if (depthZ > 1.0) {\n      return\n    }\n    const fracX = (this.mousePos[0] - leftTopWidthHeight[0]) / leftTopWidthHeight[2]\n    const fracY = (gl.canvas.height - this.mousePos[1] - leftTopWidthHeight[1]) / leftTopWidthHeight[3]\n    // todo: check when top is not zero: leftTopWidthHeight[1]\n    const mm = unProject(fracX, fracY, depthZ, mvpMatrix)\n    // n.b. true as renderings are ALWAYS in MM world space. not fractional\n    const frac = this.mm2frac(mm, 0, true)\n    if (frac[0] < 0 || frac[0] > 1 || frac[1] < 0 || frac[1] > 1 || frac[2] < 0 || frac[2] > 1) {\n      return\n    }\n    this.scene.crosshairPos = this.mm2frac(mm, 0, true)\n  }\n\n  // not included in public docs\n  // display 3D volume rendering of NVImage\n  drawImage3D(mvpMatrix: mat4, azimuth: number, elevation: number): void {\n    if (this.volumes.length === 0) {\n      return\n    }\n    const gl = this.gl\n    const rayDir = this.calculateRayDirection(azimuth, elevation)\n    const object3D = this.volumeObject3D\n    if (object3D) {\n      gl.enable(gl.BLEND)\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n      gl.enable(gl.CULL_FACE)\n      gl.cullFace(gl.FRONT) // TH switch since we L/R flipped in calculateMvpMatrix\n      let shader = this.renderShader!\n      if (this.uiData.mouseDepthPicker) {\n        shader = this.pickingImageShader!\n      }\n      shader.use(this.gl)\n      // next lines optional: these textures should be bound by default\n      // these lines can cause warnings, e.g. if drawTexture not used or created\n      // gl.activeTexture(TEXTURE0_BACK_VOL)\n      // gl.bindTexture(gl.TEXTURE_3D, this.volumeTexture)\n      // gl.activeTexture(TEXTURE1_COLORMAPS)\n      // gl.bindTexture(gl.TEXTURE_2D, this.colormapTexture)\n      // gl.activeTexture(TEXTURE2_OVERLAY_VOL)\n      // gl.bindTexture(gl.TEXTURE_3D, this.overlayTexture)\n      // gl.activeTexture(TEXTURE7_DRAW)\n      // gl.bindTexture(gl.TEXTURE_3D, this.drawTexture)\n      gl.uniform1i(shader.uniforms.backgroundMasksOverlays, this.backgroundMasksOverlays)\n      if (this.gradientTextureAmount > 0.0) {\n        gl.activeTexture(TEXTURE6_GRADIENT)\n        gl.bindTexture(gl.TEXTURE_3D, this.gradientTexture)\n        const modelMatrix = this.calculateModelMatrix(azimuth, elevation)\n        const iModelMatrix = mat4.create()\n        mat4.invert(iModelMatrix, modelMatrix)\n        const normalMatrix = mat4.create()\n        mat4.transpose(normalMatrix, iModelMatrix)\n        gl.uniformMatrix4fv(shader.uniforms.normMtx, false, normalMatrix)\n      }\n      if (this.drawBitmap && this.drawBitmap.length > 8) {\n        gl.uniform2f(shader.uniforms.renderDrawAmbientOcclusionXY, this.renderDrawAmbientOcclusion, this.drawOpacity)\n      } else {\n        gl.uniform2f(shader.uniforms.renderDrawAmbientOcclusionXY, this.renderDrawAmbientOcclusion, 0.0)\n      }\n      gl.uniformMatrix4fv(shader.uniforms.mvpMtx, false, mvpMatrix)\n      gl.uniformMatrix4fv(shader.uniforms.matRAS, false, this.back!.matRAS!)\n      gl.uniform3fv(shader.uniforms.rayDir, rayDir)\n\n      if (this.gradientTextureAmount < 0.0) {\n        // use slice shader\n        gl.uniform4fv(shader.uniforms.clipPlane, [\n          this.scene.crosshairPos[0],\n          this.scene.crosshairPos[1],\n          this.scene.crosshairPos[2],\n          30\n        ])\n      } else {\n        gl.uniform4fv(shader.uniforms.clipPlane, this.scene.clipPlane)\n      }\n      gl.uniform1f(shader.uniforms.drawOpacity, 1.0)\n\n      gl.bindVertexArray(object3D.vao)\n      gl.drawElements(object3D.mode, object3D.indexCount, gl.UNSIGNED_SHORT, 0)\n      gl.bindVertexArray(this.unusedVAO)\n    }\n  }\n\n  // not included in public docs\n  // draw cube that shows L/R, A/P, I/S directions\n  drawOrientationCube(leftTopWidthHeight: number[], azimuth = 0, elevation = 0): void {\n    if (!this.opts.isOrientCube) {\n      return\n    }\n    const sz = 0.05 * Math.min(leftTopWidthHeight[2], leftTopWidthHeight[3])\n    if (sz < 5) {\n      return\n    }\n    const gl = this.gl\n    gl.enable(gl.CULL_FACE)\n    gl.cullFace(gl.BACK)\n    this.orientCubeShader!.use(this.gl)\n    gl.bindVertexArray(this.orientCubeShaderVAO)\n    const modelMatrix = mat4.create()\n    const projectionMatrix = mat4.create()\n    // ortho(out, left, right, bottom, top, near, far)\n    mat4.ortho(projectionMatrix, 0, gl.canvas.width, 0, gl.canvas.height, -10 * sz, 10 * sz)\n    let translateUpForColorbar = 0\n    if (leftTopWidthHeight[1] === 0) {\n      translateUpForColorbar = gl.canvas.height - this.effectiveCanvasHeight()\n    }\n    mat4.translate(modelMatrix, modelMatrix, [\n      1.8 * sz + leftTopWidthHeight[0],\n      translateUpForColorbar + 1.8 * sz + leftTopWidthHeight[1],\n      0\n    ])\n    mat4.scale(modelMatrix, modelMatrix, [sz, sz, sz])\n    // apply elevation\n    mat4.rotateX(modelMatrix, modelMatrix, deg2rad(270 - elevation))\n    // apply azimuth\n    mat4.rotateZ(modelMatrix, modelMatrix, deg2rad(-azimuth))\n    const modelViewProjectionMatrix = mat4.create()\n    mat4.multiply(modelViewProjectionMatrix, projectionMatrix, modelMatrix)\n    gl.uniformMatrix4fv(this.orientCubeShader!.uniforms.u_matrix, false, modelViewProjectionMatrix)\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 168)\n    gl.bindVertexArray(this.unusedVAO)\n    this.gl.disable(this.gl.CULL_FACE)\n  }\n\n  // not included in public docs\n  // fills data returned with the onLocationChanvge() callback\n  createOnLocationChange(axCorSag = NaN): void {\n    // first: provide a string representation\n    const [_mn, _mx, range] = this.sceneExtentsMinMax(true)\n    const fov = Math.max(Math.max(range[0], range[1]), range[2])\n    function dynamicDecimals(flt: number): number {\n      return Math.max(0.0, -Math.ceil(Math.log10(Math.abs(flt))))\n    }\n    // dynamic decimal places: fov>100->0, fov>10->1, fov>1->2\n    let deci = dynamicDecimals(fov * 0.001)\n    const mm = this.frac2mm(this.scene.crosshairPos, 0, true)\n    function flt2str(flt: number, decimals = 0): number {\n      return parseFloat(flt.toFixed(decimals))\n    }\n    let str = flt2str(mm[0], deci) + '×' + flt2str(mm[1], deci) + '×' + flt2str(mm[2], deci)\n    if (this.volumes.length > 0 && this.volumes[0].nFrame4D! > 0) {\n      str += '×' + flt2str(this.volumes[0].frame4D)\n    }\n    // voxel based layer intensity\n    if (this.volumes.length > 0) {\n      let valStr = ' = '\n      for (let i = 0; i < this.volumes.length; i++) {\n        const vox = this.volumes[i].mm2vox(mm as number[])\n        let flt = this.volumes[i].getValue(vox[0], vox[1], vox[2], this.volumes[i].frame4D)\n        deci = 3\n        if (this.volumes[i].colormapLabel !== null) {\n          const v = Math.round(flt)\n          if (v >= 0 && v < this.volumes[i].colormapLabel!.labels!.length) {\n            valStr += this.volumes[i].colormapLabel!.labels![v]\n          } else {\n            valStr += 'undefined(' + flt2str(flt, deci) + ')'\n          }\n        } else {\n          valStr += flt2str(flt, deci)\n        }\n        if (this.volumes[i].imaginary) {\n          flt = this.volumes[i].getValue(vox[0], vox[1], vox[2], this.volumes[i].frame4D, true)\n          if (flt >= 0) {\n            valStr += '+'\n          }\n          valStr += flt2str(flt, deci)\n        }\n        valStr += '   '\n      }\n      str += valStr\n      // drawingBitmap\n      const dims = this.back!.dimsRAS!\n      const nv = dims[1] * dims[2] * dims[3]\n      if (this.drawBitmap && this.drawBitmap.length === nv) {\n        const vox = this.frac2vox(this.scene.crosshairPos)\n        const vx = vox[0] + vox[1] * dims[1] + vox[2] * dims[1] * dims[2]\n        // str += this.drawBitmap[vx].toString();\n        str += ' ' + this.drawLut.labels![this.drawBitmap[vx]]\n      }\n    }\n\n    // const msg = {\n    //   mm: this.frac2mm(this.scene.crosshairPos, 0, true),\n    //   axCorSag,\n    //   vox: this.frac2vox(this.scene.crosshairPos),\n    //   frac: this.scene.crosshairPos,\n    //   xy: [this.mousePos[0], this.mousePos[1]],\n    //   values: this.volumes.map((v) => {\n    //     const mm = this.frac2mm(this.scene.crosshairPos, 0, true)\n    //     const vox = v.mm2vox(mm as number[]) // e.mm2vox\n    //     const val = v.getValue(vox[0], vox[1], vox[2], v.frame4D)\n    //     return { name: v.name, value: val, id: v.id, mm, vox }\n    //   }),\n    //   string: str\n    // }\n\n    // make msg object of type NVLocation\n    const msg: NiiVueLocation = {\n      mm: this.frac2mm(this.scene.crosshairPos, 0, true),\n      axCorSag,\n      vox: this.frac2vox(this.scene.crosshairPos),\n      frac: this.scene.crosshairPos,\n      xy: [this.mousePos[0], this.mousePos[1]],\n      values: this.volumes.map((v) => {\n        const mm = this.frac2mm(this.scene.crosshairPos, 0, true)\n        const vox = v.mm2vox(mm as number[]) // e.mm2vox\n        const val = v.getValue(vox[0], vox[1], vox[2], v.frame4D)\n        return {\n          name: v.name,\n          value: val,\n          id: v.id,\n          mm,\n          vox\n        } as NiiVueLocationValue\n      }),\n      string: str\n    }\n\n    this.onLocationChange(msg)\n  }\n\n  /**\n   * Add a 3D Label\n   * @param text - the text content of the label\n   * @param style - visual styling options for the label (e.g., color, scale, line width)\n   * @param points - a 3D point `[x, y, z]` or array of points to anchor the label in space\n   * @param anchor - optional label anchor position (e.g., top-left, center, etc.)\n   * @param onClick - optional callback function to invoke when the label is clicked\n   * @returns the created `NVLabel3D` instance\n   * @see {@link https://niivue.github.io/niivue/features/labels.html | live demo usage}\n   */\n  addLabel(\n    text: string,\n    style: NVLabel3DStyle,\n    points?: number[] | number[][],\n    anchor?: LabelAnchorPoint,\n    onClick?: (label: NVLabel3D) => void\n  ): NVLabel3D {\n    const defaultStyle = {\n      textColor: this.opts.legendTextColor,\n      textScale: 1.0,\n      textAlignment: LabelTextAlignment.LEFT,\n      lineWidth: 0.0,\n      lineColor: this.opts.legendTextColor,\n      lineTerminator: LabelLineTerminator.NONE,\n      bulletScale: 0.0,\n      bulletColor: this.opts.legendTextColor\n    }\n    const labelStyle = style ? { ...defaultStyle, ...style } : { ...defaultStyle }\n    const label = new NVLabel3D(text, { ...labelStyle }, points, anchor, onClick)\n    this.document.labels.push(label)\n    return label\n  }\n\n  // not included in public docs\n  calculateScreenPoint(point: [number, number, number], mvpMatrix: mat4, leftTopWidthHeight: number[]): vec4 {\n    const screenPoint = vec4.create()\n    // Multiply the 3D point by the model-view-projection matrix\n    vec4.transformMat4(screenPoint, [...point, 1.0], mvpMatrix)\n    // Convert the 4D point to 2D screen coordinates\n    if (screenPoint[3] !== 0.0) {\n      screenPoint[0] = (screenPoint[0] / screenPoint[3] + 1.0) * 0.5 * leftTopWidthHeight[2]\n      screenPoint[1] = (1.0 - screenPoint[1] / screenPoint[3]) * 0.5 * leftTopWidthHeight[3]\n      screenPoint[2] /= screenPoint[3]\n\n      screenPoint[0] += leftTopWidthHeight[0]\n      screenPoint[1] += leftTopWidthHeight[1]\n    }\n    return screenPoint\n  }\n\n  getLabelAtPoint(screenPoint: [number, number]): NVLabel3D | null {\n    const scale = 1.0\n    const size = this.opts.textHeight * Math.min(this.gl.canvas.height, this.gl.canvas.width) * scale\n    const verticalMargin = this.opts.textHeight * this.gl.canvas.height * scale\n\n    // get all non-connectome labels\n    for (const label of this.document.labels) {\n      if (label.anchor == null || label.anchor === LabelAnchorPoint.NONE) {\n        continue\n      }\n\n      const labelSize = this.opts.textHeight * this.gl.canvas.height * label.style.textScale\n      const textHeight = this.textHeight(labelSize, label.text)\n      const textWidth = this.textWidth(labelSize, label.text)\n\n      if (label.anchor & LabelAnchorFlag.LEFT) {\n        if (screenPoint[0] > textWidth) {\n          continue\n        }\n      }\n\n      if (label.anchor & LabelAnchorFlag.CENTER) {\n        if (screenPoint[0] < (this.gl.canvas.width - textWidth) / 2) {\n          continue\n        }\n\n        if (screenPoint[0] > (this.gl.canvas.width + textWidth) / 2) {\n          continue\n        }\n      }\n\n      if (label.anchor & LabelAnchorFlag.RIGHT) {\n        if (screenPoint[0] < this.gl.canvas.width - textWidth) {\n          continue\n        }\n      }\n\n      if (label.anchor & LabelAnchorFlag.TOP) {\n        if (screenPoint[1] < verticalMargin / 2) {\n          continue\n        }\n\n        if (screenPoint[1] > textHeight + verticalMargin / 2) {\n          continue\n        }\n      }\n\n      if (label.anchor & LabelAnchorFlag.MIDDLE) {\n        if (screenPoint[1] < (this.gl.canvas.height - textHeight - verticalMargin) / 2) {\n          continue\n        }\n\n        if (screenPoint[1] > (this.gl.canvas.height + textHeight - verticalMargin / 2) / 2) {\n          continue\n        }\n      }\n\n      if (label.anchor & LabelAnchorFlag.BOTTOM) {\n        if (screenPoint[1] < this.gl.canvas.height - textHeight - verticalMargin) {\n          continue\n        }\n\n        if (screenPoint[1] > this.gl.canvas.height - verticalMargin / 2) {\n          continue\n        }\n      }\n\n      // label passed all tests\n      return label\n    }\n    log.debug('screenPoint', screenPoint)\n    const panelHeight = this.getLegendPanelHeight()\n    const panelWidth = this.getLegendPanelWidth()\n    const left = this.gl.canvas.width - panelWidth\n    let top = (this.canvas!.height - panelHeight) / 2\n    log.debug('panelrect', left, top, left + panelWidth, top + panelHeight)\n    if (\n      screenPoint[0] < left ||\n      screenPoint[1] < top ||\n      screenPoint[0] > left + panelWidth ||\n      screenPoint[1] > top + panelHeight\n    ) {\n      return null\n    }\n\n    const labels = this.getConnectomeLabels()\n    for (const label of labels) {\n      const labelSize = this.opts.textHeight * this.gl.canvas.height * label.style.textScale\n      const textHeight = this.textHeight(labelSize, label.text)\n      if (screenPoint[1] >= top && screenPoint[1] <= top + textHeight + size / 2) {\n        return label\n      }\n      top += textHeight\n      top += size / 2\n    }\n    return null\n  }\n\n  drawLabelLine(label: NVLabel3D, pos: vec2, mvpMatrix: mat4, leftTopWidthHeight: number[], secondPass = false): void {\n    const points =\n      Array.isArray(label.points) && Array.isArray(label.points[0])\n        ? (label.points as Array<[number, number, number]>)\n        : ([label.points] as Array<[number, number, number]>)\n    for (const point of points) {\n      const screenPoint = this.calculateScreenPoint(point, mvpMatrix, leftTopWidthHeight)\n      if (!secondPass) {\n        // draw line\n        this.draw3DLine(\n          pos,\n          [screenPoint[0], screenPoint[1], screenPoint[2]],\n          label.style.lineWidth,\n          label.style.lineColor\n        )\n      } else {\n        this.drawDottedLine([...pos, screenPoint[0], screenPoint[1]], label.style.lineWidth, label.style.lineColor)\n      }\n    }\n  }\n\n  // not included in public docs\n  draw3DLabel(\n    label: NVLabel3D,\n    pos: vec2,\n    mvpMatrix?: mat4,\n    leftTopWidthHeight?: number[],\n    bulletMargin?: number,\n    legendWidth?: number,\n    secondPass?: boolean\n  ): void {\n    const text = label.text\n    const left = pos[0]\n    const top = pos[1]\n\n    // const scale = label.style.textScale;\n    const size = this.opts.textHeight * Math.min(this.gl.canvas.height, this.gl.canvas.width) * 1.0\n\n    const textHeight = this.textHeight(label.style.textScale, text) * size\n\n    if (label.style.lineWidth > 0.0 && Array.isArray(label.points)) {\n      this.drawLabelLine(label, [left, top + textHeight], mvpMatrix, leftTopWidthHeight, secondPass)\n    }\n\n    if (label.style.bulletScale) {\n      const bulletSize = label.style.bulletScale * textHeight\n      const diff = textHeight - bulletSize\n      const rectTop = top + diff / 2 + bulletSize / 2\n      const rectLeft = left + (bulletMargin - bulletSize) / 2\n\n      this.drawCircle([rectLeft, rectTop, bulletSize, bulletSize], label.style.bulletColor)\n    }\n\n    let textLeft = left\n\n    if (legendWidth) {\n      if (label.style.textAlignment !== LabelTextAlignment.LEFT) {\n        const textWidth = this.textWidth(label.style.textScale, label.text) * size\n        if (label.style.textAlignment === LabelTextAlignment.RIGHT) {\n          textLeft = left + legendWidth - size * 1.5 - textWidth\n        } else {\n          const remaining = legendWidth - (bulletMargin || size)\n          textLeft += (remaining - textWidth) / 2\n        }\n      } else {\n        // textLeft += size / 2;\n        textLeft += bulletMargin\n      }\n    }\n    const scale = label.style.textScale\n    this.drawText([textLeft, top], text, scale, label.style.textColor)\n  }\n\n  // not included in public docs\n  draw3DLabels(mvpMatrix: mat4, leftTopWidthHeight: number[], secondPass = false): void {\n    const labels = this.getConnectomeLabels()\n\n    if (!this.opts.showLegend || labels.length === 0) {\n      return\n    }\n\n    if (!this.canvas) {\n      throw new Error('canvas undefined')\n    }\n    const gl = this.gl\n    gl.disable(gl.CULL_FACE)\n    gl.viewport(0, 0, this.canvas.width, this.canvas.height)\n    const panelHeight = this.getLegendPanelHeight()\n    if (panelHeight > this.canvas.height) {\n      // legend too big for screen issue 1279\n      log.debug('Legend may overflow screen size')\n    }\n    const size = this.opts.textHeight * Math.min(this.gl.canvas.height, this.gl.canvas.width)\n    const bulletMargin = this.getBulletMarginWidth()\n\n    const panelWidth = this.getLegendPanelWidth()\n    const left = gl.canvas.width - panelWidth\n    let top = (this.canvas.height - panelHeight) / 2\n    this.drawRect([gl.canvas.width - panelWidth, top, panelWidth - size, panelHeight], this.opts.legendBackgroundColor)\n    const blend = gl.getParameter(gl.BLEND)\n    const depthFunc = gl.getParameter(gl.DEPTH_FUNC)\n\n    if (!secondPass) {\n      gl.disable(gl.BLEND)\n      gl.depthFunc(gl.GREATER)\n    }\n\n    for (const label of labels) {\n      this.draw3DLabel(label, [left, top], mvpMatrix, leftTopWidthHeight, bulletMargin, panelWidth, secondPass)\n\n      const labelSize = this.opts.textHeight * this.gl.canvas.height * label.style.textScale\n      const textHeight = this.textHeight(labelSize, label.text)\n\n      top += textHeight // Math.max(textHeight, bulletHeight);\n      top += size / 2\n    }\n\n    // connectome labels\n\n    if (!secondPass) {\n      gl.depthFunc(depthFunc)\n      if (blend) {\n        gl.enable(gl.BLEND)\n      }\n    }\n  }\n\n  drawAnchoredLabels(): void {\n    const size = this.opts.textHeight * Math.min(this.gl.canvas.height, this.gl.canvas.width) * 1.0\n    const anchoredLabels = this.document.labels.filter((l) => l.anchor != null && l.anchor !== LabelAnchorPoint.NONE)\n    for (const label of anchoredLabels) {\n      const text = label.text\n      const textHeight = this.textHeight(label.style.textScale, text) * size\n      const textWidth = this.textWidth(label.style.textScale, text) * size\n      let left: number\n      let top: number\n\n      const scale = 1.0 // we may want to make this adjustable in the future\n      const verticalMargin = this.opts.textHeight * this.gl.canvas.height * scale\n      const rectHeightDiff = verticalMargin\n      let rectWidthDiff = verticalMargin / 4\n      let rectHorizontalOffset = 0\n      let rectVerticalOffset = 0\n\n      if (label.anchor & LabelAnchorFlag.LEFT) {\n        left = 0\n      }\n\n      if (label.anchor & LabelAnchorFlag.RIGHT) {\n        left = this.canvas.width - textWidth\n        rectHorizontalOffset -= verticalMargin / 4\n      }\n\n      if (label.anchor & LabelAnchorFlag.CENTER) {\n        left = (this.canvas.width - textWidth) / 2\n        rectHorizontalOffset -= verticalMargin / 4\n        rectWidthDiff += verticalMargin / 4\n      }\n\n      if (label.anchor & LabelAnchorFlag.TOP) {\n        top = 0\n      }\n\n      if (label.anchor & LabelAnchorFlag.MIDDLE) {\n        top = (this.canvas.height - textHeight - verticalMargin) / 2\n        rectVerticalOffset -= verticalMargin / 4\n      }\n\n      if (label.anchor & LabelAnchorFlag.BOTTOM) {\n        top = this.canvas.height - textHeight - verticalMargin\n        rectVerticalOffset -= verticalMargin / 4\n      }\n      this.drawRect(\n        [left + rectHorizontalOffset, top + rectVerticalOffset, textWidth + rectWidthDiff, textHeight + rectHeightDiff],\n        label.style.backgroundColor\n      )\n      this.draw3DLabel(label, [left, top])\n    }\n  }\n\n  // not included in public docs\n  draw3D(\n    leftTopWidthHeight = [0, 0, 0, 0],\n    mvpMatrix: mat4 | null = null,\n    modelMatrix: mat4 | null = null,\n    normalMatrix: mat4 | null = null,\n    azimuth: number | null = null,\n    elevation = 0\n  ): string | undefined {\n    const isMosaic = azimuth !== null\n    this.setPivot3D()\n    if (!isMosaic) {\n      azimuth = this.scene.renderAzimuth\n      elevation = this.scene.renderElevation\n    }\n    const gl = this.gl\n    if (mvpMatrix === null) {\n      ;[mvpMatrix, modelMatrix, normalMatrix] = this.calculateMvpMatrix(null, leftTopWidthHeight, azimuth!, elevation)\n    }\n\n    let relativeLTWH = [...leftTopWidthHeight]\n    if (leftTopWidthHeight[2] === 0 || leftTopWidthHeight[3] === 0) {\n      // use full canvas\n      leftTopWidthHeight = [0, 0, gl.canvas.width, gl.canvas.height]\n      relativeLTWH = [...leftTopWidthHeight]\n      this.screenSlices.push({\n        leftTopWidthHeight,\n        axCorSag: SLICE_TYPE.RENDER,\n        sliceFrac: 0,\n        AxyzMxy: [],\n        leftTopMM: [],\n        fovMM: [isRadiological(modelMatrix!), 0]\n      })\n    } else {\n      this.screenSlices.push({\n        leftTopWidthHeight: leftTopWidthHeight.slice(),\n        axCorSag: SLICE_TYPE.RENDER,\n        sliceFrac: 0,\n        AxyzMxy: [],\n        leftTopMM: [],\n        fovMM: [isRadiological(modelMatrix!), 0]\n      })\n      leftTopWidthHeight[1] = gl.canvas.height - leftTopWidthHeight[3] - leftTopWidthHeight[1]\n    }\n    gl.enable(gl.DEPTH_TEST)\n    gl.depthFunc(gl.ALWAYS)\n    gl.depthMask(true)\n    gl.clearDepth(0.0)\n    this.draw3DLabels(mvpMatrix, relativeLTWH, false)\n\n    gl.viewport(leftTopWidthHeight[0], leftTopWidthHeight[1], leftTopWidthHeight[2], leftTopWidthHeight[3])\n\n    if (this.volumes.length > 0) {\n      this.updateInterpolation(0, true) // force background interpolation\n      this.updateInterpolation(1, true) // force overlay interpolation\n      this.drawImage3D(mvpMatrix, azimuth!, elevation)\n    }\n    this.updateInterpolation(0) // use default background interpolation for 2D slices\n    this.updateInterpolation(1) // use default overlay interpolation for 2D slices\n    if (!isMosaic) {\n      this.drawCrosshairs3D(true, 1.0, mvpMatrix)\n    }\n    this.drawMesh3D(true, 1.0, mvpMatrix, modelMatrix!, normalMatrix!)\n    if (this.uiData.mouseDepthPicker) {\n      this.depthPicker(leftTopWidthHeight, mvpMatrix)\n      this.createOnLocationChange()\n      // redraw with render shader\n      this.draw3D(leftTopWidthHeight, mvpMatrix, modelMatrix, normalMatrix, azimuth, elevation)\n      return\n    }\n    if (this.opts.meshXRay > 0.0) {\n      this.drawMesh3D(false, this.opts.meshXRay, mvpMatrix, modelMatrix!, normalMatrix!)\n    }\n\n    //\n    this.draw3DLabels(mvpMatrix, relativeLTWH, false)\n\n    gl.viewport(leftTopWidthHeight[0], leftTopWidthHeight[1], leftTopWidthHeight[2], leftTopWidthHeight[3])\n    //\n    if (!isMosaic) {\n      this.drawCrosshairs3D(false, 0.15, mvpMatrix)\n    }\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\n    this.drawOrientationCube(leftTopWidthHeight, azimuth!, elevation)\n    const posString =\n      'azimuth: ' + this.scene.renderAzimuth.toFixed(0) + ' elevation: ' + this.scene.renderElevation.toFixed(0)\n    // this.drawGraph();\n    // bus.$emit('crosshair-pos-change', posString);\n    this.readyForSync = true\n    this.sync()\n    this.draw3DLabels(mvpMatrix, relativeLTWH, true)\n\n    return posString\n  }\n\n  // not included in public docs\n  // create 3D rendering of NVMesh on canvas\n  drawMesh3D(isDepthTest = true, alpha = 1.0, m?: mat4, modelMtx?: mat4, normMtx?: mat4): void {\n    if (this.meshes.length < 1) {\n      return\n    }\n    const gl = this.gl\n    // let m, modelMtx, normMtx;\n    if (!m) {\n      // FIXME this was calculateMvpMatrix(object3d, azimuth, elevation) -- i.e. elevation got assigned to azimuth etc.\n      ;[m, modelMtx, normMtx] = this.calculateMvpMatrix(\n        this.volumeObject3D,\n        undefined,\n        this.scene.renderAzimuth,\n        this.scene.renderElevation\n      )\n    }\n    gl.enable(gl.DEPTH_TEST)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    gl.disable(gl.BLEND)\n    gl.depthFunc(gl.GREATER)\n    gl.disable(gl.CULL_FACE)\n    if (isDepthTest) {\n      gl.depthFunc(gl.GREATER)\n    } else {\n      gl.enable(gl.BLEND)\n      gl.depthFunc(gl.ALWAYS)\n      gl.enable(gl.CULL_FACE) // issue700\n    }\n    gl.cullFace(gl.BACK) // CR: issue700\n    // show front and back face for mesh clipping https://niivue.github.io/niivue/features/worldspace2.html\n    // if (this.opts.meshThicknessOn2D !== Infinity) gl.disable(gl.CULL_FACE);\n    // else gl.enable(gl.CULL_FACE); //issue700: only show front faces\n    // gl.frontFace(gl.CCW); //issue700: we now require CCW\n    // Draw the mesh\n    let shader: Shader = this.meshShaders[0].shader!\n    // this.meshShaderIndex\n    let hasFibers = false\n    for (let i = 0; i < this.meshes.length; i++) {\n      if (this.meshes[i].visible === false || this.meshes[i].opacity <= 0.0) {\n        continue\n      }\n      let meshAlpha = alpha\n      // gl.depthMask(false)\n      if (isDepthTest) {\n        meshAlpha = this.meshes[i].opacity\n        gl.depthFunc(gl.GREATER)\n        gl.depthMask(true)\n        if (meshAlpha < 1.0) {\n          // crude Z-fighting artifacts\n          gl.depthMask(false) // Prevent this object from writing to the depth buffer\n          gl.enable(gl.DEPTH_TEST)\n          // gl.disable(gl.DEPTH_TEST)\n          gl.enable(gl.BLEND)\n          gl.cullFace(gl.BACK)\n          gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n        } else {\n          gl.enable(gl.DEPTH_TEST)\n          gl.disable(gl.BLEND)\n        }\n      }\n      shader = this.meshShaders[this.meshes[i].meshShaderIndex].shader!\n      if (this.uiData.mouseDepthPicker) {\n        shader = this.pickingMeshShader!\n      }\n      shader.use(this.gl) // set Shader\n      // set shader uniforms\n      gl.uniformMatrix4fv(shader.uniforms.mvpMtx, false, m)\n      // gl.uniformMatrix4fv(shader.uniforms[\"modelMtx\"], false, modelMtx);\n      // gl.uniformMatrix4fv(shader.uniforms[\"normMtx\"], false, normMtx);\n      // gl.uniform1f(shader.uniforms[\"opacity\"], alpha);\n      gl.uniformMatrix4fv(shader.uniforms.normMtx, false, normMtx!)\n      gl.uniform1f(shader.uniforms.opacity, meshAlpha)\n      if (this.meshes[i].indexCount! < 3) {\n        continue\n      }\n\n      if (this.meshes[i].offsetPt0 && (this.meshes[i].fiberSides < 3 || this.meshes[i].fiberRadius <= 0)) {\n        // if fibers has less than 3 sides, render as line not cylinder mesh\n        hasFibers = true\n        continue\n      }\n      if (shader.isMatcap) {\n        gl.activeTexture(TEXTURE5_MATCAP)\n        gl.bindTexture(gl.TEXTURE_2D, this.matCapTexture)\n      }\n      gl.bindVertexArray(this.meshes[i].vao)\n      gl.drawElements(gl.TRIANGLES, this.meshes[i].indexCount!, gl.UNSIGNED_INT, 0)\n      gl.bindVertexArray(this.unusedVAO)\n    }\n    gl.depthMask(true)\n    // draw fibers\n    if (!hasFibers) {\n      gl.enable(gl.BLEND)\n      gl.depthFunc(gl.ALWAYS)\n      return\n    }\n    shader = this.fiberShader!\n    shader.use(this.gl)\n    gl.uniformMatrix4fv(shader.uniforms.mvpMtx, false, m)\n    gl.uniform1f(shader.uniforms.opacity, alpha)\n    for (let i = 0; i < this.meshes.length; i++) {\n      if (this.meshes[i].indexCount! < 3) {\n        continue\n      }\n      if (!this.meshes[i].offsetPt0) {\n        continue\n      }\n      if (this.meshes[i].fiberSides >= 3 && this.meshes[i].fiberRadius > 0) {\n        continue // rendered as mesh cylinder, not line strip\n      }\n      gl.bindVertexArray(this.meshes[i].vaoFiber)\n      gl.drawElements(gl.LINE_STRIP, this.meshes[i].indexCount!, gl.UNSIGNED_INT, 0)\n      gl.bindVertexArray(this.unusedVAO)\n    }\n    gl.enable(gl.BLEND)\n    gl.depthFunc(gl.ALWAYS)\n    this.readyForSync = true\n  }\n\n  // not included in public docs\n  drawCrosshairs3D(\n    isDepthTest = true,\n    alpha = 1.0,\n    mvpMtx: mat4 | null = null,\n    is2DView = false,\n    isSliceMM = true\n  ): void {\n    if (!this.opts.show3Dcrosshair && !is2DView) {\n      return\n    }\n    if (this.opts.crosshairWidth <= 0.0 && is2DView) {\n      return\n    }\n    const gl = this.gl\n    const mm = this.frac2mm(this.scene.crosshairPos, 0, isSliceMM)\n    let radius = 1\n    const [mn, mx, range] = this.sceneExtentsMinMax(isSliceMM)\n    if (this.volumes.length > 0) {\n      if (!this.back) {\n        throw new Error('back undefined')\n      }\n      radius = 0.5 * Math.min(Math.min(this.back.pixDims![1], this.back.pixDims![2]), this.back.pixDims![3])\n    } else if (range[0] < 50 || range[0] > 1000) {\n      radius = range[0] * 0.02\n    } // 2% of first dimension\n    radius *= this.opts.crosshairWidth\n    if (this.opts?.crosshairWidthUnit === 'percent') {\n      radius = range[0] * this.opts.crosshairWidth * 0.5 * 0.01\n    }\n    if (this.opts?.crosshairWidthUnit === 'mm') {\n      radius = this.opts.crosshairWidth * 0.5\n    }\n    // generate our crosshairs for the base volume\n    if (\n      this.crosshairs3D === null ||\n      this.crosshairs3D.mm![0] !== mm[0] ||\n      this.crosshairs3D.mm![1] !== mm[1] ||\n      this.crosshairs3D.mm![2] !== mm[2]\n    ) {\n      if (this.crosshairs3D !== null) {\n        gl.deleteBuffer(this.crosshairs3D.indexBuffer) // TODO: handle in nvimage.js: create once, update with bufferSubData\n        gl.deleteBuffer(this.crosshairs3D.vertexBuffer) // TODO: handle in nvimage.js: create once, update with bufferSubData\n      }\n      this.crosshairs3D = NiivueObject3D.generateCrosshairs(this.gl, 1, mm, mn, mx, radius, 20, this.opts.crosshairGap)\n      this.crosshairs3D.mm = mm\n      // this.crosshairs3D.radius = radius\n    }\n\n    if (!this.surfaceShader) {\n      throw new Error('surfaceShader undefined')\n    }\n    const crosshairsShader = this.surfaceShader\n    crosshairsShader.use(this.gl)\n    if (mvpMtx == null) {\n      // FIXME see above - I added the undefined, parameters were misaligned\n      ;[mvpMtx] = this.calculateMvpMatrix(\n        this.crosshairs3D,\n        undefined,\n        this.scene.renderAzimuth,\n        this.scene.renderElevation\n      )\n    }\n    gl.uniformMatrix4fv(crosshairsShader.uniforms.mvpMtx, false, mvpMtx)\n    gl.disable(gl.CULL_FACE)\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.crosshairs3D.indexBuffer)\n    gl.enable(gl.DEPTH_TEST)\n    const color = [...this.opts.crosshairColor]\n    if (isDepthTest) {\n      gl.disable(gl.BLEND)\n      // gl.depthFunc(gl.LESS); //pass if LESS than incoming value\n      gl.depthFunc(gl.GREATER)\n    } else {\n      gl.enable(gl.BLEND)\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n      gl.depthFunc(gl.ALWAYS)\n    }\n    color[3] = alpha\n    gl.uniform4fv(crosshairsShader.uniforms.surfaceColor, color)\n    gl.bindVertexArray(this.crosshairs3D.vao)\n    gl.drawElements(\n      gl.TRIANGLES,\n      this.crosshairs3D.indexCount,\n      gl.UNSIGNED_INT, // gl.UNSIGNED_SHORT,\n      0\n    )\n    gl.bindVertexArray(this.unusedVAO) // https://stackoverflow.com/questions/43904396/are-we-not-allowed-to-bind-gl-array-buffer-and-vertex-attrib-array-to-0-in-webgl\n  }\n\n  // not included in public docs\n  mm2frac(mm: vec3 | vec4, volIdx = 0, isForceSliceMM = false): vec3 {\n    // given mm, return volume fraction\n    if (this.volumes.length < 1) {\n      const frac = vec3.fromValues(0.1, 0.5, 0.5)\n      const [mn, _mx, range] = this.sceneExtentsMinMax()\n      frac[0] = (mm[0] - mn[0]) / range[0]\n      frac[1] = (mm[1] - mn[1]) / range[1]\n      frac[2] = (mm[2] - mn[2]) / range[2]\n      // FIXME this makes no sense, frac is an array\n      // @ts-expect-error -- not sure what should happen here\n      if (!isFinite(frac)) {\n        if (!isFinite(frac[0])) {\n          frac[0] = 0.5\n        }\n        if (!isFinite(frac[1])) {\n          frac[1] = 0.5\n        }\n        if (!isFinite(frac[2])) {\n          frac[2] = 0.5\n        }\n        if (this.meshes.length < 1) {\n          log.error('mm2frac() not finite: objects not (yet) loaded.')\n        }\n      }\n      return frac\n    }\n    return this.volumes[volIdx].convertMM2Frac(mm, isForceSliceMM || this.opts.isSliceMM)\n  }\n\n  // not included in public docs\n  vox2frac(vox: vec3, volIdx = 0): vec3 {\n    return this.volumes[volIdx].convertVox2Frac(vox)\n  }\n\n  // not included in public docs\n  frac2vox(frac: vec3, volIdx = 0): vec3 {\n    // convert from normalized texture space XYZ= [0..1, 0..1 ,0..1] to 0-index voxel space [0..dim[1]-1, 0..dim[2]-1, 0..dim[3]-1]\n    // consider dimension with 3 voxels, the voxel centers are at 0.25, 0.5, 0.75 corresponding to 0,1,2\n    if (this.volumes.length <= volIdx) {\n      return [0, 0, 0]\n    }\n\n    return this.volumes[volIdx].convertFrac2Vox(frac)\n  }\n\n  /**\n   * move crosshair a fixed number of voxels (not mm)\n   * @param x - translate left (-) or right (+)\n   * @param y - translate posterior (-) or +anterior (+)\n   * @param z - translate inferior (-) or superior (+)\n   * @example niivue.moveCrosshairInVox(1, 0, 0)\n   * @see {@link https://niivue.github.io/niivue/features/draw2.html | live demo usage}\n   */\n  moveCrosshairInVox(x: number, y: number, z: number): void {\n    const vox = this.frac2vox(this.scene.crosshairPos)\n    const vox2 = vox[2]\n    vox[0] += x\n    vox[1] += y\n    vox[2] += z\n    vox[0] = clamp(vox[0], 0, this.volumes[0].dimsRAS![1] - 1)\n    vox[1] = clamp(vox[1], 0, this.volumes[0].dimsRAS![2] - 1)\n    vox[2] = clamp(vox[2], 0, this.volumes[0].dimsRAS![3] - 1)\n    this.scene.crosshairPos = this.vox2frac(vox)\n    this.createOnLocationChange()\n    if (this.opts.is2DSliceShader && vox2 !== vox[2]) {\n      this.updateGLVolume()\n      this.refreshDrawing(false)\n    }\n    this.drawScene()\n  }\n\n  // not included in public docs\n  frac2mm(frac: vec3, volIdx = 0, isForceSliceMM = false): vec4 {\n    const pos = vec4.fromValues(frac[0], frac[1], frac[2], 1)\n    if (this.volumes.length > 0) {\n      return this.volumes[volIdx].convertFrac2MM(frac, isForceSliceMM || this.opts.isSliceMM)\n    } else {\n      const [mn, mx] = this.sceneExtentsMinMax()\n      const lerp = (x: number, y: number, a: number): number => x * (1 - a) + y * a\n      pos[0] = lerp(mn[0], mx[0], frac[0])\n      pos[1] = lerp(mn[1], mx[1], frac[1])\n      pos[2] = lerp(mn[2], mx[2], frac[2])\n    }\n    return pos\n  }\n\n  // not included in public docs\n  screenXY2TextureFrac(x: number, y: number, i: number, restrict0to1 = true): vec3 {\n    const texFrac = vec3.fromValues(-1, -1, -1) // texture 0..1 so -1 is out of bounds\n    const axCorSag = this.screenSlices[i].axCorSag\n    if (axCorSag > SLICE_TYPE.SAGITTAL) {\n      return texFrac\n    }\n    const ltwh = this.screenSlices[i].leftTopWidthHeight.slice()\n    let isMirror = false\n    if (ltwh[2] < 0) {\n      isMirror = true\n      ltwh[0] += ltwh[2]\n      ltwh[2] = -ltwh[2]\n    }\n    let fracX = (x - ltwh[0]) / ltwh[2]\n    if (isMirror) {\n      fracX = 1.0 - fracX\n    }\n    const fracY = 1.0 - (y - ltwh[1]) / ltwh[3]\n    if (fracX < 0.0 || fracX > 1.0 || fracY < 0.0 || fracY > 1.0) {\n      return texFrac\n    }\n    if (this.screenSlices[i].AxyzMxy.length < 4) {\n      return texFrac\n    }\n    let xyzMM = vec3.fromValues(0, 0, 0)\n    xyzMM[0] = this.screenSlices[i].leftTopMM[0] + fracX * this.screenSlices[i].fovMM[0]\n    xyzMM[1] = this.screenSlices[i].leftTopMM[1] + fracY * this.screenSlices[i].fovMM[1]\n    // let xyz = vec3.fromValues(30, 30, 0);\n    const v = this.screenSlices[i].AxyzMxy\n    xyzMM[2] = v[2] + v[4] * (xyzMM[1] - v[1]) - v[3] * (xyzMM[0] - v[0])\n    if (axCorSag === SLICE_TYPE.CORONAL) {\n      xyzMM = swizzleVec3(xyzMM, [0, 2, 1])\n    } // screen RSA to NIfTI RAS\n    if (axCorSag === SLICE_TYPE.SAGITTAL) {\n      xyzMM = swizzleVec3(xyzMM, [2, 0, 1])\n    } // screen ASR to NIfTI RAS\n    const xyz = this.mm2frac(xyzMM)\n    if (restrict0to1) {\n      if (xyz[0] < 0 || xyz[0] > 1 || xyz[1] < 0 || xyz[1] > 1 || xyz[2] < 0 || xyz[2] > 1) {\n        return texFrac\n      }\n    }\n    return xyz\n  }\n\n  // not included in public docs\n  canvasPos2frac(canvasPos: number[]): vec3 {\n    for (let i = 0; i < this.screenSlices.length; i++) {\n      const texFrac = this.screenXY2TextureFrac(canvasPos[0], canvasPos[1], i)\n      if (texFrac[0] >= 0) {\n        return texFrac\n      }\n    }\n    return [-1, -1, -1] // texture 0..1 so -1 is out of bounds\n  }\n\n  // not included in public docs\n  // note: we also have a \"sliceScale\" method, which could be confusing\n  scaleSlice(\n    w: number,\n    h: number,\n    padPixelsWH: [number, number] = [0, 0],\n    canvasWH: [number, number] = [0, 0]\n  ): number[] {\n    // const canvasW = this.effectiveCanvasWidth() - padPixelsWH[0]\n    // const canvasH = this.effectiveCanvasHeight() - padPixelsWH[1]\n    const canvasW = canvasWH[0] === 0 ? this.effectiveCanvasWidth() - padPixelsWH[0] : canvasWH[0] - padPixelsWH[0]\n    const canvasH = canvasWH[1] === 0 ? this.effectiveCanvasHeight() - padPixelsWH[1] : canvasWH[1] - padPixelsWH[1]\n    let scalePix = canvasW / w\n    if (h * scalePix > canvasH) {\n      scalePix = canvasH / h\n    }\n    // canvas space is 0,0...w,h with origin at upper left\n    const wPix = w * scalePix\n    const hPix = h * scalePix\n    const leftTopWidthHeight = [(canvasW - wPix) * 0.5, (canvasH - hPix) * 0.5, wPix, hPix, scalePix]\n    return leftTopWidthHeight\n  }\n\n  // not included in public docs\n  // display 2D image to defer loading of (slow) 3D data\n  drawThumbnail(): void {\n    if (!this.bmpShader) {\n      throw new Error('bmpShader undefined')\n    }\n    this.bmpShader.use(this.gl)\n    this.gl.uniform2f(this.bmpShader.uniforms.canvasWidthHeight, this.gl.canvas.width, this.gl.canvas.height)\n    let h = this.gl.canvas.height\n    let w = this.gl.canvas.height * this.bmpTextureWH\n    if (w > this.gl.canvas.width) {\n      // constrained by width\n      h = this.gl.canvas.width / this.bmpTextureWH\n      w = this.gl.canvas.width\n    }\n    // Calculate offsets to center the image\n    const left = (this.gl.canvas.width - w) / 2\n    const top = (this.gl.canvas.height - h) / 2\n    this.gl.uniform4f(this.bmpShader.uniforms.leftTopWidthHeight, left, top, w, h)\n    this.gl.bindVertexArray(this.genericVAO)\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)\n    this.gl.bindVertexArray(this.unusedVAO) // switch off to avoid tampering with settings\n  }\n\n  // not included in public docs\n  // draw line (can be diagonal)\n  // unless Alpha is > 0, default color is opts.crosshairColor\n  drawLine(startXYendXY: number[], thickness = 1, lineColor = [1, 0, 0, -1]): void {\n    this.gl.bindVertexArray(this.genericVAO)\n    if (!this.lineShader) {\n      throw new Error('lineShader undefined')\n    }\n    this.lineShader.use(this.gl)\n    if (lineColor[3] < 0) {\n      lineColor = this.opts.crosshairColor\n    }\n    this.gl.uniform4fv(this.lineShader.uniforms.lineColor, lineColor)\n    this.gl.uniform2fv(this.lineShader.uniforms.canvasWidthHeight, [this.gl.canvas.width, this.gl.canvas.height])\n    // draw Line\n    this.gl.uniform1f(this.lineShader.uniforms.thickness, thickness)\n    this.gl.uniform4fv(this.lineShader.uniforms.startXYendXY, startXYendXY)\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)\n    this.gl.bindVertexArray(this.unusedVAO) // set vertex attributes\n  }\n\n  // not included in public docs\n  // draw line (can be diagonal)\n  // unless Alpha is > 0, default color is opts.crosshairColor\n  draw3DLine(startXY: vec2, endXYZ: vec3, thickness = 1, lineColor = [1, 0, 0, -1]): void {\n    this.gl.bindVertexArray(this.genericVAO)\n    if (!this.line3DShader) {\n      throw new Error('line3DShader undefined')\n    }\n    this.line3DShader.use(this.gl)\n    if (lineColor[3] < 0) {\n      lineColor = this.opts.crosshairColor\n    }\n    this.gl.uniform4fv(this.line3DShader.uniforms.lineColor, lineColor)\n    this.gl.uniform2fv(this.line3DShader.uniforms.canvasWidthHeight, [this.gl.canvas.width, this.gl.canvas.height])\n    // draw Line\n    this.gl.uniform1f(this.line3DShader.uniforms.thickness, thickness)\n    this.gl.uniform2fv(this.line3DShader.uniforms.startXY, startXY)\n    this.gl.uniform3fv(this.line3DShader.uniforms.endXYZ, endXYZ)\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)\n    this.gl.bindVertexArray(this.unusedVAO) // set vertex attributes\n  }\n\n  drawDottedLine(startXYendXY: number[], thickness = 1, lineColor = [1, 0, 0, -1]): void {\n    this.gl.bindVertexArray(this.genericVAO)\n    if (!this.lineShader) {\n      throw new Error('lineShader undefined')\n    }\n    this.lineShader.use(this.gl)\n    const dottedLineColor = lineColor[3] < 0 ? [...this.opts.crosshairColor] : [...lineColor]\n\n    dottedLineColor[3] = 0.3\n\n    // get vector\n    const segment = vec2.fromValues(startXYendXY[2] - startXYendXY[0], startXYendXY[3] - startXYendXY[1])\n    const totalLength = vec2.length(segment)\n    vec2.normalize(segment, segment)\n    const scale = 1.0\n    const size = this.opts.textHeight * Math.min(this.gl.canvas.height, this.gl.canvas.width) * scale\n    vec2.scale(segment, segment, size / 2)\n    const segmentLength = vec2.length(segment)\n    let segmentCount = Math.floor(totalLength / segmentLength)\n\n    if (totalLength % segmentLength) {\n      segmentCount++\n    }\n\n    const currentSegmentXY = [startXYendXY[0], startXYendXY[1]]\n\n    this.gl.uniform4fv(this.lineShader.uniforms.lineColor, dottedLineColor)\n    this.gl.uniform2fv(this.lineShader.uniforms.canvasWidthHeight, [this.gl.canvas.width, this.gl.canvas.height])\n    this.gl.uniform1f(this.lineShader.uniforms.thickness, thickness)\n\n    // draw all segments except for the last one\n    for (let i = 0; i < segmentCount - 1; i++) {\n      if (i % 2) {\n        currentSegmentXY[0] += segment[0]\n        currentSegmentXY[1] += segment[1]\n        continue\n      }\n\n      const segmentStartXYendXY = [\n        currentSegmentXY[0],\n        currentSegmentXY[1],\n        currentSegmentXY[0] + segment[0],\n        currentSegmentXY[1] + segment[1]\n      ]\n\n      // draw Line\n\n      this.gl.uniform4fv(this.lineShader.uniforms.startXYendXY, segmentStartXYendXY)\n      this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4)\n      // this.gl.bindVertexArray(this.unusedVAO); //set vertex attributes\n      currentSegmentXY[0] += segment[0]\n      currentSegmentXY[1] += segment[1]\n    }\n\n    // this.gl.uniform4fv(this.lineShader.uniforms.lineColor, lineColor);\n    // this.gl.uniform2fv(this.lineShader.uniforms.canvasWidthHeight, [\n    //   this.gl.canvas.width,\n    //   this.gl.canvas.height,\n    // ]);\n    // //draw Line\n    // this.gl.uniform1f(this.lineShader.uniforms.thickness, thickness);\n    // this.gl.uniform4fv(this.lineShader.uniforms.startXYendXY, startXYendXY);\n    // this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.gl.bindVertexArray(this.unusedVAO) // set vertex attributes\n  }\n\n  // not included in public docs\n  drawGraphLine(LTRB: number[], color = [1, 0, 0, 0.5], thickness = 2): void {\n    this.drawLine(LTRB, thickness, color)\n  }\n\n  // not included in public docs\n  drawCrossLinesMM(sliceIndex: number, axCorSag: SLICE_TYPE, axiMM: number[], corMM: number[], sagMM: number[]): void {\n    if (sliceIndex < 0 || this.screenSlices.length <= sliceIndex) {\n      return\n    }\n    const tile = this.screenSlices[sliceIndex]\n    let sliceFrac = tile.sliceFrac\n    const isRender = sliceFrac === Infinity\n    if (isRender) {\n      log.debug('Rendering approximate cross lines in world view mode')\n    }\n    if (sliceFrac === Infinity) {\n      sliceFrac = 0.5\n    }\n    let linesH = corMM.slice()\n    let linesV = sagMM.slice()\n    const thick = Math.max(1, this.opts.crosshairWidth)\n    if (axCorSag === SLICE_TYPE.CORONAL) {\n      linesH = axiMM.slice()\n    }\n    if (axCorSag === SLICE_TYPE.SAGITTAL) {\n      linesH = axiMM.slice()\n      linesV = corMM.slice()\n    }\n    function mm2screen(mm: vec2): vec2 {\n      const screenXY = vec2.fromValues(0, 0)\n      screenXY[0] =\n        tile.leftTopWidthHeight[0] + ((mm[0] - tile.leftTopMM[0]) / tile.fovMM[0]) * tile.leftTopWidthHeight[2]\n      screenXY[1] =\n        tile.leftTopWidthHeight[1] +\n        tile.leftTopWidthHeight[3] -\n        ((mm[1] - tile.leftTopMM[1]) / tile.fovMM[1]) * tile.leftTopWidthHeight[3]\n      return screenXY\n    }\n\n    if (linesH.length > 0 && axCorSag === 0) {\n      const fracZ = sliceFrac\n      const dimV = 1\n      for (let i = 0; i < linesH.length; i++) {\n        const mmV = this.frac2mm([0.5, 0.5, 0.5])\n        mmV[dimV] = linesH[i]\n        let fracY: vec3 | number = this.mm2frac(mmV)\n        fracY = fracY[dimV]\n        let left: vec4 | vec3 | vec2 = this.frac2mm([0.0, fracY, fracZ])\n        left = swizzleVec3(left as vec3, [0, 1, 2])\n        let right: vec4 | vec3 | vec2 = this.frac2mm([1.0, fracY, fracZ])\n        right = swizzleVec3(right as vec3, [0, 1, 2])\n        left = mm2screen(left as vec2)\n        right = mm2screen(right as vec2)\n        this.drawLine([left[0], left[1], right[0], right[1]], thick)\n      }\n    }\n    if (linesH.length > 0 && axCorSag === 1) {\n      const fracH = sliceFrac\n      const dimV = 2\n      for (let i = 0; i < linesH.length; i++) {\n        const mmV = this.frac2mm([0.5, 0.5, 0.5])\n        mmV[dimV] = linesH[i]\n        let fracV: vec3 | number = this.mm2frac(mmV)\n        fracV = fracV[dimV]\n        let left: vec4 | vec3 | vec2 = this.frac2mm([0.0, fracH, fracV])\n        left = swizzleVec3(left as vec3, [0, 2, 1])\n        let right: vec4 | vec3 | vec2 = this.frac2mm([1.0, fracH, fracV])\n        right = swizzleVec3(right as vec3, [0, 2, 1])\n        left = mm2screen(left as vec2)\n        right = mm2screen(right as vec2)\n        this.drawLine([left[0], left[1], right[0], right[1]], thick)\n      }\n    }\n    if (linesH.length > 0 && axCorSag === 2) {\n      const fracX = sliceFrac\n      const dimV = 2\n      for (let i = 0; i < linesH.length; i++) {\n        const mmV = this.frac2mm([0.5, 0.5, 0.5])\n        mmV[dimV] = linesH[i]\n        let fracZ: vec3 | number = this.mm2frac(mmV)\n        fracZ = fracZ[dimV]\n        let left: vec4 | vec3 | vec2 = this.frac2mm([fracX, 0, fracZ])\n        left = swizzleVec3(left as vec3, [1, 2, 0])\n        let right: vec4 | vec3 | vec2 = this.frac2mm([fracX, 1, fracZ])\n        right = swizzleVec3(right as vec3, [1, 2, 0])\n        left = mm2screen(left as vec2)\n        right = mm2screen(right as vec2)\n        this.drawLine([left[0], left[1], right[0], right[1]], thick)\n      }\n    }\n    if (linesV.length > 0 && axCorSag === 0) {\n      const fracZ = sliceFrac\n      const dimH = 0\n      for (let i = 0; i < linesV.length; i++) {\n        const mm = this.frac2mm([0.5, 0.5, 0.5])\n        mm[dimH] = linesV[i]\n        let frac: vec3 | number = this.mm2frac(mm)\n        frac = frac[dimH]\n        let left: vec4 | vec3 | vec2 = this.frac2mm([frac, 0, fracZ])\n        left = swizzleVec3(left as vec3, [0, 1, 2])\n        let right: vec4 | vec3 | vec2 = this.frac2mm([frac, 1, fracZ])\n        right = swizzleVec3(right as vec3, [0, 1, 2])\n        left = mm2screen(left as vec2)\n        right = mm2screen(right as vec2)\n        this.drawLine([left[0], left[1], right[0], right[1]], thick)\n      }\n    }\n    if (linesV.length > 0 && axCorSag === 1) {\n      const fracY = sliceFrac\n      const dimH = 0\n      for (let i = 0; i < linesV.length; i++) {\n        const mm = this.frac2mm([0.5, 0.5, 0.5])\n        mm[dimH] = linesV[i]\n        let frac: vec3 | number = this.mm2frac(mm)\n        frac = frac[dimH]\n        let left: vec4 | vec3 | vec2 = this.frac2mm([frac, fracY, 0])\n        left = swizzleVec3(left as vec3, [0, 2, 1])\n        let right: vec4 | vec3 | vec2 = this.frac2mm([frac, fracY, 1])\n        right = swizzleVec3(right as vec3, [0, 2, 1])\n        left = mm2screen(left as vec2)\n        right = mm2screen(right as vec2)\n        this.drawLine([left[0], left[1], right[0], right[1]], thick)\n      }\n    }\n    if (linesV.length > 0 && axCorSag === 2) {\n      const fracX = sliceFrac\n      const dimH = 1\n      for (let i = 0; i < linesV.length; i++) {\n        const mm = this.frac2mm([0.5, 0.5, 0.5])\n        mm[dimH] = linesV[i]\n        let frac: vec3 | number = this.mm2frac(mm)\n        frac = frac[dimH]\n        let left: vec4 | vec3 | vec2 = this.frac2mm([fracX, frac as number, 0])\n        left = swizzleVec3(left as vec3, [1, 2, 0])\n        let right: vec4 | vec3 | vec2 = this.frac2mm([fracX, frac as number, 1])\n        right = swizzleVec3(right as vec3, [1, 2, 0])\n        left = mm2screen(left as vec2)\n        right = mm2screen(right as vec2)\n        this.drawLine([left[0], left[1], right[0], right[1]], thick)\n      }\n    }\n  }\n\n  // not included in public docs\n  drawCrossLines(sliceIndex: number, axCorSag: SLICE_TYPE, axiMM: number[], corMM: number[], sagMM: number[]): void {\n    if (sliceIndex < 0 || this.screenSlices.length <= sliceIndex) {\n      return\n    }\n    if (this.opts.isSliceMM) {\n      return this.drawCrossLinesMM(sliceIndex, axCorSag, axiMM, corMM, sagMM)\n    }\n    if (this.screenSlices[sliceIndex].sliceFrac === Infinity) {\n      // render views always world space\n      return this.drawCrossLinesMM(sliceIndex, axCorSag, axiMM, corMM, sagMM)\n    }\n    const tile = this.screenSlices[sliceIndex]\n    let linesH = corMM.slice()\n    let linesV = sagMM.slice()\n\n    if (axCorSag === SLICE_TYPE.CORONAL) {\n      linesH = axiMM.slice()\n    }\n    if (axCorSag === SLICE_TYPE.SAGITTAL) {\n      linesH = axiMM.slice()\n      linesV = corMM.slice()\n    }\n    if (linesH.length > 0) {\n      // draw horizontal lines\n      const LTWH = tile.leftTopWidthHeight.slice()\n      let sliceDim = 2 // vertical axis is Zmm\n      if (axCorSag === SLICE_TYPE.AXIAL) {\n        sliceDim = 1\n      } // vertical axis is Ymm\n      const mm = this.frac2mm([0.5, 0.5, 0.5])\n      for (let i = 0; i < linesH.length; i++) {\n        mm[sliceDim] = linesH[i]\n        const frac = this.mm2frac(mm)\n        this.drawRect([LTWH[0], LTWH[1] + LTWH[3] - frac[sliceDim] * LTWH[3], LTWH[2], 1])\n      }\n    }\n    if (linesV.length > 0) {\n      // draw vertical lines\n      const LTWH = tile.leftTopWidthHeight.slice()\n      const isRadiolgical = tile.fovMM[0] < 0\n      let sliceDim = 0 // vertical lines on axial/coronal are L/R axis\n      if (axCorSag === SLICE_TYPE.SAGITTAL) {\n        sliceDim = 1\n      } // vertical lines on sagittal are A/P\n      const mm = this.frac2mm([0.5, 0.5, 0.5])\n      for (let i = 0; i < linesV.length; i++) {\n        mm[sliceDim] = linesV[i]\n        const frac = this.mm2frac(mm)\n        if (isRadiolgical) {\n          this.drawRect([LTWH[0] + (LTWH[2] - frac[sliceDim] * LTWH[2]), LTWH[1], 1, LTWH[3]])\n        } else {\n          this.drawRect([LTWH[0] + frac[sliceDim] * LTWH[2], LTWH[1], 1, LTWH[3]])\n        }\n      }\n    }\n  }\n\n  /**\n   * display a lightbox or montage view\n   * @param mosaicStr - specifies orientation (A,C,S) and location of slices.\n   * @example niivue.setSliceMosaicString(\"A -10 0 20\");\n   * @see {@link https://niivue.github.io/niivue/features/mosaics.html | live demo usage}\n   */\n  drawMosaic(mosaicStr: string): void {\n    this.screenSlices = []\n    // render always in world space\n    const fovRenderMM = this.screenFieldOfViewMM(SLICE_TYPE.AXIAL, true)\n    // 2d slices might be in world space or voxel space\n    const fovSliceMM = this.screenFieldOfViewMM(SLICE_TYPE.AXIAL)\n    // fovRender and fovSlice will only be different if scans are oblique and shown in voxel space\n    // let mosaicStr = 'A -52 -12 C 8 ; S 28 48 66'\n\n    mosaicStr = mosaicStr.replaceAll(';', ' ;').trim()\n    const axiMM = []\n    const corMM = []\n    const sagMM = []\n    const items = mosaicStr.split(/\\s+/)\n    let scale = 1.0 // e.g. if 1.0 1mm per pixel\n    const labelSize = this.opts.textHeight\n    // let isCrossLinesUsed = false;\n    let marginLeft = 0\n    let marginTop = 0\n    let tileGap = 0\n    if (!this.volumes[0]?.dims) {\n      tileGap = Math.ceil(this.opts.tileMargin * 0.3)\n    }\n    for (let pass = 0; pass < 2; pass++) {\n      // two pass: first calculate dimensions to determine scale, second draw items\n      let isRender = false\n      let isCrossLines = false\n      isRender = false\n      let rowHt = 0\n      let left = 0\n      let top = 0\n      let mxRowWid = 0\n      let isLabel = false\n      let axCorSag = SLICE_TYPE.AXIAL\n      let horizontalOverlap = 0\n      let prevW = 0\n      let w = 0\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        if (item.includes('X')) {\n          isCrossLines = true\n          continue\n        }\n        if (item.includes('L')) {\n          isLabel = !item.includes('-')\n          continue\n        }\n        if (item.includes('H')) {\n          i++ // detect horizontal overlap\n          horizontalOverlap = Math.max(0, Math.min(1, parseFloat(items[i])))\n          horizontalOverlap = Math.abs(horizontalOverlap)\n          continue\n        }\n        if (item.includes('V')) {\n          i++ // skip numeric value for vertical overlap\n          continue\n        }\n        if (item.includes('A')) {\n          axCorSag = SLICE_TYPE.AXIAL\n          continue\n        }\n        if (item.includes('C')) {\n          axCorSag = SLICE_TYPE.CORONAL\n          continue\n        }\n        if (item.includes('S')) {\n          axCorSag = SLICE_TYPE.SAGITTAL\n          continue\n        }\n        if (item.includes('R')) {\n          isRender = true\n          continue\n        }\n        if (item.includes(';')) {\n          // EOLN\n          top += rowHt\n          mxRowWid = Math.max(mxRowWid, left + prevW)\n          rowHt = 0\n          left = 0\n        }\n        w = prevW\n        if (horizontalOverlap > 0 && !isRender) {\n          w = Math.round(w * (1.0 - horizontalOverlap))\n        }\n        log.debug(`slice ${i} width with overlap ${w} pixels`)\n        left += w\n        w = 0\n        const sliceMM = parseFloat(item)\n        if (isNaN(sliceMM)) {\n          continue\n        }\n\n        let h = 0\n        let fov = fovSliceMM\n        if (isRender) {\n          fov = fovRenderMM\n        }\n        // draw the slice\n        if (axCorSag === SLICE_TYPE.SAGITTAL) {\n          w = fov[1]\n        } else {\n          w = fov[0]\n        }\n        if (axCorSag === SLICE_TYPE.AXIAL) {\n          h = fov[1]\n        } else {\n          h = fov[2]\n        }\n        if (pass === 0) {\n          // 1st pass: record slice locations in world space\n          if (!isRender) {\n            if (axCorSag === SLICE_TYPE.AXIAL) {\n              axiMM.push(sliceMM)\n            }\n            if (axCorSag === SLICE_TYPE.CORONAL) {\n              corMM.push(sliceMM)\n            }\n            if (axCorSag === SLICE_TYPE.SAGITTAL) {\n              sagMM.push(sliceMM)\n            }\n          }\n        } else {\n          // 2nd pass draw\n          const ltwh = [marginLeft + scale * left, marginTop + scale * top, scale * w, scale * h]\n          this.opts.textHeight = isLabel ? labelSize : 0\n\n          if (isRender) {\n            let inf = sliceMM < 0 ? -Infinity : Infinity\n            if (Object.is(sliceMM, -0)) {\n              inf = -Infinity\n            } // catch negative zero\n            this.draw2D(ltwh, axCorSag, inf)\n          } else {\n            this.draw2D(ltwh, axCorSag, sliceMM)\n          }\n          if (isCrossLines) {\n            this.drawCrossLines(this.screenSlices.length - 1, axCorSag, axiMM, corMM, sagMM)\n            // isCrossLinesUsed = true;\n          }\n          isRender = false\n          isCrossLines = false\n        }\n        prevW = w\n        left += tileGap\n        rowHt = Math.max(rowHt, h)\n      }\n      top += rowHt\n      mxRowWid = Math.max(mxRowWid, left + prevW)\n      if (mxRowWid <= 0 || top <= 0) {\n        break\n      }\n      const scaleW = (this.gl.canvas.width - 2 * this.opts.tileMargin - tileGap) / mxRowWid\n      const scaleH = (this.effectiveCanvasHeight() - 2 * this.opts.tileMargin) / top\n      scale = Math.min(scaleW, scaleH)\n      if (this.opts.centerMosaic) {\n        marginLeft = Math.floor(0.5 * (this.gl.canvas.width - mxRowWid * scale))\n        marginTop = Math.floor(0.5 * (this.effectiveCanvasHeight() - top * scale))\n      } else {\n        marginLeft = this.opts.tileMargin\n        marginTop = this.opts.tileMargin\n      }\n    }\n    this.opts.textHeight = labelSize\n  }\n\n  calculateWidthHeight(\n    sliceType: number,\n    volScale: number[],\n    containerWidth: number,\n    containerHeight: number\n  ): [number, number] {\n    let xScale, yScale\n\n    switch (sliceType) {\n      case SLICE_TYPE.AXIAL:\n        xScale = volScale[0]\n        yScale = volScale[1]\n        break\n      case SLICE_TYPE.CORONAL:\n        xScale = volScale[0]\n        yScale = volScale[2]\n        break\n      case SLICE_TYPE.SAGITTAL:\n        xScale = volScale[1]\n        yScale = volScale[2]\n        break\n      default:\n        return [containerWidth, containerHeight]\n    }\n\n    // Calculate scale factor to fit within container while preserving aspect ratio\n    const aspectRatio = xScale / yScale\n    const containerAspect = containerWidth / containerHeight\n\n    let actualWidth, actualHeight\n\n    if (aspectRatio > containerAspect) {\n      // width-constrained\n      actualWidth = containerWidth\n      actualHeight = containerWidth / aspectRatio\n    } else {\n      // height-constrained\n      actualHeight = containerHeight\n      actualWidth = containerHeight * aspectRatio\n    }\n\n    return [actualWidth, actualHeight]\n  }\n\n  // not included in public docs\n  drawSceneCore(): string | void {\n    if (!this.initialized) {\n      return // do not do anything until we are initialized (init will call drawScene).\n    }\n    this.colorbarHeight = 0\n    this.gl.clearColor(this.opts.backColor[0], this.opts.backColor[1], this.opts.backColor[2], this.opts.backColor[3])\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT)\n    // this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    if (this.bmpTexture && this.thumbnailVisible) {\n      // draw the thumbnail image and exit\n      this.drawThumbnail()\n      return\n    }\n    let posString = ''\n    if (this.volumes.length === 0 || typeof this.volumes[0].dims === 'undefined') {\n      if (this.meshes.length > 0) {\n        if (this.sliceMosaicString.length > 0) {\n          if (this.opts.isColorbar) {\n            this.reserveColorbarPanel()\n          }\n          this.drawMosaic(this.sliceMosaicString)\n          if (this.opts.isColorbar) {\n            this.drawColorbar()\n          }\n          return\n        }\n        this.screenSlices = [] // empty array\n        // this.opts.sliceType = SLICE_TYPE.RENDER // only meshes loaded: we must use 3D render mode\n        this.draw3D() // meshes loaded but no volume\n        if (this.opts.isColorbar) {\n          this.drawColorbar()\n        }\n        return\n      }\n      this.drawLoadingText(this.opts.loadingText)\n      return\n    }\n    if (\n      this.uiData.isDragging &&\n      this.scene.clipPlaneDepthAziElev[0] < 1.8 &&\n      this.inRenderTile(this.uiData.dragStart[0], this.uiData.dragStart[1]) >= 0\n    ) {\n      // user dragging over a 3D rendering\n      const x = this.uiData.dragStart[0] - this.uiData.dragEnd[0]\n      const y = this.uiData.dragStart[1] - this.uiData.dragEnd[1]\n      const depthAziElev = this.uiData.dragClipPlaneStartDepthAziElev.slice()\n      depthAziElev[1] -= x\n      depthAziElev[1] = depthAziElev[1] % 360\n      depthAziElev[2] += y\n      if (\n        depthAziElev[1] !== this.scene.clipPlaneDepthAziElev[1] ||\n        depthAziElev[2] !== this.scene.clipPlaneDepthAziElev[2]\n      ) {\n        this.scene.clipPlaneDepthAziElev = depthAziElev\n        return this.setClipPlane(this.scene.clipPlaneDepthAziElev)\n      }\n    }\n    if (this.sliceMosaicString.length < 1 && this.opts.sliceType === SLICE_TYPE.RENDER) {\n      if (this.opts.isColorbar) {\n        this.reserveColorbarPanel()\n      }\n      this.screenSlices = [] // empty array\n      this.draw3D()\n      if (this.opts.isColorbar) {\n        this.drawColorbar()\n      }\n      return\n    }\n    if (this.opts.isColorbar) {\n      this.reserveColorbarPanel()\n    }\n    const maxVols = this.getMaxVols()\n    const isDrawGraph =\n      this.opts.sliceType === SLICE_TYPE.MULTIPLANAR &&\n      maxVols > 1 &&\n      this.graph.autoSizeMultiplanar &&\n      this.graph.opacity > 0\n\n    if (this.sliceMosaicString.length > 0) {\n      this.drawMosaic(this.sliceMosaicString)\n    } else {\n      // issue56 is use mm else use voxel\n      const heroImageWH = [0, 0]\n      let isHeroImage = false\n      this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height)\n      this.screenSlices = [] // empty array\n      // Check if we have a custom layout to use\n      if (this.customLayout && this.customLayout.length > 0) {\n        this.screenSlices = [] // empty array\n        this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height)\n\n        // Get volume scale information, as done in multiplanar section\n        const { volScale } = this.sliceScale()\n        const canvasWH = [this.effectiveCanvasWidth(), this.effectiveCanvasHeight()]\n        // Process each view in the custom layout\n        for (const view of this.customLayout) {\n          const { sliceType, position, sliceMM } = view\n\n          // Convert relative positions (0-1) to absolute pixels if needed\n          const leftTopWidthHeight = position.slice() as [number, number, number, number]\n\n          // If positions are relative (between 0-1), convert to absolute pixels\n          if (position[0] >= 0 && position[0] <= 1 && position[2] <= 1) {\n            leftTopWidthHeight[0] = position[0] * canvasWH[0]\n            leftTopWidthHeight[2] = position[2] * canvasWH[0]\n          }\n\n          if (position[1] >= 0 && position[1] <= 1 && position[3] <= 1) {\n            leftTopWidthHeight[1] = position[1] * canvasWH[1]\n            leftTopWidthHeight[3] = position[3] * canvasWH[1]\n          }\n\n          // check if the slice will be clipped because it was requested to extend past the canvas bounds\n          if (leftTopWidthHeight[0] + leftTopWidthHeight[2] > canvasWH[0]) {\n            log.warn('adjusting slice width because it would have been clipped')\n            leftTopWidthHeight[2] = canvasWH[0] - leftTopWidthHeight[0]\n          }\n          if (leftTopWidthHeight[1] + leftTopWidthHeight[3] > canvasWH[1]) {\n            log.warn('adjusting slice height because it would have been clipped')\n            leftTopWidthHeight[3] = canvasWH[1] - leftTopWidthHeight[1]\n          }\n\n          // Draw the appropriate view type\n          if (sliceType === SLICE_TYPE.RENDER) {\n            this.draw3D(leftTopWidthHeight)\n          } else if (\n            sliceType === SLICE_TYPE.AXIAL ||\n            sliceType === SLICE_TYPE.CORONAL ||\n            sliceType === SLICE_TYPE.SAGITTAL\n          ) {\n            // Calculate actual dimensions for preserving aspect ratio\n            const actualDimensions = this.calculateWidthHeight(\n              sliceType,\n              volScale,\n              leftTopWidthHeight[2],\n              leftTopWidthHeight[3]\n            )\n\n            this.draw2D(leftTopWidthHeight, sliceType, sliceMM ?? NaN, actualDimensions)\n          }\n        }\n      }\n      // If no custom layout, check for other known layouts\n      else if (this.opts.sliceType === SLICE_TYPE.AXIAL) {\n        this.draw2D([0, 0, 0, 0], 0)\n      } else if (this.opts.sliceType === SLICE_TYPE.CORONAL) {\n        this.draw2D([0, 0, 0, 0], 1)\n      } else if (this.opts.sliceType === SLICE_TYPE.SAGITTAL) {\n        this.draw2D([0, 0, 0, 0], 2)\n      } else {\n        // sliceTypeMultiplanar\n        let isShowRender = false\n        // this.opts.multiplanarForceRender is deprecated but was boolean.\n        // We now need to check if it is true. If so, then the user may not know\n        // about the new multiplanarShowRender option, so we need to show the render.\n        if (this.opts.multiplanarForceRender) {\n          isShowRender = true\n          // warn the user that the option is deprecated\n          // log.warn(\n          //   'multiplanarForceRender is deprecated. Use multiplanarShowRender instead. Possible values are: \"always\", \"auto\", \"never\".'\n          // )\n          if (this.opts.multiplanarForceRender) {\n            this.opts.multiplanarShowRender = SHOW_RENDER.ALWAYS\n          } else {\n            this.opts.multiplanarShowRender = SHOW_RENDER.AUTO\n          }\n          // purge the deprecated option so it doesn't get used in saved scenes and documents\n          delete this.opts.multiplanarForceRender\n        } else {\n          //  check the now preferred multiplanarShowRender option.\n          // if the value is always, then show the render.\n          if (this.opts.multiplanarShowRender === SHOW_RENDER.ALWAYS) {\n            isShowRender = true\n            // warn the user that we are using the new option\n            // log.warn(\n            //   'multiplanarShowRender is set to always and multiplanarForceRender (deprecated) is false. We are assuming you prefer the non-deprecated option: multiplanarShowRender.'\n            // )\n          }\n        }\n        const isDrawPenDown = isFinite(this.drawPenLocation[0]) && this.opts.drawingEnabled\n\n        const { volScale } = this.sliceScale()\n        const actualScale = volScale.slice()\n        if (this.opts.multiplanarEqualSize) {\n          volScale[0] = 1\n          volScale[1] = 1\n          volScale[2] = 1\n        }\n        if (typeof this.opts.multiplanarPadPixels !== 'number') {\n          log.debug('multiplanarPadPixels must be numeric')\n        }\n        // pad is \"outer padding\" minimum distance between tiles\n        const pad = parseFloat(`${this.opts.multiplanarPadPixels}`)\n        // inner pad is padding inside a tile. Note that a display with 1 row of tiles has no outer pad, but does have inner pad\n        let innerPad = this.opts.tileMargin\n        if (innerPad < 0) {\n          innerPad =\n            2 *\n            (2 +\n              Math.ceil(Math.max(this.opts.textHeight, 0.01) * Math.min(this.gl.canvas.height, this.gl.canvas.width)))\n        }\n        function padPixelsWH(cols: number, rows: number): [number, number] {\n          return [(cols - 1) * pad + cols * innerPad, (rows - 1) * pad + rows * innerPad]\n        }\n        let canvasWH: [number, number] = [this.effectiveCanvasWidth(), this.effectiveCanvasHeight()]\n        if (this.opts.heroImageFraction > 0 && this.opts.heroImageFraction < 1) {\n          isShowRender = false\n          isHeroImage = true\n          if (canvasWH[0] > canvasWH[1] && this.opts.multiplanarLayout !== MULTIPLANAR_TYPE.ROW) {\n            // landscape canvas: hero image on LEFT\n            heroImageWH[0] = canvasWH[0] * this.opts.heroImageFraction\n          } else {\n            // portrait canvas: hero image on top\n            heroImageWH[1] = canvasWH[1] * this.opts.heroImageFraction\n          }\n          canvasWH = [canvasWH[0] - heroImageWH[0], canvasWH[1] - heroImageWH[1]]\n        }\n        // size for 2 rows, 2 columns\n        const ltwh2x2 = this.scaleSlice(\n          volScale[0] + volScale[1],\n          volScale[1] + volScale[2],\n          padPixelsWH(2, 2),\n          canvasWH\n        )\n        const mx = Math.max(Math.max(volScale[1], volScale[2]), volScale[0])\n        // size for 3 columns and 1 row\n        const ltwh3x1 = this.scaleSlice(\n          volScale[0] + volScale[0] + volScale[1],\n          Math.max(volScale[1], volScale[2]),\n          padPixelsWH(3, 1),\n          canvasWH\n        )\n        // size for 4 columns and 1 row\n        const ltwh4x1 = this.scaleSlice(\n          volScale[0] + volScale[0] + volScale[1] + mx,\n          Math.max(volScale[1], volScale[2]),\n          padPixelsWH(4, 1),\n          canvasWH\n        )\n        // size for 1 column * 3 rows\n        const ltwh1x3 = this.scaleSlice(mx, volScale[1] + volScale[2] + volScale[2], padPixelsWH(1, 3), canvasWH)\n        // size for 1 column * 4 rows\n        const ltwh1x4 = this.scaleSlice(mx, volScale[1] + volScale[2] + volScale[2] + mx, padPixelsWH(1, 4), canvasWH)\n        let isDraw3D = !isDrawPenDown && (maxVols < 2 || !isDrawGraph)\n        let isDrawColumn = false\n        let isDrawGrid = false\n        let isDrawRow = false\n        if (this.opts.multiplanarLayout === MULTIPLANAR_TYPE.COLUMN) {\n          isDrawColumn = true\n        } else if (this.opts.multiplanarLayout === MULTIPLANAR_TYPE.GRID) {\n          isDrawGrid = true\n        } else if (this.opts.multiplanarLayout === MULTIPLANAR_TYPE.ROW) {\n          isDrawRow = true\n        } else {\n          // auto select layout based on canvas size\n          if (ltwh1x3[4] > ltwh3x1[4] && ltwh1x3[4] > ltwh2x2[4]) {\n            isDrawColumn = true\n          } else if (ltwh3x1[4] > ltwh2x2[4]) {\n            isDrawRow = true\n          } else {\n            isDrawGrid = true\n          }\n        }\n        let ltwh = ltwh2x2\n        if (isDrawColumn) {\n          ltwh = ltwh1x3\n          if (\n            !isHeroImage &&\n            (isShowRender || (this.opts.multiplanarShowRender === SHOW_RENDER.AUTO && ltwh1x4[4] >= ltwh1x3[4]))\n          ) {\n            ltwh = ltwh1x4\n          } else {\n            isDraw3D = false\n          }\n        } else if (isDrawRow) {\n          ltwh = ltwh3x1\n          if (\n            !isHeroImage &&\n            (isShowRender || (this.opts.multiplanarShowRender === SHOW_RENDER.AUTO && ltwh4x1[4] >= ltwh3x1[4]))\n          ) {\n            ltwh = ltwh4x1\n          } else {\n            isDraw3D = false\n          }\n        }\n        if (isHeroImage) {\n          // issue1082 draw hero image\n          const heroW = heroImageWH[0] === 0 ? this.effectiveCanvasWidth() : heroImageWH[0]\n          const heroH = heroImageWH[1] === 0 ? this.effectiveCanvasHeight() : heroImageWH[1]\n          //\n          if (\n            this.opts?.heroSliceType === SLICE_TYPE.AXIAL ||\n            this.opts?.heroSliceType === SLICE_TYPE.CORONAL ||\n            this.opts?.heroSliceType === SLICE_TYPE.SAGITTAL\n          ) {\n            this.draw2D([0, 0, heroW, heroH], this.opts.heroSliceType, NaN, [Infinity, Infinity])\n          } else {\n            // let canvasWH: [number, number] = [this.effectiveCanvasWidth(), this.effectiveCanvasHeight()]\n            const ltwh2 = ltwh.slice()\n            const canvasW = this.effectiveCanvasWidth()\n            // console.log(`L ${ltwh[0]} T ${ltwh[1]} W ${heroW} H ${heroH} canvas ${canvasW}`)\n            if (heroW === canvasW) {\n              ltwh2[0] = 0\n            }\n            // console.log(`isWide ${heroW > heroH} L ${ltwh[0]} -> ${ltwh2[0]}`)\n            // this.draw3D([heroLTWH[0], heroLTWH[1], heroW, heroH])\n            this.draw3D([ltwh2[0], 0, heroW, heroH])\n          }\n          // this.draw3D([0, 0, heroW, heroH])\n          ltwh[0] += heroImageWH[0]\n          ltwh[1] += heroImageWH[1]\n          isDraw3D = false\n        }\n        const sX = volScale[0] * ltwh[4] + innerPad\n        const sY = volScale[1] * ltwh[4] + innerPad\n        const sZ = volScale[2] * ltwh[4] + innerPad\n        const actualX = actualScale[0] * ltwh[4]\n        const actualY = actualScale[1] * ltwh[4]\n        const actualZ = actualScale[2] * ltwh[4]\n        if (isDrawColumn) {\n          // draw axial\n          this.draw2D([ltwh[0], ltwh[1], sX, sY], 0, NaN, [actualX, actualY])\n          // draw coronal\n          this.draw2D([ltwh[0], ltwh[1] + sY + pad, sX, sZ], 1, NaN, [actualX, actualZ])\n          // draw sagittal\n          this.draw2D([ltwh[0], ltwh[1] + sY + pad + sZ + pad, sY, sZ], 2, NaN, [actualY, actualZ])\n          if (isDraw3D) {\n            const sMx = mx * ltwh[4]\n            this.draw3D([ltwh[0], ltwh[1] + sY + sZ + sZ + pad * 3, sMx, sMx])\n          }\n        } else if (isDrawRow) {\n          // draw axial\n          this.draw2D([ltwh[0], ltwh[1], sX, sY], 0, NaN, [actualX, actualY])\n          // draw coronal\n          this.draw2D([ltwh[0] + sX + pad, ltwh[1], sX, sZ], 1, NaN, [actualX, actualZ])\n          // draw sagittal\n          this.draw2D([ltwh[0] + sX + sX + pad * 2, ltwh[1], sY, sZ], 2, NaN, [actualY, actualZ])\n          if (isDraw3D) {\n            const sMx = mx * ltwh[4]\n            this.draw3D([ltwh[0] + sX + sX + sY + pad * 3, ltwh[1], sMx, sMx])\n          }\n        } else if (isDrawGrid) {\n          // did the user turn off 3D render view in multiplanar?\n          if (!isShowRender) {\n            isDraw3D = false\n          }\n          // however, check if the user asked for auto\n          if (this.opts.multiplanarShowRender === SHOW_RENDER.AUTO) {\n            isDraw3D = true\n          }\n          // however, hero image is a rendering\n          if (isHeroImage) {\n            isDraw3D = false\n          }\n          // draw axial\n          this.draw2D([ltwh[0], ltwh[1] + sZ + pad, sX, sY], 0, NaN, [actualX, actualY])\n          // draw coronal\n          this.draw2D([ltwh[0], ltwh[1], sX, sZ], 1, NaN, [actualX, actualZ])\n          // draw sagittal\n          this.draw2D([ltwh[0] + sX + pad, ltwh[1], sY, sZ], 2, NaN, [actualY, actualZ])\n          if (isDraw3D) {\n            this.draw3D([ltwh[0] + sX + pad, ltwh[1] + sZ + pad, sY, sY])\n          }\n        }\n      }\n    }\n    if (this.opts.isRuler) {\n      this.drawRuler()\n    }\n    if (this.opts.isColorbar) {\n      this.drawColorbar()\n    }\n    if (isDrawGraph) {\n      this.drawGraph()\n    }\n    if (this.uiData.isDragging) {\n      if (this.uiData.mouseButtonCenterDown) {\n        this.dragForCenterButton([\n          this.uiData.dragStart[0],\n          this.uiData.dragStart[1],\n          this.uiData.dragEnd[0],\n          this.uiData.dragEnd[1]\n        ])\n        return\n      }\n      if (this.opts.dragMode === DRAG_MODE.slicer3D) {\n        this.dragForSlicer3D([\n          this.uiData.dragStart[0],\n          this.uiData.dragStart[1],\n          this.uiData.dragEnd[0],\n          this.uiData.dragEnd[1]\n        ])\n        return\n      }\n      if (this.opts.dragMode === DRAG_MODE.pan) {\n        this.dragForPanZoom([\n          this.uiData.dragStart[0],\n          this.uiData.dragStart[1],\n          this.uiData.dragEnd[0],\n          this.uiData.dragEnd[1]\n        ])\n        return\n      }\n      if (this.inRenderTile(this.uiData.dragStart[0], this.uiData.dragStart[1]) >= 0) {\n        return\n      }\n      if (this.opts.dragMode === DRAG_MODE.measurement) {\n        // if (this.opts.isDragShowsMeasurementTool) {\n        this.drawMeasurementTool([\n          this.uiData.dragStart[0],\n          this.uiData.dragStart[1],\n          this.uiData.dragEnd[0],\n          this.uiData.dragEnd[1]\n        ])\n        return\n      }\n      const width = Math.abs(this.uiData.dragStart[0] - this.uiData.dragEnd[0])\n      const height = Math.abs(this.uiData.dragStart[1] - this.uiData.dragEnd[1])\n      this.drawSelectionBox([\n        Math.min(this.uiData.dragStart[0], this.uiData.dragEnd[0]),\n        Math.min(this.uiData.dragStart[1], this.uiData.dragEnd[1]),\n        width,\n        height\n      ])\n      return\n    }\n\n    // draw circle at mouse position if clickToSegment is enabled\n    // xxxxxxxxx\n    // if (this.opts.clickToSegment) {\n    //   const x = this.mousePos[0]\n    //   const y = this.mousePos[1]\n    //   // check if hovering over the 3D render tile\n    //   if (this.inRenderTile(x, y) >= 0) {\n    //     // exit early since we do not want to draw the cursor here!\n    //     return\n    //   }\n    //   // determine the tile the mouse is hovering in\n    //   const tileIdx = this.tileIndex(x, y)\n    //   // if a valid tile index, draw the circle\n    //   if (tileIdx > -1) {\n    //     // get fov in mm for this plane presented in the tile\n    //     const fovMM = this.screenSlices[tileIdx].fovMM\n    //     // get the left, top, width, height of the tile in pixels\n    //     const ltwh = this.screenSlices[tileIdx].leftTopWidthHeight\n    //     // calculate the pixel to mm scale so we can draw the circle\n    //     // in pixels (so it is highres) but with the radius specified in mm\n    //     const pixPerMM = ltwh[2] / fovMM[0]\n    //     // get the crosshair color, but replace the alpha because we want it to be transparent\n    //     // no matter what. We want to see the image data underneath the circle.\n    //     const color = this.opts.crosshairColor\n    //     const segmentCursorColor = [color[0], color[1], color[2], 0.4]\n    //     const radius = this.opts.clickToSegmentRadius * pixPerMM\n    //     this.drawCircle([x - radius, y - radius, radius * 2, radius * 2], segmentCursorColor, 1)\n    //   }\n    // }\n\n    const pos = this.frac2mm([this.scene.crosshairPos[0], this.scene.crosshairPos[1], this.scene.crosshairPos[2]])\n\n    posString = pos[0].toFixed(2) + '×' + pos[1].toFixed(2) + '×' + pos[2].toFixed(2)\n    this.readyForSync = true // by the time we get here, all volumes should be loaded and ready to be drawn. We let other niivue instances know that we can now reliably sync draw calls (images are loaded)\n    this.sync()\n    this.drawAnchoredLabels()\n    return posString\n  }\n\n  // not included in public docs\n  // called to refresh canvas\n  drawScene(): string | void {\n    if (this.isBusy) {\n      // limit concurrent draw calls (chrome v FireFox)\n      this.needsRefresh = true\n      return\n    }\n    this.isBusy = false\n    this.needsRefresh = false\n    let posString = this.drawSceneCore()\n    // Chrome and Safari get much more bogged down by concurrent draw calls than Safari\n    // https://stackoverflow.com/questions/51710067/webgl-async-operations\n    // glFinish operation and the documentation for it says: \"does not return until the effects of all previously called GL commands are complete.\"\n    // await this.gl.finish();\n    if (this._gl !== null) {\n      this.gl.finish()\n    }\n    if (this.needsRefresh) {\n      posString = this.drawScene()\n    }\n    return posString\n  }\n\n  get gl(): WebGL2RenderingContext {\n    if (!this._gl) {\n      throw new Error(\"unable to get WebGL context. Maybe the browser doesn't support WebGL2.\")\n    }\n    return this._gl\n  }\n\n  set gl(gl: WebGL2RenderingContext | null) {\n    this._gl = gl\n  }\n}\n"],"mappings":"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AAAA,EAAI;AAAA,EAAM;AAAA,EAAG;AAAA,EACpH;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAI;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAI;AAAA,EACpH;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAK;AAAA;AAAA,EAEhD;AAAA,EAAO;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAG;AAAA,EAAK;AAAA,EAClH;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAK;AAAA,EACpH;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EACnH;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAG;AAAA,EAAM;AAAA,EAAG;AAAA,EACpnH;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAI;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAI;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAI;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAI;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAClH;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAI;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAI;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAI;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAI;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAChH;AAAA,EAAM;AAAA,EAAI;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAI;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAI;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAI;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA;AAAA,EAEpG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAClH;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EACpH;AAAA,EAAG;AAAA,EAAM;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EACpH;AAAA,EAAM;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,E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AAG;AAAA,EACpH;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAClH;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAM;AAAA,EAAG;AAAA,EAClH;AAAA,EAAG;AAAA,EAAG;AAAA,EAAM;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAK;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAM;AAAA,EACnH;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAO;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAAG;AAAA,EAC7G;AAAA,EAAM;AAAA,EAAG;AAAA,EAAG;A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IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IACpE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACtE;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACrE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACpE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACvE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACrE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IACpE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,EAC3B;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IACrE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACrE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACrE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACrE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACpE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACrE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,EAC5D;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IACvE;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACvE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACvE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACzE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACvE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IACtE;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACpE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IACpE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACpE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,EACF;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACpE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,EACF;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACtE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAA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AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,EACzD;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,EAC3B;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,EACF;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACvE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,EAClC;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACtE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,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I;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IACtE;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACpE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IACzE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IACpE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IACpE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,EAChD;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IACvE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IACrE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACrE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IACvE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IACzE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACpE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IACtE;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IACvE;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IACtE;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,EACvC;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACvE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IACvE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IACvE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IACzE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IACvE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,EACtC;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACvE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,EAClC;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACtE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,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A,IAAK;AAAA,IAAI;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACvE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IACvE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IACrE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IACvE;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IACzE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACvE;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IACpE;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACzE;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,EAC3B;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IACtE;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IACvE;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IACrE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IACxE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IACpE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IACxE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IACrE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IACxE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAC1E;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,EAChB;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IACvE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IACzE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IACtE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAC1E;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IACzE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IACrE;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IACzE;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IACrE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IACtE;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAG;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAI;AAAA,IACvE;AAAA,IAAK;AAAA,IAAG;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAI;AAAA,IACtE;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAK;AAAA,IAAK;AAAA,EACtB;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACvE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,EAClC;AAAA,EACA,GAAK;AAAA,IACH;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACtE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACxE;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACxE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IAAK;AAAA,IACtE;AAAA,IAAK;A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","names":["length","_a","emscriptenModule","init","_a","emscriptenModule","init","_a","err","scale","add","adjoint","clone","copy","create","determinant","equals","exactEquals","frob","fromQuat","fromRotation","fromScaling","fromTranslation","fromValues","identity","invert","mul","multiply","multiplyScalar","multiplyScalarAndAdd","rotate","scale","set","str","sub","subtract","translate","transpose","create","clone","copy","fromValues","set","identity","transpose","invert","adjoint","determinant","multiply","translate","scale","rotate","len","fromTranslation","fromScaling","fromRotation","fromQuat","str","frob","add","subtract","multiplyScalar","multiplyScalarAndAdd","exactEquals","equals","mul","sub","add","clone","copy","create","equals","exactEquals","fromValues","mul","multiply","rotateX","rotateY","rotateZ","scale","set","str","sub","subtract","create","clone","fromValues","copy","set","add","subtract","multiply","scale","len","rotateX","rotateY","rotateZ","str","exactEquals","equals","sub","mul","add","ceil","clone","copy","create","cross","dist","distance","div","divide","dot","equals","exactEquals","floor","forEach","fromValues","inverse","len","length","lerp","max","min","mul","multiply","negate","normalize","random","round","scale","scaleAndAdd","set","sqrDist","sqrLen","squaredDistance","squaredLength","str","sub","subtract","transformMat4","transformQuat","zero","create","clone","fromValues","copy","set","add","subtract","multiply","divide","ceil","floor","min","max","round","scale","scaleAndAdd","distance","squaredDistance","length","squaredLength","negate","inverse","normalize","len","dot","cross","lerp","random","v4","transformMat4","transformQuat","zero","str","exactEquals","equals","sub","mul","div","dist","sqrDist","sqrLen","forEach","add","angle","ceil","clone","copy","create","cross","dist","distance","div","divide","dot","equals","exactEquals","floor","forEach","fromValues","inverse","len","length","lerp","max","min","mul","multiply","negate","normalize","random","rotate","round","scale","scaleAndAdd","set","sqrDist","sqrLen","squaredDistance","squaredLength","str","sub","subtract","transformMat3","transformMat4","zero","create","clone","fromValues","copy","set","add","subtract","multiply","divide","ceil","floor","min","max","round","scale","scaleAndAdd","distance","squaredDistance","length","squaredLength","negate","inverse","normalize","len","dot","cross","lerp","random","transformMat3","transformMat4","rotate","angle","zero","str","exactEquals","equals","sub","mul","div","dist","sqrDist","sqrLen","forEach","u8","len","length","len","resolve","str","ar","slc","s","r","arrayEqual","len","pos","str","i","u16","i32","items","mn","mx","scale","LUT","offsetPt0","pts","bytes","positions","indices","j","min","max","line","scalars","version","nvert","LabelTextAlignment","LabelLineTerminator","LabelAnchorPoint","index","set","max","l","max","add","Inflate","Gunzip","str","data","err","length","str","str","bytes_per_element","decompress","_bytes","decompress","_shape","_bytes","decompress","length","root","native_order","_a","_b","_metadata","Array","version","err","Array","length","setter","length","get","bytes_per_element","slice","len","length","root","init","length","range","ImageType","str","len","min","max","done","value","range","scale","length","err","version","err","len","str","err","u16","u8","i32","dtype","resolve","err","retBuffer","retView","data","version","len","j","value","done","root","zDim","get","base64","SLICE_TYPE","SHOW_RENDER","MULTIPLANAR_TYPE","DRAG_MODE","DRAG_MODE_SECONDARY","DRAG_MODE_PRIMARY","COLORMAP_TYPE","scale","err","document","NVMesh","len","v4","u8","idx","range","scale","invert","lerp","lut","k","pts","resolve","base64","Roboto_Regular_default","NVMesh","min","max","node","distance","nodes","resolve","reject","err","j","round","min","max","range","Roboto_Regular_default","scale","dist","x","y","resolve","NVMesh","e","err","files","str","j","max","h","img","len","document","length","data","mesh","nx","dist2","slice","volScale","vox","opacity","mnNeg","mxNeg","fl","translate","i","distance","min","range","mnMM","mxMM","fovMM","rotation","flt","mm","lerp"]}